!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
(use GL.getError() and GL.validateProgram(program))	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public var enableErrorChecking:Bool; \/\/ TODO (use GL.getError() and GL.validateProgram(program))$/;"	i
, modify data to set transparency	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^		\/\/ TODO, modify data to set transparency$/;"	i
?!	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^			\/\/todo?!$/;"	i
A	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var A:B2Mat22 = m_xf.R;$/;"	v
A	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2ConstantAccelController.hx	/^	public var A:B2Vec2;$/;"	v
A	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/GamepadButton.hx	/^	var A = 0;$/;"	v
A	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var A = 0x61;$/;"	v
A	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var A:Int = 65;$/;"	v
A	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var A = 65;$/;"	v
A1	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFormat.hx	/^	public var A1 = 3;$/;"	v
A8	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFormat.hx	/^	public var A8 = 2;$/;"	v
ABORTED_BY_CALLBACK	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var ABORTED_BY_CALLBACK = 42;$/;"	v
ACCEPTTIMEOUT_MS	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var ACCEPTTIMEOUT_MS = 212;$/;"	v
ACCEPT_ENCODING	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var ACCEPT_ENCODING = 10102;$/;"	v
ACC_ABSTRACT	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private static inline var ACC_ABSTRACT = 0x0400;$/;"	v
ACC_FINAL	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private static inline var ACC_FINAL = 0x0010;$/;"	v
ACC_INTERFACE	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private static inline var ACC_INTERFACE = 0x0200;$/;"	v
ACC_PRIVATE	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private static inline var ACC_PRIVATE = 0x0002;$/;"	v
ACC_PROTECTED	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private static inline var ACC_PROTECTED = 0x0004;$/;"	v
ACC_PUBLIC	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private static inline var ACC_PUBLIC = 0x0001;$/;"	v
ACC_STATIC	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private static inline var ACC_STATIC = 0x0008;$/;"	v
ACC_SUPER	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private static inline var ACC_SUPER = 0x0020;$/;"	v
ACTIVATE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public static var ACTIVATE = "activate";$/;"	v
ACTIVATE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public static var ACTIVATE = "activate";$/;"	v
ACTIVE_ATTRIBUTES	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var ACTIVE_ATTRIBUTES = 0x8B89;$/;"	v
ACTIVE_ATTRIBUTES	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var ACTIVE_ATTRIBUTES:Int;$/;"	v
ACTIVE_ATTRIBUTES	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var ACTIVE_ATTRIBUTES = 0x8B89;$/;"	v
ACTIVE_ATTRIBUTES	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var ACTIVE_ATTRIBUTES					 = 0x8B89;$/;"	v
ACTIVE_ATTRIBUTES	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var ACTIVE_ATTRIBUTES                = 0x8B89;$/;"	v
ACTIVE_TEXTURE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var ACTIVE_TEXTURE = 0x84E0;$/;"	v
ACTIVE_TEXTURE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var ACTIVE_TEXTURE:Int;$/;"	v
ACTIVE_TEXTURE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var ACTIVE_TEXTURE = 0x84E0;$/;"	v
ACTIVE_TEXTURE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var ACTIVE_TEXTURE					  = 0x84E0;$/;"	v
ACTIVE_TEXTURE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var ACTIVE_TEXTURE                 = 0x84E0;$/;"	v
ACTIVE_UNIFORMS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var ACTIVE_UNIFORMS = 0x8B86;$/;"	v
ACTIVE_UNIFORMS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var ACTIVE_UNIFORMS:Int;$/;"	v
ACTIVE_UNIFORMS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var ACTIVE_UNIFORMS = 0x8B86;$/;"	v
ACTIVE_UNIFORMS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var ACTIVE_UNIFORMS						= 0x8B86;$/;"	v
ACTIVE_UNIFORMS	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var ACTIVE_UNIFORMS                  = 0x8B86;$/;"	v
ADD	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoOperator.hx	/^	public var ADD = 12;$/;"	v
ADD	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/BlendModeManager.hx	/^	var ADD = GL.FUNC_ADD;$/;"	v
ADDED	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public static var ADDED = "added";$/;"	v
ADDED	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public static var ADDED = "added";$/;"	v
ADDED_TO_STAGE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public static var ADDED_TO_STAGE = "addedToStage";$/;"	v
ADDED_TO_STAGE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public static var ADDED_TO_STAGE = "addedToStage";$/;"	v
ADDRESS_SCOPE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var ADDRESS_SCOPE = 171;$/;"	v
AGAIN	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var AGAIN = 81;$/;"	v
AGAIN	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var AGAIN = 0x40000079;$/;"	v
AGALMiniAssembler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^class AGALMiniAssembler {$/;"	c
AGALTokenizer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGALTokenizer.hx	/^class AGALTokenizer {$/;"	c
AGLSLCompiler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLCompiler.hx	/^class AGLSLCompiler {$/;"	c
AGLSLParser	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLParser.hx	/^class AGLSLParser {$/;"	c
AGLSLShaderUtils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/_shaders/AGLSLShaderUtils.hx	/^class AGLSLShaderUtils {$/;"	c
AIRHelper	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AIRHelper.hx	/^class AIRHelper {$/;"	c
AL	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^class AL {$/;"	c
ALAudioContext	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^class ALAudioContext {$/;"	c
ALC	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^class ALC {$/;"	c
ALCAudioContext	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^class ALCAudioContext {$/;"	c
ALIASED_LINE_WIDTH_RANGE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var ALIASED_LINE_WIDTH_RANGE = 0x846E;$/;"	v
ALIASED_LINE_WIDTH_RANGE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var ALIASED_LINE_WIDTH_RANGE:Int;$/;"	v
ALIASED_LINE_WIDTH_RANGE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var ALIASED_LINE_WIDTH_RANGE = 0x846E;$/;"	v
ALIASED_LINE_WIDTH_RANGE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var ALIASED_LINE_WIDTH_RANGE		 = 0x846E;$/;"	v
ALIASED_LINE_WIDTH_RANGE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var ALIASED_LINE_WIDTH_RANGE       = 0x846E;$/;"	v
ALIASED_POINT_SIZE_RANGE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var ALIASED_POINT_SIZE_RANGE = 0x846D;$/;"	v
ALIASED_POINT_SIZE_RANGE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var ALIASED_POINT_SIZE_RANGE:Int;$/;"	v
ALIASED_POINT_SIZE_RANGE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var ALIASED_POINT_SIZE_RANGE = 0x846D;$/;"	v
ALIASED_POINT_SIZE_RANGE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var ALIASED_POINT_SIZE_RANGE		 = 0x846D;$/;"	v
ALIASED_POINT_SIZE_RANGE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var ALIASED_POINT_SIZE_RANGE       = 0x846D;$/;"	v
ALL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DClearMask.hx	/^    inline static public var ALL:Int = COLOR | DEPTH | STENCIL;$/;"	v
ALLOW_SHADERS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	static public var ALLOW_SHADERS = 0x0080;$/;"	v
ALL_ATTRIBUTES	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public var ALL_ATTRIBUTES:Int = 0x1003;$/;"	v
ALL_ATTRIBUTES	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static inline var ALL_ATTRIBUTES:Int = 0x1003;$/;"	v
ALL_DEVICES_SPECIFIER	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public var ALL_DEVICES_SPECIFIER:Int = 0x1013;$/;"	v
ALL_DEVICES_SPECIFIER	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static inline var ALL_DEVICES_SPECIFIER:Int = 0x1013;$/;"	v
ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var ALPHA = 0x1906;$/;"	v
ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var ALPHA:Int;$/;"	v
ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoContent.hx	/^    public var ALPHA = 0x2000;$/;"	v
ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var ALPHA = 0x1906;$/;"	v
ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var ALPHA								  = 0x1906;$/;"	v
ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapDataChannel.hx	/^	public static inline var ALPHA = 8;$/;"	v
ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var ALPHA                          = 0x1906;$/;"	v
ALPHA_BITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var ALPHA_BITS = 0x0D55;$/;"	v
ALPHA_BITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var ALPHA_BITS:Int;$/;"	v
ALPHA_BITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var ALPHA_BITS = 0x0D55;$/;"	v
ALPHA_BITS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var ALPHA_BITS							= 0x0D55;$/;"	v
ALPHA_BITS	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var ALPHA_BITS                     = 0x0D55;$/;"	v
ALT	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	public static inline var ALT:KeyModifier = (0x0100 | 0x0200);$/;"	v
ALTERNATE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var ALTERNATE:Int = 18;$/;"	v
ALTERNATE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var ALTERNATE = 18;$/;"	v
ALT_ERASE	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var ALT_ERASE = 0x40000099;$/;"	v
ALWAYS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var ALWAYS = 0x0207;$/;"	v
ALWAYS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var ALWAYS:Int;$/;"	v
ALWAYS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var ALWAYS = 0x0207;$/;"	v
ALWAYS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var ALWAYS								 = 0x0207;$/;"	v
ALWAYS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DCompareMode.hx	/^	inline static public var ALWAYS = GL.ALWAYS;$/;"	v
ALWAYS	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var ALWAYS                         = 0x0207;$/;"	v
AMFConnection	/usr/lib/haxe/std/haxe/remoting/AMFConnection.hx	/^class AMFConnection implements AsyncConnection implements Dynamic<AsyncConnection> {$/;"	c
AMPERSAND	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var AMPERSAND = 0x26;$/;"	v
ANDROID	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Platform.hx	/^	var ANDROID = "android";$/;"	v
API_PATH	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	private static inline var API_PATH = "\/api\/v1\/";$/;"	v
APP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/File.hx	/^	static inline var APP = 0;$/;"	v
APP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/SystemPath.hx	/^	private static inline var APP = 0;$/;"	v
APPCONNECT_TIME	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var APPCONNECT_TIME = 0x300000 + 33;$/;"	v
APPEND	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var APPEND = 50;$/;"	v
APPLICATION	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	var APPLICATION = 0;$/;"	v
APPLICATION	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var APPLICATION = 0x40000065;$/;"	v
APPLICATION_STORAGE	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	var APPLICATION_STORAGE = 1;$/;"	v
APP_CONTROL_BACK	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var APP_CONTROL_BACK = 0x4000010E;$/;"	v
APP_CONTROL_BOOKMARKS	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var APP_CONTROL_BOOKMARKS = 0x40000112;$/;"	v
APP_CONTROL_FORWARD	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var APP_CONTROL_FORWARD = 0x4000010F;$/;"	v
APP_CONTROL_HOME	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var APP_CONTROL_HOME = 0x4000010D;$/;"	v
APP_CONTROL_REFRESH	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var APP_CONTROL_REFRESH = 0x40000111;$/;"	v
APP_CONTROL_SEARCH	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var APP_CONTROL_SEARCH = 0x4000010C;$/;"	v
APP_CONTROL_STOP	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var APP_CONTROL_STOP = 0x40000110;$/;"	v
ARABIC	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var ARABIC = "Arab";$/;"	v
ARGB	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/PixelFormat.hx	/^	public var ARGB = 1;$/;"	v
ARGB32	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFormat.hx	/^	public var ARGB32 = 0;$/;"	v
ARMENIAN	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var ARMENIAN = "Armn";$/;"	v
ARRAY_BUFFER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var ARRAY_BUFFER = 0x8892;$/;"	v
ARRAY_BUFFER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var ARRAY_BUFFER:Int;$/;"	v
ARRAY_BUFFER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var ARRAY_BUFFER = 0x8892;$/;"	v
ARRAY_BUFFER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var ARRAY_BUFFER						 = 0x8892;$/;"	v
ARRAY_BUFFER	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var ARRAY_BUFFER                   = 0x8892;$/;"	v
ARRAY_BUFFER_BINDING	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var ARRAY_BUFFER_BINDING = 0x8894;$/;"	v
ARRAY_BUFFER_BINDING	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var ARRAY_BUFFER_BINDING:Int;$/;"	v
ARRAY_BUFFER_BINDING	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var ARRAY_BUFFER_BINDING = 0x8894;$/;"	v
ARRAY_BUFFER_BINDING	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var ARRAY_BUFFER_BINDING			  = 0x8894;$/;"	v
ARRAY_BUFFER_BINDING	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var ARRAY_BUFFER_BINDING           = 0x8894;$/;"	v
ARROW	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeMouse.hx	/^	var ARROW = 0;$/;"	v
ASCENDER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var ASCENDER = 0;$/;"	v
ASTERISK	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var ASTERISK = 0x2A;$/;"	v
ASYNC_ERROR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/AsyncErrorEvent.hx	/^	public static var ASYNC_ERROR:String = "asyncError";$/;"	v
AT	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var AT = 0x40;$/;"	v
ATOP	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoOperator.hx	/^	public var ATOP = 5;$/;"	v
ATTACHED_SHADERS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var ATTACHED_SHADERS = 0x8B85;$/;"	v
ATTACHED_SHADERS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var ATTACHED_SHADERS:Int;$/;"	v
ATTACHED_SHADERS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var ATTACHED_SHADERS = 0x8B85;$/;"	v
ATTACHED_SHADERS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var ATTACHED_SHADERS					  = 0x8B85;$/;"	v
ATTACHED_SHADERS	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var ATTACHED_SHADERS                 = 0x8B85;$/;"	v
ATTRIBUTES_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public var ATTRIBUTES_SIZE:Int = 0x1002;$/;"	v
ATTRIBUTES_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static inline var ATTRIBUTES_SIZE:Int = 0x1002;$/;"	v
ATTRIB_NAME	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^	public static inline var ATTRIB_NAME	= 5;$/;"	v
ATTRIB_VAL	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^	public static inline var ATTRIB_VAL		= 8;$/;"	v
ATTVAL_BEGIN	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^	public static inline var ATTVAL_BEGIN	= 7;$/;"	v
AT_LOWER_LIMIT	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LimitState.hx	/^	var AT_LOWER_LIMIT = 1;$/;"	v
AT_UPPER_LIMIT	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LimitState.hx	/^	var AT_UPPER_LIMIT = 2;$/;"	v
AUDIO_MUTE	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var AUDIO_MUTE = 0x40000106;$/;"	v
AUDIO_NEXT	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var AUDIO_NEXT = 0x40000102;$/;"	v
AUDIO_PLAY	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var AUDIO_PLAY = 0x40000105;$/;"	v
AUDIO_PREVIOUS	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var AUDIO_PREVIOUS = 0x40000103;$/;"	v
AUDIO_STOP	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var AUDIO_STOP = 0x40000104;$/;"	v
AUTH_BASIC	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequest.hx	/^	public static inline var AUTH_BASIC = 0x0001;$/;"	v
AUTH_DIGEST	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequest.hx	/^	public static inline var AUTH_DIGEST = 0x0002;$/;"	v
AUTH_DIGEST_ANY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequest.hx	/^	public static inline var AUTH_DIGEST_ANY = 0x000f;$/;"	v
AUTH_DIGEST_IE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequest.hx	/^	public static inline var AUTH_DIGEST_IE = 0x0010;$/;"	v
AUTH_GSSNEGOTIATE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequest.hx	/^	public static inline var AUTH_GSSNEGOTIATE = 0x0004;$/;"	v
AUTH_NTLM	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequest.hx	/^	public static inline var AUTH_NTLM = 0x0008;$/;"	v
AUTOREFERER	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var AUTOREFERER = 58;$/;"	v
AVESTAN	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var AVESTAN = "Avst";$/;"	v
AXIS_MOVE	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	var AXIS_MOVE = 0;$/;"	v
AXIS_MOVE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/JoystickEvent.hx	/^	public static inline var AXIS_MOVE:String = "axisMove";$/;"	v
AbstractFont	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/AbstractFont.hx	/^class AbstractFont {$/;"	c
AbstractMaskManager	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/AbstractMaskManager.hx	/^class AbstractMaskManager {$/;"	c
AbstractRenderer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/AbstractRenderer.hx	/^class AbstractRenderer {$/;"	c
AbstractShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/AbstractShader.hx	/^class AbstractShader {$/;"	c
Accelerometer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/sensors/Accelerometer.hx	/^class Accelerometer extends EventDispatcher {$/;"	c
Accelerometer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Accelerometer.hx	/^class Accelerometer {$/;"	c
Accelerometer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/sensors/Accelerometer.hx	/^class Accelerometer extends EventDispatcher {$/;"	c
AccelerometerEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/AccelerometerEvent.hx	/^class AccelerometerEvent extends Event {$/;"	c
AccelerometerEventTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/AccelerometerEventTest.hx	/^class AccelerometerEventTest {$/;"	c
AccelerometerTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/sensors/AccelerometerTest.hx	/^class AccelerometerTest {$/;"	c
AccessToken	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthToken.hx	/^class AccessToken {$/;"	c
Add BlendMode.SHADER?	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BlendModeTest.hx	/^			\/\/ TODO: Add BlendMode.SHADER?$/;"	i
Add fake LineScaleMode.OPENGL value for Flash?	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/LineScaleModeTest.hx	/^			\/\/TODO: Add fake LineScaleMode.OPENGL value for Flash?$/;"	i
Address	/usr/lib/haxe/std/sys/net/Address.hx	/^class Address {$/;"	c
Adler32	/usr/lib/haxe/std/haxe/crypto/Adler32.hx	/^class Adler32 {$/;"	c
AliasScript	/usr/lib/haxe/lib/lime/2,4,3/tools/AliasScript.hx	/^class AliasScript {$/;"	c
Alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/DefaultShader.hx	/^	var Alpha = "uAlpha";$/;"	v
Alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/DrawTrianglesShader.hx	/^	var Alpha = DefUniform.Alpha;$/;"	v
Alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/FillShader.hx	/^	var Alpha = DefUniform.Alpha;$/;"	v
Alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/PatternFillShader.hx	/^	var Alpha = DefUniform.Alpha;$/;"	v
Alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/PrimitiveShader.hx	/^	var Alpha = DefUniform.Alpha;$/;"	v
AndroidHelper	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^class AndroidHelper {$/;"	c
AndroidPlatform	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^class AndroidPlatform extends PlatformTarget {$/;"	c
AntHelper	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AntHelper.hx	/^class AntHelper {$/;"	c
AntiAliasTypeTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/AntiAliasTypeTest.hx	/^class AntiAliasTypeTest {$/;"	c
Application	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^class Application extends Module {$/;"	c
ApplicationDomain	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/ApplicationDomain.hx	/^class ApplicationDomain {$/;"	c
ApplicationDomainTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/ApplicationDomainTest.hx	/^class ApplicationDomainTest {$/;"	c
ApplicationMain	/usr/lib/haxe/lib/lime/2,4,3/legacy/templates/haxe/ApplicationMain.hx	/^class ApplicationMain {$/;"	c
ApplicationMain	/usr/lib/haxe/lib/lime/2,4,3/legacy/templates/html5/haxe/ApplicationMain.hx	/^    class ApplicationMain {$/;"	c
ApplicationMain	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/ApplicationMain.hx	/^class ApplicationMain {$/;"	c
ApplicationMain	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/ApplicationMain.hx	/^class ApplicationMain {$/;"	c
ApplicationMain	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^class ApplicationMain {$/;"	c
ArgumentError	/usr/lib/haxe/lib/openfl/3,0,8/openfl/errors/ArgumentError.hx	/^class ArgumentError extends Error {$/;"	c
ArgumentErrorTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/ArgumentErrorTest.hx	/^class ArgumentErrorTest {$/;"	c
ArrayBufferTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/ArrayBufferTest.hx	/^class ArrayBufferTest {$/;"	c
ArrayBufferView	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ArrayBufferView.hx	/^class ArrayBufferView implements IMemoryRange {$/;"	c
ArrayBufferViewTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/ArrayBufferViewTest.hx	/^class ArrayBufferViewTest {$/;"	c
ArrayHelper	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ArrayHelper.hx	/^class ArrayHelper {$/;"	c
ArraySort	/usr/lib/haxe/std/haxe/ds/ArraySort.hx	/^class ArraySort {$/;"	c
Asset	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Asset.hx	/^class Asset {$/;"	c
AssetCache	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^class AssetCache {$/;"	c
AssetCache	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^class AssetCache implements IAssetCache {$/;"	c
AssetData	/usr/lib/haxe/lib/lime/2,4,3/legacy/templates/haxe/lime/AssetData.hx	/^class AssetData {$/;"	c
AssetData	/usr/lib/haxe/lib/lime/2,4,3/legacy/templates/html5/haxe/lime/AssetData.hx	/^class AssetData {$/;"	c
AssetData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^class AssetData {$/;"	c
AssetHelper	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AssetHelper.hx	/^class AssetHelper {$/;"	c
AssetLibrary	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^class AssetLibrary {$/;"	c
AssetLibrary	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^class AssetLibrary {$/;"	c
Assets	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^class Assets {$/;"	c
Assets	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^class Assets {$/;"	c
Assets	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^class Assets {$/;"	c
AssetsTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/AssetsTest.hx	/^class AssetsTest {$/;"	c
AsyncAdapter	/usr/lib/haxe/std/haxe/remoting/AsyncAdapter.hx	/^class AsyncAdapter implements AsyncConnection {$/;"	c
AsyncConnection	/usr/lib/haxe/std/haxe/remoting/AsyncConnection.hx	/^interface AsyncConnection implements Dynamic<AsyncConnection> {$/;"	i
AsyncDebugConnection	/usr/lib/haxe/std/haxe/remoting/AsyncDebugConnection.hx	/^class AsyncDebugConnection implements AsyncConnection implements Dynamic<AsyncDebugConnection> {$/;"	c
AsyncErrorEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/AsyncErrorEvent.hx	/^class AsyncErrorEvent extends ErrorEvent {$/;"	c
AsyncProxy	/usr/lib/haxe/std/haxe/remoting/AsyncProxy.hx	/^class AsyncProxy<T> {$/;"	c
AttribAccess	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^private class AttribAccess implements Dynamic<String> {$/;"	c
AudioBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioBuffer.hx	/^class AudioBuffer {$/;"	c
AudioManager	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioManager.hx	/^class AudioManager {$/;"	c
AudioSource	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^class AudioSource {$/;"	c
B	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^		var B:B2Mat22 = B2Mat22.fromVV(absV(A.col1), absV(A.col2));$/;"	v
B	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/GamepadButton.hx	/^	var B = 1;$/;"	v
B	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var B = 0x62;$/;"	v
B	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var B:Int = 66;$/;"	v
B	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var B = 66;$/;"	v
B2	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^					var B2:B2AABB = new B2AABB();$/;"	v
B2	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^			var B2:B2Body = joint.m_body2;$/;"	v
B2AABB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^class B2AABB$/;"	c
B2Body	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^class B2Body$/;"	c
B2BodyDef	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2BodyDef.hx	/^class B2BodyDef$/;"	c
B2BuoyancyController	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^class B2BuoyancyController extends B2Controller$/;"	c
B2CircleContact	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2CircleContact.hx	/^class B2CircleContact extends B2Contact$/;"	c
B2CircleShape	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^class B2CircleShape extends B2Shape$/;"	c
B2Collision	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^class B2Collision{$/;"	c
B2Color	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Color.hx	/^class B2Color$/;"	c
B2ConstantAccelController	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2ConstantAccelController.hx	/^class B2ConstantAccelController extends B2Controller$/;"	c
B2ConstantForceController	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2ConstantForceController.hx	/^class B2ConstantForceController extends B2Controller$/;"	c
B2Contact	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^class B2Contact$/;"	c
B2ContactConstraint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactConstraint.hx	/^class B2ContactConstraint$/;"	c
B2ContactConstraintPoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactConstraintPoint.hx	/^class B2ContactConstraintPoint$/;"	c
B2ContactEdge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactEdge.hx	/^class B2ContactEdge$/;"	c
B2ContactFactory	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactFactory.hx	/^class B2ContactFactory$/;"	c
B2ContactFilter	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactFilter.hx	/^class B2ContactFilter$/;"	c
B2ContactID	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ContactID.hx	/^class B2ContactID$/;"	c
B2ContactImpulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactImpulse.hx	/^class B2ContactImpulse $/;"	c
B2ContactListener	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactListener.hx	/^class B2ContactListener$/;"	c
B2ContactManager	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^class B2ContactManager $/;"	c
B2ContactPoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ContactPoint.hx	/^class B2ContactPoint$/;"	c
B2ContactRegister	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactRegister.hx	/^class B2ContactRegister$/;"	c
B2ContactSolver	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^class B2ContactSolver$/;"	c
B2Controller	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2Controller.hx	/^class B2Controller $/;"	c
B2ControllerEdge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2ControllerEdge.hx	/^class B2ControllerEdge $/;"	c
B2DebugDraw	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^class B2DebugDraw$/;"	c
B2DestructionListener	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DestructionListener.hx	/^class B2DestructionListener$/;"	c
B2Distance	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Distance.hx	/^class B2Distance$/;"	c
B2DistanceInput	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DistanceInput.hx	/^class B2DistanceInput $/;"	c
B2DistanceJoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^class B2DistanceJoint extends B2Joint$/;"	c
B2DistanceJointDef	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJointDef.hx	/^class B2DistanceJointDef extends B2JointDef$/;"	c
B2DistanceOutput	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DistanceOutput.hx	/^class B2DistanceOutput $/;"	c
B2DistanceProxy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DistanceProxy.hx	/^class B2DistanceProxy $/;"	c
B2DynamicTree	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^class B2DynamicTree $/;"	c
B2DynamicTreeBroadPhase	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^class B2DynamicTreeBroadPhase implements IBroadPhase$/;"	c
B2DynamicTreeNode	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeNode.hx	/^class B2DynamicTreeNode $/;"	c
B2DynamicTreePair	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreePair.hx	/^class B2DynamicTreePair $/;"	c
B2EdgeAndCircleContact	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2EdgeAndCircleContact.hx	/^class B2EdgeAndCircleContact extends B2Contact$/;"	c
B2EdgeShape	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^class B2EdgeShape extends B2Shape$/;"	c
B2FilterData	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2FilterData.hx	/^class B2FilterData$/;"	c
B2Fixture	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^class B2Fixture$/;"	c
B2FixtureDef	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2FixtureDef.hx	/^class B2FixtureDef$/;"	c
B2FrictionJoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^class B2FrictionJoint extends B2Joint$/;"	c
B2FrictionJointDef	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJointDef.hx	/^class B2FrictionJointDef extends B2JointDef$/;"	c
B2GearJoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^class B2GearJoint extends B2Joint$/;"	c
B2GearJointDef	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJointDef.hx	/^class B2GearJointDef extends B2JointDef$/;"	c
B2GravityController	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2GravityController.hx	/^class B2GravityController extends B2Controller$/;"	c
B2Island	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^class B2Island$/;"	c
B2Jacobian	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Jacobian.hx	/^class B2Jacobian$/;"	c
B2Joint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^class B2Joint$/;"	c
B2JointDef	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2JointDef.hx	/^class B2JointDef$/;"	c
B2JointEdge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2JointEdge.hx	/^class B2JointEdge$/;"	c
B2LineJoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^class B2LineJoint extends B2Joint$/;"	c
B2LineJointDef	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJointDef.hx	/^class B2LineJointDef extends B2JointDef$/;"	c
B2Manifold	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Manifold.hx	/^class B2Manifold$/;"	c
B2ManifoldPoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ManifoldPoint.hx	/^class B2ManifoldPoint$/;"	c
B2MassData	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2MassData.hx	/^class B2MassData$/;"	c
B2Mat22	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat22.hx	/^class B2Mat22$/;"	c
B2Mat33	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat33.hx	/^class B2Mat33$/;"	c
B2Math	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^class B2Math {$/;"	c
B2MouseJoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^class B2MouseJoint extends B2Joint$/;"	c
B2MouseJointDef	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJointDef.hx	/^class B2MouseJointDef extends B2JointDef$/;"	c
B2OBB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2OBB.hx	/^class B2OBB$/;"	c
B2PolyAndCircleContact	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndCircleContact.hx	/^class B2PolyAndCircleContact extends B2Contact{$/;"	c
B2PolyAndEdgeContact	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^class B2PolyAndEdgeContact extends B2Contact{$/;"	c
B2PolygonContact	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolygonContact.hx	/^class B2PolygonContact extends B2Contact$/;"	c
B2PolygonShape	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^class B2PolygonShape extends B2Shape$/;"	c
B2PositionSolverManifold	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PositionSolverManifold.hx	/^class B2PositionSolverManifold$/;"	c
B2PrismaticJoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^class B2PrismaticJoint extends B2Joint$/;"	c
B2PrismaticJointDef	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJointDef.hx	/^class B2PrismaticJointDef extends B2JointDef$/;"	c
B2PulleyJoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^class B2PulleyJoint extends B2Joint$/;"	c
B2PulleyJointDef	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJointDef.hx	/^class B2PulleyJointDef extends B2JointDef$/;"	c
B2RayCastInput	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2RayCastInput.hx	/^class B2RayCastInput $/;"	c
B2RayCastOutput	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2RayCastOutput.hx	/^class B2RayCastOutput $/;"	c
B2RevoluteJoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^class B2RevoluteJoint extends B2Joint$/;"	c
B2RevoluteJointDef	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJointDef.hx	/^class B2RevoluteJointDef extends B2JointDef$/;"	c
B2SeparationFunction	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^class B2SeparationFunction$/;"	c
B2Settings	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Settings.hx	/^class B2Settings{$/;"	c
B2Shape	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2Shape.hx	/^class B2Shape$/;"	c
B2Simplex	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^class B2Simplex$/;"	c
B2SimplexCache	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SimplexCache.hx	/^class B2SimplexCache $/;"	c
B2SimplexVertex	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SimplexVertex.hx	/^class B2SimplexVertex$/;"	c
B2Sweep	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Sweep.hx	/^class B2Sweep$/;"	c
B2TOIInput	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TOIInput.hx	/^class B2TOIInput $/;"	c
B2TensorDampingController	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2TensorDampingController.hx	/^class B2TensorDampingController extends B2Controller$/;"	c
B2TimeOfImpact	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^class B2TimeOfImpact$/;"	c
B2TimeStep	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2TimeStep.hx	/^class B2TimeStep$/;"	c
B2Transform	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Transform.hx	/^class B2Transform$/;"	c
B2Vec2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec2.hx	/^class B2Vec2$/;"	c
B2Vec3	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec3.hx	/^class B2Vec3$/;"	c
B2WeldJoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^class B2WeldJoint extends B2Joint$/;"	c
B2WeldJointDef	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJointDef.hx	/^class B2WeldJointDef extends B2JointDef$/;"	c
B2World	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^class B2World$/;"	c
B2WorldManifold	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2WorldManifold.hx	/^class B2WorldManifold $/;"	c
BACK	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var BACK = 0x0405;$/;"	v
BACK	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var BACK:Int;$/;"	v
BACK	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var BACK = 0x0405;$/;"	v
BACK	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/GamepadButton.hx	/^	var BACK = 4;$/;"	v
BACK	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var BACK									= 0x0405;$/;"	v
BACK	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DTriangleFace.hx	/^	inline public static var BACK = GL.FRONT;$/;"	v
BACK	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var BACK                           = 0x0405;$/;"	v
BACKLIGHT_DOWN	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var BACKLIGHT_DOWN = 0x40000117;$/;"	v
BACKLIGHT_TOGGLE	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var BACKLIGHT_TOGGLE = 0x40000116;$/;"	v
BACKLIGHT_UP	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var BACKLIGHT_UP = 0x40000118;$/;"	v
BACKQUOTE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var BACKQUOTE:Int = 192;$/;"	v
BACKQUOTE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var BACKQUOTE = 192;$/;"	v
BACKSLASH	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var BACKSLASH = 0x5C;$/;"	v
BACKSLASH	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var BACKSLASH:Int = 220;$/;"	v
BACKSLASH	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var BACKSLASH = 220;$/;"	v
BACKSPACE	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var BACKSPACE = 0x08;$/;"	v
BACKSPACE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var BACKSPACE:Int = 8;$/;"	v
BACKSPACE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var BACKSPACE = 8;$/;"	v
BAD_CONTENT_ENCODING	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var BAD_CONTENT_ENCODING = 61;$/;"	v
BAD_DOWNLOAD_RESUME	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var BAD_DOWNLOAD_RESUME = 36;$/;"	v
BAD_FUNCTION_ARGUMENT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var BAD_FUNCTION_ARGUMENT = 43;$/;"	v
BALINESE	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var BALINESE = "Bali";$/;"	v
BALL_MOVE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/JoystickEvent.hx	/^	public static inline var BALL_MOVE:String = "ballMove";$/;"	v
BAMUM	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var BAMUM = "Bamu";$/;"	v
BASE64	/usr/lib/haxe/std/haxe/Serializer.hx	/^	static var BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";$/;"	v
BASE64	/usr/lib/haxe/std/haxe/Unserializer.hx	/^	static var BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";$/;"	v
BASSA_VAH	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var BASSA_VAH = "Bass";$/;"	v
BATAK	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var BATAK = "Batk";$/;"	v
BEGIN	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^	public static inline var BEGIN			= 1;$/;"	v
BEGIN_NODE	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^	public static inline var BEGIN_NODE		= 2;$/;"	v
BENGALI	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var BENGALI = "Beng";$/;"	v
BEST	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoAntialias.hx	/^	public var BEST = 6;$/;"	v
BEST	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFilter.hx	/^	public var BEST = 2;$/;"	v
BEVEL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoLineJoin.hx	/^	public var BEVEL = 2;$/;"	v
BGR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoSubpixelOrder.hx	/^	public var BGR = 2;$/;"	v
BGRA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/PixelFormat.hx	/^	public var BGRA = 2;$/;"	v
BGRA_EXT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var BGRA_EXT = 0x80E1;$/;"	v
BGR_EXT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var BGR_EXT = 0x80E0;$/;"	v
BIG_ENDIAN	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/Endian.hx	/^	public static inline var BIG_ENDIAN:String = "bigEndian";$/;"	v
BILINEAR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFilter.hx	/^	public var BILINEAR = 4;$/;"	v
BINARY	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	var BINARY = "BINARY";$/;"	v
BINARY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	var BINARY = "BINARY";$/;"	v
BITS	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var BITS:Int = 0x2002;$/;"	v
BITS	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var BITS:Int = 0x2002;$/;"	v
BLACKBERRY	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Platform.hx	/^	var BLACKBERRY = "blackberry";$/;"	v
BLEND	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var BLEND = 0x0BE2;$/;"	v
BLEND	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var BLEND:Int;$/;"	v
BLEND	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var BLEND = 0x0BE2;$/;"	v
BLEND	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var BLEND								  = 0x0BE2;$/;"	v
BLEND	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var BLEND                          = 0x0BE2;$/;"	v
BLEND_COLOR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var BLEND_COLOR = 0x8005;$/;"	v
BLEND_COLOR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var BLEND_COLOR:Int;$/;"	v
BLEND_COLOR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var BLEND_COLOR = 0x8005;$/;"	v
BLEND_COLOR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var BLEND_COLOR						  = 0x8005;$/;"	v
BLEND_COLOR	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var BLEND_COLOR                    = 0x8005;$/;"	v
BLEND_DST_ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var BLEND_DST_ALPHA = 0x80CA;$/;"	v
BLEND_DST_ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var BLEND_DST_ALPHA:Int;$/;"	v
BLEND_DST_ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var BLEND_DST_ALPHA = 0x80CA;$/;"	v
BLEND_DST_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var BLEND_DST_ALPHA					 = 0x80CA;$/;"	v
BLEND_DST_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var BLEND_DST_ALPHA                = 0x80CA;$/;"	v
BLEND_DST_RGB	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var BLEND_DST_RGB = 0x80C8;$/;"	v
BLEND_DST_RGB	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var BLEND_DST_RGB:Int;$/;"	v
BLEND_DST_RGB	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var BLEND_DST_RGB = 0x80C8;$/;"	v
BLEND_DST_RGB	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var BLEND_DST_RGB						= 0x80C8;$/;"	v
BLEND_DST_RGB	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var BLEND_DST_RGB                  = 0x80C8;$/;"	v
BLEND_EQUATION	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var BLEND_EQUATION = 0x8009;$/;"	v
BLEND_EQUATION	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var BLEND_EQUATION:Int;$/;"	v
BLEND_EQUATION	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var BLEND_EQUATION = 0x8009;$/;"	v
BLEND_EQUATION	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var BLEND_EQUATION					  = 0x8009;$/;"	v
BLEND_EQUATION	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var BLEND_EQUATION                 = 0x8009;$/;"	v
BLEND_EQUATION_ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var BLEND_EQUATION_ALPHA = 0x883D;$/;"	v
BLEND_EQUATION_ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var BLEND_EQUATION_ALPHA:Int;$/;"	v
BLEND_EQUATION_ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var BLEND_EQUATION_ALPHA = 0x883D;$/;"	v
BLEND_EQUATION_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var BLEND_EQUATION_ALPHA			  = 0x883D;$/;"	v
BLEND_EQUATION_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var BLEND_EQUATION_ALPHA           = 0x883D;$/;"	v
BLEND_EQUATION_RGB	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var BLEND_EQUATION_RGB = 0x8009;$/;"	v
BLEND_EQUATION_RGB	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var BLEND_EQUATION_RGB:Int;$/;"	v
BLEND_EQUATION_RGB	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var BLEND_EQUATION_RGB = 0x8009;$/;"	v
BLEND_EQUATION_RGB	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var BLEND_EQUATION_RGB				 = 0x8009;	\/* same as BLEND_EQUATION *\/$/;"	v
BLEND_EQUATION_RGB	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var BLEND_EQUATION_RGB             = 0x8009;   \/* same as BLEND_EQUATION *\/$/;"	v
BLEND_SRC_ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var BLEND_SRC_ALPHA = 0x80CB;$/;"	v
BLEND_SRC_ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var BLEND_SRC_ALPHA:Int;$/;"	v
BLEND_SRC_ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var BLEND_SRC_ALPHA = 0x80CB;$/;"	v
BLEND_SRC_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var BLEND_SRC_ALPHA					 = 0x80CB;$/;"	v
BLEND_SRC_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var BLEND_SRC_ALPHA                = 0x80CB;$/;"	v
BLEND_SRC_RGB	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var BLEND_SRC_RGB = 0x80C9;$/;"	v
BLEND_SRC_RGB	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var BLEND_SRC_RGB:Int;$/;"	v
BLEND_SRC_RGB	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var BLEND_SRC_RGB = 0x80C9;$/;"	v
BLEND_SRC_RGB	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var BLEND_SRC_RGB						= 0x80C9;$/;"	v
BLEND_SRC_RGB	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var BLEND_SRC_RGB                  = 0x80C9;$/;"	v
BLUE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapDataChannel.hx	/^	public static inline var BLUE = 4;$/;"	v
BLUE_BITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var BLUE_BITS = 0x0D54;$/;"	v
BLUE_BITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var BLUE_BITS:Int;$/;"	v
BLUE_BITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var BLUE_BITS = 0x0D54;$/;"	v
BLUE_BITS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var BLUE_BITS							 = 0x0D54;$/;"	v
BLUE_BITS	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var BLUE_BITS                      = 0x0D54;$/;"	v
BMP	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/format/BMP.hx	/^class BMP {$/;"	c
BODY	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^	public static inline var BODY			= 4;$/;"	v
BOOL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var BOOL = 0x8B56;$/;"	v
BOOL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var BOOL:Int;$/;"	v
BOOL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var BOOL = 0x8B56;$/;"	v
BOOL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var BOOL									= 0x8B56;$/;"	v
BOOL	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var BOOL                           = 0x8B56;$/;"	v
BOOL_VEC2	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var BOOL_VEC2 = 0x8B57;$/;"	v
BOOL_VEC2	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var BOOL_VEC2:Int;$/;"	v
BOOL_VEC2	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var BOOL_VEC2 = 0x8B57;$/;"	v
BOOL_VEC2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var BOOL_VEC2							 = 0x8B57;$/;"	v
BOOL_VEC2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var BOOL_VEC2                      = 0x8B57;$/;"	v
BOOL_VEC3	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var BOOL_VEC3 = 0x8B58;$/;"	v
BOOL_VEC3	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var BOOL_VEC3:Int;$/;"	v
BOOL_VEC3	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var BOOL_VEC3 = 0x8B58;$/;"	v
BOOL_VEC3	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var BOOL_VEC3							 = 0x8B58;$/;"	v
BOOL_VEC3	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var BOOL_VEC3                      = 0x8B58;$/;"	v
BOOL_VEC4	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var BOOL_VEC4 = 0x8B59;$/;"	v
BOOL_VEC4	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var BOOL_VEC4:Int;$/;"	v
BOOL_VEC4	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var BOOL_VEC4 = 0x8B59;$/;"	v
BOOL_VEC4	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var BOOL_VEC4							 = 0x8B59;$/;"	v
BOOL_VEC4	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var BOOL_VEC4                      = 0x8B59;$/;"	v
BOPOMOFO	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var BOPOMOFO = "Bopo";$/;"	v
BORDERLESS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	static public var BORDERLESS = 0x0002;$/;"	v
BOTTOM_TO_TOP	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextDirection.hx	/^	var BOTTOM_TO_TOP = 7;$/;"	v
BRAHMI	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var BRAHMI = "Brah";$/;"	v
BRAILLE	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var BRAILLE = "Brai";$/;"	v
BREAK	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var BREAK = 19;$/;"	v
BREAK	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var BREAK = 19;$/;"	v
BRIGHTNESS_DOWN	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var BRIGHTNESS_DOWN = 0x40000113;$/;"	v
BRIGHTNESS_UP	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var BRIGHTNESS_UP = 0x40000114;$/;"	v
BROWSER_DEFAULT_WEBGL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var BROWSER_DEFAULT_WEBGL = 0x9244;$/;"	v
BROWSER_DEFAULT_WEBGL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var BROWSER_DEFAULT_WEBGL:Int;$/;"	v
BROWSER_DEFAULT_WEBGL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var BROWSER_DEFAULT_WEBGL = 0x9244;$/;"	v
BROWSER_DEFAULT_WEBGL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var BROWSER_DEFAULT_WEBGL			 = 0x9244;$/;"	v
BROWSER_DEFAULT_WEBGL	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var BROWSER_DEFAULT_WEBGL          = 0x9244;$/;"	v
BUB	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/FocusEventTest.hx	/^		var BUB = EventPhase.BUBBLING_PHASE;$/;"	v
BUFFER	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var BUFFER:Int = 0x1009;$/;"	v
BUFFER	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var BUFFER:Int = 0x1009;$/;"	v
BUFFERSIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var BUFFERSIZE = 98;$/;"	v
BUFFERS_PROCESSED	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var BUFFERS_PROCESSED:Int = 0x1016;$/;"	v
BUFFERS_PROCESSED	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var BUFFERS_PROCESSED:Int = 0x1016;$/;"	v
BUFFERS_QUEUED	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var BUFFERS_QUEUED:Int = 0x1015;$/;"	v
BUFFERS_QUEUED	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var BUFFERS_QUEUED:Int = 0x1015;$/;"	v
BUFFER_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var BUFFER_SIZE = 0x8764;$/;"	v
BUFFER_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var BUFFER_SIZE:Int;$/;"	v
BUFFER_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var BUFFER_SIZE = 0x8764;$/;"	v
BUFFER_SIZE	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    static inline var BUFFER_SIZE = 4096;$/;"	v
BUFFER_SIZE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var BUFFER_SIZE						  = 0x8764;$/;"	v
BUFFER_SIZE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var BUFFER_SIZE                    = 0x8764;$/;"	v
BUFFER_USAGE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var BUFFER_USAGE = 0x8765;$/;"	v
BUFFER_USAGE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var BUFFER_USAGE:Int;$/;"	v
BUFFER_USAGE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var BUFFER_USAGE = 0x8765;$/;"	v
BUFFER_USAGE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var BUFFER_USAGE						 = 0x8765;$/;"	v
BUFFER_USAGE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var BUFFER_USAGE                   = 0x8765;$/;"	v
BUFSIZE	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	public static inline var BUFSIZE = 1 << 16;$/;"	v
BUGINESE	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var BUGINESE = "Bugi";$/;"	v
BUHID	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var BUHID = "Buhd";$/;"	v
BUTT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoLineCap.hx	/^	public var BUTT = 0;$/;"	v
BUTTON_DOWN	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	var BUTTON_DOWN = 1;$/;"	v
BUTTON_DOWN	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/JoystickEvent.hx	/^	public static inline var BUTTON_DOWN:String = "buttonDown";$/;"	v
BUTTON_UP	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	var BUTTON_UP = 2;$/;"	v
BUTTON_UP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/JoystickEvent.hx	/^	public static inline var BUTTON_UP:String = "buttonUp";$/;"	v
BYTE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var BYTE = 0x1400;$/;"	v
BYTE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var BYTE:Int;$/;"	v
BYTE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var BYTE = 0x1400;$/;"	v
BYTE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexAttribute.hx	/^	var BYTE = GL.BYTE;$/;"	v
BYTE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var BYTE									= 0x1400;$/;"	v
BYTE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var BYTE                           = 0x1400;$/;"	v
BYTES	/usr/lib/haxe/std/haxe/crypto/Base64.hx	/^	public static var BYTES(default,null) = haxe.io.Bytes.ofString(CHARS);$/;"	v
BYTES_PER_ELEMENT	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Float32Array.hx	/^	public static inline var BYTES_PER_ELEMENT = 4;$/;"	v
BYTES_PER_ELEMENT	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Int16Array.hx	/^	public static inline var BYTES_PER_ELEMENT = 2;$/;"	v
BYTES_PER_ELEMENT	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Int32Array.hx	/^	public static inline var BYTES_PER_ELEMENT = 4;$/;"	v
BYTES_PER_ELEMENT	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Int8Array.hx	/^	public static inline var BYTES_PER_ELEMENT = 1;$/;"	v
BYTES_PER_ELEMENT	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/UInt16Array.hx	/^	public static inline var BYTES_PER_ELEMENT = 2;$/;"	v
BYTES_PER_ELEMENT	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/UInt32Array.hx	/^	public static inline var BYTES_PER_ELEMENT = 4;$/;"	v
BYTES_PER_ELEMENT	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/UInt8Array.hx	/^	public static inline var BYTES_PER_ELEMENT = 1;$/;"	v
BYTES_PER_ELEMENT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Float32Array.hx	/^	public var BYTES_PER_ELEMENT (default, null):Int;$/;"	v
BYTES_PER_ELEMENT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Int16Array.hx	/^	public var BYTES_PER_ELEMENT (default, null):Int;$/;"	v
BYTES_PER_ELEMENT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Int32Array.hx	/^	public var BYTES_PER_ELEMENT (default, null):Int;$/;"	v
BYTES_PER_ELEMENT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/UInt8Array.hx	/^	public var BYTES_PER_ELEMENT (default, null):Int;$/;"	v
BYTE_OFFSET	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var BYTE_OFFSET:Int = 0x1026;$/;"	v
BYTE_OFFSET	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var BYTE_OFFSET:Int = 0x1026;$/;"	v
BalancedTree	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^class BalancedTree<K,V> {$/;"	c
Base64	/usr/lib/haxe/std/haxe/crypto/Base64.hx	/^class Base64 {$/;"	c
BaseCode	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^class BaseCode {$/;"	c
Better handle platform type for pluggable targets	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^				\/\/ TODO: Better handle platform type for pluggable targets$/;"	i
Bitmap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Bitmap.hx	/^class Bitmap extends DisplayObject {$/;"	c
Bitmap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Bitmap.hx	/^class Bitmap extends DisplayObjectContainer {$/;"	c
BitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^class BitmapData implements IBitmapDrawable {$/;"	c
BitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^class BitmapData implements IBitmapDrawable {$/;"	c
BitmapDataChannel	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapDataChannel.hx	/^class BitmapDataChannel {$/;"	c
BitmapDataChannelTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataChannelTest.hx	/^class BitmapDataChannelTest {$/;"	c
BitmapDataTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^class BitmapDataTest {$/;"	c
BitmapFilter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/BitmapFilter.hx	/^class BitmapFilter {$/;"	c
BitmapFilter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/BitmapFilter.hx	/^class BitmapFilter {$/;"	c
BitmapFilterQuality	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/BitmapFilterQuality.hx	/^class BitmapFilterQuality {$/;"	c
BitmapFilterQualityTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/BitmapFilterQuality.hx	/^class BitmapFilterQualityTest {$/;"	c
BitmapFilterTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/BitmapFilterTest.hx	/^class BitmapFilterTest {$/;"	c
BitmapFilterType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/BitmapFilterType.hx	/^class BitmapFilterType {$/;"	c
BitmapFilterTypeTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/BitmapFilterTypeTest.hx	/^class BitmapFilterTypeTest {$/;"	c
BitmapTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapTest.hx	/^class BitmapTest {$/;"	c
BlackBerryHelper	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^class BlackBerryHelper {$/;"	c
BlackBerryPlatform	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/BlackBerryPlatform.hx	/^class BlackBerryPlatform extends PlatformTarget {$/;"	c
BlendModeManager	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/BlendModeManager.hx	/^class BlendModeManager {$/;"	c
BlendModeTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BlendModeTest.hx	/^class BlendModeTest {$/;"	c
BlurFilter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/BlurFilter.hx	/^class BlurFilter extends BitmapFilter {$/;"	c
BlurFilter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/BlurFilter.hx	/^class BlurFilter extends BitmapFilter {$/;"	c
BlurFilterTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/BlurFilterTest.hx	/^class BlurFilterTest {$/;"	c
Boot	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^class Boot {$/;"	c
Boot	/usr/lib/haxe/std/neko/Boot.hx	/^class Boot {$/;"	c
Break	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBreakable.hx	/^		public function Break():Void$/;"	f
BufferInput	/usr/lib/haxe/std/haxe/io/BufferInput.hx	/^class BufferInput extends haxe.io.Input {$/;"	c
ByteArray	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^class ByteArray #if !js extends Bytes implements ArrayAccess<Int> implements IDataInput implements IMemoryRange #end {$/;"	c
ByteArray	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^class ByteArray extends Bytes implements ArrayAccess<Int> implements IDataInput implements IMemoryRange implements IDataOutput {$/;"	c
ByteArray	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^class ByteArray implements ArrayAccess<Int> {$/;"	c
ByteArrayTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/ByteArrayTest.hx	/^class ByteArrayTest {$/;"	c
Bytes	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^class Bytes {$/;"	c
BytesBuffer	/usr/lib/haxe/std/haxe/io/BytesBuffer.hx	/^class BytesBuffer {$/;"	c
BytesInput	/usr/lib/haxe/std/haxe/io/BytesInput.hx	/^class BytesInput extends Input {$/;"	c
BytesOutput	/usr/lib/haxe/std/haxe/io/BytesOutput.hx	/^class BytesOutput extends Output {$/;"	c
C	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^		var C:B2Mat22 = B2Mat22.fromVV(addVV(A.col1, B.col1), addVV(A.col2, B.col2));$/;"	v
C	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^		var C:B2Mat22 = B2Mat22.fromVV(c1, c2);$/;"	v
C	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^		var C:B2Mat22 = B2Mat22.fromVV(mulMV(A, B.col1), mulMV(A, B.col2));$/;"	v
C	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var C:Float = B2Math.clamp(baumgarte * (separation + B2Settings.b2_linearSlop), -B2Settings.b2_maxLinearCorrection, 0.0);$/;"	v
C	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^			var C:Float = length - m_length;$/;"	v
C	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^		var C:Float = length - m_length;$/;"	v
C	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^		var C:Float = m_constant - (coordinate1 + m_ratio * coordinate2);$/;"	v
C	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var C:Float = m_constant - length1 - m_ratio * length2;$/;"	v
C	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var C:Float;$/;"	v
C	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJointDef.hx	/^		var C:Float = lengthA + ratio * lengthB;$/;"	v
C	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^		var C:Float;$/;"	v
C	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var C = 0x63;$/;"	v
C	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var C:Int = 67;$/;"	v
C	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var C = 67;$/;"	v
C1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var C1:Float = m_perp.x * dX + m_perp.y * dY;$/;"	v
C1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var C1X:Float = m_perp.x * dX + m_perp.y * dY;$/;"	v
C1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^		var C1X:Float =  bB.m_sweep.c.x + rBX - bA.m_sweep.c.x - rAX;$/;"	v
C1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var C1Y:Float = a2 - a1 - m_refAngle;$/;"	v
C1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^		var C1Y:Float =  bB.m_sweep.c.y + rBY - bA.m_sweep.c.y - rAY;$/;"	v
C2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var C2:Float = 0.0;$/;"	v
C2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var C2:Float = 0.0;$/;"	v
C2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^		var C2:Float = bB.m_sweep.a - bA.m_sweep.a - m_referenceAngle;$/;"	v
CAINFO	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var CAINFO = 10065;$/;"	v
CALCULATOR	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var CALCULATOR = 0x4000010A;$/;"	v
CANADIAN_SYLLABICS	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var CANADIAN_SYLLABICS = "Cans";$/;"	v
CANCEL	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var CANCEL = 0x4000009B;$/;"	v
CANCEL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public static var CANCEL = "cancel";$/;"	v
CANCEL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public static var CANCEL = "cancel";$/;"	v
CAP	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/FocusEventTest.hx	/^		var CAP = EventPhase.CAPTURING_PHASE;$/;"	v
CAPATH	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var CAPATH = 10097;$/;"	v
CAPS_LOCK	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var CAPS_LOCK = 0x40000039;$/;"	v
CAPS_LOCK	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	public static inline var CAPS_LOCK:KeyModifier = 0x2000;$/;"	v
CAPS_LOCK	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var CAPS_LOCK:Int = 20;$/;"	v
CAPS_LOCK	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var CAPS_LOCK = 20;$/;"	v
CARET	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var CARET = 0x5E;$/;"	v
CARIAN	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var CARIAN = "Cari";$/;"	v
CAUCASIAN_ALBANIAN	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var CAUCASIAN_ALBANIAN = "Aghb";$/;"	v
CCW	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var CCW = 0x0901;$/;"	v
CCW	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var CCW:Int;$/;"	v
CCW	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var CCW = 0x0901;$/;"	v
CCW	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var CCW									 = 0x0901;$/;"	v
CCW	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var CCW                            = 0x0901;$/;"	v
CDATA	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^	public static inline var CDATA			= 17;$/;"	v
CData	/usr/lib/haxe/std/Xml.hx	/^	static var CData(default,null) : XmlType;$/;"	v
CENTER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextFormatAlign.hx	/^	public static var CENTER = "center";$/;"	v
CENTRAL_DIRECTORY_RECORD_FIELDS_SIZE	/usr/lib/haxe/std/haxe/zip/Writer.hx	/^	inline static var CENTRAL_DIRECTORY_RECORD_FIELDS_SIZE = 46;$/;"	v
CERTINFO	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var CERTINFO = 0x400000 + 34;$/;"	v
CERTINFO	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var CERTINFO = 172;$/;"	v
CHAKMA	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var CHAKMA = "Cakm";$/;"	v
CHAM	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var CHAM = "Cham";$/;"	v
CHANGE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public static var CHANGE = "change";$/;"	v
CHANGE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public static var CHANGE = "change";$/;"	v
CHANNELS	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var CHANNELS:Int = 0x2003;$/;"	v
CHANNELS	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var CHANNELS:Int = 0x2003;$/;"	v
CHARS	/usr/lib/haxe/std/haxe/crypto/Base64.hx	/^	public static var CHARS(default,null) = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+\/";$/;"	v
CHEROKEE	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var CHEROKEE = "Cher";$/;"	v
CHILDS	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^	public static inline var CHILDS			= 9;$/;"	v
CHUNK_BGN_FUNCTION	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var CHUNK_BGN_FUNCTION = 20198;$/;"	v
CHUNK_DATA	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var CHUNK_DATA = 10201;$/;"	v
CHUNK_END_FUNCTION	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var CHUNK_END_FUNCTION = 20199;$/;"	v
CHUNK_FAILED	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var CHUNK_FAILED = 88;$/;"	v
CIRCLE_SHAPE	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2ShapeType.hx	/^	var CIRCLE_SHAPE = 1;$/;"	v
CLAMP_TO_EDGE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var CLAMP_TO_EDGE = 0x812F;$/;"	v
CLAMP_TO_EDGE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var CLAMP_TO_EDGE:Int;$/;"	v
CLAMP_TO_EDGE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var CLAMP_TO_EDGE = 0x812F;$/;"	v
CLAMP_TO_EDGE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var CLAMP_TO_EDGE						= 0x812F;$/;"	v
CLAMP_TO_EDGE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var CLAMP_TO_EDGE                  = 0x812F;$/;"	v
CLEAR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoOperator.hx	/^	public var CLEAR = 0;$/;"	v
CLEAR	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var CLEAR = 0x4000009C;$/;"	v
CLEAR_AGAIN	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var CLEAR_AGAIN = 0x400000A2;$/;"	v
CLICK	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public static var CLICK:String = "click";$/;"	v
CLICK	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public static var CLICK:String = "click";$/;"	v
CLIHelper	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CLIHelper.hx	/^class CLIHelper {$/;"	c
CLIP_NOT_REPRESENTABLE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var CLIP_NOT_REPRESENTABLE = 22;$/;"	v
CLOSE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public static var CLOSE = "close";$/;"	v
CLOSE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public static var CLOSE = "close";$/;"	v
CLOSE	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^	public static inline var CLOSE			= 10;$/;"	v
CLOSEPOLICY	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var CLOSEPOLICY = 72;$/;"	v
CLOSESOCKETDATA	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var CLOSESOCKETDATA = 10209;$/;"	v
CLOSESOCKETFUNCTION	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var CLOSESOCKETFUNCTION = 20208;$/;"	v
CLength	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^			var CLength:Float = Math.sqrt(CLengthSquared);$/;"	v
CLengthSquared	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^			var CLengthSquared:Float = CX * CX + CY * CY;$/;"	v
CODES	/usr/lib/haxe/std/haxe/Unserializer.hx	/^	static var CODES = null;$/;"	v
CODE_LENGTHS_POS	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	static var CODE_LENGTHS_POS = [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];$/;"	v
COLON	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var COLON = 0x3A;$/;"	v
COLOR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoContent.hx	/^	public var COLOR = 0x1000;$/;"	v
COLOR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DClearMask.hx	/^    inline static public var COLOR:Int = GL.COLOR_BUFFER_BIT;$/;"	v
COLOR_ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoContent.hx	/^    public var COLOR_ALPHA = 0x3000;$/;"	v
COLOR_ATTACHMENT0	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var COLOR_ATTACHMENT0 = 0x8CE0;$/;"	v
COLOR_ATTACHMENT0	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var COLOR_ATTACHMENT0:Int;$/;"	v
COLOR_ATTACHMENT0	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var COLOR_ATTACHMENT0 = 0x8CE0;$/;"	v
COLOR_ATTACHMENT0	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var COLOR_ATTACHMENT0				  = 0x8CE0;$/;"	v
COLOR_ATTACHMENT0	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var COLOR_ATTACHMENT0              = 0x8CE0;$/;"	v
COLOR_BUFFER_BIT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var COLOR_BUFFER_BIT = 0x00004000;$/;"	v
COLOR_BUFFER_BIT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var COLOR_BUFFER_BIT:Int;$/;"	v
COLOR_BUFFER_BIT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var COLOR_BUFFER_BIT = 0x00004000;$/;"	v
COLOR_BUFFER_BIT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var COLOR_BUFFER_BIT					= 0x00004000;$/;"	v
COLOR_BUFFER_BIT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var COLOR_BUFFER_BIT               = 0x00004000;$/;"	v
COLOR_BURN	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoOperator.hx	/^	public var COLOR_BURN = 20;$/;"	v
COLOR_CLEAR_VALUE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var COLOR_CLEAR_VALUE = 0x0C22;$/;"	v
COLOR_CLEAR_VALUE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var COLOR_CLEAR_VALUE:Int;$/;"	v
COLOR_CLEAR_VALUE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var COLOR_CLEAR_VALUE = 0x0C22;$/;"	v
COLOR_CLEAR_VALUE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var COLOR_CLEAR_VALUE				  = 0x0C22;$/;"	v
COLOR_CLEAR_VALUE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var COLOR_CLEAR_VALUE              = 0x0C22;$/;"	v
COLOR_DODGE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoOperator.hx	/^	public var COLOR_DODGE = 19;$/;"	v
COLOR_WRITEMASK	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var COLOR_WRITEMASK = 0x0C23;$/;"	v
COLOR_WRITEMASK	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var COLOR_WRITEMASK:Int;$/;"	v
COLOR_WRITEMASK	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var COLOR_WRITEMASK = 0x0C23;$/;"	v
COLOR_WRITEMASK	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var COLOR_WRITEMASK					 = 0x0C23;$/;"	v
COLOR_WRITEMASK	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var COLOR_WRITEMASK                = 0x0C23;$/;"	v
COMMA	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var COMMA = 0x2C;$/;"	v
COMMA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var COMMA:Int = 188;$/;"	v
COMMA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var COMMA = 188;$/;"	v
COMMAND	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var COMMAND:Int = 15;$/;"	v
COMMAND	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var COMMAND = 15;$/;"	v
COMMENT	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^	public static inline var COMMENT		= 15;$/;"	v
COMMON	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var COMMON = "Zyyy";$/;"	v
COMPILE_STATUS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var COMPILE_STATUS = 0x8B81;$/;"	v
COMPILE_STATUS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var COMPILE_STATUS:Int;$/;"	v
COMPILE_STATUS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var COMPILE_STATUS = 0x8B81;$/;"	v
COMPILE_STATUS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var COMPILE_STATUS					  = 0x8B81;$/;"	v
COMPILE_STATUS	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var COMPILE_STATUS                 = 0x8B81;$/;"	v
COMPLETE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public static var COMPLETE = "complete";$/;"	v
COMPLETE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public static var COMPLETE = "complete";$/;"	v
COMPRESSED_TEXTURE_FORMATS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var COMPRESSED_TEXTURE_FORMATS = 0x86A3;$/;"	v
COMPRESSED_TEXTURE_FORMATS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var COMPRESSED_TEXTURE_FORMATS:Int;$/;"	v
COMPRESSED_TEXTURE_FORMATS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var COMPRESSED_TEXTURE_FORMATS = 0x86A3;$/;"	v
COMPRESSED_TEXTURE_FORMATS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var COMPRESSED_TEXTURE_FORMATS	  = 0x86A3;$/;"	v
COMPRESSED_TEXTURE_FORMATS	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var COMPRESSED_TEXTURE_FORMATS     = 0x86A3;$/;"	v
COMPUTER	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var COMPUTER = 0x4000010B;$/;"	v
CONDITION_UNMET	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var CONDITION_UNMET = 0x200000 + 35;$/;"	v
CONE_INNER_ANGLE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var CONE_INNER_ANGLE:Int = 0x1001;$/;"	v
CONE_INNER_ANGLE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var CONE_INNER_ANGLE:Int = 0x1001;$/;"	v
CONE_OUTER_ANGLE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var CONE_OUTER_ANGLE:Int = 0x1002;$/;"	v
CONE_OUTER_ANGLE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var CONE_OUTER_ANGLE:Int = 0x1002;$/;"	v
CONE_OUTER_GAIN	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var CONE_OUTER_GAIN:Int = 0x1022;$/;"	v
CONE_OUTER_GAIN	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var CONE_OUTER_GAIN:Int = 0x1022;$/;"	v
CONNECT	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	var CONNECT = 3;$/;"	v
CONNECT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public static var CONNECT = "connect";$/;"	v
CONNECT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public static var CONNECT = "connect";$/;"	v
CONNECTTIMEOUT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var CONNECTTIMEOUT = 78;$/;"	v
CONNECTTIMEOUT_MS	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var CONNECTTIMEOUT_MS = 156;$/;"	v
CONNECT_ONLY	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var CONNECT_ONLY = 141;$/;"	v
CONNECT_SUCCESS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/NetConnection.hx	/^	public static inline var CONNECT_SUCCESS:String = "connectSuccess";$/;"	v
CONNECT_TIME	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var CONNECT_TIME = 0x300000 + 5;$/;"	v
CONSTANT_ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var CONSTANT_ALPHA = 0x8003;$/;"	v
CONSTANT_ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var CONSTANT_ALPHA:Int;$/;"	v
CONSTANT_ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var CONSTANT_ALPHA = 0x8003;$/;"	v
CONSTANT_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/BlendModeManager.hx	/^	var CONSTANT_ALPHA = GL.CONSTANT_ALPHA;$/;"	v
CONSTANT_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var CONSTANT_ALPHA					  = 0x8003;$/;"	v
CONSTANT_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var CONSTANT_ALPHA                 = 0x8003;$/;"	v
CONSTANT_COLOR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var CONSTANT_COLOR = 0x8001;$/;"	v
CONSTANT_COLOR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var CONSTANT_COLOR:Int;$/;"	v
CONSTANT_COLOR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var CONSTANT_COLOR = 0x8001;$/;"	v
CONSTANT_COLOR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/BlendModeManager.hx	/^	var CONSTANT_COLOR = GL.CONSTANT_COLOR;$/;"	v
CONSTANT_COLOR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var CONSTANT_COLOR					  = 0x8001;$/;"	v
CONSTANT_COLOR	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var CONSTANT_COLOR                 = 0x8001;$/;"	v
CONTENT_LENGTH_DOWNLOAD	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var CONTENT_LENGTH_DOWNLOAD = 0x300000 + 15;$/;"	v
CONTENT_LENGTH_UPLOAD	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var CONTENT_LENGTH_UPLOAD = 0x300000 + 16;$/;"	v
CONTENT_TYPE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var CONTENT_TYPE = 0x100000 + 18;$/;"	v
CONTEXT3D_CREATE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public static var CONTEXT3D_CREATE = "context3DCreate";$/;"	v
CONTEXT3D_CREATE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public static var CONTEXT3D_CREATE = "context3DCreate";$/;"	v
CONTEXT_LOST	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/OpenGLView.hx	/^	public static inline var CONTEXT_LOST = "glcontextlost";$/;"	v
CONTEXT_LOST	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/OpenGLView.hx	/^	public static inline var CONTEXT_LOST = "glcontextlost";$/;"	v
CONTEXT_LOST_WEBGL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var CONTEXT_LOST_WEBGL = 0x9242;$/;"	v
CONTEXT_LOST_WEBGL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var CONTEXT_LOST_WEBGL:Int;$/;"	v
CONTEXT_LOST_WEBGL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var CONTEXT_LOST_WEBGL = 0x9242;$/;"	v
CONTEXT_LOST_WEBGL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var CONTEXT_LOST_WEBGL				 = 0x9242;$/;"	v
CONTEXT_LOST_WEBGL	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var CONTEXT_LOST_WEBGL             = 0x9242;$/;"	v
CONTEXT_RESTORED	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/OpenGLView.hx	/^	public static inline var CONTEXT_RESTORED = "glcontextrestored";$/;"	v
CONTEXT_RESTORED	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/OpenGLView.hx	/^	public static inline var CONTEXT_RESTORED = "glcontextrestored";$/;"	v
CONTROL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var CONTROL:Int = 17;$/;"	v
CONTROL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var CONTROL = 17;$/;"	v
CONV_FAILED	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var CONV_FAILED = 75;$/;"	v
CONV_FROM_NETWORK_FUNCTION	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var CONV_FROM_NETWORK_FUNCTION = 20142;$/;"	v
CONV_FROM_UTF8_FUNCTION	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var CONV_FROM_UTF8_FUNCTION = 20144;$/;"	v
CONV_REQD	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var CONV_REQD = 76;$/;"	v
CONV_TO_NETWORK_FUNCTION	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var CONV_TO_NETWORK_FUNCTION = 20143;$/;"	v
COOKIE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var COOKIE = 22;$/;"	v
COOKIEFILE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var COOKIEFILE = 10031;$/;"	v
COOKIEJAR	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var COOKIEJAR = 10082;$/;"	v
COOKIELIST	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var COOKIELIST = 0x400000 + 28;$/;"	v
COOKIELIST	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var COOKIELIST = 10135;$/;"	v
COOKIESESSION	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var COOKIESESSION = 96;$/;"	v
COPTIC	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var COPTIC = "Copt";$/;"	v
COPY	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var COPY = 0x4000007C;$/;"	v
COPYPOSTFIELDS	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var COPYPOSTFIELDS = 10165;$/;"	v
COULDNT_CONNECT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var COULDNT_CONNECT = 7;$/;"	v
COULDNT_RESOLVE_HOST	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var COULDNT_RESOLVE_HOST = 6;$/;"	v
COULDNT_RESOLVE_PROXY	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var COULDNT_RESOLVE_PROXY = 5;$/;"	v
CPPHelper	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CPPHelper.hx	/^class CPPHelper {$/;"	c
CRC_SIZE	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    static inline var CRC_SIZE = 4;$/;"	v
CRLF	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var CRLF = 27;$/;"	v
CRLFILE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var CRLFILE = 10169;$/;"	v
CROSSHAIR	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeMouse.hx	/^	var CROSSHAIR = 1;$/;"	v
CRSEL	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var CRSEL = 0x400000A3;$/;"	v
CTRL	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	public static inline var CTRL:KeyModifier = (0x0040 | 0x0080);$/;"	v
CUBIC_CURVE_TO	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsPathCommand.hx	/^	public static inline var CUBIC_CURVE_TO = 6;$/;"	v
CULL_FACE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var CULL_FACE = 0x0B44;$/;"	v
CULL_FACE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var CULL_FACE:Int;$/;"	v
CULL_FACE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var CULL_FACE = 0x0B44;$/;"	v
CULL_FACE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var CULL_FACE							 = 0x0B44;$/;"	v
CULL_FACE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var CULL_FACE                      = 0x0B44;$/;"	v
CULL_FACE_MODE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var CULL_FACE_MODE = 0x0B45;$/;"	v
CULL_FACE_MODE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var CULL_FACE_MODE:Int;$/;"	v
CULL_FACE_MODE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var CULL_FACE_MODE = 0x0B45;$/;"	v
CULL_FACE_MODE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var CULL_FACE_MODE					  = 0x0B45;$/;"	v
CULL_FACE_MODE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var CULL_FACE_MODE                 = 0x0B45;$/;"	v
CUNEIFORM	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var CUNEIFORM = "Xsux";$/;"	v
CURLEasy	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLEasy.hx	/^class CURLEasy {$/;"	c
CURRENCY_SUBUNIT	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var CURRENCY_SUBUNIT = 0x400000B5;$/;"	v
CURRENCY_UNIT	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var CURRENCY_UNIT = 0x400000B4;$/;"	v
CURRENT_PROGRAM	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var CURRENT_PROGRAM = 0x8B8D;$/;"	v
CURRENT_PROGRAM	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var CURRENT_PROGRAM:Int;$/;"	v
CURRENT_PROGRAM	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var CURRENT_PROGRAM = 0x8B8D;$/;"	v
CURRENT_PROGRAM	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var CURRENT_PROGRAM						= 0x8B8D;$/;"	v
CURRENT_PROGRAM	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var CURRENT_PROGRAM                  = 0x8B8D;$/;"	v
CURRENT_VERTEX_ATTRIB	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var CURRENT_VERTEX_ATTRIB = 0x8626;$/;"	v
CURRENT_VERTEX_ATTRIB	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var CURRENT_VERTEX_ATTRIB:Int;$/;"	v
CURRENT_VERTEX_ATTRIB	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var CURRENT_VERTEX_ATTRIB = 0x8626;$/;"	v
CURRENT_VERTEX_ATTRIB	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var CURRENT_VERTEX_ATTRIB			 = 0x8626;$/;"	v
CURRENT_VERTEX_ATTRIB	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var CURRENT_VERTEX_ATTRIB          = 0x8626;$/;"	v
CURVE_TO	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsPathCommand.hx	/^	public static inline var CURVE_TO = 3;$/;"	v
CUSTOM	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Platform.hx	/^	var CUSTOM = null;$/;"	v
CUSTOMREQUEST	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var CUSTOMREQUEST = 10036;$/;"	v
CUT	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var CUT = 0x4000007B;$/;"	v
CW	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var CW  = 0x0900;$/;"	v
CW	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var CW:Int;$/;"	v
CW	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var CW  = 0x0900;$/;"	v
CW	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var CW									  = 0x0900;$/;"	v
CW	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var CW                             = 0x0900;$/;"	v
CX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^			var CX:Float = bB.m_sweep.c.x + r2X - bA.m_sweep.c.x - r1X;$/;"	v
CY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^			var CY:Float = bB.m_sweep.c.y + r2Y - bA.m_sweep.c.y - r1Y;$/;"	v
CYPRIOT	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var CYPRIOT = "Cprt";$/;"	v
CYRILLIC	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var CYRILLIC = "Cyrl";$/;"	v
Cairo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^class Cairo {$/;"	c
CairoBitmap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoBitmap.hx	/^class CairoBitmap {$/;"	c
CairoFont	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFont.hx	/^class CairoFont$/;"	c
CairoFontOptions	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFontOptions.hx	/^class CairoFontOptions$/;"	c
CairoGraphics	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^class CairoGraphics {$/;"	c
CairoMaskManager	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoMaskManager.hx	/^class CairoMaskManager extends AbstractMaskManager {$/;"	c
CairoRenderer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoRenderer.hx	/^class CairoRenderer extends AbstractRenderer {$/;"	c
CairoShape	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoShape.hx	/^class CairoShape {$/;"	c
CairoTextField	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^class CairoTextField {$/;"	c
CallStack	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^class CallStack {$/;"	c
CallStack	/usr/lib/haxe/std/haxe/CallStack.hx	/^class CallStack {$/;"	c
CanvasBitmap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasBitmap.hx	/^class CanvasBitmap {$/;"	c
CanvasGraphics	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^class CanvasGraphics {$/;"	c
CanvasMaskManager	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasMaskManager.hx	/^class CanvasMaskManager extends AbstractMaskManager {$/;"	c
CanvasRenderContext	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^class CanvasRenderContext {$/;"	c
CanvasRenderer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasRenderer.hx	/^class CanvasRenderer extends AbstractRenderer {$/;"	c
CanvasShape	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasShape.hx	/^class CanvasShape {$/;"	c
CanvasTextField	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^class CanvasTextField {$/;"	c
Capabilities	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^class Capabilities {$/;"	c
Capabilities	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^class Capabilities {$/;"	c
CapabilitiesTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/CapabilitiesTest.hx	/^class CapabilitiesTest {$/;"	c
CapsStyleTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/CapsStyleTest.hx	/^class CapsStyleTest {$/;"	c
Cdot	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^		var Cdot:Float = (m_u.x * (v2X - v1X) + m_u.y * (v2Y - v1Y));$/;"	v
Cdot	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^			var Cdot:Float = wB - wA;$/;"	v
Cdot	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^		var Cdot:Float = m_J.compute(	bA.m_linearVelocity, bA.m_angularVelocity,$/;"	v
Cdot	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^			var Cdot:Float = m_axis.x * (v2.x -v1.x) + m_axis.y * (v2.y - v1.y) + m_a2 * w2 - m_a1 * w1;$/;"	v
Cdot	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^			var Cdot:Float = m_axis.x * (v2.x -v1.x) + m_axis.y * (v2.y - v1.y) + m_a2 * w2 - m_a1 * w1;$/;"	v
Cdot	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var Cdot:Float;$/;"	v
Cdot	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^			var Cdot:Float = w2 - w1 - m_motorSpeed;$/;"	v
Cdot1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var Cdot1:Float = m_perp.x * (v2.x - v1.x) + m_perp.y * (v2.y - v1.y) + m_s2 * w2 - m_s1 * w1; $/;"	v
Cdot1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var Cdot1X:Float = m_perp.x * (v2.x - v1.x) + m_perp.y * (v2.y - v1.y) + m_s2 * w2 - m_s1 * w1; $/;"	v
Cdot1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^			var Cdot1X:Float = v2.x + (-w2 * r2Y) - v1.x - (-w1 * r1Y);$/;"	v
Cdot1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^		var Cdot1X:Float = vB.x - wB * rBY - vA.x + wA * rAY;$/;"	v
Cdot1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var Cdot1Y:Float = w2 - w1;$/;"	v
Cdot1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^			var Cdot1Y:Float = v2.y + (w2 * r2X) - v1.y - (w1 * r1X);$/;"	v
Cdot1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^		var Cdot1Y:Float = vB.y + wB * rBX - vA.y - wA * rAX;$/;"	v
Cdot2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^			var Cdot2:Float = m_axis.x * (v2.x - v1.x) + m_axis.y * (v2.y - v1.y) + m_a2 * w2 - m_a1 * w1; $/;"	v
Cdot2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^			var Cdot2:Float = m_axis.x * (v2.x - v1.x) + m_axis.y * (v2.y - v1.y) + m_a2 * w2 - m_a1 * w1; $/;"	v
Cdot2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^			var Cdot2:Float  = w2 - w1;$/;"	v
Cdot2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^		var Cdot2:Float = wB - wA;$/;"	v
CdotX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^			var CdotX:Float = vB.x - wB * rBY - vA.x + wA * rAY;$/;"	v
CdotX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^		var CdotX:Float = b.m_linearVelocity.x + (-b.m_angularVelocity * rY);$/;"	v
CdotX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^			var CdotX:Float = v2.x + ( -w2 * r2Y) - v1.x - ( -w1 * r1Y);$/;"	v
CdotY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^			var CdotY:Float = vB.y + wB * rBX - vA.y - wA * rAX;$/;"	v
CdotY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^		var CdotY:Float = b.m_linearVelocity.y + (b.m_angularVelocity * rX);$/;"	v
CdotY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^			var CdotY:Float = v2.y + (w2 * r2X) - v1.y - (w1 * r1X);$/;"	v
Ch	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^	function Ch(x, y, z) {$/;"	f
Check	/usr/lib/haxe/std/haxe/xml/Check.hx	/^class Check {$/;"	c
Check emulator capabilities, if it is GPU enabled and if API LEVEL >15 (http://developer.android.com/tools/devices/emulator.html)	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^			\/\/TODO: Check emulator capabilities, if it is GPU enabled and if API LEVEL >15 (http:\/\/developer.android.com\/tools\/devices\/emulator.html)$/;"	i
Clean shutdown?	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^		\/\/ TODO: Clean shutdown?$/;"	i
ClipVertex	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/ClipVertex.hx	/^class ClipVertex$/;"	c
Color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/DefaultShader.hx	/^	var Color = "aColor";$/;"	v
Color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/DefaultShader.hx	/^	var Color = "uColor";$/;"	v
Color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/DrawTrianglesShader.hx	/^	var Color = DefAttrib.Color;$/;"	v
Color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/DrawTrianglesShader.hx	/^	var Color = DefUniform.Color;$/;"	v
Color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/FillShader.hx	/^	var Color = DefUniform.Color;$/;"	v
Color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/PatternFillShader.hx	/^	var Color = DefUniform.Color;$/;"	v
Color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/PrimitiveShader.hx	/^	var Color = DefAttrib.Color;$/;"	v
ColorMatrixFilter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/ColorMatrixFilter.hx	/^class ColorMatrixFilter extends BitmapFilter {$/;"	c
ColorMatrixFilter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/ColorMatrixFilter.hx	/^class ColorMatrixFilter extends BitmapFilter {$/;"	c
ColorMatrixFilterTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/ColorMatrixFilterTest.hx	/^class ColorMatrixFilterTest {$/;"	c
ColorMultiplier	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/DefaultShader.hx	/^	var ColorMultiplier = "uColorMultiplier";$/;"	v
ColorMultiplier	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/DrawTrianglesShader.hx	/^	var ColorMultiplier = DefUniform.ColorMultiplier;$/;"	v
ColorMultiplier	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/FillShader.hx	/^	var ColorMultiplier = DefUniform.ColorMultiplier;$/;"	v
ColorMultiplier	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/PatternFillShader.hx	/^	var ColorMultiplier = DefUniform.ColorMultiplier;$/;"	v
ColorMultiplier	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/PrimitiveShader.hx	/^	var ColorMultiplier = DefUniform.ColorMultiplier;$/;"	v
ColorOffset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/DefaultShader.hx	/^	var ColorOffset = "uColorOffset";$/;"	v
ColorOffset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/DrawTrianglesShader.hx	/^	var ColorOffset = DefUniform.ColorOffset;	$/;"	v
ColorOffset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/FillShader.hx	/^	var ColorOffset = DefUniform.ColorOffset;$/;"	v
ColorOffset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/PatternFillShader.hx	/^	var ColorOffset = DefUniform.ColorOffset;$/;"	v
ColorOffset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/PrimitiveShader.hx	/^	var ColorOffset = DefUniform.ColorOffset;$/;"	v
ColorTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/ColorTransform.hx	/^class ColorTransform {$/;"	c
ColorTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/ColorTransform.hx	/^class ColorTransform {$/;"	c
ColorTransformTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/ColorTransformTest.hx	/^class ColorTransformTest {$/;"	c
CommandLineTools	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^class CommandLineTools {$/;"	c
Comment	/usr/lib/haxe/std/Xml.hx	/^	static var Comment(default,null) : XmlType;$/;"	v
CompatibilityHelper	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CompatibilityHelper.hx	/^class CompatibilityHelper {$/;"	c
CompileFragmentShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/AbstractShader.hx	/^	public static function CompileFragmentShader (gl:GLRenderContext, shaderSrc) {$/;"	f
CompileVertexShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/AbstractShader.hx	/^	public static function CompileVertexShader (gl:GLRenderContext, shaderSrc) {$/;"	f
Compiler	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^class Compiler {$/;"	c
ComplexPrimitiveShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/ComplexPrimitiveShader.hx	/^class ComplexPrimitiveShader extends AbstractShader {$/;"	c
ComplexTypeTools	/usr/lib/haxe/std/haxe/macro/ComplexTypeTools.hx	/^class ComplexTypeTools {$/;"	c
Compress	/usr/lib/haxe/std/haxe/zip/Compress.hx	/^class Compress {$/;"	c
CompressionAlgorithmTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/CompressionAlgorithmTest.hx	/^class CompressionAlgorithmTest {$/;"	c
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DirectRendererTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectContainerTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/FPSTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsBitmapFillTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsEndFillTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsGradientFillTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsPathTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsSolidFillTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsStrokeTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/InteractiveObjectTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/LoaderInfoTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/MovieClipTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/OpenGLViewTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/ShapeTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/SimpleButtonTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/SpriteTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/StageTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/TilesheetTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/ArgumentErrorTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/EOFErrorTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/ErrorTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/IllegalOperationErrorTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/RangeErrorTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/SecurityErrorTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/TypeErrorTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/AccelerometerEventTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/ErrorEventTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/IOErrorEventTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/JoystickEventTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/KeyboardEventTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/MouseEventTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/ProgressEventTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/SampleDataEventTest.hx	/^		\/\/ TODO:  Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/SampleDataEventTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/SecurityErrorEventTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/TextEventTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/TimerEventTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/TouchEventTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/external/ExternalInterfaceTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/BitmapFilterTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/BlurFilterTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/ColorMatrixFilterTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/DropShadowFilterTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/GlowFilterTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/ColorTransformTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/MatrixTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/PointTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/RectangleTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/TransformTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Vector3DTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/ID3InfoTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/SoundTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/SoundTransformTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/SharedObjectTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLLoaderTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLRequestHeaderTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLRequestTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLVariablesTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/sensors/AccelerometerTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/ApplicationDomainTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/CapabilitiesTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/LoaderContextTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/SecurityDomainTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/SystemTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/FontTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFieldTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFormatTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextLineMetricsTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/ui/MouseTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/ui/MultitouchTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/ArrayBufferTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/ArrayBufferViewTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/Float32ArrayTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/Int16ArrayTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/Int32ArrayTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/TimerTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Confirm functionality	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/UInt8ArrayTest.hx	/^		\/\/ TODO: Confirm functionality$/;"	i
Conform to API?	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		\/\/ TODO: Conform to API?$/;"	i
Connection	/usr/lib/haxe/std/haxe/remoting/Connection.hx	/^interface Connection implements Dynamic<Connection> {$/;"	i
Connection	/usr/lib/haxe/std/sys/db/Connection.hx	/^interface Connection {$/;"	i
ConsoleRenderContext	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ConsoleRenderContext.hx	/^class ConsoleRenderContext {$/;"	c
ContactListenerBreakable	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/ContactListenerBreakable.hx	/^class ContactListenerBreakable extends B2ContactListener$/;"	c
ContactListenerOneSidePlatform	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/ContactListenerOneSidePlatform.hx	/^class ContactListenerOneSidePlatform extends B2ContactListener$/;"	c
Context	/usr/lib/haxe/std/haxe/macro/Context.hx	/^class Context {$/;"	c
Context	/usr/lib/haxe/std/haxe/remoting/Context.hx	/^class Context {$/;"	c
Context3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Context3D.hx	/^class Context3D {$/;"	c
Context3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^class Context3D {$/;"	c
Context3DClearMask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DClearMask.hx	/^class Context3DClearMask {$/;"	c
ContextAll	/usr/lib/haxe/std/haxe/remoting/ContextAll.hx	/^class ContextAll extends Context {$/;"	c
ContextMenuEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/ContextMenuEvent.hx	/^class ContextMenuEvent extends Event {$/;"	c
CordovaHelper	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CordovaHelper.hx	/^class CordovaHelper {$/;"	c
Crate	Source/Crate.hx	/^class Crate extends Sprite {$/;"	c
Crc32	/usr/lib/haxe/std/haxe/crypto/Crc32.hx	/^class Crc32 {$/;"	c
CreateLeg	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^	private function CreateLeg(s:Float, wheelAnchor:B2Vec2):Void{$/;"	f
CreateTemplate	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^class CreateTemplate {$/;"	c
CubeTexture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/CubeTexture.hx	/^class CubeTexture extends TextureBase {$/;"	c
D	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var D:Float = (e1X * e2Y - e1Y * e2X);$/;"	v
D	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var D:Float = e1X * e2Y - e1Y * e2X;$/;"	v
D	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var D = 0x64;$/;"	v
D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var D:Int = 68;$/;"	v
D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var D = 68;$/;"	v
DARKEN	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoOperator.hx	/^	public var DARKEN = 17;$/;"	v
DATA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/DataEvent.hx	/^	public static var DATA:String = "data";$/;"	v
DAYS_OF_MONTH	/usr/lib/haxe/std/DateTools.hx	/^	static var DAYS_OF_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];$/;"	v
DEACTIVATE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public static var DEACTIVATE = "deactivate";$/;"	v
DEACTIVATE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public static var DEACTIVATE = "deactivate";$/;"	v
DEBUGDATA	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var DEBUGDATA = 10095;$/;"	v
DEBUGFUNCTION	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var DEBUGFUNCTION = 20094;$/;"	v
DECIMAL_SEPARATOR	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var DECIMAL_SEPARATOR = 0x400000B3;$/;"	v
DECR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var DECR = 0x1E03;$/;"	v
DECR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var DECR:Int;$/;"	v
DECR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var DECR = 0x1E03;$/;"	v
DECR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var DECR									= 0x1E03;$/;"	v
DECR	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var DECR                           = 0x1E03;$/;"	v
DECREMENT_SATURATE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DStencilAction.hx	/^	public static inline var DECREMENT_SATURATE = GL.DECR;$/;"	v
DECREMENT_WRAP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DStencilAction.hx	/^	public static inline var DECREMENT_WRAP = GL.DECR_WRAP;$/;"	v
DECR_WRAP	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var DECR_WRAP = 0x8508;$/;"	v
DECR_WRAP	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var DECR_WRAP:Int;$/;"	v
DECR_WRAP	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var DECR_WRAP = 0x8508;$/;"	v
DECR_WRAP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var DECR_WRAP							 = 0x8508;$/;"	v
DECR_WRAP	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var DECR_WRAP                      = 0x8508;$/;"	v
DEFAULT	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeMouse.hx	/^	var DEFAULT = 2;$/;"	v
DEFAULT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoAntialias.hx	/^	public var DEFAULT = 0;$/;"	v
DEFAULT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoHintMetrics.hx	/^	public var DEFAULT = 0;$/;"	v
DEFAULT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoHintStyle.hx	/^	public var DEFAULT = 0;$/;"	v
DEFAULT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoSubpixelOrder.hx	/^	public var DEFAULT = 0;$/;"	v
DEFAULT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	var DEFAULT = 0;$/;"	v
DEFAULT_ALL_DEVICES_SPECIFIER	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public var DEFAULT_ALL_DEVICES_SPECIFIER:Int = 0x1012;$/;"	v
DEFAULT_ALL_DEVICES_SPECIFIER	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static inline var DEFAULT_ALL_DEVICES_SPECIFIER:Int = 0x1012;$/;"	v
DEFAULT_BUFSIZE	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^	public static var DEFAULT_BUFSIZE = 128;$/;"	v
DEFAULT_CLASS_NAME	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	public static inline var DEFAULT_CLASS_NAME = "flash.text.Font";$/;"	v
DEFAULT_DEVICE_SPECIFIER	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public var DEFAULT_DEVICE_SPECIFIER:Int = 0x1004;$/;"	v
DEFAULT_DEVICE_SPECIFIER	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static inline var DEFAULT_DEVICE_SPECIFIER:Int = 0x1004;$/;"	v
DEFAULT_FONT_DATA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	public static var DEFAULT_FONT_DATA = "q:55oy6:ascentd950.5y4:dataad84d277.5d564d277.5d564d320.5d293d1024d187.5d1024d442.5d362.5d84d362.5d84d277.5hy6:_widthd651.5y4:xMaxd564y4:xMind84y4:yMaxd746.5y4:yMind0y7:_heightd662.5y7:leadingd168y7:descentd241.5y8:charCodei55y15:leftsideBearingd84y12:advanceWidthd651.5y8:commandsai1i2i2i2i2i2i2i2hg:111oR0d950.5R1ad313.5d528.5d239.5d528.5d196.5d586.25d153.5d644d153.5d744.5d153.5d845d196.25d902.75d239d960.5d313.5d960.5d387d960.5d430d902.5d473d844.5d473d744.5d473d645d430d586.75d387d528.5d313.5d528.5d313.5d450.5d433.5d450.5d502d528.5d570.5d606.5d570.5d744.5d570.5d882d502d960.25d433.5d1038.5d313.5d1038.5d193d1038.5d124.75d960.25d56.5d882d56.5d744.5d56.5d606.5d124.75d528.5d193d450.5d313.5d450.5hR2d626.5R3d570.5R4d56.5R5d573.5R6d-14.5R7d517R8d168R9d241.5R10i111R11d56.5R12d626.5R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3hg:54oR0d950.5R1ad338d610.5d270d610.5d230.25d657d190.5d703.5d190.5d784.5d190.5d865d230.25d911.75d270d958.5d338d958.5d406d958.5d445.75d911.75d485.5d865d485.5d784.5d485.5d703.5d445.75d657d406d610.5d338d610.5d538.5d294d538.5d386d500.5d368d461.75d358.5d423d349d385d349d285d349d232.25d416.5d179.5d484d172d620.5d201.5d577d246d553.75d290.5d530.5d344d530.5d456.5d530.5d521.75d598.75d587d667d587d784.5d587d899.5d519d969d451d1038.5d338d1038.5d208.5d1038.5d140d939.25d71.5d840d71.5d651.5d71.5d474.5d155.5d369.25d239.5d264d381d264d419d264d457.75d271.5d496.5d279d538.5d294hR2d651.5R3d587R4d71.5R5d760R6d-14.5R7d688.5R8d168R9d241.5R10i54R11d71.5R12d651.5R13ai1i3i3i3i3i3i3i3i3i1i2i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3hg:110oR0d950.5R1ad562d686d562d1024d470d1024d470d689d470d609.5d439d570d408d530.5d346d530.5d271.5d530.5d228.5d578d185.5d625.5d185.5d707.5d185.5d1024d93d1024d93d464d185.5d464d185.5d551d218.5d500.5d263.25d475.5d308d450.5d366.5d450.5d463d450.5d512.5d510.25d562d570d562d686hR2d649R3d562R4d93R5d573.5R6d0R7d480.5R8d168R9d241.5R10i110R11d93R12d649R13ai1i2i2i2i3i3i3i3i2i2i2i2i2i3i3i3i3hg:53oR0d950.5R1ad110.5d277.5d507d277.5d507d362.5d203d362.5d203d545.5d225d538d247d534.25d269d530.5d291d530.5d416d530.5d489d599d562d667.5d562d784.5d562d905d487d971.75d412d1038.5d275.5d1038.5d228.5d1038.5d179.75d1030.5d131d1022.5d79d1006.5d79d905d124d929.5d172d941.5d220d953.5d273.5d953.5d360d953.5d410.5d908d461d862.5d461d784.5d461d706.5d410.5d661d360d615.5d273.5d615.5d233d615.5d192.75d624.5d152.5d633.5d110.5d652.5d110.5d277.5hR2d651.5R3d562R4d79R5d746.5R6d-14.5R7d667.5R8d168R9d241.5R10i53R11d79R12d651.5R13ai1i2i2i2i2i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3i3i3i2hg:109oR0d950.5R1ad532.5d571.5d567d509.5d615d480d663d450.5d728d450.5d815.5d450.5d863d511.75d910.5d573d910.5d686d910.5d1024d818d1024d818d689d818d608.5d789.5d569.5d761d530.5d702.5d530.5d631d530.5d589.5d578d548d625.5d548d707.5d548d1024d455.5d1024d455.5d689d455.5d608d427d569.25d398.5d530.5d339d530.5d268.5d530.5d227d578.25d185.5d626d185.5d707.5d185.5d1024d93d1024d93d464d185.5d464d185.5d551d217d499.5d261d475d305d450.5d365.5d450.5d426.5d450.5d469.25d481.5d512d512.5d532.5d571.5hR2d997.5R3d910.5R4d93R5d573.5R6d0R7d480.5R8d168R9d241.5R10i109R11d93R12d997.5R13ai1i3i3i3i3i2i2i2i3i3i3i3i2i2i2i3i3i3i3i2i2i2i2i2i3i3i3i3hg:52oR0d950.5R1ad387d365.5d132d764d387d764d387d365.5d360.5d277.5d487.5d277.5d487.5d764d594d764d594d848d487.5d848d487.5d1024d387d1024d387d848d50d848d50d750.5d360.5d277.5hR2d651.5R3d594R4d50R5d746.5R6d0R7d696.5R8d168R9d241.5R10i52R11d50R12d651.5R13ai1i2i2i2i1i2i2i2i2i2i2i2i2i2i2i2hg:108oR0d950.5R1ad96.5d246d188.5d246d188.5d1024d96.5d1024d96.5d246hR2d284.5R3d188.5R4d96.5R5d778R6d0R7d681.5R8d168R9d241.5R10i108R11d96.5R12d284.5R13ai1i2i2i2i2hg:51oR0d950.5R1ad415.5d621.5d488d637d528.75d686d569.5d735d569.5d807d569.5d917.5d493.5d978d417.5d1038.5d277.5d1038.5d230.5d1038.5d180.75d1029.25d131d1020d78d1001.5d78d904d120d928.5d170d941d220d953.5d274.5d953.5d369.5d953.5d419.25d916d469d878.5d469d807d469d741d422.75d703.75d376.5d666.5d294d666.5d207d666.5d207d583.5d298d583.5d372.5d583.5d412d553.75d451.5d524d451.5d468d451.5d410.5d410.75d379.75d370d349d294d349d252.5d349d205d358d157.5d367d100.5d386d100.5d296d158d280d208.25d272d258.5d264d303d264d418d264d485d316.25d552d368.5d552d457.5d552d519.5d516.5d562.25d481d605d415.5d621.5hR2d651.5R3d569.5R4d78R5d760R6d-14.5R7d682R8d168R9d241.5R10i51R11d78R12d651.5R13ai1i3i3i3i3i3i3i2i3i3i3i3i3i3i2i2i2i3i3i3i3i3i3i2i3i3i3i3i3i3hg:107oR0d950.5R1ad93d246d185.5d246d185.5d705.5d460d464d577.5d464d280.5d726d590d1024d470d1024d185.5d750.5d185.5d1024d93d1024d93d246hR2d593R3d590R4d93R5d778R6d0R7d685R8d168R9d241.5R10i107R11d93R12d593R13ai1i2i2i2i2i2i2i2i2i2i2i2hg:50oR0d950.5R1ad196.5d939d549d939d549d1024d75d1024d75d939d132.5d879.5d231.75d779.25d331d679d356.5d650d405d595.5d424.25d557.75d443.5d520d443.5d483.5d443.5d424d401.75d386.5d360d349d293d349d245.5d349d192.75d365.5d140d382d80d415.5d80d313.5d141d289d194d276.5d247d264d291d264d407d264d476d322d545d380d545d477d545d523d527.75d564.25d510.5d605.5d465d661.5d452.5d676d385.5d745.25d318.5d814.5d196.5d939hR2d651.5R3d549R4d75R5d760R6d0R7d685R8d168R9d241.5R10i50R11d75R12d651.5R13ai1i2i2i2i2i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3i3i3hg:106oR0d950.5R1ad96.5d464d188.5d464d188.5d1034d188.5d1141d147.75d1189d107d1237d16.5d1237d-18.5d1237d-18.5d1159d6d1159d58.5d1159d77.5d1134.75d96.5d1110.5d96.5d1034d96.5d464d96.5d246d188.5d246d188.5d362.5d96.5d362.5d96.5d246hR2d284.5R3d188.5R4d-18.5R5d778R6d-213R7d796.5R8d168R9d241.5R10i106R11d-18.5R12d284.5R13ai1i2i2i3i3i2i2i2i3i3i2i1i2i2i2i2hg:49oR0d950.5R1ad127d939d292d939d292d369.5d112.5d405.5d112.5d313.5d291d277.5d392d277.5d392d939d557d939d557d1024d127d1024d127d939hR2d651.5R3d557R4d112.5R5d746.5R6d0R7d634R8d168R9d241.5R10i49R11d112.5R12d651.5R13ai1i2i2i2i2i2i2i2i2i2i2i2hg:105oR0d950.5R1ad96.5d464d188.5d464d188.5d1024d96.5d1024d96.5d464d96.5d246d188.5d246d188.5d362.5d96.5d362.5d96.5d246hR2d284.5R3d188.5R4d96.5R5d778R6d0R7d681.5R8d168R9d241.5R10i105R11d96.5R12d284.5R13ai1i2i2i2i2i1i2i2i2i2hg:48oR0d950.5R1ad325.5d344d247.5d344d208.25d420.75d169d497.5d169d651.5d169d805d208.25d881.75d247.5d958.5d325.5d958.5d404d958.5d443.25d881.75d482.5d805d482.5d651.5d482.5d497.5d443.25d420.75d404d344d325.5d344d325.5d264d451d264d517.25d363.25d583.5d462.5d583.5d651.5d583.5d840d517.25d939.25d451d1038.5d325.5d1038.5d200d1038.5d133.75d939.25d67.5d840d67.5d651.5d67.5d462.5d133.75d363.25d200d264d325.5d264hR2d651.5R3d583.5R4d67.5R5d760R6d-14.5R7d692.5R8d168R9d241.5R10i48R11d67.5R12d651.5R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3hg:104oR0d950.5R1ad562d686d562d1024d470d1024d470d689d470d609.5d439d570d408d530.5d346d530.5d271.5d530.5d228.5d578d185.5d625.5d185.5d707.5d185.5d1024d93d1024d93d246d185.5d246d185.5d551d218.5d500.5d263.25d475.5d308d450.5d366.5d450.5d463d450.5d512.5d510.25d562d570d562d686hR2d649R3d562R4d93R5d778R6d0R7d685R8d168R9d241.5R10i104R11d93R12d649R13ai1i2i2i2i3i3i3i3i2i2i2i2i2i3i3i3i3hg:47oR0d950.5R1ad260d277.5d345d277.5d85d1119d0d1119d260d277.5hR2d345R3d345R4d0R5d746.5R6d-95R7d746.5R8d168R9d241.5R10i47R11d0R12d345R13ai1i2i2i2i2hg:103oR0d950.5R1ad465d737.5d465d637.5d423.75d582.5d382.5d527.5d308d527.5d234d527.5d192.75d582.5d151.5d637.5d151.5d737.5d151.5d837d192.75d892d234d947d308d947d382.5d947d423.75d892d465d837d465d737.5d557d954.5d557d1097.5d493.5d1167.25d430d1237d299d1237d250.5d1237d207.5d1229.75d164.5d1222.5d124d1207.5d124d1118d164.5d1140d204d1150.5d243.5d1161d284.5d1161d375d1161d420d1113.75d465d1066.5d465d971d465d925.5d436.5d975d392d999.5d347.5d1024d285.5d1024d182.5d1024d119.5d945.5d56.5d867d56.5d737.5d56.5d607.5d119.5d529d182.5d450.5d285.5d450.5d347.5d450.5d392d475d436.5d499.5d465d549d465d464d557d464d557d954.5hR2d650R3d557R4d56.5R5d573.5R6d-213R7d517R8d168R9d241.5R10i103R11d56.5R12d650R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i2i3i3i3i3i2i3i3i3i3i3i3i3i3i2i2i2hg:46oR0d950.5R1ad109.5d897d215d897d215d1024d109.5d1024d109.5d897hR2d325.5R3d215R4d109.5R5d127R6d0R7d17.5R8d168R9d241.5R10i46R11d109.5R12d325.5R13ai1i2i2i2i2hg:102oR0d950.5R1ad380d246d380d322.5d292d322.5d242.5d322.5d223.25d342.5d204d362.5d204d414.5d204d464d355.5d464d355.5d535.5d204d535.5d204d1024d111.5d1024d111.5d535.5d23.5d535.5d23.5d464d111.5d464d111.5d425d111.5d331.5d155d288.75d198.5d246d293d246d380d246hR2d360.5R3d380R4d23.5R5d778R6d0R7d754.5R8d168R9d241.5R10i102R11d23.5R12d360.5R13ai1i2i2i3i3i2i2i2i2i2i2i2i2i2i2i2i3i3i2hg:45oR0d950.5R1ad50d702.5d319.5d702.5d319.5d784.5d50d784.5d50d702.5hR2d369.5R3d319.5R4d50R5d321.5R6d239.5R7d271.5R8d168R9d241.5R10i45R11d50R12d369.5R13ai1i2i2i2i2hg:101oR0d950.5R1ad575.5d721d575.5d766d152.5d766d158.5d861d209.75d910.75d261d960.5d352.5d960.5d405.5d960.5d455.25d947.5d505d934.5d554d908.5d554d995.5d504.5d1016.5d452.5d1027.5d400.5d1038.5d347d1038.5d213d1038.5d134.75d960.5d56.5d882.5d56.5d749.5d56.5d612d130.75d531.25d205d450.5d331d450.5d444d450.5d509.75d523.25d575.5d596d575.5d721d483.5d694d482.5d618.5d441.25d573.5d400d528.5d332d528.5d255d528.5d208.75d572d162.5d615.5d155.5d694.5d483.5d694hR2d630R3d575.5R4d56.5R5d573.5R6d-14.5R7d517R8d168R9d241.5R10i101R11d56.5R12d630R13ai1i2i2i3i3i3i3i2i3i3i3i3i3i3i3i3i1i3i3i3i3i2hg:44oR0d950.5R1ad120d897d225.5d897d225.5d983d143.5d1143d79d1143d120d983d120d897hR2d325.5R3d225.5R4d79R5d127R6d-119R7d48R8d168R9d241.5R10i44R11d79R12d325.5R13ai1i2i2i2i2i2i2hg:100oR0d950.5R1ad465d549d465d246d557d246d557d1024d465d1024d465d940d436d990d391.75d1014.25d347.5d1038.5d285.5d1038.5d184d1038.5d120.25d957.5d56.5d876.5d56.5d744.5d56.5d612.5d120.25d531.5d184d450.5d285.5d450.5d347.5d450.5d391.75d474.75d436d499d465d549d151.5d744.5d151.5d846d193.25d903.75d235d961.5d308d961.5d381d961.5d423d903.75d465d846d465d744.5d465d643d423d585.25d381d527.5d308d527.5d235d527.5d193.25d585.25d151.5d643d151.5d744.5hR2d650R3d557R4d56.5R5d778R6d-14.5R7d721.5R8d168R9d241.5R10i100R11d56.5R12d650R13ai1i2i2i2i2i2i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3hg:43oR0d950.5R1ad471d382d471d660.5d749.5d660.5d749.5d745.5d471d745.5d471d1024d387d1024d387d745.5d108.5d745.5d108.5d660.5d387d660.5d387d382d471d382hR2d858R3d749.5R4d108.5R5d642R6d0R7d533.5R8d168R9d241.5R10i43R11d108.5R12d858R13ai1i2i2i2i2i2i2i2i2i2i2i2i2hg:99oR0d950.5R1ad499.5d485.5d499.5d571.5d460.5d550d421.25d539.25d382d528.5d342d528.5d252.5d528.5d203d585.25d153.5d642d153.5d744.5d153.5d847d203d903.75d252.5d960.5d342d960.5d382d960.5d421.25d949.75d460.5d939d499.5d917.5d499.5d1002.5d461d1020.5d419.75d1029.5d378.5d1038.5d332d1038.5d205.5d1038.5d131d959d56.5d879.5d56.5d744.5d56.5d607.5d131.75d529d207d450.5d338d450.5d380.5d450.5d421d459.25d461.5d468d499.5d485.5hR2d563R3d499.5R4d56.5R5d573.5R6d-14.5R7d517R8d168R9d241.5R10i99R11d56.5R12d563R13ai1i2i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3i3i3hg:42oR0d950.5R1ad481.5d400.5d302d497.5d481.5d595d452.5d644d284.5d542.5d284.5d731d227.5d731d227.5d542.5d59.5d644d30.5d595d210d497.5d30.5d400.5d59.5d351d227.5d452.5d227.5d264d284.5d264d284.5d452.5d452.5d351d481.5d400.5hR2d512R3d481.5R4d30.5R5d760R6d293R7d729.5R8d168R9d241.5R10i42R11d30.5R12d512R13ai1i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2hg:98oR0d950.5R1ad498.5d744.5d498.5d643d456.75d585.25d415d527.5d342d527.5d269d527.5d227.25d585.25d185.5d643d185.5d744.5d185.5d846d227.25d903.75d269d961.5d342d961.5d415d961.5d456.75d903.75d498.5d846d498.5d744.5d185.5d549d214.5d499d258.75d474.75d303d450.5d364.5d450.5d466.5d450.5d530.25d531.5d594d612.5d594d744.5d594d876.5d530.25d957.5d466.5d1038.5d364.5d1038.5d303d1038.5d258.75d1014.25d214.5d990d185.5d940d185.5d1024d93d1024d93d246d185.5d246d185.5d549hR2d650R3d594R4d93R5d778R6d-14.5R7d685R8d168R9d241.5R10i98R11d93R12d650R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3i2i2i2i2i2hg:41oR0d950.5R1ad82d247d162d247d237d365d274.25d478d311.5d591d311.5d702.5d311.5d814.5d274.25d928d237d1041.5d162d1159d82d1159d148.5d1044.5d181.25d931.25d214d818d214d702.5d214d587d181.25d474.5d148.5d362d82d247hR2d399.5R3d311.5R4d82R5d777R6d-135R7d695R8d168R9d241.5R10i41R11d82R12d399.5R13ai1i2i3i3i3i3i2i3i3i3i3hg:97oR0d950.5R1ad351d742.5d239.5d742.5d196.5d768d153.5d793.5d153.5d855d153.5d904d185.75d932.75d218d961.5d273.5d961.5d350d961.5d396.25d907.25d442.5d853d442.5d763d442.5d742.5d351d742.5d534.5d704.5d534.5d1024d442.5d1024d442.5d939d411d990d364d1014.25d317d1038.5d249d1038.5d163d1038.5d112.25d990.25d61.5d942d61.5d861d61.5d766.5d124.75d718.5d188d670.5d313.5d670.5d442.5d670.5d442.5d661.5d442.5d598d400.75d563.25d359d528.5d283.5d528.5d235.5d528.5d190d540d144.5d551.5d102.5d574.5d102.5d489.5d153d470d200.5d460.25d248d450.5d293d450.5d414.5d450.5d474.5d513.5d534.5d576.5d534.5d704.5hR2d627.5R3d534.5R4d61.5R5d573.5R6d-14.5R7d512R8d168R9d241.5R10i97R11d61.5R12d627.5R13ai1i3i3i3i3i3i3i2i2i1i2i2i2i3i3i3i3i3i3i2i2i3i3i3i3i2i3i3i3i3hg:40oR0d950.5R1ad317.5d247d250.5d362d218d474.5d185.5d587d185.5d702.5d185.5d818d218.25d931.25d251d1044.5d317.5d1159d237.5d1159d162.5d1041.5d125.25d928d88d814.5d88d702.5d88d591d125d478d162d365d237.5d247d317.5d247hR2d399.5R3d317.5R4d88R5d777R6d-135R7d689R8d168R9d241.5R10i40R11d88R12d399.5R13ai1i3i3i3i3i2i3i3i3i3i2hg:96oR0d950.5R1ad183.5d205d324.5d392d248d392d85d205d183.5d205hR2d512R3d324.5R4d85R5d819R6d632R7d734R8d168R9d241.5R10i96R11d85R12d512R13ai1i2i2i2i2hg:39oR0d950.5R1ad183.5d277.5d183.5d555d98.5d555d98.5d277.5d183.5d277.5hR2d281.5R3d183.5R4d98.5R5d746.5R6d469R7d648R8d168R9d241.5R10i39R11d98.5R12d281.5R13ai1i2i2i2i2hg:95oR0d950.5R1ad522d1194d522d1265.5d-10d1265.5d-10d1194d522d1194hR2d512R3d522R4d-10R5d-170R6d-241.5R7d-160R8d168R9d241.5R10i95R11d-10R12d512R13ai1i2i2i2i2hg:38oR0d950.5R1ad249d622.5d203.5d663d182.25d703.25d161d743.5d161d787.5d161d860.5d214d909d267d957.5d347d957.5d394.5d957.5d436d941.75d477.5d926d514d894d249d622.5d319.5d566.5d573.5d826.5d603d782d619.5d731.25d636d680.5d639d623.5d732d623.5d726d689.5d700d754d674d818.5d627.5d881.5d767d1024d641d1024d569.5d950.5d517.5d995d460.5d1016.75d403.5d1038.5d338d1038.5d217.5d1038.5d141d969.75d64.5d901d64.5d793.5d64.5d729.5d98d673.25d131.5d617d198.5d567.5d174.5d536d162d504.75d149.5d473.5d149.5d443.5d149.5d362.5d205d313.25d260.5d264d352.5d264d394d264d435.25d273d476.5d282d519d300d519d391d475.5d367.5d436d355.25d396.5d343d362.5d343d310d343d277.25d370.75d244.5d398.5d244.5d442.5d244.5d468d259.25d493.75d274d519.5d319.5d566.5hR2d798.5R3d767R4d64.5R5d760R6d-14.5R7d695.5R8d168R9d241.5R10i38R11d64.5R12d798.5R13ai1i3i3i3i3i3i3i2i1i2i3i3i2i3i3i2i2i2i3i3i3i3i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3hg:94oR0d950.5R1ad478d277.5d749.5d556d649d556d429d358.5d209d556d108.5d556d380d277.5d478d277.5hR2d858R3d749.5R4d108.5R5d746.5R6d468R7d638R8d168R9d241.5R10i94R11d108.5R12d858R13ai1i2i2i2i2i2i2i2hg:37oR0d950.5R1ad744.5d695.5d701d695.5d676.25d732.5d651.5d769.5d651.5d835.5d651.5d900.5d676.25d937.75d701d975d744.5d975d787d975d811.75d937.75d836.5d900.5d836.5d835.5d836.5d770d811.75d732.75d787d695.5d744.5d695.5d744.5d632d823.5d632d870d687d916.5d742d916.5d835.5d916.5d929d869.75d983.75d823d1038.5d744.5d1038.5d664.5d1038.5d618d983.75d571.5d929d571.5d835.5d571.5d741.5d618.25d686.75d665d632d744.5d632d228.5d327.5d185.5d327.5d160.75d364.75d136d402d136d467d136d533d160.5d570d185d607d228.5d607d272d607d296.75d570d321.5d533d321.5d467d321.5d402.5d296.5d365d271.5d327.5d228.5d327.5d680d264d760d264d293d1038.5d213d1038.5d680d264d228.5d264d307.5d264d354.5d318.75d401.5d373.5d401.5d467d401.5d561.5d354.75d616d308d670.5d228.5d670.5d149d670.5d102.75d615.75d56.5d561d56.5d467d56.5d374d103d319d149.5d264d228.5d264hR2d973R3d916.5R4d56.5R5d760R6d-14.5R7d703.5R8d168R9d241.5R10i37R11d56.5R12d973R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3i1i2i2i2i2i1i3i3i3i3i3i3i3i3hg:93oR0d950.5R1ad311.5d246d311.5d1159d99.5d1159d99.5d1087.5d219d1087.5d219d317.5d99.5d317.5d99.5d246d311.5d246hR2d399.5R3d311.5R4d99.5R5d778R6d-135R7d678.5R8d168R9d241.5R10i93R11d99.5R12d399.5R13ai1i2i2i2i2i2i2i2i2hg:36oR0d950.5R1ad346d1174.5d296d1174.5d295.5d1024d243d1023d190.5d1011.75d138d1000.5d85d978d85d888d136d920d188.25d936.25d240.5d952.5d296d953d296d725d185.5d707d135.25d664d85d621d85d546d85d464.5d139.5d417.5d194d370.5d296d363.5d296d246d346d246d346d362d392.5d364d436d371.75d479.5d379.5d521d393d521d480.5d479.5d459.5d435.75d448d392d436.5d346d434.5d346d648d459.5d665.5d513d710.5d566.5d755.5d566.5d833.5d566.5d918d509.75d966.75d453d1015.5d346d1023d346d1174.5d296d639d296d434d238d440.5d207.5d467d177d493.5d177d537.5d177d580.5d205.25d604.5d233.5d628.5d296d639d346d735d346d951.5d409.5d943d441.75d915.5d474d888d474d843d474d799d443.25d773d412.5d747d346d735hR2d651.5R3d566.5R4d85R5d778R6d-150.5R7d693R8d168R9d241.5R10i36R11d85R12d651.5R13ai1i2i2i3i3i2i3i3i2i3i3i3i3i2i2i2i3i3i2i3i3i2i3i3i3i3i2i1i2i3i3i3i3i1i2i3i3i3i3hg:92oR0d950.5R1ad85d277.5d345d1119d260d1119d0d277.5d85d277.5hR2d345R3d345R4d0R5d746.5R6d-95R7d746.5R8d168R9d241.5R10i92R11d0R12d345R13ai1i2i2i2i2hg:35oR0d950.5R1ad523.5d573.5d378d573.5d336d740.5d482.5d740.5d523.5d573.5d448.5d289d396.5d496.5d542.5d496.5d595d289d675d289d623.5d496.5d779.5d496.5d779.5d573.5d604d573.5d563d740.5d722d740.5d722d817d543.5d817d491.5d1024d411.5d1024d463d817d316.5d817d265d1024d184.5d1024d236.5d817d79d817d79d740.5d255d740.5d297d573.5d136d573.5d136d496.5d316.5d496.5d367.5d289d448.5d289hR2d858R3d779.5R4d79R5d735R6d0R7d656R8d168R9d241.5R10i35R11d79R12d858R13ai1i2i2i2i2i1i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2hg:91oR0d950.5R1ad88d246d300d246d300d317.5d180d317.5d180d1087.5d300d1087.5d300d1159d88d1159d88d246hR2d399.5R3d300R4d88R5d778R6d-135R7d690R8d168R9d241.5R10i91R11d88R12d399.5R13ai1i2i2i2i2i2i2i2i2hg:34oR0d950.5R1ad183.5d277.5d183.5d555d98.5d555d98.5d277.5d183.5d277.5d372.5d277.5d372.5d555d287.5d555d287.5d277.5d372.5d277.5hR2d471R3d372.5R4d98.5R5d746.5R6d469R7d648R8d168R9d241.5R10i34R11d98.5R12d471R13ai1i2i2i2i2i1i2i2i2i2hg:90oR0d950.5R1ad57.5d277.5d644d277.5d644d354.5d172d939d655.5d939d655.5d1024d46d1024d46d947d518d362.5d57.5d362.5d57.5d277.5hR2d701.5R3d655.5R4d46R5d746.5R6d0R7d700.5R8d168R9d241.5R10i90R11d46R12d701.5R13ai1i2i2i2i2i2i2i2i2i2i2hg:33oR0d950.5R1ad154.5d897d256d897d256d1024d154.5d1024d154.5d897d154.5d277.5d256d277.5d256d605d246d783.5d165d783.5d154.5d605d154.5d277.5hR2d410.5R3d256R4d154.5R5d746.5R6d0R7d592R8d168R9d241.5R10i33R11d154.5R12d410.5R13ai1i2i2i2i2i1i2i2i2i2i2i2hg:89oR0d950.5R1ad-2d277.5d106.5d277.5d313.5d584.5d519d277.5d627.5d277.5d363.5d668.5d363.5d1024d262d1024d262d668.5d-2d277.5hR2d625.5R3d627.5R4d-2R5d746.5R6d0R7d748.5R8d168R9d241.5R10i89R11d-2R12d625.5R13ai1i2i2i2i2i2i2i2i2i2hg:32oR0d950.5R1ahR2d325.5R3d0R4d0R5d0R6d0R7d0R8d168R9d241.5R10i32R11d0R12d325.5R13ahg:88oR0d950.5R1ad64.5d277.5d173d277.5d358.5d555d545d277.5d653.5d277.5d413.5d636d669.5d1024d561d1024d351d706.5d139.5d1024d30.5d1024d297d625.5d64.5d277.5hR2d701.5R3d669.5R4d30.5R5d746.5R6d0R7d716R8d168R9d241.5R10i88R11d30.5R12d701.5R13ai1i2i2i2i2i2i2i2i2i2i2i2i2hg:87oR0d950.5R1ad34d277.5d136d277.5d293d908.5d449.5d277.5d563d277.5d720d908.5d876.5d277.5d979d277.5d791.5d1024d664.5d1024d507d376d348d1024d221d1024d34d277.5hR2d1012.5R3d979R4d34R5d746.5R6d0R7d712.5R8d168R9d241.5R10i87R11d34R12d1012.5R13ai1i2i2i2i2i2i2i2i2i2i2i2i2i2hg:86oR0d950.5R1ad293d1024d8d277.5d113.5d277.5d350d906d587d277.5d692d277.5d407.5d1024d293d1024hR2d700.5R3d692R4d8R5d746.5R6d0R7d738.5R8d168R9d241.5R10i86R11d8R12d700.5R13ai1i2i2i2i2i2i2i2hg:85oR0d950.5R1ad89d277.5d190.5d277.5d190.5d731d190.5d851d234d903.75d277.5d956.5d375d956.5d472d956.5d515.5d903.75d559d851d559d731d559d277.5d660.5d277.5d660.5d743.5d660.5d889.5d588.25d964d516d1038.5d375d1038.5d233.5d1038.5d161.25d964d89d889.5d89d743.5d89d277.5hR2d749.5R3d660.5R4d89R5d746.5R6d-14.5R7d657.5R8d168R9d241.5R10i85R11d89R12d749.5R13ai1i2i2i3i3i3i3i2i2i2i3i3i3i3i2hg:84oR0d950.5R1ad-3d277.5d628.5d277.5d628.5d362.5d363.5d362.5d363.5d1024d262d1024d262d362.5d-3d362.5d-3d277.5hR2d625.5R3d628.5R4d-3R5d746.5R6d0R7d749.5R8d168R9d241.5R10i84R11d-3R12d625.5R13ai1i2i2i2i2i2i2i2i2hg:83oR0d950.5R1ad548d302d548d400.5d490.5d373d439.5d359.5d388.5d346d341d346d258.5d346d213.75d378d169d410d169d469d169d518.5d198.75d543.75d228.5d569d311.5d584.5d372.5d597d485.5d618.5d539.25d672.75d593d727d593d818d593d926.5d520.25d982.5d447.5d1038.5d307d1038.5d254d1038.5d194.25d1026.5d134.5d1014.5d70.5d991d70.5d887d132d921.5d191d939d250d956.5d307d956.5d393.5d956.5d440.5d922.5d487.5d888.5d487.5d825.5d487.5d770.5d453.75d739.5d420d708.5d343d693d281.5d681d168.5d658.5d118d610.5d67.5d562.5d67.5d477d67.5d378d137.25d321d207d264d329.5d264d382d264d436.5d273.5d491d283d548d302hR2d650R3d593R4d67.5R5d760R6d-14.5R7d692.5R8d168R9d241.5R10i83R11d67.5R12d650R13ai1i2i3i3i3i3i3i3i2i3i3i3i3i3i3i2i3i3i3i3i3i3i2i3i3i3i3i3i3hg:82oR0d950.5R1ad454.5d674d487d685d517.75d721d548.5d757d579.5d820d682d1024d573.5d1024d478d832.5d441d757.5d406.25d733d371.5d708.5d311.5d708.5d201.5d708.5d201.5d1024d100.5d1024d100.5d277.5d328.5d277.5d456.5d277.5d519.5d331d582.5d384.5d582.5d492.5d582.5d563d549.75d609.5d517d656d454.5d674d201.5d360.5d201.5d625.5d328.5d625.5d401.5d625.5d438.75d591.75d476d558d476d492.5d476d427d438.75d393.75d401.5d360.5d328.5d360.5d201.5d360.5hR2d711.5R3d682R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i82R11d100.5R12d711.5R13ai1i3i3i2i2i2i3i3i2i2i2i2i2i3i3i3i3i1i2i2i3i3i3i3i2hg:81oR0d950.5R1ad403.5d346d293.5d346d228.75d428d164d510d164d651.5d164d792.5d228.75d874.5d293.5d956.5d403.5d956.5d513.5d956.5d577.75d874.5d642d792.5d642d651.5d642d510d577.75d428d513.5d346d403.5d346d545d1010.5d678d1156d556d1156d445.5d1036.5d429d1037.5d420.25d1038d411.5d1038.5d403.5d1038.5d246d1038.5d151.75d933.25d57.5d828d57.5d651.5d57.5d474.5d151.75d369.25d246d264d403.5d264d560.5d264d654.5d369.25d748.5d474.5d748.5d651.5d748.5d781.5d696.25d874d644d966.5d545d1010.5hR2d806R3d748.5R4d57.5R5d760R6d-132R7d702.5R8d168R9d241.5R10i81R11d57.5R12d806R13ai1i3i3i3i3i3i3i3i3i1i2i2i2i3i3i3i3i3i3i3i3i3i3hg:80oR0d950.5R1ad201.5d360.5d201.5d641d328.5d641d399d641d437.5d604.5d476d568d476d500.5d476d433.5d437.5d397d399d360.5d328.5d360.5d201.5d360.5d100.5d277.5d328.5d277.5d454d277.5d518.25d334.25d582.5d391d582.5d500.5d582.5d611d518.25d667.5d454d724d328.5d724d201.5d724d201.5d1024d100.5d1024d100.5d277.5hR2d617.5R3d582.5R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i80R11d100.5R12d617.5R13ai1i2i2i3i3i3i3i2i1i2i3i3i3i3i2i2i2i2hg:79oR0d950.5R1ad403.5d346d293.5d346d228.75d428d164d510d164d651.5d164d792.5d228.75d874.5d293.5d956.5d403.5d956.5d513.5d956.5d577.75d874.5d642d792.5d642d651.5d642d510d577.75d428d513.5d346d403.5d346d403.5d264d560.5d264d654.5d369.25d748.5d474.5d748.5d651.5d748.5d828d654.5d933.25d560.5d1038.5d403.5d1038.5d246d1038.5d151.75d933.5d57.5d828.5d57.5d651.5d57.5d474.5d151.75d369.25d246d264d403.5d264hR2d806R3d748.5R4d57.5R5d760R6d-14.5R7d702.5R8d168R9d241.5R10i79R11d57.5R12d806R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3hg:78oR0d950.5R1ad100.5d277.5d236.5d277.5d567.5d902d567.5d277.5d665.5d277.5d665.5d1024d529.5d1024d198.5d399.5d198.5d1024d100.5d1024d100.5d277.5hR2d766R3d665.5R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i78R11d100.5R12d766R13ai1i2i2i2i2i2i2i2i2i2i2hg:77oR0d950.5R1ad100.5d277.5d251d277.5d441.5d785.5d633d277.5d783.5d277.5d783.5d1024d685d1024d685d368.5d492.5d880.5d391d880.5d198.5d368.5d198.5d1024d100.5d1024d100.5d277.5hR2d883.5R3d783.5R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i77R11d100.5R12d883.5R13ai1i2i2i2i2i2i2i2i2i2i2i2i2i2hg:76oR0d950.5R1ad100.5d277.5d201.5d277.5d201.5d939d565d939d565d1024d100.5d1024d100.5d277.5hR2d570.5R3d565R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i76R11d100.5R12d570.5R13ai1i2i2i2i2i2i2hg:75oR0d950.5R1ad100.5d277.5d201.5d277.5d201.5d593d536.5d277.5d666.5d277.5d296d625.5d693d1024d560d1024d201.5d664.5d201.5d1024d100.5d1024d100.5d277.5hR2d671.5R3d693R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i75R11d100.5R12d671.5R13ai1i2i2i2i2i2i2i2i2i2i2i2hg:74oR0d950.5R1ad100.5d277.5d201.5d277.5d201.5d972d201.5d1107d150.25d1168d99d1229d-14.5d1229d-53d1229d-53d1144d-21.5d1144d45.5d1144d73d1106.5d100.5d1069d100.5d972d100.5d277.5hR2d302R3d201.5R4d-53R5d746.5R6d-205R7d799.5R8d168R9d241.5R10i74R11d-53R12d302R13ai1i2i2i3i3i2i2i2i3i3i2hg:73oR0d950.5R1ad100.5d277.5d201.5d277.5d201.5d1024d100.5d1024d100.5d277.5hR2d302R3d201.5R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i73R11d100.5R12d302R13ai1i2i2i2i2hg:72oR0d950.5R1ad100.5d277.5d201.5d277.5d201.5d583.5d568.5d583.5d568.5d277.5d669.5d277.5d669.5d1024d568.5d1024d568.5d668.5d201.5d668.5d201.5d1024d100.5d1024d100.5d277.5hR2d770R3d669.5R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i72R11d100.5R12d770R13ai1i2i2i2i2i2i2i2i2i2i2i2i2hg:71oR0d950.5R1ad609.5d917.5d609.5d717d444.5d717d444.5d634d709.5d634d709.5d954.5d651d996d580.5d1017.25d510d1038.5d430d1038.5d255d1038.5d156.25d936.25d57.5d834d57.5d651.5d57.5d468.5d156.25d366.25d255d264d430d264d503d264d568.75d282d634.5d300d690d335d690d442.5d634d395d571d371d508d347d438.5d347d301.5d347d232.75d423.5d164d500d164d651.5d164d802.5d232.75d879d301.5d955.5d438.5d955.5d492d955.5d534d946.25d576d937d609.5d917.5hR2d793.5R3d709.5R4d57.5R5d760R6d-14.5R7d702.5R8d168R9d241.5R10i71R11d57.5R12d793.5R13ai1i2i2i2i2i2i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3i3i3hg:70oR0d950.5R1ad100.5d277.5d529.5d277.5d529.5d362.5d201.5d362.5d201.5d582.5d497.5d582.5d497.5d667.5d201.5d667.5d201.5d1024d100.5d1024d100.5d277.5hR2d589R3d529.5R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i70R11d100.5R12d589R13ai1i2i2i2i2i2i2i2i2i2i2hg:126oR0d950.5R1ad749.5d615.5d749.5d704.5d697d744d652.25d761d607.5d778d559d778d504d778d431d748.5d425.5d746.5d423d745.5d419.5d744d412d741.5d334.5d710.5d287.5d710.5d243.5d710.5d200.5d729.75d157.5d749d108.5d790.5d108.5d701.5d161d662d205.75d644.75d250.5d627.5d299d627.5d354d627.5d427.5d657.5d432.5d659.5d435d660.5d439d662d446d664.5d523.5d695.5d570.5d695.5d613.5d695.5d655.75d676.5d698d657.5d749.5d615.5hR2d858R3d749.5R4d108.5R5d408.5R6d233.5R7d300R8d168R9d241.5R10i126R11d108.5R12d858R13ai1i2i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3i3i3hg:69oR0d950.5R1ad100.5d277.5d572.5d277.5d572.5d362.5d201.5d362.5d201.5d583.5d557d583.5d557d668.5d201.5d668.5d201.5d939d581.5d939d581.5d1024d100.5d1024d100.5d277.5hR2d647R3d581.5R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i69R11d100.5R12d647R13ai1i2i2i2i2i2i2i2i2i2i2i2i2hg:125oR0d950.5R1ad128d1119d163d1119d233d1119d254.25d1097.5d275.5d1076d275.5d1004.5d275.5d880.5d275.5d802.5d298d767d320.5d731.5d376d718d320.5d705.5d298d670d275.5d634.5d275.5d556d275.5d432d275.5d361d254.25d339.25d233d317.5d163d317.5d128d317.5d128d246d159.5d246d284d246d325.75d282.75d367.5d319.5d367.5d430d367.5d550d367.5d624.5d394.5d653.25d421.5d682d492.5d682d523.5d682d523.5d753.5d492.5d753.5d421.5d753.5d394.5d782.5d367.5d811.5d367.5d887d367.5d1006.5d367.5d1117d325.75d1154d284d1191d159.5d1191d128d1191d128d1119hR2d651.5R3d523.5R4d128R5d778R6d-167R7d650R8d168R9d241.5R10i125R11d128R12d651.5R13ai1i2i3i3i2i3i3i3i3i2i3i3i2i2i2i3i3i2i3i3i2i2i2i3i3i2i3i3i2i2hg:68oR0d950.5R1ad201.5d360.5d201.5d941d323.5d941d478d941d549.75d871d621.5d801d621.5d650d621.5d500d549.75d430.25d478d360.5d323.5d360.5d201.5d360.5d100.5d277.5d308d277.5d525d277.5d626.5d367.75d728d458d728d650d728d843d626d933.5d524d1024d308d1024d100.5d1024d100.5d277.5hR2d788.5R3d728R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i68R11d100.5R12d788.5R13ai1i2i2i3i3i3i3i2i1i2i3i3i3i3i2i2hg:124oR0d950.5R1ad215d241.5d215d1265.5d130d1265.5d130d241.5d215d241.5hR2d345R3d215R4d130R5d782.5R6d-241.5R7d652.5R8d168R9d241.5R10i124R11d130R12d345R13ai1i2i2i2i2hg:67oR0d950.5R1ad659.5d335d659.5d441.5d608.5d394d550.75d370.5d493d347d428d347d300d347d232d425.25d164d503.5d164d651.5d164d799d232d877.25d300d955.5d428d955.5d493d955.5d550.75d932d608.5d908.5d659.5d861d659.5d966.5d606.5d1002.5d547.25d1020.5d488d1038.5d422d1038.5d252.5d1038.5d155d934.75d57.5d831d57.5d651.5d57.5d471.5d155d367.75d252.5d264d422d264d489d264d548.25d281.75d607.5d299.5d659.5d335hR2d715R3d659.5R4d57.5R5d760R6d-14.5R7d702.5R8d168R9d241.5R10i67R11d57.5R12d715R13ai1i2i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3i3i3hg:123oR0d950.5R1ad523.5d1119d523.5d1191d492.5d1191d368d1191d325.75d1154d283.5d1117d283.5d1006.5d283.5d887d283.5d811.5d256.5d782.5d229.5d753.5d158.5d753.5d128d753.5d128d682d158.5d682d230d682d256.75d653.25d283.5d624.5d283.5d550d283.5d430d283.5d319.5d325.75d282.75d368d246d492.5d246d523.5d246d523.5d317.5d489.5d317.5d419d317.5d397.5d339.5d376d361.5d376d432d376d556d376d634.5d353.25d670d330.5d705.5d275.5d718d331d731.5d353.5d767d376d802.5d376d880.5d376d1004.5d376d1075d397.5d1097d419d1119d489.5d1119d523.5d1119hR2d651.5R3d523.5R4d128R5d778R6d-167R7d650R8d168R9d241.5R10i123R11d128R12d651.5R13ai1i2i2i3i3i2i3i3i2i2i2i3i3i2i3i3i2i2i2i3i3i2i3i3i3i3i2i3i3i2hg:66oR0d950.5R1ad201.5d667.5d201.5d941d363.5d941d445d941d484.25d907.25d523.5d873.5d523.5d804d523.5d734d484.25d700.75d445d667.5d363.5d667.5d201.5d667.5d201.5d360.5d201.5d585.5d351d585.5d425d585.5d461.25d557.75d497.5d530d497.5d473d497.5d416.5d461.25d388.5d425d360.5d351d360.5d201.5d360.5d100.5d277.5d358.5d277.5d474d277.5d536.5d325.5d599d373.5d599d462d599d530.5d567d571d535d611.5d473d621.5d547.5d637.5d588.75d688.25d630d739d630d815d630d915d562d969.5d494d1024d368.5d1024d100.5d1024d100.5d277.5hR2d702.5R3d630R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i66R11d100.5R12d702.5R13ai1i2i2i3i3i3i3i2i1i2i2i3i3i3i3i2i1i2i3i3i3i3i3i3i3i3i2i2hg:122oR0d950.5R1ad56.5d464d493.5d464d493.5d548d147.5d950.5d493.5d950.5d493.5d1024d44d1024d44d940d390d537.5d56.5d537.5d56.5d464hR2d537.5R3d493.5R4d44R5d560R6d0R7d516R8d168R9d241.5R10i122R11d44R12d537.5R13ai1i2i2i2i2i2i2i2i2i2i2hg:65oR0d950.5R1ad350d377d213d748.5d487.5d748.5d350d377d293d277.5d407.5d277.5d692d1024d587d1024d519d832.5d182.5d832.5d114.5d1024d8d1024d293d277.5hR2d700.5R3d692R4d8R5d746.5R6d0R7d738.5R8d168R9d241.5R10i65R11d8R12d700.5R13ai1i2i2i2i1i2i2i2i2i2i2i2i2hg:121oR0d950.5R1ad329.5d1076d290.5d1176d253.5d1206.5d216.5d1237d154.5d1237d81d1237d81d1160d135d1160d173d1160d194d1142d215d1124d240.5d1057d257d1015d30.5d464d128d464d303d902d478d464d575.5d464d329.5d1076hR2d606R3d575.5R4d30.5R5d560R6d-213R7d529.5R8d168R9d241.5R10i121R11d30.5R12d606R13ai1i3i3i2i2i2i3i3i2i2i2i2i2i2i2hg:64oR0d950.5R1ad381d755.5d381d827d416.5d867.75d452d908.5d514d908.5d575.5d908.5d610.75d867.5d646d826.5d646d755.5d646d685.5d610d644.25d574d603d513d603d452.5d603d416.75d644d381d685d381d755.5d653.5d905d623.5d943.5d584.75d961.75d546d980d494.5d980d408.5d980d354.75d917.75d301d855.5d301d755.5d301d655.5d355d593d409d530.5d494.5d530.5d546d530.5d585d549.25d624d568d653.5d606d653.5d540.5d725d540.5d725d908.5d798d897.5d839.25d841.75d880.5d786d880.5d697.5d880.5d644d864.75d597d849d550d817d510d765d444.5d690.25d409.75d615.5d375d527.5d375d466d375d409.5d391.25d353d407.5d305d439.5d226.5d490.5d182.25d573.25d138d656d138d752.5d138d832d166.75d901.5d195.5d971d250d1024d302.5d1076d371.5d1103.25d440.5d1130.5d519d1130.5d583.5d1130.5d645.75d1108.75d708d1087d760d1046.5d805d1102d742.5d1150.5d668.75d1176.25d595d1202d519d1202d426.5d1202d344.5d1169.25d262.5d1136.5d198.5d1074d134.5d1011.5d101d929.25d67.5d847d67.5d752.5d67.5d661.5d101.5d579d135.5d496.5d198.5d434d263d370.5d347.5d336.75d432d303d526.5d303d632.5d303d723.25d346.5d814d390d875.5d470d913d519d932.75d576.5d952.5d634d952.5d695.5d952.5d827d873d903d793.5d979d653.5d982d653.5d905hR2d1024R3d952.5R4d67.5R5d721R6d-178R7d653.5R8d168R9d241.5R10i64R11d67.5R12d1024R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3i2i2i2i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i2hg:120oR0d950.5R1ad562d464d359.5d736.5d572.5d1024d464d1024d301d804d138d1024d29.5d1024d247d731d48d464d156.5d464d305d663.5d453.5d464d562d464hR2d606R3d572.5R4d29.5R5d560R6d0R7d530.5R8d168R9d241.5R10i120R11d29.5R12d606R13ai1i2i2i2i2i2i2i2i2i2i2i2i2hg:63oR0d950.5R1ad195.5d897d297d897d297d1024d195.5d1024d195.5d897d294d823.5d198.5d823.5d198.5d746.5d198.5d696d212.5d663.5d226.5d631d271.5d588d316.5d543.5d345d517d357.75d493.5d370.5d470d370.5d445.5d370.5d401d337.75d373.5d305d346d251d346d211.5d346d166.75d363.5d122d381d73.5d414.5d73.5d320.5d120.5d292d168.75d278d217d264d268.5d264d360.5d264d416.25d312.5d472d361d472d440.5d472d478.5d454d512.75d436d547d391d590d347d633d323.5d656.5d313.75d669.75d304d683d300d695.5d297d706d295.5d721d294d736d294d762d294d823.5hR2d543.5R3d472R4d73.5R5d760R6d0R7d686.5R8d168R9d241.5R10i63R11d73.5R12d543.5R13ai1i2i2i2i2i1i2i2i3i3i2i3i3i3i3i3i3i2i3i3i3i3i3i3i2i3i3i3i3i2hg:119oR0d950.5R1ad43d464d135d464d250d901d364.5d464d473d464d588d901d702.5d464d794.5d464d648d1024d539.5d1024d419d565d298d1024d189.5d1024d43d464hR2d837.5R3d794.5R4d43R5d560R6d0R7d517R8d168R9d241.5R10i119R11d43R12d837.5R13ai1i2i2i2i2i2i2i2i2i2i2i2i2i2hg:62oR0d950.5R1ad108.5d520d108.5d429d749.5d661.5d749.5d744.5d108.5d977d108.5d886d623.5d703.5d108.5d520hR2d858R3d749.5R4d108.5R5d595R6d47R7d486.5R8d168R9d241.5R10i62R11d108.5R12d858R13ai1i2i2i2i2i2i2i2hg:118oR0d950.5R1ad30.5d464d128d464d303d934d478d464d575.5d464d365.5d1024d240.5d1024d30.5d464hR2d606R3d575.5R4d30.5R5d560R6d0R7d529.5R8d168R9d241.5R10i118R11d30.5R12d606R13ai1i2i2i2i2i2i2i2hg:61oR0d950.5R1ad108.5d559d749.5d559d749.5d643d108.5d643d108.5d559d108.5d763d749.5d763d749.5d848d108.5d848d108.5d763hR2d858R3d749.5R4d108.5R5d465R6d176R7d356.5R8d168R9d241.5R10i61R11d108.5R12d858R13ai1i2i2i2i2i1i2i2i2i2hg:117oR0d950.5R1ad87d803d87d464d179d464d179d799.5d179d879d210d918.75d241d958.5d303d958.5d377.5d958.5d420.75d911d464d863.5d464d781.5d464d464d556d464d556d1024d464d1024d464d938d430.5d989d386.25d1013.75d342d1038.5d283.5d1038.5d187d1038.5d137d978.5d87d918.5d87d803hR2d649R3d556R4d87R5d560R6d-14.5R7d473R8d168R9d241.5R10i117R11d87R12d649R13ai1i2i2i2i3i3i3i3i2i2i2i2i2i3i3i3i3hg:60oR0d950.5R1ad749.5d520d233.5d703.5d749.5d886d749.5d977d108.5d744.5d108.5d661.5d749.5d429d749.5d520hR2d858R3d749.5R4d108.5R5d595R6d47R7d486.5R8d168R9d241.5R10i60R11d108.5R12d858R13ai1i2i2i2i2i2i2i2hg:116oR0d950.5R1ad187.5d305d187.5d464d377d464d377d535.5d187.5d535.5d187.5d839.5d187.5d908d206.25d927.5d225d947d282.5d947d377d947d377d1024d282.5d1024d176d1024d135.5d984.25d95d944.5d95d839.5d95d535.5d27.5d535.5d27.5d464d95d464d95d305d187.5d305hR2d401.5R3d377R4d27.5R5d719R6d0R7d691.5R8d168R9d241.5R10i116R11d27.5R12d401.5R13ai1i2i2i2i2i2i3i3i2i2i2i3i3i2i2i2i2i2i2hg:59oR0d950.5R1ad120d494.5d225.5d494.5d225.5d621.5d120d621.5d120d494.5d120d897d225.5d897d225.5d983d143.5d1143d79d1143d120d983d120d897hR2d345R3d225.5R4d79R5d529.5R6d-119R7d450.5R8d168R9d241.5R10i59R11d79R12d345R13ai1i2i2i2i2i1i2i2i2i2i2i2hg:115oR0d950.5R1ad453.5d480.5d453.5d567.5d414.5d547.5d372.5d537.5d330.5d527.5d285.5d527.5d217d527.5d182.75d548.5d148.5d569.5d148.5d611.5d148.5d643.5d173d661.75d197.5d680d271.5d696.5d303d703.5d401d724.5d442.25d762.75d483.5d801d483.5d869.5d483.5d947.5d421.75d993d360d1038.5d252d1038.5d207d1038.5d158.25d1029.75d109.5d1021d55.5d1003.5d55.5d908.5d106.5d935d156d948.25d205.5d961.5d254d961.5d319d961.5d354d939.25d389d917d389d876.5d389d839d363.75d819d338.5d799d253d780.5d221d773d135.5d755d97.5d717.75d59.5d680.5d59.5d615.5d59.5d536.5d115.5d493.5d171.5d450.5d274.5d450.5d325.5d450.5d370.5d458d415.5d465.5d453.5d480.5hR2d533.5R3d483.5R4d55.5R5d573.5R6d-14.5R7d518R8d168R9d241.5R10i115R11d55.5R12d533.5R13ai1i2i3i3i3i3i3i3i2i3i3i3i3i3i3i2i3i3i3i3i3i3i2i3i3i3i3i3i3hg:58oR0d950.5R1ad120d897d225.5d897d225.5d1024d120d1024d120d897d120d494.5d225.5d494.5d225.5d621.5d120d621.5d120d494.5hR2d345R3d225.5R4d120R5d529.5R6d0R7d409.5R8d168R9d241.5R10i58R11d120R12d345R13ai1i2i2i2i2i1i2i2i2i2hg:114oR0d950.5R1ad421d550d405.5d541d387.25d536.75d369d532.5d347d532.5d269d532.5d227.25d583.25d185.5d634d185.5d729d185.5d1024d93d1024d93d464d185.5d464d185.5d551d214.5d500d261d475.25d307.5d450.5d374d450.5d383.5d450.5d395d451.75d406.5d453d420.5d455.5d421d550hR2d421R3d421R4d93R5d573.5R6d0R7d480.5R8d168R9d241.5R10i114R11d93R12d421R13ai1i3i3i3i3i2i2i2i2i2i3i3i3i3i2hg:57oR0d950.5R1ad112.5d1008.5d112.5d916.5d150.5d934.5d189.5d944d228.5d953.5d266d953.5d366d953.5d418.75d886.25d471.5d819d479d682d450d725d405.5d748d361d771d307d771d195d771d129.75d703.25d64.5d635.5d64.5d518d64.5d403d132.5d333.5d200.5d264d313.5d264d443d264d511.25d363.25d579.5d462.5d579.5d651.5d579.5d828d495.75d933.25d412d1038.5d270.5d1038.5d232.5d1038.5d193.5d1031d154.5d1023.5d112.5d1008.5d313.5d692d381.5d692d421.25d645.5d461d599d461d518d461d437.5d421.25d390.75d381.5d344d313.5d344d245.5d344d205.75d390.75d166d437.5d166d518d166d599d205.75d645.5d245.5d692d313.5d692hR2d651.5R3d579.5R4d64.5R5d760R6d-14.5R7d695.5R8d168R9d241.5R10i57R11d64.5R12d651.5R13ai1i2i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3hg:113oR0d950.5R1ad151.5d744.5d151.5d846d193.25d903.75d235d961.5d308d961.5d381d961.5d423d903.75d465d846d465d744.5d465d643d423d585.25d381d527.5d308d527.5d235d527.5d193.25d585.25d151.5d643d151.5d744.5d465d940d436d990d391.75d1014.25d347.5d1038.5d285.5d1038.5d184d1038.5d120.25d957.5d56.5d876.5d56.5d744.5d56.5d612.5d120.25d531.5d184d450.5d285.5d450.5d347.5d450.5d391.75d474.75d436d499d465d549d465d464d557d464d557d1237d465d1237d465d940hR2d650R3d557R4d56.5R5d573.5R6d-213R7d517R8d168R9d241.5R10i113R11d56.5R12d650R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3i2i2i2i2i2hg:56oR0d950.5R1ad325.5d669.5d253.5d669.5d212.25d708d171d746.5d171d814d171d881.5d212.25d920d253.5d958.5d325.5d958.5d397.5d958.5d439d919.75d480.5d881d480.5d814d480.5d746.5d439.25d708d398d669.5d325.5d669.5d224.5d626.5d159.5d610.5d123.25d566d87d521.5d87d457.5d87d368d150.75d316d214.5d264d325.5d264d437d264d500.5d316d564d368d564d457.5d564d521.5d527.75d566d491.5d610.5d427d626.5d500d643.5d540.75d693d581.5d742.5d581.5d814d581.5d922.5d515.25d980.5d449d1038.5d325.5d1038.5d202d1038.5d135.75d980.5d69.5d922.5d69.5d814d69.5d742.5d110.5d693d151.5d643.5d224.5d626.5d187.5d467d187.5d525d223.75d557.5d260d590d325.5d590d390.5d590d427.25d557.5d464d525d464d467d464d409d427.25d376.5d390.5d344d325.5d344d260d344d223.75d376.5d187.5d409d187.5d467hR2d651.5R3d581.5R4d69.5R5d760R6d-14.5R7d690.5R8d168R9d241.5R10i56R11d69.5R12d651.5R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3hg:112oR0d950.5R1ad185.5d940d185.5d1237d93d1237d93d464d185.5d464d185.5d549d214.5d499d258.75d474.75d303d450.5d364.5d450.5d466.5d450.5d530.25d531.5d594d612.5d594d744.5d594d876.5d530.25d957.5d466.5d1038.5d364.5d1038.5d303d1038.5d258.75d1014.25d214.5d990d185.5d940d498.5d744.5d498.5d643d456.75d585.25d415d527.5d342d527.5d269d527.5d227.25d585.25d185.5d643d185.5d744.5d185.5d846d227.25d903.75d269d961.5d342d961.5d415d961.5d456.75d903.75d498.5d846d498.5d744.5hR2d650R3d594R4d93R5d573.5R6d-213R7d480.5R8d168R9d241.5R10i112R11d93R12d650R13ai1i2i2i2i2i2i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3hgh";$/;"	v
DEFAULT_FONT_NAME	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	public static inline var DEFAULT_FONT_NAME = "Bitstream_Vera_Sans";$/;"	v
DEFAULT_FONT_SCALE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	public static inline var DEFAULT_FONT_SCALE = 9.0;$/;"	v
DEFAULT_RESOLVER	/usr/lib/haxe/std/haxe/Unserializer.hx	/^	public static var DEFAULT_RESOLVER : TypeResolver = Type;$/;"	v
DEFAULT_TO_STRING	/usr/lib/haxe/lib/openfl/3,0,8/openfl/errors/Error.hx	/^	private static inline var DEFAULT_TO_STRING = "Error";$/;"	v
DELETE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLRequestMethod.hx	/^	var DELETE = "DELETE";$/;"	v
DELETE	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var DELETE = 0x7F;$/;"	v
DELETE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequestMethod.hx	/^	public static inline var DELETE:String = "DELETE";$/;"	v
DELETE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var DELETE:Int = 46;$/;"	v
DELETE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLRequestMethod.hx	/^	var DELETE = "DELETE";$/;"	v
DELETE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var DELETE = 46;$/;"	v
DELETE_STATUS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var DELETE_STATUS = 0x8B80;$/;"	v
DELETE_STATUS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var DELETE_STATUS:Int;$/;"	v
DELETE_STATUS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var DELETE_STATUS = 0x8B80;$/;"	v
DELETE_STATUS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var DELETE_STATUS						  = 0x8B80;$/;"	v
DELETE_STATUS	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var DELETE_STATUS                    = 0x8B80;$/;"	v
DELIMITER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static var DELIMITER:String;$/;"	v
DEPTH	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DClearMask.hx	/^    inline static public var DEPTH:Int = GL.DEPTH_BUFFER_BIT;$/;"	v
DEPTH_ATTACHMENT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var DEPTH_ATTACHMENT = 0x8D00;$/;"	v
DEPTH_ATTACHMENT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var DEPTH_ATTACHMENT:Int;$/;"	v
DEPTH_ATTACHMENT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var DEPTH_ATTACHMENT = 0x8D00;$/;"	v
DEPTH_ATTACHMENT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var DEPTH_ATTACHMENT					= 0x8D00;$/;"	v
DEPTH_ATTACHMENT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var DEPTH_ATTACHMENT               = 0x8D00;$/;"	v
DEPTH_BITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var DEPTH_BITS = 0x0D56;$/;"	v
DEPTH_BITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var DEPTH_BITS:Int;$/;"	v
DEPTH_BITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var DEPTH_BITS = 0x0D56;$/;"	v
DEPTH_BITS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var DEPTH_BITS							= 0x0D56;$/;"	v
DEPTH_BITS	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var DEPTH_BITS                     = 0x0D56;$/;"	v
DEPTH_BUFFER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	static public var DEPTH_BUFFER = 0x0200;$/;"	v
DEPTH_BUFFER_BIT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var DEPTH_BUFFER_BIT = 0x00000100;$/;"	v
DEPTH_BUFFER_BIT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var DEPTH_BUFFER_BIT:Int;$/;"	v
DEPTH_BUFFER_BIT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var DEPTH_BUFFER_BIT = 0x00000100;$/;"	v
DEPTH_BUFFER_BIT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var DEPTH_BUFFER_BIT					= 0x00000100;$/;"	v
DEPTH_BUFFER_BIT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var DEPTH_BUFFER_BIT               = 0x00000100;$/;"	v
DEPTH_CLEAR_VALUE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var DEPTH_CLEAR_VALUE = 0x0B73;$/;"	v
DEPTH_CLEAR_VALUE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var DEPTH_CLEAR_VALUE:Int;$/;"	v
DEPTH_CLEAR_VALUE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var DEPTH_CLEAR_VALUE = 0x0B73;$/;"	v
DEPTH_CLEAR_VALUE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var DEPTH_CLEAR_VALUE				  = 0x0B73;$/;"	v
DEPTH_CLEAR_VALUE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var DEPTH_CLEAR_VALUE              = 0x0B73;$/;"	v
DEPTH_COMPONENT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var DEPTH_COMPONENT = 0x1902;$/;"	v
DEPTH_COMPONENT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var DEPTH_COMPONENT:Int;$/;"	v
DEPTH_COMPONENT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var DEPTH_COMPONENT = 0x1902;$/;"	v
DEPTH_COMPONENT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var DEPTH_COMPONENT					 = 0x1902;$/;"	v
DEPTH_COMPONENT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var DEPTH_COMPONENT                = 0x1902;$/;"	v
DEPTH_COMPONENT16	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var DEPTH_COMPONENT16 = 0x81A5;$/;"	v
DEPTH_COMPONENT16	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var DEPTH_COMPONENT16:Int;$/;"	v
DEPTH_COMPONENT16	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var DEPTH_COMPONENT16 = 0x81A5;$/;"	v
DEPTH_COMPONENT16	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var DEPTH_COMPONENT16				  = 0x81A5;$/;"	v
DEPTH_COMPONENT16	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var DEPTH_COMPONENT16              = 0x81A5;$/;"	v
DEPTH_FUNC	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var DEPTH_FUNC = 0x0B74;$/;"	v
DEPTH_FUNC	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var DEPTH_FUNC:Int;$/;"	v
DEPTH_FUNC	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var DEPTH_FUNC = 0x0B74;$/;"	v
DEPTH_FUNC	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var DEPTH_FUNC							= 0x0B74;$/;"	v
DEPTH_FUNC	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var DEPTH_FUNC                     = 0x0B74;$/;"	v
DEPTH_RANGE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var DEPTH_RANGE = 0x0B70;$/;"	v
DEPTH_RANGE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var DEPTH_RANGE:Int;$/;"	v
DEPTH_RANGE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var DEPTH_RANGE = 0x0B70;$/;"	v
DEPTH_RANGE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var DEPTH_RANGE						  = 0x0B70;$/;"	v
DEPTH_RANGE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var DEPTH_RANGE                    = 0x0B70;$/;"	v
DEPTH_STENCIL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var DEPTH_STENCIL = 0x84F9;$/;"	v
DEPTH_STENCIL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var DEPTH_STENCIL:Int;$/;"	v
DEPTH_STENCIL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var DEPTH_STENCIL = 0x84F9;$/;"	v
DEPTH_STENCIL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var DEPTH_STENCIL						= 0x84F9;$/;"	v
DEPTH_STENCIL	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var DEPTH_STENCIL                  = 0x84F9;$/;"	v
DEPTH_STENCIL_ATTACHMENT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var DEPTH_STENCIL_ATTACHMENT = 0x821A;$/;"	v
DEPTH_STENCIL_ATTACHMENT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var DEPTH_STENCIL_ATTACHMENT:Int;$/;"	v
DEPTH_STENCIL_ATTACHMENT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var DEPTH_STENCIL_ATTACHMENT = 0x821A;$/;"	v
DEPTH_STENCIL_ATTACHMENT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var DEPTH_STENCIL_ATTACHMENT		 = 0x821A;$/;"	v
DEPTH_STENCIL_ATTACHMENT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var DEPTH_STENCIL_ATTACHMENT       = 0x821A;$/;"	v
DEPTH_TEST	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var DEPTH_TEST = 0x0B71;$/;"	v
DEPTH_TEST	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var DEPTH_TEST:Int;$/;"	v
DEPTH_TEST	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var DEPTH_TEST = 0x0B71;$/;"	v
DEPTH_TEST	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var DEPTH_TEST							= 0x0B71;$/;"	v
DEPTH_TEST	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var DEPTH_TEST                     = 0x0B71;$/;"	v
DEPTH_WRITEMASK	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var DEPTH_WRITEMASK = 0x0B72;$/;"	v
DEPTH_WRITEMASK	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var DEPTH_WRITEMASK:Int;$/;"	v
DEPTH_WRITEMASK	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var DEPTH_WRITEMASK = 0x0B72;$/;"	v
DEPTH_WRITEMASK	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var DEPTH_WRITEMASK					 = 0x0B72;$/;"	v
DEPTH_WRITEMASK	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var DEPTH_WRITEMASK                = 0x0B72;$/;"	v
DESCENDER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var DESCENDER = 1;$/;"	v
DESERET	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var DESERET = "Dsrt";$/;"	v
DESKTOP	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	var DESKTOP = 2;$/;"	v
DESKTOP	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	var DESKTOP = "desktop";$/;"	v
DESKTOP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/File.hx	/^	static inline var DESKTOP = 2;$/;"	v
DESKTOP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/SystemPath.hx	/^	private static inline var DESKTOP = 2;$/;"	v
DEST	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoOperator.hx	/^	public var DEST = 6;$/;"	v
DESTINATION_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DBlendFactor.hx	/^	inline public static var DESTINATION_ALPHA:Int = GL.DST_ALPHA;$/;"	v
DESTINATION_COLOR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DBlendFactor.hx	/^	inline public static var DESTINATION_COLOR:Int = GL.DST_COLOR;$/;"	v
DEST_ATOP	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoOperator.hx	/^	public var DEST_ATOP = 10;$/;"	v
DEST_IN	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoOperator.hx	/^	public var DEST_IN = 8;$/;"	v
DEST_OUT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoOperator.hx	/^	public var DEST_OUT = 9;$/;"	v
DEST_OVER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoOperator.hx	/^	public var DEST_OVER = 7;$/;"	v
DEVANAGARI	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var DEVANAGARI = "Deva";$/;"	v
DEVELOPMENT_SERVER_URL	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	public static inline var DEVELOPMENT_SERVER_URL = "https:\/\/marketplace-dev.allizom.org";$/;"	v
DEVICE_ADDED	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/GameInputEvent.hx	/^	public static var DEVICE_ADDED = "deviceAdded";$/;"	v
DEVICE_ADDED	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/JoystickEvent.hx	/^	public static inline var DEVICE_ADDED:String = "deviceAdded";$/;"	v
DEVICE_ERROR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var DEVICE_ERROR = 35;$/;"	v
DEVICE_FINISHED	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var DEVICE_FINISHED = 37;$/;"	v
DEVICE_REMOVED	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/GameInputEvent.hx	/^	public static var DEVICE_REMOVED = "deviceRemoved";$/;"	v
DEVICE_REMOVED	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/JoystickEvent.hx	/^	public static inline var DEVICE_REMOVED:String = "deviceRemoved";$/;"	v
DEVICE_SPECIFIER	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public var DEVICE_SPECIFIER:Int = 0x1005;$/;"	v
DEVICE_SPECIFIER	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static inline var DEVICE_SPECIFIER:Int = 0x1005;$/;"	v
DEVICE_TYPE_MISMATCH	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var DEVICE_TYPE_MISMATCH = 34;$/;"	v
DEVICE_UNUSABLE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/GameInputEvent.hx	/^	public static var DEVICE_UNUSABLE = "deviceUnusable";$/;"	v
DIFFERENCE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoOperator.hx	/^	public var DIFFERENCE = 23;$/;"	v
DIRECTION	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var DIRECTION:Int = 0x1005;$/;"	v
DIRECTION	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var DIRECTION:Int = 0x1005;$/;"	v
DIRLISTONLY	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var DIRLISTONLY = 48;$/;"	v
DISCONNECT	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	var DISCONNECT = 4;$/;"	v
DISPLAY_SWITCH	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var DISPLAY_SWITCH = 0x40000115;$/;"	v
DISTANCE_JOINT	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2JointType.hx	/^	var DISTANCE_JOINT = 3;$/;"	v
DISTANCE_MODEL	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var DISTANCE_MODEL:Int = 0xD000;$/;"	v
DISTANCE_MODEL	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var DISTANCE_MODEL:Int = 0xD000;$/;"	v
DIST_BASE_VAL_TBL	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	static var DIST_BASE_VAL_TBL = [1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577];$/;"	v
DIST_EXTRA_BITS_TBL	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	static var DIST_EXTRA_BITS_TBL = [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,-1,-1];$/;"	v
DITHER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var DITHER = 0x0BD0;$/;"	v
DITHER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var DITHER:Int;$/;"	v
DITHER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var DITHER = 0x0BD0;$/;"	v
DITHER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var DITHER								 = 0x0BD0;$/;"	v
DITHER	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var DITHER                         = 0x0BD0;$/;"	v
DNS_CACHE_TIMEOUT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var DNS_CACHE_TIMEOUT = 92;$/;"	v
DNS_INTERFACE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var DNS_INTERFACE = 10221;$/;"	v
DNS_LOCAL_IP4	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var DNS_LOCAL_IP4 = 10222;$/;"	v
DNS_LOCAL_IP6	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var DNS_LOCAL_IP6 = 10223;$/;"	v
DNS_SERVERS	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var DNS_SERVERS = 10211;$/;"	v
DNS_USE_GLOBAL_CACHE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var DNS_USE_GLOBAL_CACHE = 91;$/;"	v
DOCS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/File.hx	/^	static inline var DOCS = 3;$/;"	v
DOCS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/SystemPath.hx	/^	private static inline var DOCS = 3;$/;"	v
DOCTYPE	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^	public static inline var DOCTYPE		= 16;$/;"	v
DOCUMENTS	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	var DOCUMENTS = 3;$/;"	v
DOLLAR	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var DOLLAR = 0x24;$/;"	v
DOMBitmap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMBitmap.hx	/^class DOMBitmap {$/;"	c
DOMRenderContext	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^class DOMRenderContext {$/;"	c
DOMRenderer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMRenderer.hx	/^class DOMRenderer extends AbstractRenderer {$/;"	c
DOMShape	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMShape.hx	/^class DOMShape {$/;"	c
DOMSprite	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DOMSprite.hx	/^class DOMSprite extends Sprite {$/;"	c
DOMTextField	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMTextField.hx	/^class DOMTextField {$/;"	c
DONT_CARE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var DONT_CARE = 0x1100;$/;"	v
DONT_CARE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var DONT_CARE:Int;$/;"	v
DONT_CARE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var DONT_CARE = 0x1100;$/;"	v
DONT_CARE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var DONT_CARE							 = 0x1100;$/;"	v
DONT_CARE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var DONT_CARE                      = 0x1100;$/;"	v
DOPPLER_FACTOR	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var DOPPLER_FACTOR:Int = 0xC000;$/;"	v
DOPPLER_FACTOR	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var DOPPLER_FACTOR:Int = 0xC000;$/;"	v
DOPPLER_VELOCITY	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var DOPPLER_VELOCITY:Int = 0xC001;$/;"	v
DOPPLER_VELOCITY	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var DOPPLER_VELOCITY:Int = 0xC001;$/;"	v
DOUBLE_CLICK	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public static var DOUBLE_CLICK:String = "doubleClick";$/;"	v
DOUBLE_CLICK	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public static var DOUBLE_CLICK:String = "doubleClick";$/;"	v
DOWN	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var DOWN = 0x40000051;$/;"	v
DOWN	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var DOWN:Int = 40;$/;"	v
DOWN	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var DOWN = 40;$/;"	v
DPAD_DOWN	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/GamepadButton.hx	/^	var DPAD_DOWN = 12;$/;"	v
DPAD_LEFT	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/GamepadButton.hx	/^	var DPAD_LEFT = 13;$/;"	v
DPAD_RIGHT	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/GamepadButton.hx	/^	var DPAD_RIGHT = 14;$/;"	v
DPAD_UP	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/GamepadButton.hx	/^	var DPAD_UP = 11;$/;"	v
DST_ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var DST_ALPHA = 0x0304;$/;"	v
DST_ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var DST_ALPHA:Int;$/;"	v
DST_ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var DST_ALPHA = 0x0304;$/;"	v
DST_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/BlendModeManager.hx	/^	var DST_ALPHA = GL.DST_ALPHA;$/;"	v
DST_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var DST_ALPHA							 = 0x0304;$/;"	v
DST_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var DST_ALPHA                      = 0x0304;$/;"	v
DST_COLOR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var DST_COLOR = 0x0306;$/;"	v
DST_COLOR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var DST_COLOR:Int;$/;"	v
DST_COLOR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var DST_COLOR = 0x0306;$/;"	v
DST_COLOR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/BlendModeManager.hx	/^	var DST_COLOR = GL.DST_COLOR;$/;"	v
DST_COLOR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var DST_COLOR							 = 0x0306;$/;"	v
DST_COLOR	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var DST_COLOR                      = 0x0306;$/;"	v
DUPLOYAN	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var DUPLOYAN = "Dupl";$/;"	v
DYNAMIC_BODY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2BodyType.hx	/^	var DYNAMIC_BODY = 2;$/;"	v
DYNAMIC_DRAW	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var DYNAMIC_DRAW = 0x88E8;$/;"	v
DYNAMIC_DRAW	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var DYNAMIC_DRAW:Int;$/;"	v
DYNAMIC_DRAW	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var DYNAMIC_DRAW = 0x88E8;$/;"	v
DYNAMIC_DRAW	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var DYNAMIC_DRAW						 = 0x88E8;$/;"	v
DYNAMIC_DRAW	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var DYNAMIC_DRAW                   = 0x88E8;$/;"	v
DataEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/DataEvent.hx	/^class DataEvent extends TextEvent {$/;"	c
DateTools	/usr/lib/haxe/std/DateTools.hx	/^class DateTools {$/;"	c
Decide on a better place to initialize edgeShapes. (b2Shape::Create() can't	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		\/\/ TODO: Decide on a better place to initialize edgeShapes. (b2Shape::Create() can't$/;"	i
DefaultAssetLibrary	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^class DefaultAssetLibrary extends AssetLibrary {$/;"	c
DefaultAssetLibrary	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^class DefaultAssetLibrary extends AssetLibrary {$/;"	c
DefaultAssetLibrary	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^class DefaultAssetLibrary extends AssetLibrary {$/;"	c
DefaultShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DefaultShader.hx	/^class DefaultShader extends AbstractShader {$/;"	c
DefaultShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/DefaultShader.hx	/^class DefaultShader extends Shader {$/;"	c
DelayedConnection	/usr/lib/haxe/std/haxe/remoting/DelayedConnection.hx	/^class DelayedConnection implements AsyncConnection implements Dynamic<AsyncConnection> {$/;"	c
Dependency	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Dependency.hx	/^class Dependency {$/;"	c
DeploymentHelper	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/DeploymentHelper.hx	/^class DeploymentHelper {$/;"	c
Deque	/usr/lib/haxe/std/neko/vm/Deque.hx	/^class Deque<T> {$/;"	c
Descrepencies between flash API and the current implementation differ in results	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		\/\/ TODO: Descrepencies between flash API and the current implementation differ in results$/;"	i
Description	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Description.hx	/^class Description {$/;"	c
Destination	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Destination.hx	/^class Destination {$/;"	c
DestroyFixture	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function DestroyFixture(fixture:B2Fixture) : Void{$/;"	f
Dictionary	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/Dictionary.hx	/^class Dictionary implements ArrayAccess<Dynamic> {$/;"	c
DirectRenderer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DirectRenderer.hx	/^class DirectRenderer extends DisplayObject {$/;"	c
DirectRenderer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DirectRenderer.hx	/^class DirectRenderer extends #if flash Sprite #else DisplayObject #end {$/;"	c
DirectRendererTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DirectRendererTest.hx	/^class DirectRendererTest {$/;"	c
Dispatch	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^class Dispatch {$/;"	c
DisplayObject	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^class DisplayObject extends EventDispatcher implements IBitmapDrawable {$/;"	c
DisplayObjectContainer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^class DisplayObjectContainer extends InteractiveObject {$/;"	c
DisplayObjectContainer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^class DisplayObjectContainer extends InteractiveObject {$/;"	c
DisplayObjectContainerTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectContainerTest.hx	/^class DisplayObjectContainerTest {$/;"	c
DisplayObjectTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^class DisplayObjectTest {$/;"	c
DocType	/usr/lib/haxe/std/Xml.hx	/^	static var DocType(default,null) : XmlType;$/;"	v
Document	/usr/lib/haxe/std/Xml.hx	/^	static var Document(default,null) : XmlType;$/;"	v
DocumentClass	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/ApplicationMain.hx	/^class DocumentClass {$/;"	c
DocumentClass	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^class DocumentClass {$/;"	c
Don't create extra canvas elements like this	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^		\/\/ TODO: Don't create extra canvas elements like this$/;"	i
DrawContacts	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^		public function DrawContacts():void{$/;"	f
DrawJoint	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^		public function DrawJoint(joint:B2Joint):void$/;"	f
DrawPairs	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^		public function DrawPairs():void{$/;"	f
DrawPath	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^class DrawPath {$/;"	c
DrawShape	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^		public function DrawShape(shape:B2Shape):void{$/;"	f
DrawTrianglesShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DrawTrianglesShader.hx	/^class DrawTrianglesShader extends AbstractShader {$/;"	c
DrawTrianglesShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/DrawTrianglesShader.hx	/^class DrawTrianglesShader extends Shader {$/;"	c
DropShadowFilter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/DropShadowFilter.hx	/^class DropShadowFilter extends BitmapFilter {$/;"	c
DropShadowFilter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/DropShadowFilter.hx	/^class DropShadowFilter extends BitmapFilter {$/;"	c
DropShadowFilterTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/DropShadowFilterTest.hx	/^class DropShadowFilterTest {$/;"	c
Dump	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^	public function Dump(node:B2DynamicTreeNode=null, depth:Int=0):Void$/;"	f
E	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var E = 0x65;$/;"	v
E	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var E:Int = 69;$/;"	v
E	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var E = 69;$/;"	v
EDGE_SHAPE	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2ShapeType.hx	/^	var EDGE_SHAPE = 3;$/;"	v
EFFECTIVE_URL	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var EFFECTIVE_URL = 0x100000 + 1;$/;"	v
EGDSOCKET	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var EGDSOCKET = 10077;$/;"	v
EGYPTIAN_HIEROGLYPHS	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var EGYPTIAN_HIEROGLYPHS = "Egyp";$/;"	v
EJECT	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var EJECT = 0x40000119;$/;"	v
ELBASAN	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var ELBASAN = "Elba";$/;"	v
ELEMENT_ARRAY_BUFFER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var ELEMENT_ARRAY_BUFFER = 0x8893;$/;"	v
ELEMENT_ARRAY_BUFFER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var ELEMENT_ARRAY_BUFFER:Int;$/;"	v
ELEMENT_ARRAY_BUFFER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var ELEMENT_ARRAY_BUFFER = 0x8893;$/;"	v
ELEMENT_ARRAY_BUFFER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var ELEMENT_ARRAY_BUFFER			  = 0x8893;$/;"	v
ELEMENT_ARRAY_BUFFER	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var ELEMENT_ARRAY_BUFFER           = 0x8893;$/;"	v
ELEMENT_ARRAY_BUFFER_BINDING	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var ELEMENT_ARRAY_BUFFER_BINDING = 0x8895;$/;"	v
ELEMENT_ARRAY_BUFFER_BINDING	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var ELEMENT_ARRAY_BUFFER_BINDING:Int;$/;"	v
ELEMENT_ARRAY_BUFFER_BINDING	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var ELEMENT_ARRAY_BUFFER_BINDING = 0x8895;$/;"	v
ELEMENT_ARRAY_BUFFER_BINDING	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var ELEMENT_ARRAY_BUFFER_BINDING	= 0x8895;$/;"	v
ELEMENT_ARRAY_BUFFER_BINDING	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var ELEMENT_ARRAY_BUFFER_BINDING   = 0x8895;$/;"	v
EMSCRIPTEN	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Platform.hx	/^	var EMSCRIPTEN = "emscripten";$/;"	v
END	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var END = 0x4000004D;$/;"	v
END	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var END:Int = 35;$/;"	v
END	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var END = 35;$/;"	v
ENTER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var ENTER:Int = 13;$/;"	v
ENTER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var ENTER = 13;$/;"	v
ENTER_FRAME	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public static var ENTER_FRAME = "enterFrame";$/;"	v
ENTER_FRAME	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public static var ENTER_FRAME = "enterFrame";$/;"	v
ENUMERATE_ALL_EXT	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public var ENUMERATE_ALL_EXT:Int = 1;$/;"	v
ENUMERATE_ALL_EXT	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static inline var ENUMERATE_ALL_EXT:Int = 1;$/;"	v
EOFError	/usr/lib/haxe/lib/openfl/3,0,8/openfl/errors/EOFError.hx	/^class EOFError extends Error {$/;"	c
EOFErrorTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/EOFErrorTest.hx	/^class EOFErrorTest {$/;"	c
EQUAL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var EQUAL = 0x0202;$/;"	v
EQUAL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var EQUAL:Int;$/;"	v
EQUAL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var EQUAL = 0x0202;$/;"	v
EQUAL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var EQUAL								  = 0x0202;$/;"	v
EQUAL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var EQUAL:Int = 187;$/;"	v
EQUAL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DCompareMode.hx	/^	inline static public var EQUAL = GL.EQUAL;$/;"	v
EQUAL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var EQUAL = 187;$/;"	v
EQUAL	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var EQUAL                          = 0x0202;$/;"	v
EQUALS	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var EQUALS = 0x3D;$/;"	v
EQUALS	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^	public static inline var EQUALS			= 6;$/;"	v
EQUAL_LIMITS	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LimitState.hx	/^	var EQUAL_LIMITS = 3;$/;"	v
ERROR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/ErrorEvent.hx	/^	public static var ERROR:String = "error";$/;"	v
ERRORBUFFER	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var ERRORBUFFER = 10010;$/;"	v
EReg	/usr/lib/haxe/std/EReg.hx	/^class EReg {$/;"	c
ESCAPE	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var ESCAPE = 0x1B;$/;"	v
ESCAPE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var ESCAPE:Int = 27;$/;"	v
ESCAPE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var ESCAPE = 27;$/;"	v
ESCAPE	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^	public static inline var ESCAPE			= 18;$/;"	v
ETHIOPIC	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var ETHIOPIC = "Ethi";$/;"	v
EVEN_ODD	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFillRule.hx	/^	public var EVEN_ODD = 1;$/;"	v
EVEN_ODD	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	var EVEN_ODD = 0;$/;"	v
EXCLAMATION	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var EXCLAMATION = 0x21;$/;"	v
EXCLUSION	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoOperator.hx	/^	public var EXCLUSION = 24;$/;"	v
EXECUTE	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var EXECUTE = 0x40000074;$/;"	v
EXPONENT_DISTANCE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var EXPONENT_DISTANCE:Int = 0xD005;$/;"	v
EXPONENT_DISTANCE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var EXPONENT_DISTANCE:Int = 0xD005;$/;"	v
EXPONENT_DISTANCE_CLAMPED	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var EXPONENT_DISTANCE_CLAMPED:Int = 0xD006;$/;"	v
EXPONENT_DISTANCE_CLAMPED	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var EXPONENT_DISTANCE_CLAMPED:Int = 0xD006;$/;"	v
EXSEL	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var EXSEL = 0x400000A4;$/;"	v
EXTENSIONS	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var EXTENSIONS:Int = 0xB004;$/;"	v
EXTENSIONS	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public var EXTENSIONS:Int = 0x1006;$/;"	v
EXTENSIONS	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var EXTENSIONS:Int = 0xB004;$/;"	v
EXTENSIONS	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static inline var EXTENSIONS:Int = 0x1006;$/;"	v
Element	/usr/lib/haxe/std/Xml.hx	/^	static var Element(default,null) : XmlType;$/;"	v
EmscriptenPlatform	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/EmscriptenPlatform.hx	/^class EmscriptenPlatform extends PlatformTarget {$/;"	c
Enable scrollRect clipping	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMTextField.hx	/^				\/\/ TODO: Enable scrollRect clipping$/;"	i
Endian	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/Endian.hx	/^class Endian {$/;"	c
EndianTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/EndianTest.hx	/^class EndianTest {$/;"	c
EnumValueMap	/usr/lib/haxe/std/haxe/ds/EnumValueMap.hx	/^class EnumValueMap<K:EnumValue, V> extends haxe.ds.BalancedTree<K, V> implements Map.IMap<K,V> {$/;"	c
Env	Source/Env.hx	/^class Env {$/;"	c
Eof	/usr/lib/haxe/std/haxe/io/Eof.hx	/^class Eof {$/;"	c
Error	/usr/lib/haxe/lib/openfl/3,0,8/openfl/errors/Error.hx	/^class Error {$/;"	c
Error	/usr/lib/haxe/std/haxe/macro/Expr.hx	/^class Error {$/;"	c
ErrorEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/ErrorEvent.hx	/^class ErrorEvent extends TextEvent {$/;"	c
ErrorEventTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/ErrorEventTest.hx	/^class ErrorEventTest {$/;"	c
ErrorTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/ErrorTest.hx	/^class ErrorTest {$/;"	c
Event	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Event.hx	/^class Event<T> {$/;"	c
Event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^class Event {$/;"	c
Event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^class Event {$/;"	c
EventDispatcher	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/EventDispatcher.hx	/^class EventDispatcher implements IEventDispatcher {$/;"	c
EventDispatcher	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/EventDispatcher.hx	/^class EventDispatcher implements IEventDispatcher {$/;"	c
EventDispatcherTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventDispatcherTest.hx	/^class EventDispatcherTest {$/;"	c
EventPhaseTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventPhaseTest.hx	/^class EventPhaseTest {$/;"	c
EventTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventTest.hx	/^class EventTest {$/;"	c
ExampleJSGenerator	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^class ExampleJSGenerator {$/;"	c
Expose this	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	\/\/ TODO: Expose this$/;"	i
ExprArrayTools	/usr/lib/haxe/std/haxe/macro/ExprTools.hx	/^class ExprArrayTools {$/;"	c
ExprTools	/usr/lib/haxe/std/haxe/macro/ExprTools.hx	/^class ExprTools {$/;"	c
ExternalConnection	/usr/lib/haxe/std/haxe/remoting/ExternalConnection.hx	/^class ExternalConnection implements Connection implements Dynamic<Connection> {$/;"	c
ExternalInterface	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/external/ExternalInterface.hx	/^class ExternalInterface {$/;"	c
ExternalInterface	/usr/lib/haxe/lib/openfl/3,0,8/openfl/external/ExternalInterface.hx	/^class ExternalInterface {$/;"	c
ExternalInterfaceTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/external/ExternalInterfaceTest.hx	/^class ExternalInterfaceTest {$/;"	c
F	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2ConstantForceController.hx	/^	public var F:B2Vec2;$/;"	v
F	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var F = 0x66;$/;"	v
F	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var F:Int = 70;$/;"	v
F	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var F = 70;$/;"	v
F1	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var F1 = 0x4000003A;$/;"	v
F1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var F1:Int = 112;$/;"	v
F1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var F1 = 112;$/;"	v
F10	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var F10 = 0x40000043;$/;"	v
F10	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var F10:Int = 121;$/;"	v
F10	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var F10 = 121; \/\/  F10 is used by browser.$/;"	v
F11	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var F11 = 0x40000044;$/;"	v
F11	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var F11:Int = 122;$/;"	v
F11	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var F11 = 122;$/;"	v
F12	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var F12 = 0x40000045;$/;"	v
F12	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var F12:Int = 123;$/;"	v
F12	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var F12 = 123;$/;"	v
F13	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var F13 = 0x40000068;$/;"	v
F13	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var F13:Int = 124;$/;"	v
F13	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var F13 = 124;$/;"	v
F14	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var F14 = 0x40000069;$/;"	v
F14	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var F14:Int = 125;$/;"	v
F14	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var F14 = 125;$/;"	v
F15	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var F15 = 0x4000006A;$/;"	v
F15	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var F15:Int = 126;$/;"	v
F15	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var F15 = 126;$/;"	v
F16	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var F16 = 0x4000006B;$/;"	v
F17	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var F17 = 0x4000006C;$/;"	v
F18	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var F18 = 0x4000006D;$/;"	v
F19	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var F19 = 0x4000006E;$/;"	v
F2	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var F2 = 0x4000003B;$/;"	v
F2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var F2:Int = 113;$/;"	v
F2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var F2 = 113;$/;"	v
F20	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var F20 = 0x4000006F;$/;"	v
F21	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var F21 = 0x40000070;$/;"	v
F22	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var F22 = 0x40000071;$/;"	v
F23	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var F23 = 0x40000072;$/;"	v
F24	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var F24 = 0x40000073;$/;"	v
F3	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var F3 = 0x4000003C;$/;"	v
F3	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var F3:Int = 114;$/;"	v
F3	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var F3 = 114;$/;"	v
F4	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var F4 = 0x4000003D;$/;"	v
F4	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var F4:Int = 115;$/;"	v
F4	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var F4 = 115;$/;"	v
F5	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var F5 = 0x4000003E;$/;"	v
F5	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var F5:Int = 116;$/;"	v
F5	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var F5 = 116;$/;"	v
F6	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var F6 = 0x4000003F;$/;"	v
F6	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var F6:Int = 117;$/;"	v
F6	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var F6 = 117;$/;"	v
F7	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var F7 = 0x40000040;$/;"	v
F7	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var F7:Int = 118;$/;"	v
F7	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var F7 = 118;$/;"	v
F8	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var F8 = 0x40000041;$/;"	v
F8	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var F8:Int = 119;$/;"	v
F8	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var F8 = 119;$/;"	v
F9	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var F9 = 0x40000042;$/;"	v
F9	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var F9:Int = 120;$/;"	v
F9	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var F9 = 120;$/;"	v
FAILED_INIT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var FAILED_INIT = 2;$/;"	v
FAILONERROR	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var FAILONERROR = 45;$/;"	v
FALSE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var FALSE:Int = 0;$/;"	v
FALSE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public var FALSE:Int = 0;$/;"	v
FALSE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var FALSE:Int = 0;$/;"	v
FALSE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static inline var FALSE:Int = 0;$/;"	v
FAST	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoAntialias.hx	/^	public var FAST = 4;$/;"	v
FAST	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFilter.hx	/^	public var FAST = 0;$/;"	v
FASTEST	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var FASTEST = 0x1101;$/;"	v
FASTEST	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var FASTEST:Int;$/;"	v
FASTEST	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var FASTEST = 0x1101;$/;"	v
FASTEST	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var FASTEST								= 0x1101;$/;"	v
FASTEST	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var FASTEST                        = 0x1101;$/;"	v
FILESIZE_EXCEEDED	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var FILESIZE_EXCEEDED = 63;$/;"	v
FILETIME	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var FILETIME = 0x200000 + 14;$/;"	v
FILETIME	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var FILETIME = 69;$/;"	v
FILE_COULDNT_READ_FILE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var FILE_COULDNT_READ_FILE = 37;$/;"	v
FILE_NOT_FOUND	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var FILE_NOT_FOUND = 18;$/;"	v
FIND	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var FIND = 0x4000007E;$/;"	v
FIREFOX	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Platform.hx	/^	var FIREFOX = "firefox";$/;"	v
FIREFOXOS	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	var FIREFOXOS = "firefoxos";$/;"	v
FIRST	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLVersion.hx	/^	var FIRST = 0;$/;"	v
FIRST_COMPILATION	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	static var FIRST_COMPILATION = true;$/;"	v
FIXED_HUFFMAN	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	static var FIXED_HUFFMAN = null;$/;"	v
FLASH	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Platform.hx	/^	var FLASH = "flash";$/;"	v
FLOAT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var FLOAT = 0x1406;$/;"	v
FLOAT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var FLOAT:Int;$/;"	v
FLOAT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var FLOAT = 0x1406;$/;"	v
FLOAT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexAttribute.hx	/^	var FLOAT = GL.FLOAT;$/;"	v
FLOAT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var FLOAT								  = 0x1406;$/;"	v
FLOAT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var FLOAT                          = 0x1406;$/;"	v
FLOAT_MAT2	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var FLOAT_MAT2 = 0x8B5A;$/;"	v
FLOAT_MAT2	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var FLOAT_MAT2:Int;$/;"	v
FLOAT_MAT2	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var FLOAT_MAT2 = 0x8B5A;$/;"	v
FLOAT_MAT2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var FLOAT_MAT2							= 0x8B5A;$/;"	v
FLOAT_MAT2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var FLOAT_MAT2                     = 0x8B5A;$/;"	v
FLOAT_MAT3	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var FLOAT_MAT3 = 0x8B5B;$/;"	v
FLOAT_MAT3	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var FLOAT_MAT3:Int;$/;"	v
FLOAT_MAT3	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var FLOAT_MAT3 = 0x8B5B;$/;"	v
FLOAT_MAT3	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var FLOAT_MAT3							= 0x8B5B;$/;"	v
FLOAT_MAT3	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var FLOAT_MAT3                     = 0x8B5B;$/;"	v
FLOAT_MAT4	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var FLOAT_MAT4 = 0x8B5C;$/;"	v
FLOAT_MAT4	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var FLOAT_MAT4:Int;$/;"	v
FLOAT_MAT4	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var FLOAT_MAT4 = 0x8B5C;$/;"	v
FLOAT_MAT4	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var FLOAT_MAT4							= 0x8B5C;$/;"	v
FLOAT_MAT4	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var FLOAT_MAT4                     = 0x8B5C;$/;"	v
FLOAT_VEC2	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var FLOAT_VEC2 = 0x8B50;$/;"	v
FLOAT_VEC2	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var FLOAT_VEC2:Int;$/;"	v
FLOAT_VEC2	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var FLOAT_VEC2 = 0x8B50;$/;"	v
FLOAT_VEC2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var FLOAT_VEC2							= 0x8B50;$/;"	v
FLOAT_VEC2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var FLOAT_VEC2                     = 0x8B50;$/;"	v
FLOAT_VEC3	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var FLOAT_VEC3 = 0x8B51;$/;"	v
FLOAT_VEC3	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var FLOAT_VEC3:Int;$/;"	v
FLOAT_VEC3	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var FLOAT_VEC3 = 0x8B51;$/;"	v
FLOAT_VEC3	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var FLOAT_VEC3							= 0x8B51;$/;"	v
FLOAT_VEC3	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var FLOAT_VEC3                     = 0x8B51;$/;"	v
FLOAT_VEC4	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var FLOAT_VEC4 = 0x8B52;$/;"	v
FLOAT_VEC4	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var FLOAT_VEC4:Int;$/;"	v
FLOAT_VEC4	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var FLOAT_VEC4 = 0x8B52;$/;"	v
FLOAT_VEC4	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var FLOAT_VEC4							= 0x8B52;$/;"	v
FLOAT_VEC4	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var FLOAT_VEC4                     = 0x8B52;$/;"	v
FNMATCH_DATA	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var FNMATCH_DATA = 10202;$/;"	v
FNMATCH_FUNCTION	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var FNMATCH_FUNCTION = 20200;$/;"	v
FOCUS_IN	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/FocusEvent.hx	/^	public static var FOCUS_IN = "focusIn";$/;"	v
FOCUS_OUT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/FocusEvent.hx	/^	public static var FOCUS_OUT = "focusOut";$/;"	v
FOLLOWLOCATION	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var FOLLOWLOCATION = 52;$/;"	v
FONT	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	var FONT = "FONT";$/;"	v
FONT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	var FONT = "FONT";$/;"	v
FONTS	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	var FONTS = 4;$/;"	v
FONT_TYPE_MISMATCH	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var FONT_TYPE_MISMATCH = 25;$/;"	v
FORBID_REUSE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var FORBID_REUSE = 75;$/;"	v
FORMAT_4444	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public inline static var FORMAT_4444 = 1; \/\/16 bit with alpha channel$/;"	v
FORMAT_565	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public inline static var FORMAT_565 = 2;  \/\/16 bit 565 without alpha$/;"	v
FORMAT_8888	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public inline static var FORMAT_8888 = 0;$/;"	v
FORMAT_MONO16	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var FORMAT_MONO16:Int = 0x1101;$/;"	v
FORMAT_MONO16	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var FORMAT_MONO16:Int = 0x1101;$/;"	v
FORMAT_MONO8	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var FORMAT_MONO8:Int = 0x1100;$/;"	v
FORMAT_MONO8	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var FORMAT_MONO8:Int = 0x1100;$/;"	v
FORMAT_STEREO16	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var FORMAT_STEREO16:Int = 0x1103;$/;"	v
FORMAT_STEREO16	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var FORMAT_STEREO16:Int = 0x1103;$/;"	v
FORMAT_STEREO8	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var FORMAT_STEREO8:Int = 0x1102;$/;"	v
FORMAT_STEREO8	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var FORMAT_STEREO8:Int = 0x1102;$/;"	v
FOURTH	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLVersion.hx	/^	var FOURTH = 3;$/;"	v
FPS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/FPS.hx	/^class FPS extends TextField {$/;"	c
FPSTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/FPSTest.hx	/^class FPSTest {$/;"	c
FRAGMENT_SHADER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var FRAGMENT_SHADER = 0x8B30;$/;"	v
FRAGMENT_SHADER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var FRAGMENT_SHADER:Int;$/;"	v
FRAGMENT_SHADER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var FRAGMENT_SHADER = 0x8B30;$/;"	v
FRAGMENT_SHADER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var FRAGMENT_SHADER						= 0x8B30;$/;"	v
FRAGMENT_SHADER	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var FRAGMENT_SHADER                  = 0x8B30;$/;"	v
FRAMEBUFFER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var FRAMEBUFFER = 0x8D40;$/;"	v
FRAMEBUFFER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var FRAMEBUFFER:Int;$/;"	v
FRAMEBUFFER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var FRAMEBUFFER = 0x8D40;$/;"	v
FRAMEBUFFER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var FRAMEBUFFER						  = 0x8D40;$/;"	v
FRAMEBUFFER	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var FRAMEBUFFER                    = 0x8D40;$/;"	v
FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8CD1;$/;"	v
FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:Int;$/;"	v
FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8CD1;$/;"	v
FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var FRAMEBUFFER_ATTACHMENT_OBJECT_NAME			  = 0x8CD1;$/;"	v
FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var FRAMEBUFFER_ATTACHMENT_OBJECT_NAME           = 0x8CD1;$/;"	v
FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8CD0;$/;"	v
FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:Int;$/;"	v
FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8CD0;$/;"	v
FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE			  = 0x8CD0;$/;"	v
FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE           = 0x8CD0;$/;"	v
FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3;$/;"	v
FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:Int;$/;"	v
FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3;$/;"	v
FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3;$/;"	v
FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3;$/;"	v
FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8CD2;$/;"	v
FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:Int;$/;"	v
FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8CD2;$/;"	v
FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL			= 0x8CD2;$/;"	v
FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL         = 0x8CD2;$/;"	v
FRAMEBUFFER_BINDING	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var FRAMEBUFFER_BINDING = 0x8CA6;$/;"	v
FRAMEBUFFER_BINDING	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var FRAMEBUFFER_BINDING:Int;$/;"	v
FRAMEBUFFER_BINDING	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var FRAMEBUFFER_BINDING = 0x8CA6;$/;"	v
FRAMEBUFFER_BINDING	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var FRAMEBUFFER_BINDING				= 0x8CA6;$/;"	v
FRAMEBUFFER_BINDING	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var FRAMEBUFFER_BINDING            = 0x8CA6;$/;"	v
FRAMEBUFFER_COMPLETE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var FRAMEBUFFER_COMPLETE = 0x8CD5;$/;"	v
FRAMEBUFFER_COMPLETE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var FRAMEBUFFER_COMPLETE:Int;$/;"	v
FRAMEBUFFER_COMPLETE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var FRAMEBUFFER_COMPLETE = 0x8CD5;$/;"	v
FRAMEBUFFER_COMPLETE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var FRAMEBUFFER_COMPLETE							 = 0x8CD5;$/;"	v
FRAMEBUFFER_COMPLETE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var FRAMEBUFFER_COMPLETE                      = 0x8CD5;$/;"	v
FRAMEBUFFER_INCOMPLETE_ATTACHMENT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6;$/;"	v
FRAMEBUFFER_INCOMPLETE_ATTACHMENT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var FRAMEBUFFER_INCOMPLETE_ATTACHMENT:Int;$/;"	v
FRAMEBUFFER_INCOMPLETE_ATTACHMENT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6;$/;"	v
FRAMEBUFFER_INCOMPLETE_ATTACHMENT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var FRAMEBUFFER_INCOMPLETE_ATTACHMENT			= 0x8CD6;$/;"	v
FRAMEBUFFER_INCOMPLETE_ATTACHMENT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var FRAMEBUFFER_INCOMPLETE_ATTACHMENT         = 0x8CD6;$/;"	v
FRAMEBUFFER_INCOMPLETE_DIMENSIONS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8CD9;$/;"	v
FRAMEBUFFER_INCOMPLETE_DIMENSIONS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var FRAMEBUFFER_INCOMPLETE_DIMENSIONS:Int;$/;"	v
FRAMEBUFFER_INCOMPLETE_DIMENSIONS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8CD9;$/;"	v
FRAMEBUFFER_INCOMPLETE_DIMENSIONS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var FRAMEBUFFER_INCOMPLETE_DIMENSIONS			= 0x8CD9;$/;"	v
FRAMEBUFFER_INCOMPLETE_DIMENSIONS	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var FRAMEBUFFER_INCOMPLETE_DIMENSIONS         = 0x8CD9;$/;"	v
FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7;$/;"	v
FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:Int;$/;"	v
FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7;$/;"	v
FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7;$/;"	v
FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7;$/;"	v
FRAMEBUFFER_UNSUPPORTED	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var FRAMEBUFFER_UNSUPPORTED = 0x8CDD;$/;"	v
FRAMEBUFFER_UNSUPPORTED	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var FRAMEBUFFER_UNSUPPORTED:Int;$/;"	v
FRAMEBUFFER_UNSUPPORTED	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var FRAMEBUFFER_UNSUPPORTED = 0x8CDD;$/;"	v
FRAMEBUFFER_UNSUPPORTED	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var FRAMEBUFFER_UNSUPPORTED						 = 0x8CDD;$/;"	v
FRAMEBUFFER_UNSUPPORTED	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var FRAMEBUFFER_UNSUPPORTED                   = 0x8CDD;$/;"	v
FREE	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	var FREE = "free";$/;"	v
FREE_INAPP	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	var FREE_INAPP = "free-inapp";$/;"	v
FREQUENCY	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var FREQUENCY:Int = 0x2001;$/;"	v
FREQUENCY	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public var FREQUENCY:Int = 0x1007;$/;"	v
FREQUENCY	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var FREQUENCY:Int = 0x2001;$/;"	v
FREQUENCY	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static inline var FREQUENCY:Int = 0x1007;$/;"	v
FRESH_CONNECT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var FRESH_CONNECT = 74;$/;"	v
FRICTION_JOINT	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2JointType.hx	/^	var FRICTION_JOINT = 9;$/;"	v
FRONT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var FRONT = 0x0404;$/;"	v
FRONT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var FRONT:Int;$/;"	v
FRONT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var FRONT = 0x0404;$/;"	v
FRONT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var FRONT								  = 0x0404;$/;"	v
FRONT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DTriangleFace.hx	/^	inline public static var FRONT = GL.BACK;$/;"	v
FRONT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var FRONT                          = 0x0404;$/;"	v
FRONT_AND_BACK	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var FRONT_AND_BACK = 0x0408;$/;"	v
FRONT_AND_BACK	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var FRONT_AND_BACK:Int;$/;"	v
FRONT_AND_BACK	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var FRONT_AND_BACK = 0x0408;$/;"	v
FRONT_AND_BACK	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var FRONT_AND_BACK					  = 0x0408;$/;"	v
FRONT_AND_BACK	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DTriangleFace.hx	/^	inline public static var FRONT_AND_BACK = GL.FRONT_AND_BACK;$/;"	v
FRONT_AND_BACK	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var FRONT_AND_BACK                 = 0x0408;$/;"	v
FRONT_FACE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var FRONT_FACE = 0x0B46;$/;"	v
FRONT_FACE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var FRONT_FACE:Int;$/;"	v
FRONT_FACE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var FRONT_FACE = 0x0B46;$/;"	v
FRONT_FACE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var FRONT_FACE							= 0x0B46;$/;"	v
FRONT_FACE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var FRONT_FACE                     = 0x0B46;$/;"	v
FS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/FS.hx	/^class FS {$/;"	c
FTPPORT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var FTPPORT = 10017;$/;"	v
FTPSSLAUTH	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var FTPSSLAUTH = 129;$/;"	v
FTP_ACCEPT_FAILED	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var FTP_ACCEPT_FAILED = 10;$/;"	v
FTP_ACCEPT_TIMEOUT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var FTP_ACCEPT_TIMEOUT = 12;$/;"	v
FTP_ACCOUNT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var FTP_ACCOUNT = 10134;$/;"	v
FTP_ALTERNATIVE_TO_USER	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var FTP_ALTERNATIVE_TO_USER = 10147;$/;"	v
FTP_BAD_FILE_LIST	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var FTP_BAD_FILE_LIST = 87;$/;"	v
FTP_CANT_GET_HOST	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var FTP_CANT_GET_HOST = 15;$/;"	v
FTP_COULDNT_RETR_FILE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var FTP_COULDNT_RETR_FILE = 19;$/;"	v
FTP_COULDNT_SET_TYPE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var FTP_COULDNT_SET_TYPE = 17;$/;"	v
FTP_COULDNT_USE_REST	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var FTP_COULDNT_USE_REST = 31;$/;"	v
FTP_CREATE_MISSING_DIRS	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var FTP_CREATE_MISSING_DIRS = 110;$/;"	v
FTP_ENTRY_PATH	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var FTP_ENTRY_PATH = 0x100000 + 30;$/;"	v
FTP_FILEMETHOD	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var FTP_FILEMETHOD = 138;$/;"	v
FTP_PORT_FAILED	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var FTP_PORT_FAILED = 30;$/;"	v
FTP_PRET_FAILED	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var FTP_PRET_FAILED = 84;$/;"	v
FTP_RESPONSE_TIMEOUT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var FTP_RESPONSE_TIMEOUT = 112;$/;"	v
FTP_SKIP_PASV_IP	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var FTP_SKIP_PASV_IP = 137;$/;"	v
FTP_SSL_CCC	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var FTP_SSL_CCC = 154;$/;"	v
FTP_USE_EPRT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var FTP_USE_EPRT = 106;$/;"	v
FTP_USE_EPSV	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var FTP_USE_EPSV = 85;$/;"	v
FTP_USE_PRET	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var FTP_USE_PRET = 188;$/;"	v
FTP_WEIRD_227_FORMAT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var FTP_WEIRD_227_FORMAT = 14;$/;"	v
FTP_WEIRD_PASS_REPLY	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var FTP_WEIRD_PASS_REPLY = 11;$/;"	v
FTP_WEIRD_PASV_REPLY	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var FTP_WEIRD_PASV_REPLY = 13;$/;"	v
FTP_WEIRD_SERVER_REPLY	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var FTP_WEIRD_SERVER_REPLY = 8;$/;"	v
FULL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoHintStyle.hx	/^	public var FULL = 4;$/;"	v
FULL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/BitmapFilterType.hx	/^	public static var FULL = "full";$/;"	v
FULLSCREEN	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	static public var FULLSCREEN = 0x0001;$/;"	v
FUNCTION_NOT_FOUND	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var FUNCTION_NOT_FOUND = 41;$/;"	v
FUNC_ADD	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var FUNC_ADD = 0x8006;$/;"	v
FUNC_ADD	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var FUNC_ADD:Int;$/;"	v
FUNC_ADD	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var FUNC_ADD = 0x8006;$/;"	v
FUNC_ADD	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var FUNC_ADD							  = 0x8006;$/;"	v
FUNC_ADD	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var FUNC_ADD                       = 0x8006;$/;"	v
FUNC_REVERSE_SUBTRACT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var FUNC_REVERSE_SUBTRACT = 0x800B;$/;"	v
FUNC_REVERSE_SUBTRACT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var FUNC_REVERSE_SUBTRACT:Int;$/;"	v
FUNC_REVERSE_SUBTRACT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var FUNC_REVERSE_SUBTRACT = 0x800B;$/;"	v
FUNC_REVERSE_SUBTRACT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var FUNC_REVERSE_SUBTRACT			 = 0x800B;$/;"	v
FUNC_REVERSE_SUBTRACT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var FUNC_REVERSE_SUBTRACT          = 0x800B;$/;"	v
FUNC_SUBTRACT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var FUNC_SUBTRACT = 0x800A;$/;"	v
FUNC_SUBTRACT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var FUNC_SUBTRACT:Int;$/;"	v
FUNC_SUBTRACT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var FUNC_SUBTRACT = 0x800A;$/;"	v
FUNC_SUBTRACT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var FUNC_SUBTRACT						= 0x800A;$/;"	v
FUNC_SUBTRACT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var FUNC_SUBTRACT                  = 0x800A;$/;"	v
Fast	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^class Fast {$/;"	c
FastShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/FastShader.hx	/^class FastShader extends AbstractShader {$/;"	c
Features	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/Features.hx	/^class Features$/;"	c
Figure out what to do now density is gone	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^					\/\/TODO: Figure out what to do now density is gone$/;"	i
File	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/File.hx	/^class File {$/;"	c
FileHelper	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^class FileHelper {$/;"	c
FillShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/FillShader.hx	/^class FillShader extends AbstractShader {$/;"	c
FillShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/FillShader.hx	/^class FillShader extends Shader {$/;"	c
FilterManager	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^class FilterManager {$/;"	c
FilterTexture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterTexture.hx	/^class FilterTexture {$/;"	c
Find a way to apply these default attributes and uniforms to other shaders	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/DefaultShader.hx	/^\/\/ TODO Find a way to apply these default attributes and uniforms to other shaders$/;"	i
FirefoxHelper	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^class FirefoxHelper {$/;"	c
FirefoxMarketplace	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^class FirefoxMarketplace {$/;"	c
FirefoxPlatform	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FirefoxPlatform.hx	/^class FirefoxPlatform extends HTML5Platform {$/;"	c
Fix this: webgl can only repeat textures that are power of two	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		\/\/ TODO Fix this: webgl can only repeat textures that are power of two$/;"	i
Flags	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Flags.hx	/^class Flags {$/;"	c
FlashApplication	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashApplication.hx	/^class FlashApplication {$/;"	c
FlashAudioContext	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/FlashAudioContext.hx	/^class FlashAudioContext {$/;"	c
FlashHelper	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^class FlashHelper {$/;"	c
FlashJsConnection	/usr/lib/haxe/std/haxe/remoting/FlashJsConnection.hx	/^class FlashJsConnection #if flash implements AsyncConnection implements Dynamic<AsyncConnection> #end {$/;"	c
FlashMouse	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashMouse.hx	/^class FlashMouse {$/;"	c
FlashPlatform	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FlashPlatform.hx	/^class FlashPlatform extends PlatformTarget {$/;"	c
FlashRenderContext	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^class FlashRenderContext {$/;"	c
FlashRenderer	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashRenderer.hx	/^class FlashRenderer {$/;"	c
FlashWindow	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashWindow.hx	/^class FlashWindow {$/;"	c
Float32Array	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Float32Array.hx	/^class Float32Array extends ArrayBufferView implements ArrayAccess<Float> {$/;"	c
Float32ArrayTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/Float32ArrayTest.hx	/^class Float32ArrayTest {$/;"	c
FocusEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/FocusEvent.hx	/^class FocusEvent extends Event {$/;"	c
FocusEventTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/FocusEventTest.hx	/^class FocusEventTest {$/;"	c
Font	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^class Font {$/;"	c
Font	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^class Font {$/;"	c
Font	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^class Font extends LimeFont {$/;"	c
Font	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^class Font {$/;"	c
FontStyleTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/FontStyleTest.hx	/^class FontStyleTest {$/;"	c
FontTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/FontTest.hx	/^class FontTest {$/;"	c
FontTypeTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/FontTypeTest.hx	/^class FontTypeTest {$/;"	c
Format	/usr/lib/haxe/std/haxe/macro/Format.hx	/^class Format {$/;"	c
Frame	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/Frame.hx	/^class Frame {$/;"	c
FrameHeader	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/FrameHeader.hx	/^class FrameHeader {$/;"	c
FrameLabel	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/FrameLabel.hx	/^class FrameLabel extends EventDispatcher {$/;"	c
G	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2GravityController.hx	/^	public var G:Float;$/;"	v
G	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var G = 0x67;$/;"	v
G	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var G:Int = 71;$/;"	v
G	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var G = 71;$/;"	v
GAIN	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var GAIN:Int = 0x100A;$/;"	v
GAIN	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var GAIN:Int = 0x100A;$/;"	v
GAUSSIAN	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFilter.hx	/^	public var GAUSSIAN = 5;$/;"	v
GEAR_JOINT	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2JointType.hx	/^	var GEAR_JOINT = 6;$/;"	v
GENERATE_MIPMAP_HINT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var GENERATE_MIPMAP_HINT = 0x8192;$/;"	v
GENERATE_MIPMAP_HINT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var GENERATE_MIPMAP_HINT:Int;$/;"	v
GENERATE_MIPMAP_HINT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var GENERATE_MIPMAP_HINT = 0x8192;$/;"	v
GENERATE_MIPMAP_HINT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var GENERATE_MIPMAP_HINT				= 0x8192;$/;"	v
GENERATE_MIPMAP_HINT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var GENERATE_MIPMAP_HINT            = 0x8192;$/;"	v
GEORGIAN	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var GEORGIAN = "Geor";$/;"	v
GEQUAL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var GEQUAL = 0x0206;$/;"	v
GEQUAL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var GEQUAL:Int;$/;"	v
GEQUAL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var GEQUAL = 0x0206;$/;"	v
GEQUAL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var GEQUAL								 = 0x0206;$/;"	v
GEQUAL	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var GEQUAL                         = 0x0206;$/;"	v
GET	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLRequestMethod.hx	/^	var GET = "GET";$/;"	v
GET	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequestMethod.hx	/^	public static inline var GET:String = "GET";$/;"	v
GET	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLRequestMethod.hx	/^	var GET = "GET";$/;"	v
GET_RULES	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^	static var GET_RULES;$/;"	v
GL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^class GL {$/;"	c
GL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^class GL {$/;"	c
GLAGOLITIC	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var GLAGOLITIC = "Glag";$/;"	v
GLActiveInfoTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLActiveInfoTest.hx	/^class GLActiveInfoTest {$/;"	c
GLBitmap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLBitmap.hx	/^class GLBitmap {$/;"	c
GLBucket	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^class GLBucket {$/;"	c
GLBucketData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^class GLBucketData {$/;"	c
GLBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLBuffer.hx	/^class GLBuffer extends GLObject {$/;"	c
GLBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLBuffer.hx	/^class GLBuffer extends GLObject {$/;"	c
GLBufferTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLBufferTest.hx	/^class GLBufferTest {$/;"	c
GLContextAttributesTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLContextAttributesTest.hx	/^class GLContextAttributesTest {$/;"	c
GLFramebuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLFramebuffer.hx	/^class GLFramebuffer extends GLObject {$/;"	c
GLFramebuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLFramebuffer.hx	/^class GLFramebuffer extends GLObject {$/;"	c
GLFramebufferTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLFramebufferTest.hx	/^class GLFramebufferTest {$/;"	c
GLGraphicsData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^class GLGraphicsData {$/;"	c
GLMaskManager	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GLMaskManager.hx	/^class GLMaskManager extends AbstractMaskManager {$/;"	c
GLOBAL	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	static var GLOBAL = null;$/;"	v
GLOBAL_ACK_EINTR	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURL.hx	/^	public static inline var GLOBAL_ACK_EINTR:Int = 1 << 2;$/;"	v
GLOBAL_ALL	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURL.hx	/^	public static inline var GLOBAL_ALL:Int = GLOBAL_SSL | GLOBAL_WIN32;$/;"	v
GLOBAL_DEFAULT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURL.hx	/^	public static inline var GLOBAL_DEFAULT:Int = GLOBAL_ALL;$/;"	v
GLOBAL_NOTHING	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURL.hx	/^	public static inline var GLOBAL_NOTHING:Int = 0;$/;"	v
GLOBAL_SSL	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURL.hx	/^	public static inline var GLOBAL_SSL:Int = 1 << 0;$/;"	v
GLOBAL_WIN32	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURL.hx	/^	public static inline var GLOBAL_WIN32:Int = 1 << 1;$/;"	v
GLObject	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLObject.hx	/^class GLObject {$/;"	c
GLObject	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLObject.hx	/^class GLObject {$/;"	c
GLObjectTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLObjectTest.hx	/^class GLObjectTest {$/;"	c
GLProgram	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLProgram.hx	/^class GLProgram extends GLObject {$/;"	c
GLProgram	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLProgram.hx	/^class GLProgram extends GLObject {$/;"	c
GLProgramTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLProgramTest.hx	/^class GLProgramTest {$/;"	c
GLRenderContext	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^class GLRenderContext {$/;"	c
GLRenderbuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLRenderbuffer.hx	/^class GLRenderbuffer extends GLObject {$/;"	c
GLRenderbuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLRenderbuffer.hx	/^class GLRenderbuffer extends GLObject {$/;"	c
GLRenderbufferTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLRenderbufferTest.hx	/^class GLRenderbufferTest {$/;"	c
GLRenderer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^class GLRenderer extends AbstractRenderer {$/;"	c
GLShader	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLShader.hx	/^class GLShader extends GLObject {$/;"	c
GLShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLShader.hx	/^class GLShader extends GLObject {$/;"	c
GLShaderTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLShaderTest.hx	/^class GLShaderTest {$/;"	c
GLStack	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^class GLStack {$/;"	c
GLTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^class GLTest {$/;"	c
GLTextField	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLTextField.hx	/^class GLTextField {$/;"	c
GLTexture	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLTexture.hx	/^class GLTexture extends GLObject {$/;"	c
GLTexture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLTexture.hx	/^class GLTexture extends GLObject {$/;"	c
GLTextureTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTextureTest.hx	/^class GLTextureTest {$/;"	c
GLUniformLocationTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLUniformLocationTest.hx	/^class GLUniformLocationTest {$/;"	c
GLUtils	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/GLUtils.hx	/^class GLUtils {$/;"	c
GOOD	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoAntialias.hx	/^	public var GOOD = 5;$/;"	v
GOOD	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFilter.hx	/^	public var GOOD = 1;$/;"	v
GOTHIC	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var GOTHIC = "Goth";$/;"	v
GOT_NOTHING	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var GOT_NOTHING = 52;$/;"	v
GRANTHA	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var GRANTHA = "Gran";$/;"	v
GRAVE	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var GRAVE = 0x60;$/;"	v
GRAY	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoAntialias.hx	/^	public var GRAY = 2;$/;"	v
GREATER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var GREATER = 0x0204;$/;"	v
GREATER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var GREATER:Int;$/;"	v
GREATER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var GREATER = 0x0204;$/;"	v
GREATER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var GREATER								= 0x0204;$/;"	v
GREATER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DCompareMode.hx	/^	inline static public var GREATER = GL.GREATER;$/;"	v
GREATER	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var GREATER                        = 0x0204;$/;"	v
GREATER_EQUAL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DCompareMode.hx	/^	inline static public var GREATER_EQUAL = GL.GEQUAL;$/;"	v
GREATER_THAN	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var GREATER_THAN = 0x3E;$/;"	v
GREEK	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var GREEK = "Grek";$/;"	v
GREEN	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapDataChannel.hx	/^	public static inline var GREEN = 2;$/;"	v
GREEN_BITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var GREEN_BITS = 0x0D53;$/;"	v
GREEN_BITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var GREEN_BITS:Int;$/;"	v
GREEN_BITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var GREEN_BITS = 0x0D53;$/;"	v
GREEN_BITS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var GREEN_BITS							= 0x0D53;$/;"	v
GREEN_BITS	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var GREEN_BITS                     = 0x0D53;$/;"	v
GSSAPI_DELEGATION	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var GSSAPI_DELEGATION = 210;$/;"	v
GUIDE	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/GamepadButton.hx	/^	var GUIDE = 5;$/;"	v
GUJARATI	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var GUJARATI = "Gujr";$/;"	v
GURMUKHI	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var GURMUKHI = "Guru";$/;"	v
GameInput	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInput.hx	/^class GameInput extends EventDispatcher {$/;"	c
GameInputControl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInputControl.hx	/^class GameInputControl extends EventDispatcher {$/;"	c
GameInputDevice	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInputDevice.hx	/^class GameInputDevice {$/;"	c
GameInputEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/GameInputEvent.hx	/^class GameInputEvent extends Event {$/;"	c
Gamepad	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Gamepad.hx	/^class Gamepad {$/;"	c
GamepadEventInfo	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^private class GamepadEventInfo {$/;"	c
Gamma0256	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^	function Gamma0256(x) {$/;"	f
Gamma1256	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^	function Gamma1256(x) {$/;"	f
Gc	/usr/lib/haxe/std/neko/vm/Gc.hx	/^class Gc {$/;"	c
GenericCell	/usr/lib/haxe/std/haxe/ds/GenericStack.hx	/^class GenericCell<T> {$/;"	c
GenericStack	/usr/lib/haxe/std/haxe/ds/GenericStack.hx	/^class GenericStack<T> {$/;"	c
GenericStackIterator	/usr/lib/haxe/std/haxe/ds/GenericStack.hx	/^private class GenericStackIterator<T> extends cpp.FastIterator<T> {$/;"	c
GetBodyAtMouse	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^		public function GetBodyAtMouse(includeStatic:Bool = false):B2Body {$/;"	f
GetBodyCallback	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^			function GetBodyCallback(fixture:B2Fixture):Bool$/;"	f
Global	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Global.hx	/^class Global$/;"	c
GlowFilter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/GlowFilter.hx	/^class GlowFilter extends BitmapFilter {$/;"	c
GlowFilter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/GlowFilter.hx	/^class GlowFilter extends BitmapFilter {$/;"	c
GlowFilterTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/GlowFilterTest.hx	/^class GlowFilterTest {$/;"	c
GlyphMetrics	/usr/lib/haxe/lib/lime/2,4,3/lime/text/GlyphMetrics.hx	/^class GlyphMetrics {$/;"	c
GlyphPosition	/usr/lib/haxe/lib/lime/2,4,3/lime/text/GlyphPosition.hx	/^class GlyphPosition {$/;"	c
GradientTypeTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GradientTypeTest.hx	/^class GradientTypeTest {$/;"	c
Graphics	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^class Graphics {$/;"	c
Graphics	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^class Graphics {$/;"	c
GraphicsBitmapFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsBitmapFill.hx	/^class GraphicsBitmapFill extends IGraphicsData implements IGraphicsFill {$/;"	c
GraphicsBitmapFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsBitmapFill.hx	/^class GraphicsBitmapFill implements IGraphicsData implements IGraphicsFill {$/;"	c
GraphicsBitmapFillTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsBitmapFillTest.hx	/^class GraphicsBitmapFillTest {$/;"	c
GraphicsEndFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsEndFill.hx	/^class GraphicsEndFill extends IGraphicsData implements IGraphicsFill {$/;"	c
GraphicsEndFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsEndFill.hx	/^class GraphicsEndFill implements IGraphicsData implements IGraphicsFill {$/;"	c
GraphicsEndFillTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsEndFillTest.hx	/^class GraphicsEndFillTest {$/;"	c
GraphicsGradientFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsGradientFill.hx	/^class GraphicsGradientFill extends IGraphicsData implements IGraphicsFill {$/;"	c
GraphicsGradientFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsGradientFill.hx	/^class GraphicsGradientFill implements IGraphicsData implements IGraphicsFill {$/;"	c
GraphicsGradientFillTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsGradientFillTest.hx	/^class GraphicsGradientFillTest {$/;"	c
GraphicsPath	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsPath.hx	/^class GraphicsPath extends IGraphicsData {$/;"	c
GraphicsPath	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsPath.hx	/^class GraphicsPath implements IGraphicsData implements IGraphicsPath {$/;"	c
GraphicsPathCommand	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsPathCommand.hx	/^class GraphicsPathCommand {$/;"	c
GraphicsPathCommandTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsPathCommandTest.hx	/^class GraphicsPathCommandTest {$/;"	c
GraphicsPathTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsPathTest.hx	/^class GraphicsPathTest {$/;"	c
GraphicsPathWindingTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsPathWindingTest.hx	/^class GraphicsPathWindingTest {$/;"	c
GraphicsRenderer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^class GraphicsRenderer {$/;"	c
GraphicsSolidFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsSolidFill.hx	/^class GraphicsSolidFill extends IGraphicsData implements IGraphicsFill {$/;"	c
GraphicsSolidFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsSolidFill.hx	/^class GraphicsSolidFill implements IGraphicsData implements IGraphicsFill {$/;"	c
GraphicsSolidFillTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsSolidFillTest.hx	/^class GraphicsSolidFillTest {$/;"	c
GraphicsStroke	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsStroke.hx	/^class GraphicsStroke extends IGraphicsData {$/;"	c
GraphicsStroke	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsStroke.hx	/^class GraphicsStroke implements IGraphicsData implements IGraphicsStroke {$/;"	c
GraphicsStrokeTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsStrokeTest.hx	/^class GraphicsStrokeTest {$/;"	c
GraphicsTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^class GraphicsTest {$/;"	c
GridFitTypeTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/GridFitTypeTest.hx	/^class GridFitTypeTest {$/;"	c
Ground	Source/Ground.hx	/^class Ground extends Sprite {$/;"	c
H	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var H = 0x68;$/;"	v
H	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var H:Int = 72;$/;"	v
H	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var H = 72;$/;"	v
HAN	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var HAN = "Hani";$/;"	v
HANGUL	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var HANGUL = "Hang";$/;"	v
HANUNOO	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var HANUNOO = "Hano";$/;"	v
HARDWARE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	static public var HARDWARE = 0x0008;$/;"	v
HARDWARE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public inline static var HARDWARE = 0x0002;$/;"	v
HARD_LIGHT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoOperator.hx	/^	public var HARD_LIGHT = 21;$/;"	v
HASH	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^		var HASH : Array<Int> = [$/;"	v
HASH	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var HASH = 0x23;$/;"	v
HAT_MOVE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/JoystickEvent.hx	/^	public static inline var HAT_MOVE:String = "hatMove";$/;"	v
HAVE_CURRENT_DATA	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public var HAVE_CURRENT_DATA:Int = 2;$/;"	v
HAVE_ENOUGH_DATA	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public var HAVE_ENOUGH_DATA:Int = 4;$/;"	v
HAVE_FUTURE_DATA	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public var HAVE_FUTURE_DATA:Int = 3;$/;"	v
HAVE_METADATA	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public var HAVE_METADATA:Int = 1;$/;"	v
HAVE_NOTHING	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public var HAVE_NOTHING:Int = 0;$/;"	v
HEAD	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLRequestMethod.hx	/^	var HEAD = "HEAD";$/;"	v
HEAD	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequestMethod.hx	/^	public static inline var HEAD:String = "HEAD";$/;"	v
HEAD	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLRequestMethod.hx	/^	var HEAD = "HEAD";$/;"	v
HEADER	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var HEADER = 42;$/;"	v
HEADER	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^	public static inline var HEADER			= 14;$/;"	v
HEADERDATA	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var HEADERDATA = 10029;$/;"	v
HEADERFUNCTION	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var HEADERFUNCTION = 20079;$/;"	v
HEADER_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var HEADER_SIZE = 0x200000 + 11;$/;"	v
HEADER_SIZE	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    static inline var HEADER_SIZE = 4;$/;"	v
HEBREW	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var HEBREW = "Hebr";$/;"	v
HELP	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var HELP = 0x40000075;$/;"	v
HIGH	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/BitmapFilterQuality.hx	/^	public static var HIGH = 3;$/;"	v
HIGH_FLOAT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var HIGH_FLOAT = 0x8DF2;$/;"	v
HIGH_FLOAT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var HIGH_FLOAT:Int;$/;"	v
HIGH_FLOAT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var HIGH_FLOAT = 0x8DF2;$/;"	v
HIGH_FLOAT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var HIGH_FLOAT							= 0x8DF2;$/;"	v
HIGH_FLOAT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var HIGH_FLOAT                     = 0x8DF2;$/;"	v
HIGH_INT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var HIGH_INT = 0x8DF5;$/;"	v
HIGH_INT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var HIGH_INT:Int;$/;"	v
HIGH_INT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var HIGH_INT = 0x8DF5;$/;"	v
HIGH_INT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var HIGH_INT							  = 0x8DF5;$/;"	v
HIGH_INT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var HIGH_INT                       = 0x8DF5;$/;"	v
HIRAGANA	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var HIRAGANA = "Hira";$/;"	v
HMAC_SHA1	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthSignatureMethod.hx	/^	var HMAC_SHA1 = "HMAC-SHA1";$/;"	v
HOME	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var HOME = 0x4000004A;$/;"	v
HOME	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var HOME:Int = 36;$/;"	v
HOME	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var HOME = 36;$/;"	v
HSL_COLOR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoOperator.hx	/^	public var HSL_COLOR = 27;$/;"	v
HSL_HUE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoOperator.hx	/^	public var HSL_HUE = 25;$/;"	v
HSL_LUMINOSITY	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoOperator.hx	/^	public var HSL_LUMINOSITY = 28;$/;"	v
HSL_SATURATION	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoOperator.hx	/^	public var HSL_SATURATION = 26;$/;"	v
HTML5	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Platform.hx	/^	var HTML5 = "html5";$/;"	v
HTML5Application	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Application.hx	/^class HTML5Application {$/;"	c
HTML5AudioContext	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^class HTML5AudioContext {$/;"	c
HTML5Helper	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/HTML5Helper.hx	/^class HTML5Helper {$/;"	c
HTML5Mouse	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Mouse.hx	/^class HTML5Mouse {$/;"	c
HTML5Platform	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/HTML5Platform.hx	/^class HTML5Platform extends PlatformTarget {$/;"	c
HTML5Renderer	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Renderer.hx	/^class HTML5Renderer {$/;"	c
HTML5Window	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^class HTML5Window {$/;"	c
HTTP200ALIASES	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var HTTP200ALIASES = 10104;$/;"	v
HTTPAUTH	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var HTTPAUTH = 107;$/;"	v
HTTPAUTH_AVAIL	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var HTTPAUTH_AVAIL = 0x200000 + 23;$/;"	v
HTTPGET	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var HTTPGET = 80;$/;"	v
HTTPHEADER	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var HTTPHEADER = 10023;$/;"	v
HTTPPOST	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var HTTPPOST = 10024;$/;"	v
HTTPPROXYTUNNEL	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var HTTPPROXYTUNNEL = 61;$/;"	v
HTTPStatusEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/HTTPStatusEvent.hx	/^class HTTPStatusEvent extends Event {$/;"	c
HTTPStatusEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/HTTPStatusEvent.hx	/^class HTTPStatusEvent extends Event {$/;"	c
HTTPStatusEventTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/HTTPStatusEventTest.hx	/^class HTTPStatusEventTest {$/;"	c
HTTP_CONNECTCODE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var HTTP_CONNECTCODE = 0x200000 + 22;$/;"	v
HTTP_CONTENT_DECODING	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var HTTP_CONTENT_DECODING = 158;$/;"	v
HTTP_POST_ERROR	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var HTTP_POST_ERROR = 34;$/;"	v
HTTP_RESPONSE_STATUS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/HTTPStatusEvent.hx	/^	public static var HTTP_RESPONSE_STATUS:String = "httpResponseStatus";$/;"	v
HTTP_RETURNED_ERROR	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var HTTP_RETURNED_ERROR = 22;$/;"	v
HTTP_STATUS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/HTTPStatusEvent.hx	/^	public static var HTTP_STATUS = "httpStatus";$/;"	v
HTTP_STATUS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/HTTPStatusEvent.hx	/^	public static var HTTP_STATUS:String = "httpStatus";$/;"	v
HTTP_TRANSFER_DECODING	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var HTTP_TRANSFER_DECODING = 157;$/;"	v
HTTP_VERSION	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var HTTP_VERSION = 84;$/;"	v
HW_AA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	static public var HW_AA = 0x0020;$/;"	v
HW_AA_HIRES	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	static public var HW_AA_HIRES = 0x0060;$/;"	v
HXProject	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^class HXProject {$/;"	c
Handle ranges using span	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMTextField.hx	/^					\/\/ TODO: Handle ranges using span$/;"	i
Haptic	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/feedback/Haptic.hx	/^class Haptic {$/;"	c
HasAttribAccess	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^private class HasAttribAccess implements Dynamic<Bool> {$/;"	c
HasNodeAccess	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^private class HasNodeAccess implements Dynamic<Bool> {$/;"	c
HaxeError	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^private class HaxeError extends js.Error {$/;"	c
Haxelib	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Haxelib.hx	/^class Haxelib {$/;"	c
Header	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Header.hx	/^class Header {$/;"	c
Hmac	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Hmac.hx	/^class Hmac {$/;"	c
Http	/usr/lib/haxe/std/haxe/Http.hx	/^class Http {$/;"	c
HttpAsyncConnection	/usr/lib/haxe/std/haxe/remoting/HttpAsyncConnection.hx	/^class HttpAsyncConnection implements AsyncConnection implements Dynamic<AsyncConnection> {$/;"	c
HttpConnection	/usr/lib/haxe/std/haxe/remoting/HttpConnection.hx	/^class HttpConnection implements Connection implements Dynamic<Connection> {$/;"	c
HuffTools	/usr/lib/haxe/std/haxe/zip/Huffman.hx	/^class HuffTools {$/;"	c
HybridStage	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^class HybridStage extends ManagedStage implements IModule {$/;"	c
I	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2MassData.hx	/^	public var I:Float;$/;"	v
I	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var I:Float = 0.0;$/;"	v
I	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var I = 0x69;$/;"	v
I	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var I:Int = 73;$/;"	v
I	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var I = 73;$/;"	v
IAssetCache	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^interface IAssetCache {$/;"	i
IBitmapDrawable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/IBitmapDrawable.hx	/^interface IBitmapDrawable {$/;"	i
IBitmapDrawable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/IBitmapDrawable.hx	/^interface IBitmapDrawable {$/;"	i
IBroadPhase	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/IBroadPhase.hx	/^interface IBroadPhase $/;"	i
ID	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/Shader.hx	/^	public var ID(default, null):Int;$/;"	v
ID	/usr/lib/haxe/std/haxe/remoting/LocalConnection.hx	/^	static var ID = 0;$/;"	v
ID	/usr/lib/haxe/std/haxe/remoting/SocketWrapper.hx	/^	static var ID = 0;$/;"	v
ID3	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public static var ID3 = "id3";$/;"	v
ID3	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public static var ID3 = "id3";$/;"	v
ID3Info	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/ID3Info.hx	/^class ID3Info {$/;"	c
ID3InfoTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/ID3InfoTest.hx	/^class ID3InfoTest {$/;"	c
IDataInput	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/IDataInput.hx	/^interface IDataInput {$/;"	i
IDataInput	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IDataInput.hx	/^interface IDataInput {$/;"	i
IDataInput	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataInput.hx	/^interface IDataInput {$/;"	i
IDataOutput	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IDataOutput.hx	/^interface IDataOutput {$/;"	i
IDataOutput	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataOutput.hx	/^interface IDataOutput {$/;"	i
IEventDispatcher	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/IEventDispatcher.hx	/^interface IEventDispatcher {$/;"	i
IEventDispatcher	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/IEventDispatcher.hx	/^interface IEventDispatcher {$/;"	i
IExternalizable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IExternalizable.hx	/^interface IExternalizable {$/;"	i
IGNORE_CONTENT_LENGTH	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var IGNORE_CONTENT_LENGTH = 10136;$/;"	v
IGNORE_SPACES	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^	public static inline var IGNORE_SPACES 	= 0;$/;"	v
IGraphicsData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/IGraphicsData.hx	/^class IGraphicsData {$/;"	c
IGraphicsData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/IGraphicsData.hx	/^interface IGraphicsData {$/;"	i
IGraphicsFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/IGraphicsFill.hx	/^interface IGraphicsFill {$/;"	i
IGraphicsFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/IGraphicsFill.hx	/^interface IGraphicsFill {$/;"	i
IGraphicsPath	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/IGraphicsPath.hx	/^interface IGraphicsPath { }$/;"	i
IGraphicsStroke	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/IGraphicsStroke.hx	/^interface IGraphicsStroke { }$/;"	i
IMAGE	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	var IMAGE = "IMAGE";$/;"	v
IMAGE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	var IMAGE = "IMAGE";$/;"	v
IMPERIAL_ARAMAIC	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var IMPERIAL_ARAMAIC = "Armi";$/;"	v
IMap	/usr/lib/haxe/std/Map.hx	/^interface IMap<K,V> {$/;"	i
IMemoryRange	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/IMemoryRange.hx	/^interface IMemoryRange {$/;"	i
IMemoryRange	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IMemoryRange.hx	/^interface IMemoryRange {$/;"	i
IMemoryRange	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IMemoryRange.hx	/^interface IMemoryRange {$/;"	i
IModule	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^interface IModule {$/;"	i
IN	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoOperator.hx	/^	public var IN = 3;$/;"	v
IN	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/FocusEventTest.hx	/^		var  IN = FocusEvent.FOCUS_IN;$/;"	v
INACTIVE_LIMIT	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LimitState.hx	/^	var INACTIVE_LIMIT = 0;$/;"	v
INCR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var INCR = 0x1E02;$/;"	v
INCR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var INCR:Int;$/;"	v
INCR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var INCR = 0x1E02;$/;"	v
INCR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var INCR									= 0x1E02;$/;"	v
INCR	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var INCR                           = 0x1E02;$/;"	v
INCREMENT_SATURATE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DStencilAction.hx	/^	public static inline var INCREMENT_SATURATE = GL.INCR;$/;"	v
INCREMENT_WRAP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DStencilAction.hx	/^	public static inline var INCREMENT_WRAP = GL.INCR_WRAP;$/;"	v
INCR_WRAP	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var INCR_WRAP = 0x8507;$/;"	v
INCR_WRAP	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var INCR_WRAP:Int;$/;"	v
INCR_WRAP	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var INCR_WRAP = 0x8507;$/;"	v
INCR_WRAP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var INCR_WRAP							 = 0x8507;$/;"	v
INCR_WRAP	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var INCR_WRAP                      = 0x8507;$/;"	v
INFILESIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var INFILESIZE = 14;$/;"	v
INFILESIZE_LARGE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var INFILESIZE_LARGE = 30115;$/;"	v
INHERITED	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var INHERITED = "Zinh";$/;"	v
INIT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public static var INIT = "init";$/;"	v
INIT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public static var INIT = "init";$/;"	v
INITIAL	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var INITIAL:Int = 0x1011;$/;"	v
INITIAL	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var INITIAL:Int = 0x1011;$/;"	v
INNER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/BitmapFilterType.hx	/^	public static var INNER = "inner";$/;"	v
INSCRIPTIONAL_PAHLAVI	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var INSCRIPTIONAL_PAHLAVI = "Phli";$/;"	v
INSCRIPTIONAL_PARTHIAN	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var INSCRIPTIONAL_PARTHIAN = "Prti";$/;"	v
INSERT	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var INSERT = 0x40000049;$/;"	v
INSERT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var INSERT:Int = 45;$/;"	v
INSERT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var INSERT = 45;$/;"	v
INT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var INT = 0x1404;$/;"	v
INT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var INT:Int;$/;"	v
INT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var INT = 0x1404;$/;"	v
INT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var INT									 = 0x1404;$/;"	v
INT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var INT                            = 0x1404;$/;"	v
INTERFACE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var INTERFACE = 10062;$/;"	v
INTERFACE_FAILED	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var INTERFACE_FAILED = 45;$/;"	v
INTERLEAVEDATA	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var INTERLEAVEDATA = 10195;$/;"	v
INTERLEAVEFUNCTION	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var INTERLEAVEFUNCTION = 20196;$/;"	v
INTERRUPT_ANY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static inline var INTERRUPT_ANY:String = "any";$/;"	v
INTERRUPT_EARLY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static inline var INTERRUPT_EARLY:String = "early";$/;"	v
INTERRUPT_LATE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static inline var INTERRUPT_LATE:String = "late";$/;"	v
INTERRUPT_NONE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static inline var INTERRUPT_NONE:String = "none";$/;"	v
INT_VEC2	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var INT_VEC2 = 0x8B53;$/;"	v
INT_VEC2	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var INT_VEC2:Int;$/;"	v
INT_VEC2	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var INT_VEC2 = 0x8B53;$/;"	v
INT_VEC2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var INT_VEC2							  = 0x8B53;$/;"	v
INT_VEC2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var INT_VEC2                       = 0x8B53;$/;"	v
INT_VEC3	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var INT_VEC3 = 0x8B54;$/;"	v
INT_VEC3	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var INT_VEC3:Int;$/;"	v
INT_VEC3	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var INT_VEC3 = 0x8B54;$/;"	v
INT_VEC3	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var INT_VEC3							  = 0x8B54;$/;"	v
INT_VEC3	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var INT_VEC3                       = 0x8B54;$/;"	v
INT_VEC4	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var INT_VEC4 = 0x8B55;$/;"	v
INT_VEC4	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var INT_VEC4:Int;$/;"	v
INT_VEC4	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var INT_VEC4 = 0x8B55;$/;"	v
INT_VEC4	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var INT_VEC4							  = 0x8B55;$/;"	v
INT_VEC4	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var INT_VEC4                       = 0x8B55;$/;"	v
INVALID	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFormat.hx	/^	public var INVALID = -1;$/;"	v
INVALID	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextDirection.hx	/^	var INVALID = 0;$/;"	v
INVALID_CLUSTERS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var INVALID_CLUSTERS = 29;$/;"	v
INVALID_CONTENT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var INVALID_CONTENT = 15;$/;"	v
INVALID_CONTEXT	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public var INVALID_CONTEXT:Int = 0xA002;$/;"	v
INVALID_CONTEXT	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static inline var INVALID_CONTEXT:Int = 0xA002;$/;"	v
INVALID_DASH	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var INVALID_DASH = 19;$/;"	v
INVALID_DEVICE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public var INVALID_DEVICE:Int = 0xA001;$/;"	v
INVALID_DEVICE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static inline var INVALID_DEVICE:Int = 0xA001;$/;"	v
INVALID_DSC_COMMENT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var INVALID_DSC_COMMENT = 20;$/;"	v
INVALID_ENUM	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var INVALID_ENUM:Int = 0xA002;$/;"	v
INVALID_ENUM	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public var INVALID_ENUM:Int = 0xA003;$/;"	v
INVALID_ENUM	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var INVALID_ENUM:Int = 0xA002;$/;"	v
INVALID_ENUM	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static inline var INVALID_ENUM:Int = 0xA003;$/;"	v
INVALID_ENUM	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var INVALID_ENUM = 0x0500;$/;"	v
INVALID_ENUM	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var INVALID_ENUM:Int;$/;"	v
INVALID_ENUM	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var INVALID_ENUM = 0x0500;$/;"	v
INVALID_ENUM	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var INVALID_ENUM						 = 0x0500;$/;"	v
INVALID_ENUM	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var INVALID_ENUM                   = 0x0500;$/;"	v
INVALID_FORMAT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var INVALID_FORMAT = 16;$/;"	v
INVALID_FRAMEBUFFER_OPERATION	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var INVALID_FRAMEBUFFER_OPERATION = 0x0506;$/;"	v
INVALID_FRAMEBUFFER_OPERATION	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var INVALID_FRAMEBUFFER_OPERATION:Int;$/;"	v
INVALID_FRAMEBUFFER_OPERATION	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var INVALID_FRAMEBUFFER_OPERATION = 0x0506;$/;"	v
INVALID_FRAMEBUFFER_OPERATION	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var INVALID_FRAMEBUFFER_OPERATION  = 0x0506;$/;"	v
INVALID_FRAMEBUFFER_OPERATION	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var INVALID_FRAMEBUFFER_OPERATION  = 0x0506;$/;"	v
INVALID_INDEX	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var INVALID_INDEX = 21;$/;"	v
INVALID_MATRIX	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var INVALID_MATRIX = 5;$/;"	v
INVALID_MESH_CONSTRUCTION	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var INVALID_MESH_CONSTRUCTION = 36;$/;"	v
INVALID_NAME	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var INVALID_NAME:Int = 0xA001;$/;"	v
INVALID_NAME	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var INVALID_NAME:Int = 0xA001;$/;"	v
INVALID_OPERATION	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var INVALID_OPERATION:Int = 0xA004;$/;"	v
INVALID_OPERATION	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var INVALID_OPERATION:Int = 0xA004;$/;"	v
INVALID_OPERATION	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var INVALID_OPERATION = 0x0502;$/;"	v
INVALID_OPERATION	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var INVALID_OPERATION:Int;$/;"	v
INVALID_OPERATION	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var INVALID_OPERATION = 0x0502;$/;"	v
INVALID_OPERATION	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var INVALID_OPERATION				  = 0x0502;$/;"	v
INVALID_OPERATION	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var INVALID_OPERATION              = 0x0502;$/;"	v
INVALID_PATH_DATA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var INVALID_PATH_DATA = 9;$/;"	v
INVALID_POP_GROUP	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var INVALID_POP_GROUP = 3;$/;"	v
INVALID_RESTORE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var INVALID_RESTORE = 2;$/;"	v
INVALID_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var INVALID_SIZE = 32;$/;"	v
INVALID_SLANT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var INVALID_SLANT = 30;$/;"	v
INVALID_STATUS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var INVALID_STATUS = 6;$/;"	v
INVALID_STRIDE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var INVALID_STRIDE = 24;$/;"	v
INVALID_STRING	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var INVALID_STRING = 8;$/;"	v
INVALID_VALUE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var INVALID_VALUE:Int = 0xA003;$/;"	v
INVALID_VALUE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public var INVALID_VALUE:Int = 0xA004;$/;"	v
INVALID_VALUE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var INVALID_VALUE:Int = 0xA003;$/;"	v
INVALID_VALUE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static inline var INVALID_VALUE:Int = 0xA004;$/;"	v
INVALID_VALUE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var INVALID_VALUE = 0x0501;$/;"	v
INVALID_VALUE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var INVALID_VALUE:Int;$/;"	v
INVALID_VALUE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var INVALID_VALUE = 0x0501;$/;"	v
INVALID_VALUE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var INVALID_VALUE						= 0x0501;$/;"	v
INVALID_VALUE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var INVALID_VALUE                  = 0x0501;$/;"	v
INVALID_VISUAL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var INVALID_VISUAL = 17;$/;"	v
INVALID_WEIGHT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var INVALID_WEIGHT = 31;$/;"	v
INVERSE_DISTANCE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var INVERSE_DISTANCE:Int = 0xD001;$/;"	v
INVERSE_DISTANCE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var INVERSE_DISTANCE:Int = 0xD001;$/;"	v
INVERSE_DISTANCE_CLAMPED	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var INVERSE_DISTANCE_CLAMPED:Int = 0xD002;$/;"	v
INVERSE_DISTANCE_CLAMPED	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var INVERSE_DISTANCE_CLAMPED:Int = 0xD002;$/;"	v
INVERT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var INVERT = 0x150A;$/;"	v
INVERT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var INVERT:Int;$/;"	v
INVERT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var INVERT = 0x150A;$/;"	v
INVERT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var INVERT								 = 0x150A;$/;"	v
INVERT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DStencilAction.hx	/^	public static inline var INVERT = GL.INVERT;$/;"	v
INVERT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var INVERT                         = 0x150A;$/;"	v
IOCTLDATA	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var IOCTLDATA = 10131;$/;"	v
IOCTLFUNCTION	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var IOCTLFUNCTION = 20130;$/;"	v
IOError	/usr/lib/haxe/lib/openfl/3,0,8/openfl/errors/IOError.hx	/^class IOError extends Error {$/;"	c
IOErrorEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/IOErrorEvent.hx	/^class IOErrorEvent extends ErrorEvent {$/;"	c
IOErrorEventTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/IOErrorEventTest.hx	/^class IOErrorEventTest {$/;"	c
IOS	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Platform.hx	/^	var IOS = "ios";$/;"	v
IOSHelper	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^class IOSHelper {$/;"	c
IOSPlatform	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^class IOSPlatform extends PlatformTarget {$/;"	c
IO_ERROR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/IOErrorEvent.hx	/^	public static var IO_ERROR = "ioError";$/;"	v
IPRESOLVE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var IPRESOLVE = 113;$/;"	v
ISSUERCERT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var ISSUERCERT = 10170;$/;"	v
Icon	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Icon.hx	/^class Icon {$/;"	c
IconHelper	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^class IconHelper {$/;"	c
IllegalOperationError	/usr/lib/haxe/lib/openfl/3,0,8/openfl/errors/IllegalOperationError.hx	/^class IllegalOperationError extends Error {$/;"	c
IllegalOperationErrorTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/IllegalOperationErrorTest.hx	/^class IllegalOperationErrorTest {$/;"	c
Image	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^class Image {$/;"	c
ImageBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ImageBuffer.hx	/^class ImageBuffer {$/;"	c
ImageCanvasUtil	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageCanvasUtil.hx	/^class ImageCanvasUtil {$/;"	c
ImageDataUtil	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^class ImageDataUtil {$/;"	c
ImageHelper	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ImageHelper.hx	/^class ImageHelper {$/;"	c
IndexBuffer3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/IndexBuffer3D.hx	/^class IndexBuffer3D {$/;"	c
InflateImpl	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^class InflateImpl {$/;"	c
Info	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/Info.hx	/^class Info {$/;"	c
Inherit from InteractiveObject, not DisplayObjectContainer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/SimpleButton.hx	/^		\/\/ TODO: Inherit from InteractiveObject, not DisplayObjectContainer$/;"	i
Input	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^	class Input{$/;"	c
Input	/usr/lib/haxe/std/haxe/io/Input.hx	/^class Input {$/;"	c
Int16Array	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Int16Array.hx	/^class Int16Array extends ArrayBufferView implements ArrayAccess<Int> {$/;"	c
Int16ArrayTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/Int16ArrayTest.hx	/^class Int16ArrayTest {$/;"	c
Int32Array	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Int32Array.hx	/^class Int32Array extends ArrayBufferView implements ArrayAccess<Int> {$/;"	c
Int32ArrayTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/Int32ArrayTest.hx	/^class Int32ArrayTest {$/;"	c
Int64	/usr/lib/haxe/std/haxe/Int64.hx	/^class Int64 {$/;"	c
IntIterator	/usr/lib/haxe/std/IntIterator.hx	/^class IntIterator {$/;"	c
InteractiveObject	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/InteractiveObject.hx	/^class InteractiveObject extends DisplayObject {$/;"	c
InteractiveObject	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/InteractiveObject.hx	/^class InteractiveObject extends DisplayObject {$/;"	c
InteractiveObjectTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/InteractiveObjectTest.hx	/^class InteractiveObjectTest {$/;"	c
InterpolationMethodTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/InterpolationMethodTest.hx	/^class InterpolationMethodTest {$/;"	c
It is used somewhere?	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^		\/\/ NOTE: It is used somewhere?$/;"	i
J	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var J = 0x6A;$/;"	v
J	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var J:Int = 74;$/;"	v
J	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var J = 74;$/;"	v
JAVANESE	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var JAVANESE = "Java";$/;"	v
JBIG2_GLOBAL_MISSING	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var JBIG2_GLOBAL_MISSING = 38;$/;"	v
JNI	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/JNI.hx	/^class JNI {$/;"	c
JNI	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^class JNI {$/;"	c
JNIMemberField	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^class JNIMemberField {$/;"	c
JNIMethod	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^class JNIMethod {$/;"	c
JNIStaticField	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^class JNIStaticField {$/;"	c
JPEG	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/format/JPEG.hx	/^class JPEG {$/;"	c
JPEGEncoderOptions	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/JPEGEncoderOptions.hx	/^class JPEGEncoderOptions {$/;"	c
JUSTIFY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextFormatAlign.hx	/^	public static var JUSTIFY = "justify";$/;"	v
JavaExternGenerator	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^class JavaExternGenerator$/;"	c
JavaHelper	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/JavaHelper.hx	/^class JavaHelper {$/;"	c
JointStyleTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/JointStyleTest.hx	/^class JointStyleTest {$/;"	c
JoystickEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/JoystickEvent.hx	/^class JoystickEvent extends Event {$/;"	c
JoystickEventTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/JoystickEventTest.hx	/^class JoystickEventTest {$/;"	c
Json	/usr/lib/haxe/std/haxe/Json.hx	/^class Json {$/;"	c
JsonParser	/usr/lib/haxe/std/haxe/format/JsonParser.hx	/^class JsonParser {$/;"	c
JsonPrinter	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^class JsonPrinter {$/;"	c
K	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactConstraint.hx	/^	public var K:B2Mat22;$/;"	v
K	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^		var K:B2Mat22 = new B2Mat22();$/;"	v
K	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^		var K:Float = 0.0;$/;"	v
K	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^	private var K:B2Mat22;$/;"	v
K	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	private var K:B2Mat22;$/;"	v
K	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^		var K : Array<Int> = [$/;"	v
K	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var K = 0x6B;$/;"	v
K	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var K:Int = 75;$/;"	v
K	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var K = 75;$/;"	v
K1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^	private var K1:B2Mat22;$/;"	v
K1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	private var K1:B2Mat22;$/;"	v
K2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^	private var K2:B2Mat22;$/;"	v
K2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	private var K2:B2Mat22;$/;"	v
K3	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	private var K3:B2Mat22;$/;"	v
KAITHI	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var KAITHI = "Kthi";$/;"	v
KANNADA	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var KANNADA = "Knda";$/;"	v
KATAKANA	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var KATAKANA = "Kana";$/;"	v
KAYAH_LI	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var KAYAH_LI = "Kali";$/;"	v
KEEP	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var KEEP = 0x1E00;$/;"	v
KEEP	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var KEEP:Int;$/;"	v
KEEP	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var KEEP = 0x1E00;$/;"	v
KEEP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var KEEP									= 0x1E00;$/;"	v
KEEP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DStencilAction.hx	/^	public static inline var KEEP = GL.KEEP;$/;"	v
KEEP	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var KEEP                           = 0x1E00;$/;"	v
KEYPASSWD	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var KEYPASSWD = 10026;$/;"	v
KEYWORDS	/usr/lib/haxe/std/sys/db/Manager.hx	/^	private static var KEYWORDS = {$/;"	v
KEY_DOWN	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	var KEY_DOWN = 0;$/;"	v
KEY_DOWN	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/KeyboardEvent.hx	/^	public static var KEY_DOWN = "keyDown";$/;"	v
KEY_DOWN	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/KeyboardEvent.hx	/^	public static var KEY_DOWN = "keyDown";$/;"	v
KEY_FOCUS_CHANGE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/FocusEvent.hx	/^	public static var KEY_FOCUS_CHANGE = "keyFocusChange";$/;"	v
KEY_UP	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	var KEY_UP = 1;$/;"	v
KEY_UP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/KeyboardEvent.hx	/^	public static var KEY_UP = "keyUp";$/;"	v
KEY_UP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/KeyboardEvent.hx	/^	public static var KEY_UP = "keyUp";$/;"	v
KHAROSHTHI	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var KHAROSHTHI = "Khar";$/;"	v
KHMER	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var KHMER = "Khmr";$/;"	v
KHOJKI	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var KHOJKI = "Khoj";$/;"	v
KHUDAWADI	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var KHUDAWADI = "Sind";$/;"	v
KINEMATIC_BODY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2BodyType.hx	/^	var KINEMATIC_BODY = 1;$/;"	v
KRBLEVEL	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var KRBLEVEL = 10063;$/;"	v
KeyEventInfo	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^private class KeyEventInfo {$/;"	c
Keyboard	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^class Keyboard {$/;"	c
Keyboard	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^class Keyboard {$/;"	c
KeyboardEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/KeyboardEvent.hx	/^class KeyboardEvent extends Event {$/;"	c
KeyboardEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/KeyboardEvent.hx	/^class KeyboardEvent extends Event {$/;"	c
KeyboardEventTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/KeyboardEventTest.hx	/^class KeyboardEventTest {$/;"	c
KeyboardTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/ui/KeyboardTest.hx	/^class KeyboardTest {$/;"	c
Keystore	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Keystore.hx	/^class Keystore {$/;"	c
Ki	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Hmac.hx	/^		var Ki = new haxe.io.BytesBuffer();$/;"	v
Ko	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Hmac.hx	/^		var Ko = new haxe.io.BytesBuffer();$/;"	v
L	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var L = 0x6C;$/;"	v
L	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var L:Int = 76;$/;"	v
L	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var L = 76;$/;"	v
L1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^			var L1:Float = m_impulse.x * m_s1     + (m_motorImpulse + m_impulse.y) * m_a1;$/;"	v
L1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var L1:Float = impulse.x * m_s1 + impulse.y * m_a1;$/;"	v
L1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var L1:Float;$/;"	v
L1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^			var L1:Float = m_impulse.x * m_s1 + m_impulse.y + (m_motorImpulse + m_impulse.z) * m_a1;$/;"	v
L1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var L1:Float = impulse.x * m_s1 + impulse.y + impulse.z * m_a1;$/;"	v
L1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var L1:Float;$/;"	v
L2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^			var L2:Float = m_impulse.x * m_s2     + (m_motorImpulse + m_impulse.y) * m_a2; $/;"	v
L2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var L2:Float = impulse.x * m_s2 + impulse.y * m_a2;$/;"	v
L2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var L2:Float;$/;"	v
L2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^			var L2:Float = m_impulse.x * m_s2 + m_impulse.y + (m_motorImpulse + m_impulse.z) * m_a2; $/;"	v
L2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var L2:Float = impulse.x * m_s2 + impulse.y + impulse.z * m_a2;$/;"	v
L2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var L2:Float;$/;"	v
LAO	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var LAO = "Laoo";$/;"	v
LASTSOCKET	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var LASTSOCKET = 0x200000 + 29;$/;"	v
LATIN	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var LATIN = "Latn";$/;"	v
LDAP_CANNOT_BIND	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var LDAP_CANNOT_BIND = 38;$/;"	v
LDAP_INVALID_URL	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var LDAP_INVALID_URL = 62;$/;"	v
LDAP_SEARCH_FAILED	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var LDAP_SEARCH_FAILED = 39;$/;"	v
LEADING	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var LEADING = 3;$/;"	v
LEFT	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var LEFT = 0x40000050;$/;"	v
LEFT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextFormatAlign.hx	/^	public static var LEFT = "left";$/;"	v
LEFT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var LEFT:Int = 37;$/;"	v
LEFT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/KeyLocation.hx	/^	var LEFT = 1;$/;"	v
LEFT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var LEFT = 37;$/;"	v
LEFTBRACKET	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var LEFTBRACKET:Int = 219;$/;"	v
LEFTBRACKET	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var LEFTBRACKET = 219;$/;"	v
LEFT_ALT	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var LEFT_ALT = 0x400000E2;$/;"	v
LEFT_ALT	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	public static inline var LEFT_ALT:KeyModifier = 0x0100;$/;"	v
LEFT_BRACKET	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var LEFT_BRACKET = 0x5B;$/;"	v
LEFT_CTRL	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var LEFT_CTRL = 0x400000E0;$/;"	v
LEFT_CTRL	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	public static inline var LEFT_CTRL:KeyModifier = 0x0040;$/;"	v
LEFT_META	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var LEFT_META = 0x400000E3;$/;"	v
LEFT_META	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	public static inline var LEFT_META:KeyModifier = 0x0400;$/;"	v
LEFT_PARENTHESIS	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var LEFT_PARENTHESIS = 0x28;$/;"	v
LEFT_SHIFT	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var LEFT_SHIFT = 0x400000E1;$/;"	v
LEFT_SHIFT	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	public static inline var LEFT_SHIFT:KeyModifier = 0x0001;$/;"	v
LEFT_SHOULDER	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/GamepadButton.hx	/^	var LEFT_SHOULDER = 9;$/;"	v
LEFT_STICK	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/GamepadButton.hx	/^	var LEFT_STICK = 7;$/;"	v
LEFT_TO_RIGHT	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextDirection.hx	/^	var LEFT_TO_RIGHT = 4;$/;"	v
LEFT_X	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/GamepadAxis.hx	/^	var LEFT_X = 0;$/;"	v
LEFT_Y	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/GamepadAxis.hx	/^	var LEFT_Y = 1;$/;"	v
LEN_BASE_VAL_TBL	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	static var LEN_BASE_VAL_TBL = [3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258];$/;"	v
LEN_EXTRA_BITS_TBL	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	static var LEN_EXTRA_BITS_TBL = [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,-1,-1];$/;"	v
LEPCHA	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var LEPCHA = "Lepc";$/;"	v
LEQUAL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var LEQUAL = 0x0203;$/;"	v
LEQUAL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var LEQUAL:Int;$/;"	v
LEQUAL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var LEQUAL = 0x0203;$/;"	v
LEQUAL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var LEQUAL								 = 0x0203;$/;"	v
LEQUAL	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var LEQUAL                         = 0x0203;$/;"	v
LESS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var LESS = 0x0201;$/;"	v
LESS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var LESS:Int;$/;"	v
LESS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var LESS = 0x0201;$/;"	v
LESS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var LESS									= 0x0201;$/;"	v
LESS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DCompareMode.hx	/^	inline static public var LESS = GL.LESS;$/;"	v
LESS	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var LESS                           = 0x0201;$/;"	v
LESS_EQUAL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DCompareMode.hx	/^	inline static public var LESS_EQUAL = GL.LEQUAL; \/\/ TODO : wrong value$/;"	v
LESS_THAN	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var LESS_THAN = 0x3C;$/;"	v
LIGHTEN	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoOperator.hx	/^	public var LIGHTEN = 18;$/;"	v
LIMBU	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var LIMBU = "Limb";$/;"	v
LINEAR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var LINEAR = 0x2601;$/;"	v
LINEAR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var LINEAR:Int;$/;"	v
LINEAR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var LINEAR = 0x2601;$/;"	v
LINEAR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var LINEAR								 = 0x2601;$/;"	v
LINEAR	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var LINEAR                         = 0x2601;$/;"	v
LINEAR_A	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var LINEAR_A = "Lina";$/;"	v
LINEAR_B	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var LINEAR_B = "Linb";$/;"	v
LINEAR_DISTANCE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var LINEAR_DISTANCE:Int = 0xD003;$/;"	v
LINEAR_DISTANCE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var LINEAR_DISTANCE:Int = 0xD003;$/;"	v
LINEAR_DISTANCE_CLAMPED	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var LINEAR_DISTANCE_CLAMPED:Int = 0xD004;$/;"	v
LINEAR_DISTANCE_CLAMPED	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var LINEAR_DISTANCE_CLAMPED:Int = 0xD004;$/;"	v
LINEAR_MIPMAP_LINEAR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var LINEAR_MIPMAP_LINEAR = 0x2703;$/;"	v
LINEAR_MIPMAP_LINEAR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var LINEAR_MIPMAP_LINEAR:Int;$/;"	v
LINEAR_MIPMAP_LINEAR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var LINEAR_MIPMAP_LINEAR = 0x2703;$/;"	v
LINEAR_MIPMAP_LINEAR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var LINEAR_MIPMAP_LINEAR			  = 0x2703;$/;"	v
LINEAR_MIPMAP_LINEAR	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var LINEAR_MIPMAP_LINEAR           = 0x2703;$/;"	v
LINEAR_MIPMAP_NEAREST	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var LINEAR_MIPMAP_NEAREST = 0x2701;$/;"	v
LINEAR_MIPMAP_NEAREST	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var LINEAR_MIPMAP_NEAREST:Int;$/;"	v
LINEAR_MIPMAP_NEAREST	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var LINEAR_MIPMAP_NEAREST = 0x2701;$/;"	v
LINEAR_MIPMAP_NEAREST	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var LINEAR_MIPMAP_NEAREST			 = 0x2701;$/;"	v
LINEAR_MIPMAP_NEAREST	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var LINEAR_MIPMAP_NEAREST          = 0x2701;$/;"	v
LINES	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var LINES = 0x0001;$/;"	v
LINES	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var LINES:Int;$/;"	v
LINES	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var LINES = 0x0001;$/;"	v
LINES	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var LINES								  = 0x0001;$/;"	v
LINES	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var LINES                          = 0x0001;$/;"	v
LINE_HEIGHT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var LINE_HEIGHT = 2;$/;"	v
LINE_JOINT	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2JointType.hx	/^	var LINE_JOINT = 7;$/;"	v
LINE_LOOP	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var LINE_LOOP = 0x0002;$/;"	v
LINE_LOOP	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var LINE_LOOP:Int;$/;"	v
LINE_LOOP	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var LINE_LOOP = 0x0002;$/;"	v
LINE_LOOP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var LINE_LOOP							 = 0x0002;$/;"	v
LINE_LOOP	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var LINE_LOOP                      = 0x0002;$/;"	v
LINE_STRIP	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var LINE_STRIP = 0x0003;$/;"	v
LINE_STRIP	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var LINE_STRIP:Int;$/;"	v
LINE_STRIP	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var LINE_STRIP = 0x0003;$/;"	v
LINE_STRIP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var LINE_STRIP							= 0x0003;$/;"	v
LINE_STRIP	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var LINE_STRIP                     = 0x0003;$/;"	v
LINE_TO	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsPathCommand.hx	/^	public static inline var LINE_TO = 2;$/;"	v
LINE_WIDTH	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var LINE_WIDTH = 0x0B21;$/;"	v
LINE_WIDTH	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var LINE_WIDTH:Int;$/;"	v
LINE_WIDTH	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var LINE_WIDTH = 0x0B21;$/;"	v
LINE_WIDTH	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var LINE_WIDTH							= 0x0B21;$/;"	v
LINE_WIDTH	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var LINE_WIDTH                     = 0x0B21;$/;"	v
LINK	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TextEvent.hx	/^	public static var LINK:String = "link";$/;"	v
LINK_STATUS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var LINK_STATUS = 0x8B82;$/;"	v
LINK_STATUS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var LINK_STATUS:Int;$/;"	v
LINK_STATUS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var LINK_STATUS = 0x8B82;$/;"	v
LINK_STATUS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var LINK_STATUS							 = 0x8B82;$/;"	v
LINK_STATUS	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var LINK_STATUS                      = 0x8B82;$/;"	v
LINUX	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Platform.hx	/^	var LINUX = "linux";$/;"	v
LISU	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var LISU = "Lisu";$/;"	v
LITTLE_ENDIAN	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/Endian.hx	/^	public static inline var LITTLE_ENDIAN:String = "littleEndian";$/;"	v
LN2	/usr/lib/haxe/std/haxe/io/Output.hx	/^	private static var LN2 = Math.log(2);$/;"	v
LOCALPORT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var LOCALPORT = 139;$/;"	v
LOCALPORTRANGE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var LOCALPORTRANGE = 140;$/;"	v
LOCAL_FILE_HEADER_FIELDS_SIZE	/usr/lib/haxe/std/haxe/zip/Writer.hx	/^	inline static var LOCAL_FILE_HEADER_FIELDS_SIZE = 30;$/;"	v
LOCAL_IP	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var LOCAL_IP = 0x100000 + 41;$/;"	v
LOCAL_PORT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var LOCAL_PORT = 0x200000 + 42;$/;"	v
LOCAL_TRUSTED	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Security.hx	/^	public static var LOCAL_TRUSTED:String;$/;"	v
LOCAL_WITH_FILE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Security.hx	/^	public static var LOCAL_WITH_FILE:String;$/;"	v
LOCAL_WITH_NETWORK	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Security.hx	/^	public static var LOCAL_WITH_NETWORK:String;$/;"	v
LOGIN_DENIED	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var LOGIN_DENIED = 67;$/;"	v
LOGIN_OPTIONS	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var LOGIN_OPTIONS = 10224;$/;"	v
LOOPING	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var LOOPING:Int = 0x1007;$/;"	v
LOOPING	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var LOOPING:Int = 0x1007;$/;"	v
LOW	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/BitmapFilterQuality.hx	/^	public static var LOW = 1;$/;"	v
LOW_FLOAT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var LOW_FLOAT = 0x8DF0;$/;"	v
LOW_FLOAT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var LOW_FLOAT:Int;$/;"	v
LOW_FLOAT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var LOW_FLOAT = 0x8DF0;$/;"	v
LOW_FLOAT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var LOW_FLOAT							 = 0x8DF0;$/;"	v
LOW_FLOAT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var LOW_FLOAT                      = 0x8DF0;$/;"	v
LOW_INT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var LOW_INT = 0x8DF3;$/;"	v
LOW_INT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var LOW_INT:Int;$/;"	v
LOW_INT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var LOW_INT = 0x8DF3;$/;"	v
LOW_INT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var LOW_INT								= 0x8DF3;$/;"	v
LOW_INT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var LOW_INT                        = 0x8DF3;$/;"	v
LOW_SPEED_LIMIT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var LOW_SPEED_LIMIT = 19;$/;"	v
LOW_SPEED_TIME	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var LOW_SPEED_TIME = 20;$/;"	v
LUMINANCE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var LUMINANCE = 0x1909;$/;"	v
LUMINANCE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var LUMINANCE:Int;$/;"	v
LUMINANCE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var LUMINANCE = 0x1909;$/;"	v
LUMINANCE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var LUMINANCE							 = 0x1909;$/;"	v
LUMINANCE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var LUMINANCE                      = 0x1909;$/;"	v
LUMINANCE_ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var LUMINANCE_ALPHA = 0x190A;$/;"	v
LUMINANCE_ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var LUMINANCE_ALPHA:Int;$/;"	v
LUMINANCE_ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var LUMINANCE_ALPHA = 0x190A;$/;"	v
LUMINANCE_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var LUMINANCE_ALPHA					 = 0x190A;$/;"	v
LUMINANCE_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var LUMINANCE_ALPHA                = 0x190A;$/;"	v
LYCIAN	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var LYCIAN = "Lyci";$/;"	v
LYDIAN	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var LYDIAN = "Lydi";$/;"	v
Lambda	/usr/lib/haxe/std/Lambda.hx	/^class Lambda {$/;"	c
Lib	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Lib.hx	/^class Lib {$/;"	c
Lib	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^class Lib {$/;"	c
Lib	/usr/lib/haxe/std/neko/Lib.hx	/^class Lib {$/;"	c
LibTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/LibTest.hx	/^class LibTest {$/;"	c
Library	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Library.hx	/^class Library {$/;"	c
LineScaleModeTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/LineScaleModeTest.hx	/^class LineScaleModeTest {$/;"	c
LineStyle	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^class LineStyle {$/;"	c
LinuxPlatform	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^class LinuxPlatform extends PlatformTarget {$/;"	c
List	/usr/lib/haxe/std/List.hx	/^class List<T> {$/;"	c
ListSort	/usr/lib/haxe/std/haxe/ds/ListSort.hx	/^class ListSort {$/;"	c
Listener	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/EventDispatcher.hx	/^private class Listener {$/;"	c
Listener	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/EventDispatcher.hx	/^private class Listener {$/;"	c
Loader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Loader.hx	/^class Loader extends Sprite {$/;"	c
Loader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Loader.hx	/^class Loader extends Sprite {$/;"	c
Loader	/usr/lib/haxe/std/neko/vm/Loader.hx	/^class Loader {$/;"	c
LoaderContext	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/LoaderContext.hx	/^class LoaderContext {$/;"	c
LoaderContextTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/LoaderContextTest.hx	/^class LoaderContextTest {$/;"	c
LoaderInfo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/LoaderInfo.hx	/^class LoaderInfo extends URLLoader {$/;"	c
LoaderInfo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/LoaderInfo.hx	/^class LoaderInfo extends EventDispatcher {$/;"	c
LoaderInfoTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/LoaderInfoTest.hx	/^class LoaderInfoTest {$/;"	c
LoaderTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/LoaderTest.hx	/^class LoaderTest {$/;"	c
LocalConnection	/usr/lib/haxe/std/haxe/remoting/LocalConnection.hx	/^class LocalConnection implements AsyncConnection implements Dynamic<AsyncConnection> {$/;"	c
Lock	/usr/lib/haxe/std/neko/vm/Lock.hx	/^class Lock {$/;"	c
Log	/usr/lib/haxe/std/haxe/Log.hx	/^class Log {$/;"	c
LogHelper	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/LogHelper.hx	/^class LogHelper {$/;"	c
Look into software renderer to find why alpha is off by one	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		\/\/TODO: Look into software renderer to find why alpha is off by one$/;"	i
M	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var M = 0x6D;$/;"	v
M	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var M:Int = 77;$/;"	v
M	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var M = 77;$/;"	v
MAC	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Platform.hx	/^	var MAC = "mac";$/;"	v
MAHAJANI	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var MAHAJANI = "Mahj";$/;"	v
MAIL	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var MAIL = 0x40000109;$/;"	v
MAIL_AUTH	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var MAIL_AUTH = 10217;$/;"	v
MAIL_FROM	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var MAIL_FROM = 10186;$/;"	v
MAIL_RCPT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var MAIL_RCPT = 10187;$/;"	v
MALAYALAM	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var MALAYALAM = "Mlym";$/;"	v
MANDAIC	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var MANDAIC = "Mand";$/;"	v
MANICHAEAN	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var MANICHAEAN = "Mani";$/;"	v
MAXCONNECTS	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var MAXCONNECTS = 71;$/;"	v
MAXFILESIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var MAXFILESIZE = 114;$/;"	v
MAXFILESIZE_LARGE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var MAXFILESIZE_LARGE = 30117;$/;"	v
MAXREDIRS	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var MAXREDIRS = 68;$/;"	v
MAX_BUFFER_SIZE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInputDevice.hx	/^	public static var MAX_BUFFER_SIZE = 32000;$/;"	v
MAX_BUFSIZE	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^	public static var MAX_BUFSIZE = (1 << 16);$/;"	v
MAX_CATEGORIES	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	private static inline var MAX_CATEGORIES = 2;$/;"	v
MAX_COMBINED_TEXTURE_IMAGE_UNITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D;$/;"	v
MAX_COMBINED_TEXTURE_IMAGE_UNITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var MAX_COMBINED_TEXTURE_IMAGE_UNITS:Int;$/;"	v
MAX_COMBINED_TEXTURE_IMAGE_UNITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D;$/;"	v
MAX_COMBINED_TEXTURE_IMAGE_UNITS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D;$/;"	v
MAX_COMBINED_TEXTURE_IMAGE_UNITS	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D;$/;"	v
MAX_CUBE_MAP_TEXTURE_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C;$/;"	v
MAX_CUBE_MAP_TEXTURE_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var MAX_CUBE_MAP_TEXTURE_SIZE:Int;$/;"	v
MAX_CUBE_MAP_TEXTURE_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C;$/;"	v
MAX_CUBE_MAP_TEXTURE_SIZE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var MAX_CUBE_MAP_TEXTURE_SIZE		= 0x851C;$/;"	v
MAX_CUBE_MAP_TEXTURE_SIZE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var MAX_CUBE_MAP_TEXTURE_SIZE      = 0x851C;$/;"	v
MAX_DISTANCE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var MAX_DISTANCE:Int = 0x1023;$/;"	v
MAX_DISTANCE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var MAX_DISTANCE:Int = 0x1023;$/;"	v
MAX_FRAGMENT_UNIFORM_VECTORS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var MAX_FRAGMENT_UNIFORM_VECTORS = 0x8DFD;$/;"	v
MAX_FRAGMENT_UNIFORM_VECTORS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var MAX_FRAGMENT_UNIFORM_VECTORS:Int;$/;"	v
MAX_FRAGMENT_UNIFORM_VECTORS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var MAX_FRAGMENT_UNIFORM_VECTORS = 0x8DFD;$/;"	v
MAX_FRAGMENT_UNIFORM_VECTORS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var MAX_FRAGMENT_UNIFORM_VECTORS	  = 0x8DFD;$/;"	v
MAX_FRAGMENT_UNIFORM_VECTORS	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var MAX_FRAGMENT_UNIFORM_VECTORS     = 0x8DFD;$/;"	v
MAX_GAIN	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var MAX_GAIN:Int = 0x100E;$/;"	v
MAX_GAIN	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var MAX_GAIN:Int = 0x100E;$/;"	v
MAX_RECV_SPEED_LARGE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var MAX_RECV_SPEED_LARGE = 30146;$/;"	v
MAX_RENDERBUFFER_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var MAX_RENDERBUFFER_SIZE = 0x84E8;$/;"	v
MAX_RENDERBUFFER_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var MAX_RENDERBUFFER_SIZE:Int;$/;"	v
MAX_RENDERBUFFER_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var MAX_RENDERBUFFER_SIZE = 0x84E8;$/;"	v
MAX_RENDERBUFFER_SIZE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var MAX_RENDERBUFFER_SIZE			 = 0x84E8;$/;"	v
MAX_RENDERBUFFER_SIZE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var MAX_RENDERBUFFER_SIZE          = 0x84E8;$/;"	v
MAX_SAMPLERS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	private static var MAX_SAMPLERS = 8;$/;"	v
MAX_SEND_SPEED_LARGE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var MAX_SEND_SPEED_LARGE = 30145;$/;"	v
MAX_TEXTURE_IMAGE_UNITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var MAX_TEXTURE_IMAGE_UNITS = 0x8872;$/;"	v
MAX_TEXTURE_IMAGE_UNITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var MAX_TEXTURE_IMAGE_UNITS:Int;$/;"	v
MAX_TEXTURE_IMAGE_UNITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var MAX_TEXTURE_IMAGE_UNITS = 0x8872;$/;"	v
MAX_TEXTURE_IMAGE_UNITS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var MAX_TEXTURE_IMAGE_UNITS			 = 0x8872;$/;"	v
MAX_TEXTURE_IMAGE_UNITS	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var MAX_TEXTURE_IMAGE_UNITS          = 0x8872;$/;"	v
MAX_TEXTURE_MAX_ANISOTROPY_EXT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	private static var MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF;$/;"	v
MAX_TEXTURE_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var MAX_TEXTURE_SIZE = 0x0D33;$/;"	v
MAX_TEXTURE_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var MAX_TEXTURE_SIZE:Int;$/;"	v
MAX_TEXTURE_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var MAX_TEXTURE_SIZE = 0x0D33;$/;"	v
MAX_TEXTURE_SIZE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var MAX_TEXTURE_SIZE					= 0x0D33;$/;"	v
MAX_TEXTURE_SIZE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var MAX_TEXTURE_SIZE               = 0x0D33;$/;"	v
MAX_VALUE	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	public static var MAX_VALUE (get, null):Float;$/;"	v
MAX_VARYING_VECTORS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var MAX_VARYING_VECTORS = 0x8DFC;$/;"	v
MAX_VARYING_VECTORS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var MAX_VARYING_VECTORS:Int;$/;"	v
MAX_VARYING_VECTORS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var MAX_VARYING_VECTORS = 0x8DFC;$/;"	v
MAX_VARYING_VECTORS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var MAX_VARYING_VECTORS				  = 0x8DFC;$/;"	v
MAX_VARYING_VECTORS	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var MAX_VARYING_VECTORS              = 0x8DFC;$/;"	v
MAX_VERTEX_ATTRIBS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var MAX_VERTEX_ATTRIBS = 0x8869;$/;"	v
MAX_VERTEX_ATTRIBS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var MAX_VERTEX_ATTRIBS:Int;$/;"	v
MAX_VERTEX_ATTRIBS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var MAX_VERTEX_ATTRIBS = 0x8869;$/;"	v
MAX_VERTEX_ATTRIBS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var MAX_VERTEX_ATTRIBS					= 0x8869;$/;"	v
MAX_VERTEX_ATTRIBS	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var MAX_VERTEX_ATTRIBS               = 0x8869;$/;"	v
MAX_VERTEX_TEXTURE_IMAGE_UNITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C;$/;"	v
MAX_VERTEX_TEXTURE_IMAGE_UNITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var MAX_VERTEX_TEXTURE_IMAGE_UNITS:Int;$/;"	v
MAX_VERTEX_TEXTURE_IMAGE_UNITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C;$/;"	v
MAX_VERTEX_TEXTURE_IMAGE_UNITS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var MAX_VERTEX_TEXTURE_IMAGE_UNITS	= 0x8B4C;$/;"	v
MAX_VERTEX_TEXTURE_IMAGE_UNITS	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var MAX_VERTEX_TEXTURE_IMAGE_UNITS   = 0x8B4C;$/;"	v
MAX_VERTEX_UNIFORM_VECTORS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var MAX_VERTEX_UNIFORM_VECTORS = 0x8DFB;$/;"	v
MAX_VERTEX_UNIFORM_VECTORS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var MAX_VERTEX_UNIFORM_VECTORS:Int;$/;"	v
MAX_VERTEX_UNIFORM_VECTORS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var MAX_VERTEX_UNIFORM_VECTORS = 0x8DFB;$/;"	v
MAX_VERTEX_UNIFORM_VECTORS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var MAX_VERTEX_UNIFORM_VECTORS		 = 0x8DFB;$/;"	v
MAX_VERTEX_UNIFORM_VECTORS	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var MAX_VERTEX_UNIFORM_VECTORS       = 0x8DFB;$/;"	v
MAX_VIEWPORT_DIMS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var MAX_VIEWPORT_DIMS = 0x0D3A;$/;"	v
MAX_VIEWPORT_DIMS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var MAX_VIEWPORT_DIMS:Int;$/;"	v
MAX_VIEWPORT_DIMS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var MAX_VIEWPORT_DIMS = 0x0D3A;$/;"	v
MAX_VIEWPORT_DIMS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var MAX_VIEWPORT_DIMS				  = 0x0D3A;$/;"	v
MAX_VIEWPORT_DIMS	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var MAX_VIEWPORT_DIMS              = 0x0D3A;$/;"	v
MEDIA_SELECT	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var MEDIA_SELECT = 0x40000107;$/;"	v
MEDIUM	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoHintStyle.hx	/^	public var MEDIUM = 3;$/;"	v
MEDIUM	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/BitmapFilterQuality.hx	/^	public static var MEDIUM = 2;$/;"	v
MEDIUM_FLOAT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var MEDIUM_FLOAT = 0x8DF1;$/;"	v
MEDIUM_FLOAT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var MEDIUM_FLOAT:Int;$/;"	v
MEDIUM_FLOAT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var MEDIUM_FLOAT = 0x8DF1;$/;"	v
MEDIUM_FLOAT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var MEDIUM_FLOAT						 = 0x8DF1;$/;"	v
MEDIUM_FLOAT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var MEDIUM_FLOAT                   = 0x8DF1;$/;"	v
MEDIUM_INT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var MEDIUM_INT = 0x8DF4;$/;"	v
MEDIUM_INT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var MEDIUM_INT:Int;$/;"	v
MEDIUM_INT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var MEDIUM_INT = 0x8DF4;$/;"	v
MEDIUM_INT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var MEDIUM_INT							= 0x8DF4;$/;"	v
MEDIUM_INT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var MEDIUM_INT                     = 0x8DF4;$/;"	v
MEETEI_MAYEK	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var MEETEI_MAYEK = "Mtei";$/;"	v
MENDE_KIKAKUI	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var MENDE_KIKAKUI = "Mend";$/;"	v
MENU	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var MENU = 0x40000076;$/;"	v
MENU_ITEM_SELECT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/ContextMenuEvent.hx	/^	public static var MENU_ITEM_SELECT:String = "menuItemSelect";$/;"	v
MENU_SELECT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/ContextMenuEvent.hx	/^	public static var MENU_SELECT:String = "menuSelect";$/;"	v
MEROITIC_CURSIVE	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var MEROITIC_CURSIVE = "Merc";$/;"	v
MEROITIC_HIEROGLYPHS	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var MEROITIC_HIEROGLYPHS = "Mero";$/;"	v
META	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	public static inline var META:KeyModifier = (0x0400 | 0x0800);$/;"	v
MIAO	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var MIAO = "Plrd";$/;"	v
MIDDLE_CLICK	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public static var MIDDLE_CLICK:String = "middleClick";$/;"	v
MIDDLE_CLICK	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public static var MIDDLE_CLICK:String = "middleClick";$/;"	v
MIDDLE_MOUSE_DOWN	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public static var MIDDLE_MOUSE_DOWN:String = "middleMouseDown";$/;"	v
MIDDLE_MOUSE_DOWN	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public static var MIDDLE_MOUSE_DOWN:String = "middleMouseDown";$/;"	v
MIDDLE_MOUSE_UP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public static var MIDDLE_MOUSE_UP:String = "middleMouseUp";$/;"	v
MIDDLE_MOUSE_UP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public static var MIDDLE_MOUSE_UP:String = "middleMouseUp";$/;"	v
MINUS	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var MINUS = 0x2D;$/;"	v
MINUS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var MINUS:Int = 189;$/;"	v
MINUS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var MINUS = 189;$/;"	v
MIN_GAIN	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var MIN_GAIN:Int = 0x100D;$/;"	v
MIN_GAIN	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var MIN_GAIN:Int = 0x100D;$/;"	v
MIN_VALUE	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	public static var MIN_VALUE (get, null):Float;$/;"	v
MIN_WH_SCREENSHOT	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	private static var MIN_WH_SCREENSHOT = { width: 320, height: 480 };$/;"	v
MIRRORED_REPEAT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var MIRRORED_REPEAT = 0x8370;$/;"	v
MIRRORED_REPEAT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var MIRRORED_REPEAT:Int;$/;"	v
MIRRORED_REPEAT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var MIRRORED_REPEAT = 0x8370;$/;"	v
MIRRORED_REPEAT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var MIRRORED_REPEAT					 = 0x8370;$/;"	v
MIRRORED_REPEAT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var MIRRORED_REPEAT                = 0x8370;$/;"	v
MITER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoLineJoin.hx	/^	public var MITER = 0;$/;"	v
MOBILE	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	var MOBILE = "mobile";$/;"	v
MODE	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var MODE = 0x40000101;$/;"	v
MODE	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	public static inline var MODE:KeyModifier = 0x4000;$/;"	v
MODI	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var MODI = "Modi";$/;"	v
MONGOLIAN	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var MONGOLIAN = "Mong";$/;"	v
MONO_SOURCES	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public var MONO_SOURCES:Int = 0x1010;$/;"	v
MONO_SOURCES	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static inline var MONO_SOURCES:Int = 0x1010;$/;"	v
MOUSE_DOWN	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	var MOUSE_DOWN = 0;$/;"	v
MOUSE_DOWN	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public static var MOUSE_DOWN:String = "mouseDown";$/;"	v
MOUSE_DOWN	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public static var MOUSE_DOWN:String = "mouseDown";$/;"	v
MOUSE_FOCUS_CHANGE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/FocusEvent.hx	/^	public static var MOUSE_FOCUS_CHANGE = "mouseFocusChange";$/;"	v
MOUSE_JOINT	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2JointType.hx	/^	var MOUSE_JOINT = 5;$/;"	v
MOUSE_LEAVE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public static var MOUSE_LEAVE = "mouseLeave";$/;"	v
MOUSE_LEAVE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public static var MOUSE_LEAVE = "mouseLeave";$/;"	v
MOUSE_MOVE	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	var MOUSE_MOVE = 2;$/;"	v
MOUSE_MOVE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public static var MOUSE_MOVE:String = "mouseMove";$/;"	v
MOUSE_MOVE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public static var MOUSE_MOVE:String = "mouseMove";$/;"	v
MOUSE_OUT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public static var MOUSE_OUT:String = "mouseOut";$/;"	v
MOUSE_OUT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public static var MOUSE_OUT:String = "mouseOut";$/;"	v
MOUSE_OVER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public static var MOUSE_OVER:String = "mouseOver";$/;"	v
MOUSE_OVER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public static var MOUSE_OVER:String = "mouseOver";$/;"	v
MOUSE_UP	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	var MOUSE_UP = 1;$/;"	v
MOUSE_UP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public static var MOUSE_UP:String = "mouseUp";$/;"	v
MOUSE_UP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public static var MOUSE_UP:String = "mouseUp";$/;"	v
MOUSE_WHEEL	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	var MOUSE_WHEEL = 3;$/;"	v
MOUSE_WHEEL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public static var MOUSE_WHEEL:String = "mouseWheel";$/;"	v
MOUSE_WHEEL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public static var MOUSE_WHEEL:String = "mouseWheel";$/;"	v
MOVE	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeMouse.hx	/^	var MOVE = 3;$/;"	v
MOVE_TO	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsPathCommand.hx	/^	public static inline var MOVE_TO = 1;$/;"	v
MOVIE_CLIP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	var MOVIE_CLIP = "MOVIE_CLIP";$/;"	v
MRO	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var MRO = "Mroo";$/;"	v
MULTIPLY	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoOperator.hx	/^	public var MULTIPLY = 14;$/;"	v
MUSIC	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	var MUSIC = "MUSIC";$/;"	v
MUSIC	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	var MUSIC = "MUSIC";$/;"	v
MUTE	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var MUTE = 0x4000007F;$/;"	v
MYANMAR	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var MYANMAR = "Mymr";$/;"	v
MacPlatform	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/MacPlatform.hx	/^class MacPlatform extends PlatformTarget {$/;"	c
MacroStringTools	/usr/lib/haxe/std/haxe/macro/MacroStringTools.hx	/^class MacroStringTools {$/;"	c
Main	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Main.hx	/^class Main extends Sprite $/;"	c
Main	/usr/lib/haxe/lib/lime/2,4,3/templates/project/Source/Main.hx	/^class Main extends Application {$/;"	c
Main	/usr/lib/haxe/lib/openfl/3,0,8/templates/project/Source/Main.hx	/^class Main extends Sprite {$/;"	c
Main	Source/Main.hx	/^class Main extends Sprite {$/;"	c
Maj	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^	function Maj(x, y, z) {$/;"	f
Make this global, instead of walking the display list	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^		\/\/ TODO: Make this global, instead of walking the display list$/;"	i
Make this more accurate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^			\/\/ TODO: Make this more accurate$/;"	i
ManagedStage	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^class ManagedStage extends Stage {$/;"	c
Manager	/usr/lib/haxe/std/sys/db/Manager.hx	/^class Manager<T : Object> {$/;"	c
Mapping	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Mapping.hx	/^class Mapping {$/;"	c
MarketplaceAPI	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^class MarketplaceAPI {$/;"	c
MaskManager	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GLMaskManager.hx	/^class MaskManager {$/;"	c
Matrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^class Matrix #if (cpp && haxe_ver < 3.2) implements cpp.rtti.FieldNumericIntegerLookup #end {$/;"	c
Matrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^class Matrix {$/;"	c
Matrix3	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^class Matrix3 {$/;"	c
Matrix3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^class Matrix3D {$/;"	c
Matrix3DTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^class Matrix3DTest {$/;"	c
MatrixTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/MatrixTest.hx	/^class MatrixTest {$/;"	c
Maybe allocate some free nodes?	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^		\/\/ TODO: Maybe allocate some free nodes?$/;"	i
Md5	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^class Md5 {$/;"	c
Memory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Memory.hx	/^class Memory {$/;"	c
Memory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Memory.hx	/^class Memory {$/;"	c
MemoryTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/MemoryTest.hx	/^class MemoryTest {$/;"	c
Meta	/usr/lib/haxe/std/haxe/rtti/Meta.hx	/^class Meta {$/;"	c
Module	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^class Module implements IModule {$/;"	c
Module	/usr/lib/haxe/std/neko/vm/Module.hx	/^class Module {$/;"	c
Mouse	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Mouse.hx	/^class Mouse {$/;"	c
Mouse	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Mouse.hx	/^class Mouse {$/;"	c
Mouse	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Mouse.hx	/^class Mouse {$/;"	c
MouseDestroy	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^		public function MouseDestroy():Void{$/;"	f
MouseDrag	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^		public function MouseDrag():Void{$/;"	f
MouseEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^class MouseEvent extends Event {$/;"	c
MouseEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^class MouseEvent extends Event {$/;"	c
MouseEventInfo	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^private class MouseEventInfo {$/;"	c
MouseEventTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/MouseEventTest.hx	/^class MouseEventTest {$/;"	c
MouseTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/ui/MouseTest.hx	/^class MouseTest {$/;"	c
MovieClip	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/MovieClip.hx	/^class MovieClip extends Sprite implements Dynamic<DisplayObject> {$/;"	c
MovieClip	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/MovieClip.hx	/^class MovieClip extends Sprite implements Dynamic<DisplayObject> {$/;"	c
MovieClipTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/MovieClipTest.hx	/^class MovieClipTest {$/;"	c
MpegAudio	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudio.hx	/^class MpegAudio {$/;"	c
MpegAudioReader	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^class MpegAudioReader {$/;"	c
Multitouch	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Multitouch.hx	/^class Multitouch {$/;"	c
Multitouch	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Multitouch.hx	/^class Multitouch {$/;"	c
MultitouchInputModeTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/ui/MultitouchInputModeTest.hx	/^class MultitouchInputModeTest {$/;"	c
MultitouchTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/ui/MultitouchTest.hx	/^class MultitouchTest {$/;"	c
Mutex	/usr/lib/haxe/std/neko/vm/Mutex.hx	/^class Mutex {$/;"	c
MyXml	/usr/lib/haxe/std/haxe/xml/Proxy.hx	/^	class MyXml extends haxe.xml.Proxy<"my.xml",MyStructure> {$/;"	c
Mysql	/usr/lib/haxe/std/sys/db/Mysql.hx	/^class Mysql {$/;"	c
N	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var N = 0x6E;$/;"	v
N	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var N:Int = 78;$/;"	v
N	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var N = 78;$/;"	v
NABATAEAN	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var NABATAEAN = "Nbat";$/;"	v
NAMELOOKUP_TIME	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var NAMELOOKUP_TIME = 0x300000 + 4;$/;"	v
NDLL	/usr/lib/haxe/lib/lime/2,4,3/lime/project/NDLL.hx	/^class NDLL {$/;"	c
NEAREST	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var NEAREST = 0x2600;$/;"	v
NEAREST	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var NEAREST:Int;$/;"	v
NEAREST	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFilter.hx	/^	public var NEAREST = 3;$/;"	v
NEAREST	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var NEAREST = 0x2600;$/;"	v
NEAREST	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var NEAREST								= 0x2600;$/;"	v
NEAREST	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var NEAREST                        = 0x2600;$/;"	v
NEAREST_MIPMAP_LINEAR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var NEAREST_MIPMAP_LINEAR = 0x2702;$/;"	v
NEAREST_MIPMAP_LINEAR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var NEAREST_MIPMAP_LINEAR:Int;$/;"	v
NEAREST_MIPMAP_LINEAR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var NEAREST_MIPMAP_LINEAR = 0x2702;$/;"	v
NEAREST_MIPMAP_LINEAR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var NEAREST_MIPMAP_LINEAR			 = 0x2702;$/;"	v
NEAREST_MIPMAP_LINEAR	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var NEAREST_MIPMAP_LINEAR          = 0x2702;$/;"	v
NEAREST_MIPMAP_NEAREST	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var NEAREST_MIPMAP_NEAREST = 0x2700;$/;"	v
NEAREST_MIPMAP_NEAREST	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var NEAREST_MIPMAP_NEAREST:Int;$/;"	v
NEAREST_MIPMAP_NEAREST	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var NEAREST_MIPMAP_NEAREST = 0x2700;$/;"	v
NEAREST_MIPMAP_NEAREST	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var NEAREST_MIPMAP_NEAREST			= 0x2700;$/;"	v
NEAREST_MIPMAP_NEAREST	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var NEAREST_MIPMAP_NEAREST         = 0x2700;$/;"	v
NEGATIVE_COUNT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var NEGATIVE_COUNT = 28;$/;"	v
NEGATIVE_INFINITY	/usr/lib/haxe/std/Math.hx	/^	static var NEGATIVE_INFINITY(default, null) : Float;$/;"	v
NETRC	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var NETRC = 51;$/;"	v
NETRC_FILE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var NETRC_FILE = 10118;$/;"	v
NETWORK_EMPTY	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public var NETWORK_EMPTY:Int = 0;$/;"	v
NETWORK_IDLE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public var NETWORK_IDLE:Int = 1;$/;"	v
NETWORK_LOADING	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public var NETWORK_LOADING:Int = 2;$/;"	v
NETWORK_NO_SOURCE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public var NETWORK_NO_SOURCE:Int = 3;$/;"	v
NET_STATUS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/NetStatusEvent.hx	/^	public static var NET_STATUS:String = "netStatus";$/;"	v
NEVER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var NEVER = 0x0200;$/;"	v
NEVER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var NEVER:Int;$/;"	v
NEVER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var NEVER = 0x0200;$/;"	v
NEVER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var NEVER								  = 0x0200;$/;"	v
NEVER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DCompareMode.hx	/^	inline static public var NEVER = GL.NEVER;$/;"	v
NEVER	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var NEVER                          = 0x0200;$/;"	v
NEW_DIRECTORY_PERMS	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var NEW_DIRECTORY_PERMS = 160;$/;"	v
NEW_FILE_PERMS	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var NEW_FILE_PERMS = 159;$/;"	v
NEW_TAI_LUE	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var NEW_TAI_LUE = "Talu";$/;"	v
NICEST	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var NICEST = 0x1102;$/;"	v
NICEST	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var NICEST:Int;$/;"	v
NICEST	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var NICEST = 0x1102;$/;"	v
NICEST	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var NICEST								 = 0x1102;$/;"	v
NICEST	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var NICEST                         = 0x1102;$/;"	v
NKO	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var NKO = "Nkoo";$/;"	v
NME	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CordovaHelper.hx	/^	private static var NME:String;$/;"	v
NMEPreloader	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/NMEPreloader.hx	/^class NMEPreloader extends Sprite {$/;"	c
NMEPreloader	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/NMEPreloader.hx	/^class NMEPreloader extends Sprite$/;"	c
NOBODY	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var NOBODY = 44;$/;"	v
NONE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var NONE:Int = 0;$/;"	v
NONE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var NONE:Int = 0;$/;"	v
NONE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var NONE = 0;$/;"	v
NONE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var NONE:Int;$/;"	v
NONE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoAntialias.hx	/^	public var NONE = 1;$/;"	v
NONE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoExtend.hx	/^	public var NONE = 0;$/;"	v
NONE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoHintStyle.hx	/^	public var NONE = 1;$/;"	v
NONE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var NONE = 0;$/;"	v
NONE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var NONE = 0;$/;"	v
NONE	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	public static inline var NONE:KeyModifier = 0x0000;$/;"	v
NONE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var NONE									= 0;$/;"	v
NONE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DTriangleFace.hx	/^	inline public static var NONE = 0;$/;"	v
NONE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var NONE                           = 0;$/;"	v
NON_ZERO	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	var NON_ZERO = 1;$/;"	v
NOPROGRESS	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var NOPROGRESS = 43;$/;"	v
NOPROXY	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var NOPROXY = 10177;$/;"	v
NOSIGNAL	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var NOSIGNAL = 99;$/;"	v
NOTEQUAL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var NOTEQUAL = 0x0205;$/;"	v
NOTEQUAL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var NOTEQUAL:Int;$/;"	v
NOTEQUAL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var NOTEQUAL = 0x0205;$/;"	v
NOTEQUAL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var NOTEQUAL							  = 0x0205;$/;"	v
NOTEQUAL	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var NOTEQUAL                       = 0x0205;$/;"	v
NOT_BUILT_IN	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var NOT_BUILT_IN = 4;$/;"	v
NOT_EQUAL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DCompareMode.hx	/^	inline static public var NOT_EQUAL = GL.NOTEQUAL;$/;"	v
NO_CONNECTION_AVAILABLE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var NO_CONNECTION_AVAILABLE = 89;$/;"	v
NO_CURRENT_POINT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var NO_CURRENT_POINT = 4;$/;"	v
NO_ERROR	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var NO_ERROR:Int = 0;$/;"	v
NO_ERROR	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public var NO_ERROR:Int = 0;$/;"	v
NO_ERROR	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var NO_ERROR:Int = 0;$/;"	v
NO_ERROR	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static inline var NO_ERROR:Int = 0;$/;"	v
NO_ERROR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var NO_ERROR = 0;$/;"	v
NO_ERROR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var NO_ERROR:Int;$/;"	v
NO_ERROR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var NO_ERROR = 0;$/;"	v
NO_ERROR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var NO_ERROR							  = 0;$/;"	v
NO_ERROR	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var NO_ERROR                       = 0;$/;"	v
NO_MEMORY	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var NO_MEMORY = 1;$/;"	v
NO_OP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsPathCommand.hx	/^	public static inline var NO_OP = 0;$/;"	v
NULL_POINTER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var NULL_POINTER = 7;$/;"	v
NUMBER_0	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMBER_0 = 0x30;$/;"	v
NUMBER_0	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var NUMBER_0:Int = 48;$/;"	v
NUMBER_0	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var NUMBER_0 = 48;$/;"	v
NUMBER_1	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMBER_1 = 0x31;$/;"	v
NUMBER_1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var NUMBER_1:Int = 49;$/;"	v
NUMBER_1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var NUMBER_1 = 49;$/;"	v
NUMBER_2	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMBER_2 = 0x32;$/;"	v
NUMBER_2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var NUMBER_2:Int = 50;$/;"	v
NUMBER_2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var NUMBER_2 = 50;$/;"	v
NUMBER_3	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMBER_3 = 0x33;$/;"	v
NUMBER_3	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var NUMBER_3:Int = 51;$/;"	v
NUMBER_3	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var NUMBER_3 = 51;$/;"	v
NUMBER_4	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMBER_4 = 0x34;$/;"	v
NUMBER_4	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var NUMBER_4:Int = 52;$/;"	v
NUMBER_4	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var NUMBER_4 = 52;$/;"	v
NUMBER_5	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMBER_5 = 0x35;$/;"	v
NUMBER_5	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var NUMBER_5:Int = 53;$/;"	v
NUMBER_5	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var NUMBER_5 = 53;$/;"	v
NUMBER_6	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMBER_6 = 0x36;$/;"	v
NUMBER_6	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var NUMBER_6:Int = 54;$/;"	v
NUMBER_6	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var NUMBER_6 = 54;$/;"	v
NUMBER_7	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMBER_7 = 0x37;$/;"	v
NUMBER_7	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var NUMBER_7:Int = 55;$/;"	v
NUMBER_7	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var NUMBER_7 = 55;$/;"	v
NUMBER_8	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMBER_8 = 0x38;$/;"	v
NUMBER_8	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var NUMBER_8:Int = 56;$/;"	v
NUMBER_8	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var NUMBER_8 = 56; $/;"	v
NUMBER_9	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMBER_9 = 0x39;$/;"	v
NUMBER_9	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var NUMBER_9:Int = 57;$/;"	v
NUMBER_9	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var NUMBER_9 = 57;$/;"	v
NUMLOCK	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var NUMLOCK:Int = 144;$/;"	v
NUMLOCK	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var NUMLOCK = 144;$/;"	v
NUMPAD	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var NUMPAD:Int = 21;$/;"	v
NUMPAD	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var NUMPAD = 21;$/;"	v
NUMPAD_0	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_0 = 0x40000062;$/;"	v
NUMPAD_0	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var NUMPAD_0:Int = 96;$/;"	v
NUMPAD_0	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var NUMPAD_0 = 96;$/;"	v
NUMPAD_00	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_00 = 0x400000B0;$/;"	v
NUMPAD_000	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_000 = 0x400000B1;$/;"	v
NUMPAD_1	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_1 = 0x40000059;$/;"	v
NUMPAD_1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var NUMPAD_1:Int = 97;$/;"	v
NUMPAD_1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var NUMPAD_1 = 97;$/;"	v
NUMPAD_2	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_2 = 0x4000005A;$/;"	v
NUMPAD_2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var NUMPAD_2:Int = 98;$/;"	v
NUMPAD_2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var NUMPAD_2 = 98;$/;"	v
NUMPAD_3	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_3 = 0x4000005B;$/;"	v
NUMPAD_3	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var NUMPAD_3:Int = 99;$/;"	v
NUMPAD_3	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var NUMPAD_3 = 99;$/;"	v
NUMPAD_4	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_4 = 0x4000005C;$/;"	v
NUMPAD_4	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var NUMPAD_4:Int = 100;$/;"	v
NUMPAD_4	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var NUMPAD_4 = 100;$/;"	v
NUMPAD_5	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_5 = 0x4000005D;$/;"	v
NUMPAD_5	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var NUMPAD_5:Int = 101;$/;"	v
NUMPAD_5	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var NUMPAD_5 = 101;$/;"	v
NUMPAD_6	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_6 = 0x4000005E;$/;"	v
NUMPAD_6	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var NUMPAD_6:Int = 102;$/;"	v
NUMPAD_6	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var NUMPAD_6 = 102;$/;"	v
NUMPAD_7	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_7 = 0x4000005F;$/;"	v
NUMPAD_7	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var NUMPAD_7:Int = 103;$/;"	v
NUMPAD_7	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var NUMPAD_7 = 103;$/;"	v
NUMPAD_8	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_8 = 0x40000060;$/;"	v
NUMPAD_8	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var NUMPAD_8:Int = 104;$/;"	v
NUMPAD_8	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var NUMPAD_8 = 104;$/;"	v
NUMPAD_9	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_9 = 0x40000061;$/;"	v
NUMPAD_9	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var NUMPAD_9:Int = 105;$/;"	v
NUMPAD_9	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var NUMPAD_9 = 105;$/;"	v
NUMPAD_A	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_A = 0x400000BC;$/;"	v
NUMPAD_ADD	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var NUMPAD_ADD:Int = 107;$/;"	v
NUMPAD_ADD	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var NUMPAD_ADD = 107;$/;"	v
NUMPAD_AMPERSAND	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_AMPERSAND = 0x400000C7;$/;"	v
NUMPAD_AT	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_AT = 0x400000CE;$/;"	v
NUMPAD_B	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_B = 0x400000BD;$/;"	v
NUMPAD_BACKSPACE	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_BACKSPACE = 0x400000BB;$/;"	v
NUMPAD_BINARY	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_BINARY = 0x400000DA;$/;"	v
NUMPAD_C	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_C = 0x400000BE;$/;"	v
NUMPAD_CLEAR	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_CLEAR = 0x400000D8;$/;"	v
NUMPAD_CLEAR_ENTRY	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_CLEAR_ENTRY = 0x400000D9;$/;"	v
NUMPAD_COLON	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_COLON = 0x400000CB;$/;"	v
NUMPAD_COMMA	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_COMMA = 0x40000085;$/;"	v
NUMPAD_D	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_D = 0x400000BF;$/;"	v
NUMPAD_DECIMAL	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_DECIMAL = 0x400000DC;$/;"	v
NUMPAD_DECIMAL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var NUMPAD_DECIMAL:Int = 110;$/;"	v
NUMPAD_DECIMAL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var NUMPAD_DECIMAL = 110;$/;"	v
NUMPAD_DIVIDE	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_DIVIDE = 0x40000054;$/;"	v
NUMPAD_DIVIDE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var NUMPAD_DIVIDE:Int = 111;$/;"	v
NUMPAD_DIVIDE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var NUMPAD_DIVIDE = 111;$/;"	v
NUMPAD_DOUBLE_AMPERSAND	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_DOUBLE_AMPERSAND = 0x400000C8;$/;"	v
NUMPAD_DOUBLE_VERTICAL_BAR	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_DOUBLE_VERTICAL_BAR = 0x400000CA;$/;"	v
NUMPAD_E	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_E = 0x400000C0;$/;"	v
NUMPAD_ENTER	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_ENTER = 0x40000058;$/;"	v
NUMPAD_ENTER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var NUMPAD_ENTER:Int = 108;$/;"	v
NUMPAD_ENTER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var NUMPAD_ENTER = 108;$/;"	v
NUMPAD_EQUALS	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_EQUALS = 0x40000067;$/;"	v
NUMPAD_EXCLAMATION	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_EXCLAMATION = 0x400000CF;$/;"	v
NUMPAD_F	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_F = 0x400000C1;$/;"	v
NUMPAD_GREATER_THAN	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_GREATER_THAN = 0x400000C6;$/;"	v
NUMPAD_HASH	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_HASH = 0x400000CC;$/;"	v
NUMPAD_HEXADECIMAL	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_HEXADECIMAL = 0x400000DD;$/;"	v
NUMPAD_LEFT_BRACE	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_LEFT_BRACE = 0x400000B8;$/;"	v
NUMPAD_LEFT_PARENTHESIS	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_LEFT_PARENTHESIS = 0x400000B6;$/;"	v
NUMPAD_LESS_THAN	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_LESS_THAN = 0x400000C5;$/;"	v
NUMPAD_MEM_ADD	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_MEM_ADD = 0x400000D3;$/;"	v
NUMPAD_MEM_CLEAR	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_MEM_CLEAR = 0x400000D2;$/;"	v
NUMPAD_MEM_DIVIDE	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_MEM_DIVIDE = 0x400000D6;$/;"	v
NUMPAD_MEM_MULTIPLY	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_MEM_MULTIPLY = 0x400000D5;$/;"	v
NUMPAD_MEM_RECALL	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_MEM_RECALL = 0x400000D1;$/;"	v
NUMPAD_MEM_STORE	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_MEM_STORE = 0x400000D0;$/;"	v
NUMPAD_MEM_SUBTRACT	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_MEM_SUBTRACT = 0x400000D4;$/;"	v
NUMPAD_MINUS	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_MINUS = 0x40000056;$/;"	v
NUMPAD_MULTIPLY	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_MULTIPLY = 0x40000055;$/;"	v
NUMPAD_MULTIPLY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var NUMPAD_MULTIPLY:Int = 106;$/;"	v
NUMPAD_MULTIPLY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var NUMPAD_MULTIPLY = 106;$/;"	v
NUMPAD_OCTAL	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_OCTAL = 0x400000DB;$/;"	v
NUMPAD_PERCENT	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_PERCENT = 0x400000C4;$/;"	v
NUMPAD_PERIOD	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_PERIOD = 0x40000063;$/;"	v
NUMPAD_PLUS	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_PLUS = 0x40000057;$/;"	v
NUMPAD_PLUS_MINUS	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_PLUS_MINUS = 0x400000D7;$/;"	v
NUMPAD_POWER	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_POWER = 0x400000C3;$/;"	v
NUMPAD_RIGHT_BRACE	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_RIGHT_BRACE = 0x400000B9;$/;"	v
NUMPAD_RIGHT_PARENTHESIS	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_RIGHT_PARENTHESIS = 0x400000B7;$/;"	v
NUMPAD_SPACE	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_SPACE = 0x400000CD;$/;"	v
NUMPAD_SUBTRACT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var NUMPAD_SUBTRACT:Int = 109;$/;"	v
NUMPAD_SUBTRACT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var NUMPAD_SUBTRACT = 109;$/;"	v
NUMPAD_TAB	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_TAB = 0x400000BA;$/;"	v
NUMPAD_VERTICAL_BAR	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_VERTICAL_BAR = 0x400000C9;$/;"	v
NUMPAD_XOR	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUMPAD_XOR = 0x400000C2;$/;"	v
NUM_CONNECTS	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var NUM_CONNECTS = 0x200000 + 26;$/;"	v
NUM_LOCK	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var NUM_LOCK = 0x40000053;$/;"	v
NUM_LOCK	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	public static inline var NUM_LOCK:KeyModifier = 0x1000;$/;"	v
NUM_PAD	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/KeyLocation.hx	/^	var NUM_PAD = 3;$/;"	v
NaN	/usr/lib/haxe/std/Math.hx	/^	static var NaN(default, null) : Float;$/;"	v
Native behavior is different than the flash target here.	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^			\/\/ TODO: Native behavior is different than the flash target here.$/;"	i
Native targets do not match the flash behavior here.	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		\/\/ TODO: Native targets do not match the flash behavior here.$/;"	i
NativeApplication	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^class NativeApplication {$/;"	c
NativeArray	/usr/lib/haxe/std/neko/NativeArray.hx	/^class NativeArray<T> implements ArrayAccess<T> {$/;"	c
NativeMouse	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeMouse.hx	/^class NativeMouse {$/;"	c
NativeRenderer	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeRenderer.hx	/^class NativeRenderer {$/;"	c
NativeString	/usr/lib/haxe/std/neko/NativeString.hx	/^class NativeString {$/;"	c
NativeWindow	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^class NativeWindow {$/;"	c
NekoHelper	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/NekoHelper.hx	/^class NekoHelper {$/;"	c
NekoVM	/usr/lib/haxe/lib/lime/2,4,3/lime/vm/NekoVM.hx	/^class NekoVM {$/;"	c
NetConnection	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/NetConnection.hx	/^class NetConnection extends EventDispatcher {$/;"	c
NetStatusEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/NetStatusEvent.hx	/^class NetStatusEvent extends Event {$/;"	c
NetStream	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/NetStream.hx	/^class NetStream extends EventDispatcher {$/;"	c
NodeAccess	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^private class NodeAccess implements Dynamic<Fast> {$/;"	c
NodeJSHelper	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/NodeJSHelper.hx	/^class NodeJSHelper {$/;"	c
NodeListAccess	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^private class NodeListAccess implements Dynamic<List<Fast>> {$/;"	c
O	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var O = 0x6F;$/;"	v
O	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var O:Int = 79;$/;"	v
O	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var O = 79;$/;"	v
OAuth1AccessToken	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthToken.hx	/^class OAuth1AccessToken extends AccessToken {$/;"	c
OAuth2AccessToken	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthToken.hx	/^class OAuth2AccessToken extends AccessToken {$/;"	c
OAuthClient	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthClient.hx	/^class OAuthClient {$/;"	c
OAuthConsumer	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthConsumer.hx	/^class OAuthConsumer {$/;"	c
OAuthRequest	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthRequest.hx	/^class OAuthRequest {$/;"	c
OAuthSort	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthRequest.hx	/^	private function OAuthSort(a:KVPair, b:KVPair) {$/;"	f
OFF	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoHintMetrics.hx	/^	public var OFF = 1;$/;"	v
OGHAM	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var OGHAM = "Ogam";$/;"	v
OK	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var OK = 0;$/;"	v
OLD_ITALIC	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var OLD_ITALIC = "Ital";$/;"	v
OLD_NORTH_ARABIAN	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var OLD_NORTH_ARABIAN = "Narb";$/;"	v
OLD_PERMIC	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var OLD_PERMIC = "Perm";$/;"	v
OLD_PERSIAN	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var OLD_PERSIAN = "Xpeo";$/;"	v
OLD_SOUTH_ARABIAN	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var OLD_SOUTH_ARABIAN = "Sarb";$/;"	v
OLD_TURKIC	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var OLD_TURKIC = "Orkh";$/;"	v
OL_CHIKI	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var OL_CHIKI = "Olck";$/;"	v
ON	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoHintMetrics.hx	/^	public var ON = 2;$/;"	v
ONE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var ONE = 1;$/;"	v
ONE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var ONE:Int;$/;"	v
ONE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var ONE = 1;$/;"	v
ONE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/BlendModeManager.hx	/^	var ONE = GL.ONE;$/;"	v
ONE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var ONE									 = 1;$/;"	v
ONE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DBlendFactor.hx	/^	inline public static var ONE:Int = GL.ONE;$/;"	v
ONE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var ONE                            = 1;$/;"	v
ONE_MINUS_CONSTANT_ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var ONE_MINUS_CONSTANT_ALPHA = 0x8004;$/;"	v
ONE_MINUS_CONSTANT_ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var ONE_MINUS_CONSTANT_ALPHA:Int;$/;"	v
ONE_MINUS_CONSTANT_ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var ONE_MINUS_CONSTANT_ALPHA = 0x8004;$/;"	v
ONE_MINUS_CONSTANT_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/BlendModeManager.hx	/^	var ONE_MINUS_CONSTANT_ALPHA = GL.ONE_MINUS_CONSTANT_ALPHA;$/;"	v
ONE_MINUS_CONSTANT_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var ONE_MINUS_CONSTANT_ALPHA		 = 0x8004;$/;"	v
ONE_MINUS_CONSTANT_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var ONE_MINUS_CONSTANT_ALPHA       = 0x8004;$/;"	v
ONE_MINUS_CONSTANT_COLOR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var ONE_MINUS_CONSTANT_COLOR = 0x8002;$/;"	v
ONE_MINUS_CONSTANT_COLOR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var ONE_MINUS_CONSTANT_COLOR:Int;$/;"	v
ONE_MINUS_CONSTANT_COLOR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var ONE_MINUS_CONSTANT_COLOR = 0x8002;$/;"	v
ONE_MINUS_CONSTANT_COLOR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/BlendModeManager.hx	/^	var ONE_MINUS_CONSTANT_COLOR = GL.ONE_MINUS_CONSTANT_COLOR;$/;"	v
ONE_MINUS_CONSTANT_COLOR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var ONE_MINUS_CONSTANT_COLOR		 = 0x8002;$/;"	v
ONE_MINUS_CONSTANT_COLOR	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var ONE_MINUS_CONSTANT_COLOR       = 0x8002;$/;"	v
ONE_MINUS_DESTINATION_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DBlendFactor.hx	/^	inline public static var ONE_MINUS_DESTINATION_ALPHA:Int = GL.ONE_MINUS_DST_ALPHA;$/;"	v
ONE_MINUS_DESTINATION_COLOR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DBlendFactor.hx	/^	inline public static var ONE_MINUS_DESTINATION_COLOR:Int = GL.ONE_MINUS_DST_COLOR;$/;"	v
ONE_MINUS_DST_ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var ONE_MINUS_DST_ALPHA = 0x0305;$/;"	v
ONE_MINUS_DST_ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var ONE_MINUS_DST_ALPHA:Int;$/;"	v
ONE_MINUS_DST_ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var ONE_MINUS_DST_ALPHA = 0x0305;$/;"	v
ONE_MINUS_DST_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/BlendModeManager.hx	/^	var ONE_MINUS_DST_ALPHA = GL.ONE_MINUS_DST_ALPHA;$/;"	v
ONE_MINUS_DST_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var ONE_MINUS_DST_ALPHA				= 0x0305;$/;"	v
ONE_MINUS_DST_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var ONE_MINUS_DST_ALPHA            = 0x0305;$/;"	v
ONE_MINUS_DST_COLOR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var ONE_MINUS_DST_COLOR = 0x0307;$/;"	v
ONE_MINUS_DST_COLOR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var ONE_MINUS_DST_COLOR:Int;$/;"	v
ONE_MINUS_DST_COLOR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var ONE_MINUS_DST_COLOR = 0x0307;$/;"	v
ONE_MINUS_DST_COLOR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/BlendModeManager.hx	/^	var ONE_MINUS_DST_COLOR = GL.ONE_MINUS_DST_COLOR;$/;"	v
ONE_MINUS_DST_COLOR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var ONE_MINUS_DST_COLOR				= 0x0307;$/;"	v
ONE_MINUS_DST_COLOR	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var ONE_MINUS_DST_COLOR            = 0x0307;$/;"	v
ONE_MINUS_SOURCE_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DBlendFactor.hx	/^	inline public static var ONE_MINUS_SOURCE_ALPHA:Int = GL.ONE_MINUS_SRC_ALPHA;$/;"	v
ONE_MINUS_SOURCE_COLOR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DBlendFactor.hx	/^	inline public static var ONE_MINUS_SOURCE_COLOR:Int = GL.ONE_MINUS_SRC_COLOR;$/;"	v
ONE_MINUS_SRC_ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var ONE_MINUS_SRC_ALPHA = 0x0303;$/;"	v
ONE_MINUS_SRC_ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var ONE_MINUS_SRC_ALPHA:Int;$/;"	v
ONE_MINUS_SRC_ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var ONE_MINUS_SRC_ALPHA = 0x0303;$/;"	v
ONE_MINUS_SRC_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/BlendModeManager.hx	/^	var ONE_MINUS_SRC_ALPHA = GL.ONE_MINUS_SRC_ALPHA;$/;"	v
ONE_MINUS_SRC_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var ONE_MINUS_SRC_ALPHA				= 0x0303;$/;"	v
ONE_MINUS_SRC_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var ONE_MINUS_SRC_ALPHA            = 0x0303;$/;"	v
ONE_MINUS_SRC_COLOR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var ONE_MINUS_SRC_COLOR = 0x0301;$/;"	v
ONE_MINUS_SRC_COLOR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var ONE_MINUS_SRC_COLOR:Int;$/;"	v
ONE_MINUS_SRC_COLOR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var ONE_MINUS_SRC_COLOR = 0x0301;$/;"	v
ONE_MINUS_SRC_COLOR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/BlendModeManager.hx	/^	var ONE_MINUS_SRC_COLOR = GL.ONE_MINUS_SRC_COLOR;$/;"	v
ONE_MINUS_SRC_COLOR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var ONE_MINUS_SRC_COLOR				= 0x0301;$/;"	v
ONE_MINUS_SRC_COLOR	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var ONE_MINUS_SRC_COLOR            = 0x0301;$/;"	v
OPEN	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public static var OPEN = "open";$/;"	v
OPEN	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public static var OPEN = "open";$/;"	v
OPENSOCKETDATA	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var OPENSOCKETDATA = 10164;$/;"	v
OPENSOCKETFUNCTION	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var OPENSOCKETFUNCTION = 20163;$/;"	v
OPER	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var OPER = 0x400000A1;$/;"	v
OPERATION_TIMEDOUT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var OPERATION_TIMEDOUT = 28;$/;"	v
OPTIONS	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLRequestMethod.hx	/^	var OPTIONS = "OPTIONS";$/;"	v
OPTIONS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequestMethod.hx	/^	public static inline var OPTIONS:String = "OPTIONS";$/;"	v
OPTIONS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLRequestMethod.hx	/^	var OPTIONS = "OPTIONS";$/;"	v
ORIENTATION	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var ORIENTATION:Int = 0x100F;$/;"	v
ORIENTATION	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var ORIENTATION:Int = 0x100F;$/;"	v
ORIYA	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var ORIYA = "Orya";$/;"	v
OS version, too?	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^		\/\/ TODO: OS version, too?$/;"	i
OS version, too?	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^		\/\/ TODO: OS version, too?$/;"	i
OSMANYA	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var OSMANYA = "Osma";$/;"	v
OS_ERRNO	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var OS_ERRNO = 0x200000 + 25;$/;"	v
OTHER	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	var OTHER = "other";$/;"	v
OUT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoOperator.hx	/^	public var OUT = 4;$/;"	v
OUT	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var OUT = 0x400000A0;$/;"	v
OUT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/FocusEventTest.hx	/^		var OUT = FocusEvent.FOCUS_OUT;$/;"	v
OUTER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/BitmapFilterType.hx	/^	public static var OUTER = "outer";$/;"	v
OUT_OF_MEMORY	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var OUT_OF_MEMORY:Int = 0xA005;$/;"	v
OUT_OF_MEMORY	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public var OUT_OF_MEMORY:Int = 0xA005;$/;"	v
OUT_OF_MEMORY	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var OUT_OF_MEMORY:Int = 0xA005;$/;"	v
OUT_OF_MEMORY	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static inline var OUT_OF_MEMORY:Int = 0xA005;$/;"	v
OUT_OF_MEMORY	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var OUT_OF_MEMORY = 0x0505;$/;"	v
OUT_OF_MEMORY	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var OUT_OF_MEMORY:Int;$/;"	v
OUT_OF_MEMORY	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var OUT_OF_MEMORY = 0x0505;$/;"	v
OUT_OF_MEMORY	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var OUT_OF_MEMORY = 27;$/;"	v
OUT_OF_MEMORY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var OUT_OF_MEMORY						= 0x0505;$/;"	v
OUT_OF_MEMORY	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var OUT_OF_MEMORY                  = 0x0505;$/;"	v
OVER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoOperator.hx	/^	public var OVER = 2;$/;"	v
OVERLAY	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoOperator.hx	/^	public var OVERLAY = 16;$/;"	v
Object	/usr/lib/haxe/std/sys/db/Object.hx	/^class Object {$/;"	c
Only return lines that are visible	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^		\/\/ TODO: Only return lines that are visible$/;"	i
OpLUT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/OpLUT.hx	/^class OpLUT {$/;"	c
Opcode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Opcode.hx	/^class Opcode {$/;"	c
OpcodeMap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/OpcodeMap.hx	/^class OpcodeMap {$/;"	c
OpenFLPreloader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Preloader.hx	/^private class OpenFLPreloader extends Sprite {$/;"	c
OpenGLView	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/OpenGLView.hx	/^class OpenGLView extends DirectRenderer {$/;"	c
OpenGLView	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/OpenGLView.hx	/^class OpenGLView extends DirectRenderer {$/;"	c
OpenGLViewTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/OpenGLViewTest.hx	/^class OpenGLViewTest {$/;"	c
Optimize this for flash (and others?)	/usr/lib/haxe/std/haxe/ds/Vector.hx	/^		\/\/ TODO: Optimize this for flash (and others?)$/;"	i
OptimizedPerlin	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^class OptimizedPerlin {$/;"	c
Orientation3DTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Orientation3DTest.hx	/^class Orientation3DTest {$/;"	c
OrientationAny	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public static var OrientationAny = 9;$/;"	v
OrientationFaceDown	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public static var OrientationFaceDown = 6;$/;"	v
OrientationFaceUp	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public static var OrientationFaceUp = 5;$/;"	v
OrientationLandscapeAny	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public static var OrientationLandscapeAny = 8;$/;"	v
OrientationLandscapeLeft	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public static var OrientationLandscapeLeft = 4;$/;"	v
OrientationLandscapeRight	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public static var OrientationLandscapeRight = 3;$/;"	v
OrientationPortrait	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public static var OrientationPortrait = 1;$/;"	v
OrientationPortraitAny	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public static var OrientationPortraitAny = 7;	\/\/ This and below for use with setFixedOrientation() on iOS$/;"	v
OrientationPortraitUpsideDown	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public static var OrientationPortraitUpsideDown = 2;$/;"	v
Output	/usr/lib/haxe/std/haxe/io/Output.hx	/^class Output {$/;"	c
P	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^			var P:B2Vec2 = m_linearImpulse;$/;"	v
P	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var P = 0x70;$/;"	v
P	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var P = [$/;"	v
P	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var P:Int = 80;$/;"	v
P	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var P = 80;$/;"	v
P1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^		var P1X:Float;$/;"	v
P1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^			var P1X:Float = (-m_impulse - m_limitImpulse1) * m_u1.x;$/;"	v
P1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var P1X:Float;$/;"	v
P1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^		var P1Y:Float;$/;"	v
P1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^			var P1Y:Float = (-m_impulse - m_limitImpulse1) * m_u1.y;$/;"	v
P1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var P1Y:Float;$/;"	v
P2X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^		var P2X:Float;$/;"	v
P2X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^			var P2X:Float = (-m_ratio * m_impulse - m_limitImpulse2) * m_u2.x;$/;"	v
P2X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var P2X:Float;$/;"	v
P2Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^		var P2Y:Float;$/;"	v
P2Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^			var P2Y:Float = (-m_ratio * m_impulse - m_limitImpulse2) * m_u2.y;$/;"	v
P2Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var P2Y:Float;$/;"	v
PACK_ALIGNMENT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var PACK_ALIGNMENT = 0x0D05;$/;"	v
PACK_ALIGNMENT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var PACK_ALIGNMENT:Int;$/;"	v
PACK_ALIGNMENT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var PACK_ALIGNMENT = 0x0D05;$/;"	v
PACK_ALIGNMENT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var PACK_ALIGNMENT					  = 0x0D05;$/;"	v
PACK_ALIGNMENT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var PACK_ALIGNMENT                 = 0x0D05;$/;"	v
PAD	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoExtend.hx	/^	public var PAD = 3;$/;"	v
PAGE_DOWN	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var PAGE_DOWN = 0x4000004E;$/;"	v
PAGE_DOWN	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var PAGE_DOWN:Int = 34;$/;"	v
PAGE_DOWN	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var PAGE_DOWN = 34;$/;"	v
PAGE_UP	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var PAGE_UP = 0x4000004B;$/;"	v
PAGE_UP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var PAGE_UP:Int = 33;$/;"	v
PAGE_UP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var PAGE_UP = 33;$/;"	v
PAHAWH_HMONG	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var PAHAWH_HMONG = "Hmng";$/;"	v
PALMYRENE	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var PALMYRENE = "Palm";$/;"	v
PARAMS	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^	static var PARAMS:Array<Dynamic> = null;$/;"	v
PARTIAL_FILE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var PARTIAL_FILE = 18;$/;"	v
PASSWORD	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var PASSWORD = 10174;$/;"	v
PASTE	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var PASTE = 0x4000007D;$/;"	v
PATTERN_TYPE_MISMATCH	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var PATTERN_TYPE_MISMATCH = 14;$/;"	v
PAUSE	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var PAUSE = 0x40000048;$/;"	v
PAUSED	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var PAUSED:Int = 0x1013;$/;"	v
PAUSED	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var PAUSED:Int = 0x1013;$/;"	v
PAU_CIN_HAU	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var PAU_CIN_HAU = "Pauc";$/;"	v
PCDATA	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^	public static inline var PCDATA			= 13;$/;"	v
PCData	/usr/lib/haxe/std/Xml.hx	/^	static var PCData(default,null) : XmlType;$/;"	v
PEER_FAILED_VERIFICATION	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var PEER_FAILED_VERIFICATION = 51;$/;"	v
PERCENT	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var PERCENT = 0x25;$/;"	v
PERIOD	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var PERIOD = 0x2E;$/;"	v
PERIOD	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var PERIOD:Int = 190;$/;"	v
PERIOD	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var PERIOD = 190;$/;"	v
PHAGS_PA	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var PHAGS_PA = "Phag";$/;"	v
PHOENICIAN	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var PHOENICIAN = "Phnx";$/;"	v
PI	/usr/lib/haxe/std/Math.hx	/^	static var PI(default,null) : Float;$/;"	v
PITCH	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var PITCH:Int = 0x1003;$/;"	v
PITCH	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var PITCH:Int = 0x1003;$/;"	v
PLAYING	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var PLAYING:Int = 0x1012;$/;"	v
PLAYING	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var PLAYING:Int = 0x1012;$/;"	v
PLAY_FAILED	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static var PLAY_FAILED:String;$/;"	v
PLAY_FINISHED	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static var PLAY_FINISHED:String;$/;"	v
PLAY_INITED	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static var PLAY_INITED:String;$/;"	v
PLAY_INTERRUPTED	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static var PLAY_INTERRUPTED:String;$/;"	v
PLAY_SUCCEEDED	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static var PLAY_SUCCEEDED:String;$/;"	v
PLUS	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var PLUS = 0x2B;$/;"	v
PNG	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/format/PNG.hx	/^class PNG {$/;"	c
PNGEncoderOptions	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/PNGEncoderOptions.hx	/^class PNGEncoderOptions {$/;"	c
POINTER	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeMouse.hx	/^	var POINTER = 4;$/;"	v
POINTS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var POINTS = 0x0000;$/;"	v
POINTS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var POINTS:Int;$/;"	v
POINTS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var POINTS = 0x0000;$/;"	v
POINTS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var POINTS								 = 0x0000;$/;"	v
POINTS	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var POINTS                         = 0x0000;$/;"	v
POINT_SPRITE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var POINT_SPRITE = 0x8861;$/;"	v
POINT_SPRITE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var POINT_SPRITE = 0x8861;$/;"	v
POINT_SPRITE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var POINT_SPRITE						  = 0x8861;$/;"	v
POINT_SPRITE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var POINT_SPRITE                    = 0x8861;$/;"	v
POLYGON_OFFSET_FACTOR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var POLYGON_OFFSET_FACTOR = 0x8038;$/;"	v
POLYGON_OFFSET_FACTOR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var POLYGON_OFFSET_FACTOR:Int;$/;"	v
POLYGON_OFFSET_FACTOR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var POLYGON_OFFSET_FACTOR = 0x8038;$/;"	v
POLYGON_OFFSET_FACTOR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var POLYGON_OFFSET_FACTOR			 = 0x8038;$/;"	v
POLYGON_OFFSET_FACTOR	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var POLYGON_OFFSET_FACTOR          = 0x8038;$/;"	v
POLYGON_OFFSET_FILL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var POLYGON_OFFSET_FILL = 0x8037;$/;"	v
POLYGON_OFFSET_FILL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var POLYGON_OFFSET_FILL:Int;$/;"	v
POLYGON_OFFSET_FILL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var POLYGON_OFFSET_FILL = 0x8037;$/;"	v
POLYGON_OFFSET_FILL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var POLYGON_OFFSET_FILL				= 0x8037;$/;"	v
POLYGON_OFFSET_FILL	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var POLYGON_OFFSET_FILL            = 0x8037;$/;"	v
POLYGON_OFFSET_UNITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var POLYGON_OFFSET_UNITS = 0x2A00;$/;"	v
POLYGON_OFFSET_UNITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var POLYGON_OFFSET_UNITS:Int;$/;"	v
POLYGON_OFFSET_UNITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var POLYGON_OFFSET_UNITS = 0x2A00;$/;"	v
POLYGON_OFFSET_UNITS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var POLYGON_OFFSET_UNITS			  = 0x2A00;$/;"	v
POLYGON_OFFSET_UNITS	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var POLYGON_OFFSET_UNITS           = 0x2A00;$/;"	v
POLYGON_SHAPE	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2ShapeType.hx	/^	var POLYGON_SHAPE = 2;$/;"	v
PORT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var PORT = 3;$/;"	v
POSITION	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var POSITION:Int = 0x1004;$/;"	v
POSITION	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var POSITION:Int = 0x1004;$/;"	v
POSITIVE_INFINITY	/usr/lib/haxe/std/Math.hx	/^	static var POSITIVE_INFINITY(default,null) : Float;$/;"	v
POST	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLRequestMethod.hx	/^	var POST = "POST";$/;"	v
POST	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var POST = 47;$/;"	v
POST	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequestMethod.hx	/^	public static inline var POST:String = "POST";$/;"	v
POST	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLRequestMethod.hx	/^	var POST = "POST";$/;"	v
POSTFIELDS	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var POSTFIELDS = 10015;$/;"	v
POSTFIELDSIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var POSTFIELDSIZE = 60;$/;"	v
POSTFIELDSIZE_LARGE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var POSTFIELDSIZE_LARGE = 30120;$/;"	v
POSTQUOTE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var POSTQUOTE = 10039;$/;"	v
POSTREDIR	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var POSTREDIR = 161;$/;"	v
POWER	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var POWER = 0x40000066;$/;"	v
PREFIX	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^	static inline var PREFIX = "haxe.web.Dispatch.DispatchRule.";$/;"	v
PREMIUM	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	var PREMIUM = "premium";$/;"	v
PREMIUM_INAPP	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	var PREMIUM_INAPP = "premium-inapp";$/;"	v
PREQUOTE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var PREQUOTE = 10093;$/;"	v
PRETRANSFER_TIME	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var PRETRANSFER_TIME = 0x300000 + 6;$/;"	v
PRIMARY_IP	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var PRIMARY_IP = 0x100000 + 32;$/;"	v
PRIMARY_PORT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var PRIMARY_PORT = 0x200000 + 40;$/;"	v
PRINT_SCREEN	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var PRINT_SCREEN = 0x40000046;$/;"	v
PRIOR	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var PRIOR = 0x4000009D;$/;"	v
PRISMATIC_JOINT	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2JointType.hx	/^	var PRISMATIC_JOINT = 2;$/;"	v
PRIVATE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var PRIVATE = 0x100000 + 21;$/;"	v
PRIVATE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var PRIVATE = 10103;$/;"	v
PRODUCTION_SERVER_URL	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	public static inline var PRODUCTION_SERVER_URL = "https:\/\/marketplace.firefox.com";$/;"	v
PROGRESS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/ProgressEvent.hx	/^	public static var PROGRESS:String = "progress";$/;"	v
PROGRESSDATA	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var PROGRESSDATA = 10057;$/;"	v
PROGRESSFUNCTION	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var PROGRESSFUNCTION = 20056;$/;"	v
PROTOCOLS	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var PROTOCOLS = 181;$/;"	v
PROXY	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var PROXY = 10004;$/;"	v
PROXY	/usr/lib/haxe/std/haxe/Http.hx	/^	public static var PROXY : { host : String, port : Int, auth : { user : String, pass : String } } = null;$/;"	v
PROXYAUTH	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var PROXYAUTH = 111;$/;"	v
PROXYAUTH_AVAIL	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var PROXYAUTH_AVAIL = 0x200000 + 24;$/;"	v
PROXYPASSWORD	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var PROXYPASSWORD = 10176;$/;"	v
PROXYPORT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var PROXYPORT = 59;$/;"	v
PROXYTYPE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var PROXYTYPE = 101;$/;"	v
PROXYUSERNAME	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var PROXYUSERNAME = 10175;$/;"	v
PROXYUSERPWD	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var PROXYUSERPWD = 10006;$/;"	v
PROXY_TRANSFER_MODE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var PROXY_TRANSFER_MODE = 166;$/;"	v
PSALTER_PAHLAVI	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var PSALTER_PAHLAVI = "Phlp";$/;"	v
PULLEY_JOINT	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2JointType.hx	/^	var PULLEY_JOINT = 4;$/;"	v
PUT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLRequestMethod.hx	/^	var PUT = "PUT";$/;"	v
PUT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var PUT = 54;$/;"	v
PUT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequestMethod.hx	/^	public static inline var PUT:String = "PUT";$/;"	v
PUT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLRequestMethod.hx	/^	var PUT = "PUT";$/;"	v
PX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^					var PX:Float = ccp.normalImpulse * normalX + ccp.tangentImpulse * tangentX;$/;"	v
PX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var PX:Float = impulse * normal.x;$/;"	v
PX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^		var PX:Float;$/;"	v
PX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^			var PX:Float = m_impulse * m_u.x;$/;"	v
PX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^		var PX:Float = impulse * m_u.x;$/;"	v
PX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^		var PX:Float = m_impulse * m_J.linearB.x;$/;"	v
PX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^			var PX:Float = m_impulse.x * m_perp.x + (m_motorImpulse + m_impulse.y) * m_axis.x;$/;"	v
PX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var PX:Float = impulse.x * m_perp.x + impulse.y * m_axis.x;$/;"	v
PX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var PX:Float;$/;"	v
PX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^			var PX:Float = m_impulse.x * m_perp.x + (m_motorImpulse + m_impulse.z) * m_axis.x;$/;"	v
PX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var PX:Float = impulse.x * m_perp.x + impulse.z * m_axis.x;$/;"	v
PX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var PX:Float;$/;"	v
PX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^			var PX:Float = m_impulse.x;$/;"	v
PY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^					var PY:Float = ccp.normalImpulse * normalY + ccp.tangentImpulse * tangentY;$/;"	v
PY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var PY:Float = impulse * normal.y;$/;"	v
PY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^		var PY:Float;$/;"	v
PY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^			var PY:Float = m_impulse * m_u.y;$/;"	v
PY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^		var PY:Float = impulse * m_u.y;$/;"	v
PY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^		var PY:Float = m_impulse * m_J.linearB.y;$/;"	v
PY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^			var PY:Float = m_impulse.x * m_perp.y + (m_motorImpulse + m_impulse.y) * m_axis.y;$/;"	v
PY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var PY:Float = impulse.x * m_perp.y + impulse.y * m_axis.y;$/;"	v
PY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var PY:Float;$/;"	v
PY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^			var PY:Float = m_impulse.x * m_perp.y + (m_motorImpulse + m_impulse.z) * m_axis.y;$/;"	v
PY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var PY:Float = impulse.x * m_perp.y + impulse.z * m_axis.y;$/;"	v
PY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var PY:Float;$/;"	v
PY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^			var PY:Float = m_impulse.y;$/;"	v
Parser	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^class Parser$/;"	c
Part	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Part.hx	/^class Part {$/;"	c
Path	/usr/lib/haxe/std/haxe/io/Path.hx	/^class Path {$/;"	c
PathBuiler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^class PathBuiler {$/;"	c
PathHelper	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^class PathHelper {$/;"	c
PatternBR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/PatternFillShader.hx	/^	var PatternBR = "uPatternBR";$/;"	v
PatternFillShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/PatternFillShader.hx	/^class PatternFillShader extends AbstractShader {$/;"	c
PatternFillShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/PatternFillShader.hx	/^class PatternFillShader extends Shader {$/;"	c
PatternMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/PatternFillShader.hx	/^	var PatternMatrix = "uPatternMatrix";$/;"	v
PatternTL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/PatternFillShader.hx	/^	var PatternTL = "uPatternTL";$/;"	v
PerspectiveProjection	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/PerspectiveProjection.hx	/^class PerspectiveProjection {$/;"	c
PhysicsDebug	Source/Main.hx	/^	private var PhysicsDebug:Sprite;$/;"	v
PixelSnappingTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/PixelSnappingTest.hx	/^class PixelSnappingTest {$/;"	c
PlatformHelper	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PlatformHelper.hx	/^class PlatformHelper {$/;"	c
PlatformSetup	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^class PlatformSetup {$/;"	c
PlatformTarget	/usr/lib/haxe/lib/lime/2,4,3/lime/project/PlatformTarget.hx	/^class PlatformTarget {$/;"	c
Point	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Point.hx	/^class Point {$/;"	c
Point	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Point.hx	/^class Point {$/;"	c
PointTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/PointTest.hx	/^class PointTest {$/;"	c
Poll	/usr/lib/haxe/std/neko/net/Poll.hx	/^class Poll {$/;"	c
PolyK	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^class PolyK {$/;"	c
Position	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/DefaultShader.hx	/^	var Position = "aPosition";$/;"	v
Position	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/DrawTrianglesShader.hx	/^	var Position = DefAttrib.Position;$/;"	v
Position	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/FillShader.hx	/^	var Position = DefAttrib.Position;$/;"	v
Position	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/PatternFillShader.hx	/^	var Position = DefAttrib.Position;$/;"	v
Position	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/PrimitiveShader.hx	/^	var Position = DefAttrib.Position;$/;"	v
Position for mobile browsers better	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^			\/\/ TODO: Position for mobile browsers better$/;"	i
Preloader	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Preloader.hx	/^class Preloader #if flash extends Sprite #end {$/;"	c
Preloader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Preloader.hx	/^class Preloader extends LimePreloader {$/;"	c
PrimitiveShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/PrimitiveShader.hx	/^class PrimitiveShader extends AbstractShader {$/;"	c
PrimitiveShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/PrimitiveShader.hx	/^class PrimitiveShader extends Shader {$/;"	c
Printer	/usr/lib/haxe/std/haxe/macro/Printer.hx	/^class Printer {$/;"	c
Printer	/usr/lib/haxe/std/haxe/xml/Printer.hx	/^class Printer {$/;"	c
ProcessHelper	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ProcessHelper.hx	/^class ProcessHelper {$/;"	c
ProcessingInstruction	/usr/lib/haxe/std/Xml.hx	/^	static var ProcessingInstruction(default,null) : XmlType;$/;"	v
Program3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Program3D.hx	/^class Program3D {$/;"	c
Progress	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^class Progress extends haxe.io.Output {$/;"	c
ProgressEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/ProgressEvent.hx	/^class ProgressEvent extends Event {$/;"	c
ProgressEventTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/ProgressEventTest.hx	/^class ProgressEventTest {$/;"	c
ProjectXMLParser	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^class ProjectXMLParser extends HXProject {$/;"	c
ProjectionMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/DefaultShader.hx	/^	var ProjectionMatrix = "uProjectionMatrix";$/;"	v
ProjectionMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/DrawTrianglesShader.hx	/^	var ProjectionMatrix = DefUniform.ProjectionMatrix;$/;"	v
ProjectionMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/FillShader.hx	/^	var ProjectionMatrix = DefUniform.ProjectionMatrix;$/;"	v
ProjectionMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/PatternFillShader.hx	/^	var ProjectionMatrix = DefUniform.ProjectionMatrix;$/;"	v
ProjectionMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/PrimitiveShader.hx	/^	var ProjectionMatrix = DefUniform.ProjectionMatrix;$/;"	v
Proxy	/usr/lib/haxe/std/haxe/remoting/Proxy.hx	/^class Proxy<T> {$/;"	c
Proxy	/usr/lib/haxe/std/haxe/xml/Proxy.hx	/^class Proxy<Const,T> {$/;"	c
ProxyDetect	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^class ProxyDetect {$/;"	c
Q	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var Q = 0x71;$/;"	v
Q	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var Q:Int = 81;$/;"	v
Q	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var Q = 81;$/;"	v
QUERY_REGEX	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URIParser.hx	/^	public static var QUERY_REGEX = ~\/(?:^|&)([^&=]*)=?([^&]*)\/;$/;"	v
QUESTION	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var QUESTION = 0x3F;$/;"	v
QUOTE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var QUOTE = 10028;$/;"	v
QUOTE	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var QUOTE = 0x22;$/;"	v
QUOTE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var QUOTE:Int = 222;$/;"	v
QUOTE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var QUOTE = 222;$/;"	v
QUOTE_ERROR	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var QUOTE_ERROR = 21;$/;"	v
R	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2OBB.hx	/^	public var R:B2Mat22;$/;"	v
R	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Transform.hx	/^	public var R:B2Mat22;$/;"	v
R	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^	function R(X, n) {$/;"	f
R	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var R = 0x72;$/;"	v
R	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var R:Int = 82;$/;"	v
R	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var R = 82;$/;"	v
R1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var R1:B2Mat22 = B2Mat22.fromAngle(a1);$/;"	v
R1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var R1:B2Mat22 = B2Mat22.fromAngle(a1);$/;"	v
R2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var R2:B2Mat22 = B2Mat22.fromAngle(a2);$/;"	v
R2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var R2:B2Mat22 = B2Mat22.fromAngle(a2);$/;"	v
RANDOM_FILE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var RANDOM_FILE = 10076;$/;"	v
RANGE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var RANGE = 10007;$/;"	v
RANGE_ERROR	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var RANGE_ERROR = 33;$/;"	v
READFUNCTION	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var READFUNCTION = 20012;$/;"	v
READ_ERROR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var READ_ERROR = 10;$/;"	v
READ_ERROR	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var READ_ERROR = 26;$/;"	v
RECV_ERROR	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var RECV_ERROR = 56;$/;"	v
RED	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapDataChannel.hx	/^	public static inline var RED = 1;$/;"	v
REDIRECT_COUNT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var REDIRECT_COUNT = 0x200000 + 20;$/;"	v
REDIRECT_TIME	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var REDIRECT_TIME = 0x300000 + 19;$/;"	v
REDIRECT_URL	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var REDIRECT_URL = 0x100000 + 31;$/;"	v
REDIR_PROTOCOLS	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var REDIR_PROTOCOLS = 182;$/;"	v
RED_BITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var RED_BITS = 0x0D52;$/;"	v
RED_BITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var RED_BITS:Int;$/;"	v
RED_BITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var RED_BITS = 0x0D52;$/;"	v
RED_BITS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var RED_BITS							  = 0x0D52;$/;"	v
RED_BITS	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var RED_BITS                       = 0x0D52;$/;"	v
REFERENCE_DISTANCE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var REFERENCE_DISTANCE:Int = 0x1020;$/;"	v
REFERENCE_DISTANCE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var REFERENCE_DISTANCE:Int = 0x1020;$/;"	v
REFERER	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var REFERER = 10016;$/;"	v
REFLECT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoExtend.hx	/^	public var REFLECT = 2;$/;"	v
REFRESH	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public var REFRESH:Int = 0x1008;$/;"	v
REFRESH	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static inline var REFRESH:Int = 0x1008;$/;"	v
REJANG	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var REJANG = "Rjng";$/;"	v
REMOTE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Security.hx	/^	public static var REMOTE:String;$/;"	v
REMOTE_ACCESS_DENIED	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var REMOTE_ACCESS_DENIED = 9;$/;"	v
REMOTE_DISK_FULL	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var REMOTE_DISK_FULL = 70;$/;"	v
REMOTE_FILE_EXISTS	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var REMOTE_FILE_EXISTS = 73;$/;"	v
REMOTE_FILE_NOT_FOUND	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var REMOTE_FILE_NOT_FOUND = 78;$/;"	v
REMOVED	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public static var REMOVED = "removed";$/;"	v
REMOVED	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public static var REMOVED = "removed";$/;"	v
REMOVED_FROM_STAGE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public static var REMOVED_FROM_STAGE = "removedFromStage";$/;"	v
REMOVED_FROM_STAGE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public static var REMOVED_FROM_STAGE = "removedFromStage";$/;"	v
RENDER	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	var RENDER = 0;$/;"	v
RENDER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public static var RENDER = "render";$/;"	v
RENDER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public static var RENDER = "render";$/;"	v
RENDERBUFFER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var RENDERBUFFER = 0x8D41;$/;"	v
RENDERBUFFER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var RENDERBUFFER:Int;$/;"	v
RENDERBUFFER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var RENDERBUFFER = 0x8D41;$/;"	v
RENDERBUFFER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var RENDERBUFFER						 = 0x8D41;$/;"	v
RENDERBUFFER	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var RENDERBUFFER                   = 0x8D41;$/;"	v
RENDERBUFFER_ALPHA_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var RENDERBUFFER_ALPHA_SIZE = 0x8D53;$/;"	v
RENDERBUFFER_ALPHA_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var RENDERBUFFER_ALPHA_SIZE:Int;$/;"	v
RENDERBUFFER_ALPHA_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var RENDERBUFFER_ALPHA_SIZE = 0x8D53;$/;"	v
RENDERBUFFER_ALPHA_SIZE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var RENDERBUFFER_ALPHA_SIZE		  = 0x8D53;$/;"	v
RENDERBUFFER_ALPHA_SIZE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var RENDERBUFFER_ALPHA_SIZE        = 0x8D53;$/;"	v
RENDERBUFFER_BINDING	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var RENDERBUFFER_BINDING = 0x8CA7;$/;"	v
RENDERBUFFER_BINDING	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var RENDERBUFFER_BINDING:Int;$/;"	v
RENDERBUFFER_BINDING	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var RENDERBUFFER_BINDING = 0x8CA7;$/;"	v
RENDERBUFFER_BINDING	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var RENDERBUFFER_BINDING			  = 0x8CA7;$/;"	v
RENDERBUFFER_BINDING	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var RENDERBUFFER_BINDING           = 0x8CA7;$/;"	v
RENDERBUFFER_BLUE_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var RENDERBUFFER_BLUE_SIZE = 0x8D52;$/;"	v
RENDERBUFFER_BLUE_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var RENDERBUFFER_BLUE_SIZE:Int;$/;"	v
RENDERBUFFER_BLUE_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var RENDERBUFFER_BLUE_SIZE = 0x8D52;$/;"	v
RENDERBUFFER_BLUE_SIZE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var RENDERBUFFER_BLUE_SIZE			= 0x8D52;$/;"	v
RENDERBUFFER_BLUE_SIZE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var RENDERBUFFER_BLUE_SIZE         = 0x8D52;$/;"	v
RENDERBUFFER_DEPTH_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var RENDERBUFFER_DEPTH_SIZE = 0x8D54;$/;"	v
RENDERBUFFER_DEPTH_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var RENDERBUFFER_DEPTH_SIZE:Int;$/;"	v
RENDERBUFFER_DEPTH_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var RENDERBUFFER_DEPTH_SIZE = 0x8D54;$/;"	v
RENDERBUFFER_DEPTH_SIZE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var RENDERBUFFER_DEPTH_SIZE		  = 0x8D54;$/;"	v
RENDERBUFFER_DEPTH_SIZE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var RENDERBUFFER_DEPTH_SIZE        = 0x8D54;$/;"	v
RENDERBUFFER_GREEN_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var RENDERBUFFER_GREEN_SIZE = 0x8D51;$/;"	v
RENDERBUFFER_GREEN_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var RENDERBUFFER_GREEN_SIZE:Int;$/;"	v
RENDERBUFFER_GREEN_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var RENDERBUFFER_GREEN_SIZE = 0x8D51;$/;"	v
RENDERBUFFER_GREEN_SIZE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var RENDERBUFFER_GREEN_SIZE		  = 0x8D51;$/;"	v
RENDERBUFFER_GREEN_SIZE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var RENDERBUFFER_GREEN_SIZE        = 0x8D51;$/;"	v
RENDERBUFFER_HEIGHT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var RENDERBUFFER_HEIGHT = 0x8D43;$/;"	v
RENDERBUFFER_HEIGHT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var RENDERBUFFER_HEIGHT:Int;$/;"	v
RENDERBUFFER_HEIGHT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var RENDERBUFFER_HEIGHT = 0x8D43;$/;"	v
RENDERBUFFER_HEIGHT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var RENDERBUFFER_HEIGHT				= 0x8D43;$/;"	v
RENDERBUFFER_HEIGHT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var RENDERBUFFER_HEIGHT            = 0x8D43;$/;"	v
RENDERBUFFER_INTERNAL_FORMAT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var RENDERBUFFER_INTERNAL_FORMAT = 0x8D44;$/;"	v
RENDERBUFFER_INTERNAL_FORMAT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var RENDERBUFFER_INTERNAL_FORMAT:Int;$/;"	v
RENDERBUFFER_INTERNAL_FORMAT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var RENDERBUFFER_INTERNAL_FORMAT = 0x8D44;$/;"	v
RENDERBUFFER_INTERNAL_FORMAT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var RENDERBUFFER_INTERNAL_FORMAT	= 0x8D44;$/;"	v
RENDERBUFFER_INTERNAL_FORMAT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var RENDERBUFFER_INTERNAL_FORMAT   = 0x8D44;$/;"	v
RENDERBUFFER_RED_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var RENDERBUFFER_RED_SIZE = 0x8D50;$/;"	v
RENDERBUFFER_RED_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var RENDERBUFFER_RED_SIZE:Int;$/;"	v
RENDERBUFFER_RED_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var RENDERBUFFER_RED_SIZE = 0x8D50;$/;"	v
RENDERBUFFER_RED_SIZE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var RENDERBUFFER_RED_SIZE			 = 0x8D50;$/;"	v
RENDERBUFFER_RED_SIZE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var RENDERBUFFER_RED_SIZE          = 0x8D50;$/;"	v
RENDERBUFFER_STENCIL_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var RENDERBUFFER_STENCIL_SIZE = 0x8D55;$/;"	v
RENDERBUFFER_STENCIL_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var RENDERBUFFER_STENCIL_SIZE:Int;$/;"	v
RENDERBUFFER_STENCIL_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var RENDERBUFFER_STENCIL_SIZE = 0x8D55;$/;"	v
RENDERBUFFER_STENCIL_SIZE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var RENDERBUFFER_STENCIL_SIZE		= 0x8D55;$/;"	v
RENDERBUFFER_STENCIL_SIZE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var RENDERBUFFER_STENCIL_SIZE      = 0x8D55;$/;"	v
RENDERBUFFER_WIDTH	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var RENDERBUFFER_WIDTH = 0x8D42;$/;"	v
RENDERBUFFER_WIDTH	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var RENDERBUFFER_WIDTH:Int;$/;"	v
RENDERBUFFER_WIDTH	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var RENDERBUFFER_WIDTH = 0x8D42;$/;"	v
RENDERBUFFER_WIDTH	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var RENDERBUFFER_WIDTH				 = 0x8D42;$/;"	v
RENDERBUFFER_WIDTH	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var RENDERBUFFER_WIDTH             = 0x8D42;$/;"	v
RENDERER	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var RENDERER:Int = 0xB003;$/;"	v
RENDERER	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var RENDERER:Int = 0xB003;$/;"	v
RENDERER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var RENDERER = 0x1F01;$/;"	v
RENDERER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var RENDERER:Int;$/;"	v
RENDERER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var RENDERER = 0x1F01;$/;"	v
RENDERER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var RENDERER							  = 0x1F01;$/;"	v
RENDERER	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var RENDERER                       = 0x1F01;$/;"	v
RENDER_CONTEXT_LOST	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	var RENDER_CONTEXT_LOST = 1;$/;"	v
RENDER_CONTEXT_RESTORED	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	var RENDER_CONTEXT_RESTORED = 2;$/;"	v
REPEAT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var REPEAT = 0x2901;$/;"	v
REPEAT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var REPEAT:Int;$/;"	v
REPEAT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoExtend.hx	/^	public var REPEAT = 1;$/;"	v
REPEAT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var REPEAT = 0x2901;$/;"	v
REPEAT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var REPEAT								 = 0x2901;$/;"	v
REPEAT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var REPEAT                         = 0x2901;$/;"	v
REPLACE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var REPLACE = 0x1E01;$/;"	v
REPLACE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var REPLACE:Int;$/;"	v
REPLACE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var REPLACE = 0x1E01;$/;"	v
REPLACE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var REPLACE								= 0x1E01;$/;"	v
REPLACE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var REPLACE                        = 0x1E01;$/;"	v
REQUEST_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var REQUEST_SIZE = 0x200000 + 12;$/;"	v
REQUIRE_SHADERS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	static public var REQUIRE_SHADERS = 0x0100;$/;"	v
RESIZABLE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	static public var RESIZABLE = 0x0004;$/;"	v
RESIZE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public static var RESIZE = "resize";$/;"	v
RESIZE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public static var RESIZE = "resize";$/;"	v
RESIZE_NESW	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeMouse.hx	/^	var RESIZE_NESW = 5;$/;"	v
RESIZE_NS	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeMouse.hx	/^	var RESIZE_NS = 6;$/;"	v
RESIZE_NWSE	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeMouse.hx	/^	var RESIZE_NWSE = 7;$/;"	v
RESIZE_WE	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeMouse.hx	/^	var RESIZE_WE = 8;$/;"	v
RESOLVE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var RESOLVE = 10203;$/;"	v
RESPONSE_CODE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var RESPONSE_CODE = 0x200000 + 2;$/;"	v
RESUME_FROM	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var RESUME_FROM = 21;$/;"	v
RESUME_FROM_LARGE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var RESUME_FROM_LARGE = 30116;$/;"	v
RETURN	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var RETURN = 0x0D;$/;"	v
RETURN2	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var RETURN2 = 0x4000009E;$/;"	v
REVERSE_SUBTRACT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/BlendModeManager.hx	/^	var REVERSE_SUBTRACT = GL.FUNC_REVERSE_SUBTRACT;$/;"	v
REVOLUTE_JOINT	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2JointType.hx	/^	var REVOLUTE_JOINT = 1;$/;"	v
RGB	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var RGB = 0x1907;$/;"	v
RGB	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var RGB:Int;$/;"	v
RGB	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoSubpixelOrder.hx	/^	public var RGB = 1;$/;"	v
RGB	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var RGB = 0x1907;$/;"	v
RGB	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var RGB									 = 0x1907;$/;"	v
RGB	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var RGB                            = 0x1907;$/;"	v
RGB16_565	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFormat.hx	/^	public var RGB16_565 = 4;$/;"	v
RGB24	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFormat.hx	/^	public var RGB24 = 1;$/;"	v
RGB30	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFormat.hx	/^	public var RGB30 = 5;$/;"	v
RGB565	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var RGB565 = 0x8D62;$/;"	v
RGB565	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var RGB565:Int;$/;"	v
RGB565	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var RGB565 = 0x8D62;$/;"	v
RGB565	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var RGB565								 = 0x8D62;$/;"	v
RGB565	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var RGB565                         = 0x8D62;$/;"	v
RGB5_A1	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var RGB5_A1 = 0x8057;$/;"	v
RGB5_A1	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var RGB5_A1:Int;$/;"	v
RGB5_A1	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var RGB5_A1 = 0x8057;$/;"	v
RGB5_A1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var RGB5_A1								= 0x8057;$/;"	v
RGB5_A1	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var RGB5_A1                        = 0x8057;$/;"	v
RGBA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var RGBA = 0x1908;$/;"	v
RGBA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var RGBA:Int;$/;"	v
RGBA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/PixelFormat.hx	/^	public var RGBA = 0;$/;"	v
RGBA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var RGBA = 0x1908;$/;"	v
RGBA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var RGBA									= 0x1908;$/;"	v
RGBA	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var RGBA                           = 0x1908;$/;"	v
RGBA4	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var RGBA4 = 0x8056;$/;"	v
RGBA4	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var RGBA4:Int;$/;"	v
RGBA4	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var RGBA4 = 0x8056;$/;"	v
RGBA4	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var RGBA4								  = 0x8056;$/;"	v
RGBA4	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var RGBA4                          = 0x8056;$/;"	v
RIGHT	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var RIGHT = 0x4000004F;$/;"	v
RIGHT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextFormatAlign.hx	/^	public static var RIGHT = "right";$/;"	v
RIGHT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var RIGHT:Int = 39;$/;"	v
RIGHT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/KeyLocation.hx	/^	var RIGHT = 2;$/;"	v
RIGHT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var RIGHT = 39;$/;"	v
RIGHTBRACKET	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var RIGHTBRACKET:Int = 221;$/;"	v
RIGHTBRACKET	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var RIGHTBRACKET = 221;$/;"	v
RIGHT_ALT	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var RIGHT_ALT = 0x400000E6;$/;"	v
RIGHT_ALT	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	public static inline var RIGHT_ALT:KeyModifier = 0x0200;$/;"	v
RIGHT_BRACKET	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var RIGHT_BRACKET = 0x5D;$/;"	v
RIGHT_CLICK	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public static var RIGHT_CLICK:String = "rightClick";$/;"	v
RIGHT_CLICK	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public static var RIGHT_CLICK:String = "rightClick";$/;"	v
RIGHT_CTRL	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var RIGHT_CTRL = 0x400000E4;$/;"	v
RIGHT_CTRL	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	public static inline var RIGHT_CTRL:KeyModifier = 0x0080;$/;"	v
RIGHT_META	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var RIGHT_META = 0x400000E7;$/;"	v
RIGHT_META	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	public static inline var RIGHT_META:KeyModifier = 0x0800;$/;"	v
RIGHT_MOUSE_DOWN	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public static var RIGHT_MOUSE_DOWN:String = "rightMouseDown";$/;"	v
RIGHT_MOUSE_DOWN	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public static var RIGHT_MOUSE_DOWN:String = "rightMouseDown";$/;"	v
RIGHT_MOUSE_UP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public static var RIGHT_MOUSE_UP:String = "rightMouseUp";$/;"	v
RIGHT_MOUSE_UP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public static var RIGHT_MOUSE_UP:String = "rightMouseUp";$/;"	v
RIGHT_PARENTHESIS	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var RIGHT_PARENTHESIS = 0x29;$/;"	v
RIGHT_SHIFT	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var RIGHT_SHIFT = 0x400000E5;$/;"	v
RIGHT_SHIFT	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	public static inline var RIGHT_SHIFT:KeyModifier = 0x0002;$/;"	v
RIGHT_SHOULDER	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/GamepadButton.hx	/^	var RIGHT_SHOULDER = 10;$/;"	v
RIGHT_STICK	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/GamepadButton.hx	/^	var RIGHT_STICK = 8;$/;"	v
RIGHT_TO_LEFT	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextDirection.hx	/^	var RIGHT_TO_LEFT = 5;$/;"	v
RIGHT_X	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/GamepadAxis.hx	/^	var RIGHT_X = 2;$/;"	v
RIGHT_Y	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/GamepadAxis.hx	/^	var RIGHT_Y = 3;$/;"	v
ROLLOFF_FACTOR	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var ROLLOFF_FACTOR:Int = 0x1021;$/;"	v
ROLLOFF_FACTOR	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var ROLLOFF_FACTOR:Int = 0x1021;$/;"	v
ROLL_OUT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public static var ROLL_OUT:String = "rollOut";$/;"	v
ROLL_OUT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public static var ROLL_OUT:String = "rollOut";$/;"	v
ROLL_OVER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public static var ROLL_OVER:String = "rollOver";$/;"	v
ROLL_OVER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public static var ROLL_OVER:String = "rollOver";$/;"	v
ROUND	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoLineCap.hx	/^	public var ROUND = 1;$/;"	v
ROUND	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoLineJoin.hx	/^	public var ROUND = 1;$/;"	v
RTSPHEADER	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var RTSPHEADER = 10023;$/;"	v
RTSP_CLIENT_CSEQ	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var RTSP_CLIENT_CSEQ = 0x200000 + 37;$/;"	v
RTSP_CLIENT_CSEQ	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var RTSP_CLIENT_CSEQ = 193;$/;"	v
RTSP_CSEQ_ERROR	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var RTSP_CSEQ_ERROR = 85;$/;"	v
RTSP_CSEQ_RECV	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var RTSP_CSEQ_RECV = 0x200000 + 39;$/;"	v
RTSP_REQUEST	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var RTSP_REQUEST = 189;$/;"	v
RTSP_SERVER_CSEQ	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var RTSP_SERVER_CSEQ = 0x200000 + 38;$/;"	v
RTSP_SERVER_CSEQ	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var RTSP_SERVER_CSEQ = 194;$/;"	v
RTSP_SESSION_ERROR	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var RTSP_SESSION_ERROR = 86;$/;"	v
RTSP_SESSION_ID	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var RTSP_SESSION_ID = 0x100000 + 36;$/;"	v
RTSP_SESSION_ID	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var RTSP_SESSION_ID = 10190;$/;"	v
RTSP_STREAM_URI	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var RTSP_STREAM_URI = 10191;$/;"	v
RTSP_TRANSPORT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var RTSP_TRANSPORT = 10192;$/;"	v
RTTI	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	static var RTTI = false;$/;"	v
RUNIC	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var RUNIC = "Runr";$/;"	v
Random	/usr/lib/haxe/std/neko/Random.hx	/^class Random {$/;"	c
RangeError	/usr/lib/haxe/lib/openfl/3,0,8/openfl/errors/RangeError.hx	/^class RangeError extends Error {$/;"	c
RangeErrorTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/RangeErrorTest.hx	/^class RangeErrorTest {$/;"	c
Reader	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^class Reader {$/;"	c
Reader	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^class Reader {$/;"	c
RecordMacros	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^class RecordMacros {$/;"	c
Rectangle	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^class Rectangle {$/;"	c
Rectangle	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^class Rectangle {$/;"	c
Rectangle	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^class Rectangle {$/;"	c
RectangleTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/RectangleTest.hx	/^class RectangleTest {$/;"	c
RectangleTexture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/RectangleTexture.hx	/^class RectangleTexture extends TextureBase {$/;"	c
Redirect	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^class Redirect {$/;"	c
Ref?	/usr/lib/haxe/std/haxe/macro/TypeTools.hx	/^				t; \/\/ TODO: Ref?$/;"	i
Refactor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/_shaders/AGLSLShaderUtils.hx	/^\/\/ TODO: Refactor$/;"	i
RefreshToken	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthToken.hx	/^class RefreshToken {$/;"	c
Reg	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Reg.hx	/^class Reg {$/;"	c
RegMap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/RegMap.hx	/^class RegMap {$/;"	c
Remove	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/_shaders/Shader.hx	/^\/\/ TODO: Remove$/;"	i
Remove bodies from controller	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		\/\/TODO: Remove bodies from controller$/;"	i
RenderEventInfo	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^private class RenderEventInfo {$/;"	c
RenderSession	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/RenderSession.hx	/^class RenderSession {$/;"	c
Renderer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Renderer.hx	/^class Renderer {$/;"	c
Request	/usr/lib/haxe/std/haxe/web/Request.hx	/^class Request {$/;"	c
RequestToken	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthToken.hx	/^class RequestToken {$/;"	c
Resource	/usr/lib/haxe/std/haxe/Resource.hx	/^class Resource {$/;"	c
ResultSet	/usr/lib/haxe/std/sys/db/ResultSet.hx	/^interface ResultSet {$/;"	i
RunScript	/usr/lib/haxe/lib/lime/2,4,3/tools/RunScript.hx	/^class RunScript {$/;"	c
RunScript	/usr/lib/haxe/lib/openfl/3,0,8/script/RunScript.hx	/^class RunScript {$/;"	c
S	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^	function S(X, n) {$/;"	f
S	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var S = 0x73;$/;"	v
S	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var S:Int = 83;$/;"	v
S	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var S = 83;$/;"	v
S3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3D.hx	/^class S3D {$/;"	c
S3DView	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^class S3DView extends OpenGLView {$/;"	c
SAMARITAN	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var SAMARITAN = "Samr";$/;"	v
SAMPLER_2D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var SAMPLER_2D = 0x8B5E;$/;"	v
SAMPLER_2D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var SAMPLER_2D:Int;$/;"	v
SAMPLER_2D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var SAMPLER_2D = 0x8B5E;$/;"	v
SAMPLER_2D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var SAMPLER_2D							= 0x8B5E;$/;"	v
SAMPLER_2D	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var SAMPLER_2D                     = 0x8B5E;$/;"	v
SAMPLER_CUBE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var SAMPLER_CUBE = 0x8B60;$/;"	v
SAMPLER_CUBE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var SAMPLER_CUBE:Int;$/;"	v
SAMPLER_CUBE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var SAMPLER_CUBE = 0x8B60;$/;"	v
SAMPLER_CUBE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var SAMPLER_CUBE						 = 0x8B60;$/;"	v
SAMPLER_CUBE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var SAMPLER_CUBE                   = 0x8B60;$/;"	v
SAMPLES	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var SAMPLES = 0x80A9;$/;"	v
SAMPLES	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var SAMPLES:Int;$/;"	v
SAMPLES	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var SAMPLES = 0x80A9;$/;"	v
SAMPLES	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var SAMPLES								= 0x80A9;$/;"	v
SAMPLES	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var SAMPLES                        = 0x80A9;$/;"	v
SAMPLE_ALPHA_TO_COVERAGE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var SAMPLE_ALPHA_TO_COVERAGE = 0x809E;$/;"	v
SAMPLE_ALPHA_TO_COVERAGE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var SAMPLE_ALPHA_TO_COVERAGE:Int;$/;"	v
SAMPLE_ALPHA_TO_COVERAGE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var SAMPLE_ALPHA_TO_COVERAGE = 0x809E;$/;"	v
SAMPLE_ALPHA_TO_COVERAGE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var SAMPLE_ALPHA_TO_COVERAGE		 = 0x809E;$/;"	v
SAMPLE_ALPHA_TO_COVERAGE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var SAMPLE_ALPHA_TO_COVERAGE       = 0x809E;$/;"	v
SAMPLE_BUFFERS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var SAMPLE_BUFFERS = 0x80A8;$/;"	v
SAMPLE_BUFFERS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var SAMPLE_BUFFERS:Int;$/;"	v
SAMPLE_BUFFERS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var SAMPLE_BUFFERS = 0x80A8;$/;"	v
SAMPLE_BUFFERS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var SAMPLE_BUFFERS					  = 0x80A8;$/;"	v
SAMPLE_BUFFERS	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var SAMPLE_BUFFERS                 = 0x80A8;$/;"	v
SAMPLE_COVERAGE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var SAMPLE_COVERAGE = 0x80A0;$/;"	v
SAMPLE_COVERAGE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var SAMPLE_COVERAGE:Int;$/;"	v
SAMPLE_COVERAGE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var SAMPLE_COVERAGE = 0x80A0;$/;"	v
SAMPLE_COVERAGE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var SAMPLE_COVERAGE					 = 0x80A0;$/;"	v
SAMPLE_COVERAGE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var SAMPLE_COVERAGE                = 0x80A0;$/;"	v
SAMPLE_COVERAGE_INVERT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var SAMPLE_COVERAGE_INVERT = 0x80AB;$/;"	v
SAMPLE_COVERAGE_INVERT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var SAMPLE_COVERAGE_INVERT:Int;$/;"	v
SAMPLE_COVERAGE_INVERT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var SAMPLE_COVERAGE_INVERT = 0x80AB;$/;"	v
SAMPLE_COVERAGE_INVERT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var SAMPLE_COVERAGE_INVERT			= 0x80AB;$/;"	v
SAMPLE_COVERAGE_INVERT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var SAMPLE_COVERAGE_INVERT         = 0x80AB;$/;"	v
SAMPLE_COVERAGE_VALUE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var SAMPLE_COVERAGE_VALUE = 0x80AA;$/;"	v
SAMPLE_COVERAGE_VALUE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var SAMPLE_COVERAGE_VALUE:Int;$/;"	v
SAMPLE_COVERAGE_VALUE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var SAMPLE_COVERAGE_VALUE = 0x80AA;$/;"	v
SAMPLE_COVERAGE_VALUE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var SAMPLE_COVERAGE_VALUE			 = 0x80AA;$/;"	v
SAMPLE_COVERAGE_VALUE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var SAMPLE_COVERAGE_VALUE          = 0x80AA;$/;"	v
SAMPLE_DATA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/SampleDataEvent.hx	/^	public static var SAMPLE_DATA:String = "sampleData";$/;"	v
SAMPLE_OFFSET	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var SAMPLE_OFFSET:Int = 0x1025;$/;"	v
SAMPLE_OFFSET	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var SAMPLE_OFFSET:Int = 0x1025;$/;"	v
SASL_IR	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var SASL_IR = 218;$/;"	v
SATURATE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoOperator.hx	/^	public var SATURATE = 13;$/;"	v
SAURASHTRA	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var SAURASHTRA = "Saur";$/;"	v
SBYTES_PER_ELEMENT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Float32Array.hx	/^	static public inline var SBYTES_PER_ELEMENT = 4;$/;"	v
SBYTES_PER_ELEMENT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Int16Array.hx	/^	static public inline var SBYTES_PER_ELEMENT = 2;$/;"	v
SBYTES_PER_ELEMENT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Int32Array.hx	/^	static public inline var SBYTES_PER_ELEMENT = 4;$/;"	v
SBYTES_PER_ELEMENT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/UInt8Array.hx	/^	static public inline var SBYTES_PER_ELEMENT = 1;$/;"	v
SCISSOR_BOX	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var SCISSOR_BOX = 0x0C10;$/;"	v
SCISSOR_BOX	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var SCISSOR_BOX:Int;$/;"	v
SCISSOR_BOX	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var SCISSOR_BOX = 0x0C10;$/;"	v
SCISSOR_BOX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var SCISSOR_BOX						  = 0x0C10;$/;"	v
SCISSOR_BOX	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var SCISSOR_BOX                    = 0x0C10;$/;"	v
SCISSOR_TEST	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var SCISSOR_TEST = 0x0C11;$/;"	v
SCISSOR_TEST	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var SCISSOR_TEST:Int;$/;"	v
SCISSOR_TEST	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var SCISSOR_TEST = 0x0C11;$/;"	v
SCISSOR_TEST	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var SCISSOR_TEST						 = 0x0C11;$/;"	v
SCISSOR_TEST	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var SCISSOR_TEST                   = 0x0C11;$/;"	v
SCREEN	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoOperator.hx	/^	public var SCREEN = 15;$/;"	v
SCROLL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public static var SCROLL = "scroll";$/;"	v
SCROLL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public static var SCROLL = "scroll";$/;"	v
SCROLL_LOCK	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var SCROLL_LOCK = 0x40000047;$/;"	v
SECOND	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLVersion.hx	/^	var SECOND = 1;$/;"	v
SECURITY_ERROR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/SecurityErrorEvent.hx	/^	static public var SECURITY_ERROR:String = "securityError";$/;"	v
SEC_OFFSET	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var SEC_OFFSET:Int = 0x1024;$/;"	v
SEC_OFFSET	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var SEC_OFFSET:Int = 0x1024;$/;"	v
SEEKDATA	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var SEEKDATA = 10168;$/;"	v
SEEKFUNCTION	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var SEEKFUNCTION = 20167;$/;"	v
SELECT	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var SELECT = 0x40000077;$/;"	v
SELECT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public static var SELECT = "select";$/;"	v
SELECT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public static var SELECT = "select";$/;"	v
SEMICOLON	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var SEMICOLON = 0x3B;$/;"	v
SEMICOLON	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var SEMICOLON:Int = 186;$/;"	v
SEMICOLON	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var SEMICOLON = 186;$/;"	v
SEND_ERROR	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var SEND_ERROR = 55;$/;"	v
SEND_FAIL_REWIND	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var SEND_FAIL_REWIND = 65;$/;"	v
SEPARATOR	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var SEPARATOR = 0x4000009F;$/;"	v
SERVER_RESPONSE_TIMEOUT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var SERVER_RESPONSE_TIMEOUT = 112;$/;"	v
SET	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DStencilAction.hx	/^	public static inline var SET = GL.REPLACE;$/;"	v
SHADER_TYPE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var SHADER_TYPE = 0x8B4F;$/;"	v
SHADER_TYPE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var SHADER_TYPE:Int;$/;"	v
SHADER_TYPE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var SHADER_TYPE = 0x8B4F;$/;"	v
SHADER_TYPE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var SHADER_TYPE							 = 0x8B4F;$/;"	v
SHADER_TYPE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var SHADER_TYPE                      = 0x8B4F;$/;"	v
SHADING_LANGUAGE_VERSION	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var SHADING_LANGUAGE_VERSION = 0x8B8C;$/;"	v
SHADING_LANGUAGE_VERSION	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var SHADING_LANGUAGE_VERSION:Int;$/;"	v
SHADING_LANGUAGE_VERSION	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var SHADING_LANGUAGE_VERSION = 0x8B8C;$/;"	v
SHADING_LANGUAGE_VERSION	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var SHADING_LANGUAGE_VERSION			= 0x8B8C;$/;"	v
SHADING_LANGUAGE_VERSION	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var SHADING_LANGUAGE_VERSION         = 0x8B8C;$/;"	v
SHARADA	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var SHARADA = "Shrd";$/;"	v
SHARE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var SHARE = 10100;$/;"	v
SHAVIAN	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var SHAVIAN = "Shaw";$/;"	v
SHIFT	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	public static inline var SHIFT:KeyModifier = (0x001 | 0x0002);$/;"	v
SHIFT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var SHIFT:Int = 16;$/;"	v
SHIFT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var SHIFT = 16;$/;"	v
SHORT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var SHORT = 0x1402;$/;"	v
SHORT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var SHORT:Int;$/;"	v
SHORT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var SHORT = 0x1402;$/;"	v
SHORT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexAttribute.hx	/^	var SHORT = GL.SHORT;$/;"	v
SHORT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var SHORT								  = 0x1402;$/;"	v
SHORT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var SHORT                          = 0x1402;$/;"	v
SIDDHAM	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var SIDDHAM = "Sidd";$/;"	v
SIN45	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^	private static var SIN45 = 0.70710678118654752440084436210485;$/;"	v
SIN45	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^	private static var SIN45 = 0.70710678118654752440084436210485;$/;"	v
SIN45	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	private static var SIN45 = 0.70710678118654752440084436210485;$/;"	v
SINGLE_QUOTE	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var SINGLE_QUOTE = 0x27;$/;"	v
SINHALA	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var SINHALA = "Sinh";$/;"	v
SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var SIZE:Int = 0x2004;$/;"	v
SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var SIZE:Int = 0x2004;$/;"	v
SIZE	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	public static inline var SIZE = 1 << 15;$/;"	v
SIZE_DOWNLOAD	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var SIZE_DOWNLOAD = 0x300000 + 8;$/;"	v
SIZE_UPLOAD	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var SIZE_UPLOAD = 0x300000 + 7;$/;"	v
SLASH	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var SLASH = 0x2F;$/;"	v
SLASH	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var SLASH:Int = 191;$/;"	v
SLASH	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var SLASH = 191;$/;"	v
SLEEP	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var SLEEP = 0x4000011A;$/;"	v
SLIGHT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoHintStyle.hx	/^	public var SLIGHT = 2;$/;"	v
SOCKET_DATA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/ProgressEvent.hx	/^	public static var SOCKET_DATA:String = "socketData";$/;"	v
SOCKOPTDATA	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var SOCKOPTDATA = 10149;$/;"	v
SOCKOPTFUNCTION	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var SOCKOPTFUNCTION = 20148;$/;"	v
SOCKS5_GSSAPI_NEC	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var SOCKS5_GSSAPI_NEC = 180;$/;"	v
SOCKS5_GSSAPI_SERVICE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var SOCKS5_GSSAPI_SERVICE = 10179;$/;"	v
SOFT_LIGHT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoOperator.hx	/^	public var SOFT_LIGHT = 22;$/;"	v
SORA_SOMPENG	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var SORA_SOMPENG = "Sora";$/;"	v
SOUND	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	var SOUND = "SOUND";$/;"	v
SOUND	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	var SOUND = "SOUND";$/;"	v
SOUND_COMPLETE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public static var SOUND_COMPLETE = "soundComplete";$/;"	v
SOUND_COMPLETE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public static var SOUND_COMPLETE = "soundComplete";$/;"	v
SOURCE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoOperator.hx	/^	public var SOURCE = 1;$/;"	v
SOURCE_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DBlendFactor.hx	/^	inline public static var SOURCE_ALPHA:Int = GL.SRC_ALPHA;$/;"	v
SOURCE_COLOR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DBlendFactor.hx	/^	inline public static var SOURCE_COLOR:Int = GL.SRC_COLOR;$/;"	v
SOURCE_RELATIVE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var SOURCE_RELATIVE:Int = 0x202;$/;"	v
SOURCE_RELATIVE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var SOURCE_RELATIVE:Int = 0x202;$/;"	v
SOURCE_STATE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var SOURCE_STATE:Int = 0x1010;$/;"	v
SOURCE_STATE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var SOURCE_STATE:Int = 0x1010;$/;"	v
SOURCE_TYPE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var SOURCE_TYPE:Int = 0x1027;$/;"	v
SOURCE_TYPE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var SOURCE_TYPE:Int = 0x1027;$/;"	v
SPACE	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var SPACE = 0x20;$/;"	v
SPACE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var SPACE:Int = 32;$/;"	v
SPACE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var SPACE = 32;$/;"	v
SPEED_DOWNLOAD	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var SPEED_DOWNLOAD = 0x300000 + 9;$/;"	v
SPEED_OF_SOUND	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var SPEED_OF_SOUND:Int = 0xC003;$/;"	v
SPEED_OF_SOUND	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var SPEED_OF_SOUND:Int = 0xC003;$/;"	v
SPEED_UPLOAD	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var SPEED_UPLOAD = 0x300000 + 10;$/;"	v
SQUARE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoLineCap.hx	/^	public var SQUARE = 2;$/;"	v
SRC_ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var SRC_ALPHA = 0x0302;$/;"	v
SRC_ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var SRC_ALPHA:Int;$/;"	v
SRC_ALPHA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var SRC_ALPHA = 0x0302;$/;"	v
SRC_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/BlendModeManager.hx	/^	var SRC_ALPHA = GL.SRC_ALPHA;$/;"	v
SRC_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var SRC_ALPHA							 = 0x0302;$/;"	v
SRC_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var SRC_ALPHA                      = 0x0302;$/;"	v
SRC_ALPHA_SATURATE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var SRC_ALPHA_SATURATE = 0x0308;$/;"	v
SRC_ALPHA_SATURATE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var SRC_ALPHA_SATURATE:Int;$/;"	v
SRC_ALPHA_SATURATE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var SRC_ALPHA_SATURATE = 0x0308;$/;"	v
SRC_ALPHA_SATURATE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/BlendModeManager.hx	/^	var SRC_ALPHA_SATURATE = GL.SRC_ALPHA_SATURATE;$/;"	v
SRC_ALPHA_SATURATE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var SRC_ALPHA_SATURATE				 = 0x0308;$/;"	v
SRC_ALPHA_SATURATE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var SRC_ALPHA_SATURATE             = 0x0308;$/;"	v
SRC_COLOR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var SRC_COLOR = 0x0300;$/;"	v
SRC_COLOR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var SRC_COLOR:Int;$/;"	v
SRC_COLOR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var SRC_COLOR = 0x0300;$/;"	v
SRC_COLOR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/BlendModeManager.hx	/^	var SRC_COLOR = GL.SRC_COLOR;$/;"	v
SRC_COLOR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var SRC_COLOR							 = 0x0300;$/;"	v
SRC_COLOR	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var SRC_COLOR                      = 0x0300;$/;"	v
SSH	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var SSH = 79;$/;"	v
SSH_AUTH_TYPES	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var SSH_AUTH_TYPES = 151;$/;"	v
SSH_HOST_PUBLIC_KEY_MD5	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var SSH_HOST_PUBLIC_KEY_MD5 = 10162;$/;"	v
SSH_KEYDATA	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var SSH_KEYDATA = 10185;$/;"	v
SSH_KEYFUNCTION	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var SSH_KEYFUNCTION = 20184;$/;"	v
SSH_KNOWNHOSTS	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var SSH_KNOWNHOSTS = 10183;$/;"	v
SSH_PRIVATE_KEYFILE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var SSH_PRIVATE_KEYFILE = 10153;$/;"	v
SSH_PUBLIC_KEYFILE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var SSH_PUBLIC_KEYFILE = 10152;$/;"	v
SSLCERT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var SSLCERT = 10025;$/;"	v
SSLCERTTYPE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var SSLCERTTYPE = 10086;$/;"	v
SSLENGINE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var SSLENGINE = 10089;$/;"	v
SSLENGINE_DEFAULT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var SSLENGINE_DEFAULT = 90;$/;"	v
SSLKEY	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var SSLKEY = 10087;$/;"	v
SSLKEYTYPE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var SSLKEYTYPE = 10088;$/;"	v
SSLVERSION	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var SSLVERSION = 32;$/;"	v
SSL_CACERT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var SSL_CACERT = 60;$/;"	v
SSL_CACERT_BADFILE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var SSL_CACERT_BADFILE = 77;$/;"	v
SSL_CERTPROBLEM	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var SSL_CERTPROBLEM = 58;$/;"	v
SSL_CIPHER	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var SSL_CIPHER = 59;$/;"	v
SSL_CIPHER_LIST	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var SSL_CIPHER_LIST = 10083;$/;"	v
SSL_CONNECT_ERROR	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var SSL_CONNECT_ERROR = 35;$/;"	v
SSL_CRL_BADFILE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var SSL_CRL_BADFILE = 82;$/;"	v
SSL_CTX_DATA	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var SSL_CTX_DATA = 10109;$/;"	v
SSL_CTX_FUNCTION	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var SSL_CTX_FUNCTION = 20108;$/;"	v
SSL_ENGINES	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var SSL_ENGINES = 0x400000 + 27;$/;"	v
SSL_ENGINE_INITFAILED	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var SSL_ENGINE_INITFAILED = 66;$/;"	v
SSL_ENGINE_NOTFOUND	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var SSL_ENGINE_NOTFOUND = 53;$/;"	v
SSL_ENGINE_SETFAILED	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var SSL_ENGINE_SETFAILED = 54;$/;"	v
SSL_ISSUER_ERROR	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var SSL_ISSUER_ERROR = 83;$/;"	v
SSL_OPTIONS	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var SSL_OPTIONS = 216;$/;"	v
SSL_SESSIONID_CACHE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var SSL_SESSIONID_CACHE = 150;$/;"	v
SSL_SHUTDOWN_FAILED	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var SSL_SHUTDOWN_FAILED = 80;$/;"	v
SSL_VERIFYHOST	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var SSL_VERIFYHOST = 81;$/;"	v
SSL_VERIFYPEER	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var SSL_VERIFYPEER = 64;$/;"	v
SSL_VERIFYRESULT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var SSL_VERIFYRESULT = 0x200000 + 13;$/;"	v
STANDARD	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/KeyLocation.hx	/^	var STANDARD = 0;$/;"	v
START	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/GamepadButton.hx	/^	var START = 6;$/;"	v
STARTTRANSFER_TIME	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var STARTTRANSFER_TIME = 0x300000 + 17;$/;"	v
STATIC	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var STATIC:Int = 0x1028;$/;"	v
STATIC	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var STATIC:Int = 0x1028;$/;"	v
STATIC_BODY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2BodyType.hx	/^	var STATIC_BODY = 0;$/;"	v
STATIC_DRAW	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var STATIC_DRAW = 0x88E4;$/;"	v
STATIC_DRAW	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var STATIC_DRAW:Int;$/;"	v
STATIC_DRAW	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var STATIC_DRAW = 0x88E4;$/;"	v
STATIC_DRAW	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var STATIC_DRAW						  = 0x88E4;$/;"	v
STATIC_DRAW	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var STATIC_DRAW                    = 0x88E4;$/;"	v
STDERR	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var STDERR = 10037;$/;"	v
STENCIL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	var STENCIL = 1;$/;"	v
STENCIL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DClearMask.hx	/^    inline static public var STENCIL:Int = GL.STENCIL_BUFFER_BIT;$/;"	v
STENCIL_ATTACHMENT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var STENCIL_ATTACHMENT = 0x8D20;$/;"	v
STENCIL_ATTACHMENT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var STENCIL_ATTACHMENT:Int;$/;"	v
STENCIL_ATTACHMENT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var STENCIL_ATTACHMENT = 0x8D20;$/;"	v
STENCIL_ATTACHMENT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var STENCIL_ATTACHMENT				 = 0x8D20;$/;"	v
STENCIL_ATTACHMENT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var STENCIL_ATTACHMENT             = 0x8D20;$/;"	v
STENCIL_BACK_FAIL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var STENCIL_BACK_FAIL = 0x8801;$/;"	v
STENCIL_BACK_FAIL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var STENCIL_BACK_FAIL:Int;$/;"	v
STENCIL_BACK_FAIL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var STENCIL_BACK_FAIL = 0x8801;$/;"	v
STENCIL_BACK_FAIL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var STENCIL_BACK_FAIL				  = 0x8801;$/;"	v
STENCIL_BACK_FAIL	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var STENCIL_BACK_FAIL              = 0x8801;$/;"	v
STENCIL_BACK_FUNC	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var STENCIL_BACK_FUNC = 0x8800;$/;"	v
STENCIL_BACK_FUNC	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var STENCIL_BACK_FUNC:Int;$/;"	v
STENCIL_BACK_FUNC	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var STENCIL_BACK_FUNC = 0x8800;$/;"	v
STENCIL_BACK_FUNC	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var STENCIL_BACK_FUNC				  = 0x8800;$/;"	v
STENCIL_BACK_FUNC	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var STENCIL_BACK_FUNC              = 0x8800;$/;"	v
STENCIL_BACK_PASS_DEPTH_FAIL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802;$/;"	v
STENCIL_BACK_PASS_DEPTH_FAIL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var STENCIL_BACK_PASS_DEPTH_FAIL:Int;$/;"	v
STENCIL_BACK_PASS_DEPTH_FAIL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802;$/;"	v
STENCIL_BACK_PASS_DEPTH_FAIL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var STENCIL_BACK_PASS_DEPTH_FAIL	= 0x8802;$/;"	v
STENCIL_BACK_PASS_DEPTH_FAIL	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var STENCIL_BACK_PASS_DEPTH_FAIL   = 0x8802;$/;"	v
STENCIL_BACK_PASS_DEPTH_PASS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var STENCIL_BACK_PASS_DEPTH_PASS = 0x8803;$/;"	v
STENCIL_BACK_PASS_DEPTH_PASS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var STENCIL_BACK_PASS_DEPTH_PASS:Int;$/;"	v
STENCIL_BACK_PASS_DEPTH_PASS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var STENCIL_BACK_PASS_DEPTH_PASS = 0x8803;$/;"	v
STENCIL_BACK_PASS_DEPTH_PASS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var STENCIL_BACK_PASS_DEPTH_PASS	= 0x8803;$/;"	v
STENCIL_BACK_PASS_DEPTH_PASS	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var STENCIL_BACK_PASS_DEPTH_PASS   = 0x8803;$/;"	v
STENCIL_BACK_REF	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var STENCIL_BACK_REF = 0x8CA3;$/;"	v
STENCIL_BACK_REF	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var STENCIL_BACK_REF:Int;$/;"	v
STENCIL_BACK_REF	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var STENCIL_BACK_REF = 0x8CA3;$/;"	v
STENCIL_BACK_REF	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var STENCIL_BACK_REF					= 0x8CA3;$/;"	v
STENCIL_BACK_REF	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var STENCIL_BACK_REF               = 0x8CA3;$/;"	v
STENCIL_BACK_VALUE_MASK	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var STENCIL_BACK_VALUE_MASK = 0x8CA4;$/;"	v
STENCIL_BACK_VALUE_MASK	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var STENCIL_BACK_VALUE_MASK:Int;$/;"	v
STENCIL_BACK_VALUE_MASK	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var STENCIL_BACK_VALUE_MASK = 0x8CA4;$/;"	v
STENCIL_BACK_VALUE_MASK	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var STENCIL_BACK_VALUE_MASK		  = 0x8CA4;$/;"	v
STENCIL_BACK_VALUE_MASK	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var STENCIL_BACK_VALUE_MASK        = 0x8CA4;$/;"	v
STENCIL_BACK_WRITEMASK	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var STENCIL_BACK_WRITEMASK = 0x8CA5;$/;"	v
STENCIL_BACK_WRITEMASK	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var STENCIL_BACK_WRITEMASK:Int;$/;"	v
STENCIL_BACK_WRITEMASK	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var STENCIL_BACK_WRITEMASK = 0x8CA5;$/;"	v
STENCIL_BACK_WRITEMASK	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var STENCIL_BACK_WRITEMASK			= 0x8CA5;$/;"	v
STENCIL_BACK_WRITEMASK	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var STENCIL_BACK_WRITEMASK         = 0x8CA5;$/;"	v
STENCIL_BITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var STENCIL_BITS = 0x0D57;$/;"	v
STENCIL_BITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var STENCIL_BITS:Int;$/;"	v
STENCIL_BITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var STENCIL_BITS = 0x0D57;$/;"	v
STENCIL_BITS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var STENCIL_BITS						 = 0x0D57;$/;"	v
STENCIL_BITS	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var STENCIL_BITS                   = 0x0D57;$/;"	v
STENCIL_BUFFER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	static public var STENCIL_BUFFER = 0x0400;$/;"	v
STENCIL_BUFFER_BIT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var STENCIL_BUFFER_BIT = 0x00000400;$/;"	v
STENCIL_BUFFER_BIT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var STENCIL_BUFFER_BIT:Int;$/;"	v
STENCIL_BUFFER_BIT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var STENCIL_BUFFER_BIT = 0x00000400;$/;"	v
STENCIL_BUFFER_BIT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var STENCIL_BUFFER_BIT				 = 0x00000400;$/;"	v
STENCIL_BUFFER_BIT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var STENCIL_BUFFER_BIT             = 0x00000400;$/;"	v
STENCIL_CLEAR_VALUE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var STENCIL_CLEAR_VALUE = 0x0B91;$/;"	v
STENCIL_CLEAR_VALUE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var STENCIL_CLEAR_VALUE:Int;$/;"	v
STENCIL_CLEAR_VALUE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var STENCIL_CLEAR_VALUE = 0x0B91;$/;"	v
STENCIL_CLEAR_VALUE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var STENCIL_CLEAR_VALUE				= 0x0B91;$/;"	v
STENCIL_CLEAR_VALUE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var STENCIL_CLEAR_VALUE            = 0x0B91;$/;"	v
STENCIL_FAIL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var STENCIL_FAIL = 0x0B94;$/;"	v
STENCIL_FAIL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var STENCIL_FAIL:Int;$/;"	v
STENCIL_FAIL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var STENCIL_FAIL = 0x0B94;$/;"	v
STENCIL_FAIL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var STENCIL_FAIL						 = 0x0B94;$/;"	v
STENCIL_FAIL	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var STENCIL_FAIL                   = 0x0B94;$/;"	v
STENCIL_FUNC	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var STENCIL_FUNC = 0x0B92;$/;"	v
STENCIL_FUNC	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var STENCIL_FUNC:Int;$/;"	v
STENCIL_FUNC	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var STENCIL_FUNC = 0x0B92;$/;"	v
STENCIL_FUNC	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var STENCIL_FUNC						 = 0x0B92;$/;"	v
STENCIL_FUNC	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var STENCIL_FUNC                   = 0x0B92;$/;"	v
STENCIL_INDEX	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var STENCIL_INDEX = 0x1901;$/;"	v
STENCIL_INDEX	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var STENCIL_INDEX:Int;$/;"	v
STENCIL_INDEX	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var STENCIL_INDEX = 0x1901;$/;"	v
STENCIL_INDEX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var STENCIL_INDEX						= 0x1901;$/;"	v
STENCIL_INDEX	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var STENCIL_INDEX                  = 0x1901;$/;"	v
STENCIL_INDEX8	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var STENCIL_INDEX8 = 0x8D48;$/;"	v
STENCIL_INDEX8	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var STENCIL_INDEX8:Int;$/;"	v
STENCIL_INDEX8	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var STENCIL_INDEX8 = 0x8D48;$/;"	v
STENCIL_INDEX8	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var STENCIL_INDEX8					  = 0x8D48;$/;"	v
STENCIL_INDEX8	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var STENCIL_INDEX8                 = 0x8D48;$/;"	v
STENCIL_PASS_DEPTH_FAIL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var STENCIL_PASS_DEPTH_FAIL = 0x0B95;$/;"	v
STENCIL_PASS_DEPTH_FAIL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var STENCIL_PASS_DEPTH_FAIL:Int;$/;"	v
STENCIL_PASS_DEPTH_FAIL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var STENCIL_PASS_DEPTH_FAIL = 0x0B95;$/;"	v
STENCIL_PASS_DEPTH_FAIL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var STENCIL_PASS_DEPTH_FAIL		  = 0x0B95;$/;"	v
STENCIL_PASS_DEPTH_FAIL	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var STENCIL_PASS_DEPTH_FAIL        = 0x0B95;$/;"	v
STENCIL_PASS_DEPTH_PASS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var STENCIL_PASS_DEPTH_PASS = 0x0B96;$/;"	v
STENCIL_PASS_DEPTH_PASS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var STENCIL_PASS_DEPTH_PASS:Int;$/;"	v
STENCIL_PASS_DEPTH_PASS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var STENCIL_PASS_DEPTH_PASS = 0x0B96;$/;"	v
STENCIL_PASS_DEPTH_PASS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var STENCIL_PASS_DEPTH_PASS		  = 0x0B96;$/;"	v
STENCIL_PASS_DEPTH_PASS	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var STENCIL_PASS_DEPTH_PASS        = 0x0B96;$/;"	v
STENCIL_REF	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var STENCIL_REF = 0x0B97;$/;"	v
STENCIL_REF	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var STENCIL_REF:Int;$/;"	v
STENCIL_REF	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var STENCIL_REF = 0x0B97;$/;"	v
STENCIL_REF	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var STENCIL_REF						  = 0x0B97;$/;"	v
STENCIL_REF	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var STENCIL_REF                    = 0x0B97;$/;"	v
STENCIL_TEST	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var STENCIL_TEST = 0x0B90;$/;"	v
STENCIL_TEST	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var STENCIL_TEST:Int;$/;"	v
STENCIL_TEST	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var STENCIL_TEST = 0x0B90;$/;"	v
STENCIL_TEST	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var STENCIL_TEST						 = 0x0B90;$/;"	v
STENCIL_TEST	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var STENCIL_TEST                   = 0x0B90;$/;"	v
STENCIL_VALUE_MASK	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var STENCIL_VALUE_MASK = 0x0B93;$/;"	v
STENCIL_VALUE_MASK	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var STENCIL_VALUE_MASK:Int;$/;"	v
STENCIL_VALUE_MASK	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var STENCIL_VALUE_MASK = 0x0B93;$/;"	v
STENCIL_VALUE_MASK	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var STENCIL_VALUE_MASK				 = 0x0B93;$/;"	v
STENCIL_VALUE_MASK	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var STENCIL_VALUE_MASK             = 0x0B93;$/;"	v
STENCIL_WRITEMASK	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var STENCIL_WRITEMASK = 0x0B98;$/;"	v
STENCIL_WRITEMASK	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var STENCIL_WRITEMASK:Int;$/;"	v
STENCIL_WRITEMASK	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var STENCIL_WRITEMASK = 0x0B98;$/;"	v
STENCIL_WRITEMASK	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var STENCIL_WRITEMASK				  = 0x0B98;$/;"	v
STENCIL_WRITEMASK	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var STENCIL_WRITEMASK              = 0x0B98;$/;"	v
STEREO_SOURCES	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public var STEREO_SOURCES:Int = 0x1011;$/;"	v
STEREO_SOURCES	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static inline var STEREO_SOURCES:Int = 0x1011;$/;"	v
STOP	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var STOP = 0x40000078;$/;"	v
STOPPED	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var STOPPED:Int = 0x1014;$/;"	v
STOPPED	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var STOPPED:Int = 0x1014;$/;"	v
STORAGE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/File.hx	/^	static inline var STORAGE = 1;$/;"	v
STORAGE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/SystemPath.hx	/^	private static inline var STORAGE = 1;$/;"	v
STREAMING	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var STREAMING:Int = 0x1029;$/;"	v
STREAMING	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var STREAMING:Int = 0x1029;$/;"	v
STREAM_DRAW	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var STREAM_DRAW = 0x88E0;$/;"	v
STREAM_DRAW	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var STREAM_DRAW:Int;$/;"	v
STREAM_DRAW	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var STREAM_DRAW = 0x88E0;$/;"	v
STREAM_DRAW	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var STREAM_DRAW						  = 0x88E0;$/;"	v
STREAM_DRAW	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var STREAM_DRAW                    = 0x88E0;$/;"	v
SUBPIXEL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoAntialias.hx	/^	public var SUBPIXEL = 3;$/;"	v
SUBPIXEL_BITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var SUBPIXEL_BITS = 0x0D50;$/;"	v
SUBPIXEL_BITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var SUBPIXEL_BITS:Int;$/;"	v
SUBPIXEL_BITS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var SUBPIXEL_BITS = 0x0D50;$/;"	v
SUBPIXEL_BITS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var SUBPIXEL_BITS						= 0x0D50;$/;"	v
SUBPIXEL_BITS	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var SUBPIXEL_BITS                  = 0x0D50;$/;"	v
SUBTRACT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/BlendModeManager.hx	/^	var SUBTRACT = GL.FUNC_SUBTRACT;$/;"	v
SUCCESS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var SUCCESS = 0;$/;"	v
SUNDANESE	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var SUNDANESE = "Sund";$/;"	v
SUPPORTED_EXTENSIONS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static var SUPPORTED_EXTENSIONS:Array<String>;$/;"	v
SURFACE_FINISHED	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var SURFACE_FINISHED = 12;$/;"	v
SURFACE_TYPE_MISMATCH	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var SURFACE_TYPE_MISMATCH = 13;$/;"	v
SVGExport	/usr/lib/haxe/lib/lime/2,4,3/tools/SVGExport.hx	/^class SVGExport {$/;"	c
SYLOTI_NAGRI	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var SYLOTI_NAGRI = "Sylo";$/;"	v
SYNC	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public var SYNC:Int = 0x1009;$/;"	v
SYNC	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static inline var SYNC:Int = 0x1009;$/;"	v
SYRIAC	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var SYRIAC = "Syrc";$/;"	v
SYSTEM	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/SystemEvent.hx	/^	public static var SYSTEM:String = "system";$/;"	v
SYSTEM	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/SystemEvent.hx	/^	static var SYSTEM : String;$/;"	v
SYSTEM_REQUEST	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var SYSTEM_REQUEST = 0x4000009A;$/;"	v
SampleDataEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/SampleDataEvent.hx	/^class SampleDataEvent extends Event {$/;"	c
SampleDataEventTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/SampleDataEventTest.hx	/^class SampleDataEventTest {$/;"	c
Sampler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Sampler.hx	/^class Sampler {$/;"	c
Sampler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Sampler.hx	/^class Sampler {$/;"	c
Sampler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/DefaultShader.hx	/^	var Sampler = "uSampler0";$/;"	v
Sampler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/DrawTrianglesShader.hx	/^	var Sampler = DefUniform.Sampler;$/;"	v
Sampler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/PatternFillShader.hx	/^	var Sampler = DefUniform.Sampler;$/;"	v
SamplerMap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/SamplerMap.hx	/^class SamplerMap {$/;"	c
SamplerState	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^private class SamplerState {$/;"	c
ScaledStage	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^class ScaledStage extends flash.display.Stage {$/;"	c
ScreenMode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/ScreenMode.hx	/^class ScreenMode {$/;"	c
Security	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Security.hx	/^class Security {$/;"	c
SecurityDomain	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/SecurityDomain.hx	/^class SecurityDomain {$/;"	c
SecurityDomainTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/SecurityDomainTest.hx	/^class SecurityDomainTest {$/;"	c
SecurityError	/usr/lib/haxe/lib/openfl/3,0,8/openfl/errors/SecurityError.hx	/^class SecurityError extends Error {$/;"	c
SecurityErrorEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/SecurityErrorEvent.hx	/^class SecurityErrorEvent extends ErrorEvent {$/;"	c
SecurityErrorEventTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/SecurityErrorEventTest.hx	/^class SecurityErrorEventTest {$/;"	c
SecurityErrorTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/SecurityErrorTest.hx	/^class SecurityErrorTest {$/;"	c
Serializer	/usr/lib/haxe/std/haxe/Serializer.hx	/^class Serializer {$/;"	c
ServerLoop	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^class ServerLoop<ClientData> {$/;"	c
SetUserData	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public function SetUserData(data:Dynamic):Void$/;"	f
Sha1	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^class Sha1 {$/;"	c
Sha256	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^class Sha256 {$/;"	c
Shader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/Shader.hx	/^class Shader {$/;"	c
ShaderManager	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/ShaderManager.hx	/^class ShaderManager {$/;"	c
Shape	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Shape.hx	/^class Shape extends DisplayObject {$/;"	c
Shape	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Shape.hx	/^class Shape extends DisplayObject {$/;"	c
Shape flag	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^		\/\/TODO: Shape flag$/;"	i
ShapeTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/ShapeTest.hx	/^class ShapeTest {$/;"	c
SharedObject	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^class SharedObject extends EventDispatcher {$/;"	c
SharedObject	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/SharedObject.hx	/^class SharedObject extends EventDispatcher {$/;"	c
SharedObjectFlushStatusTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/SharedObjectFlushStatusTest.hx	/^class SharedObjectFlushStatusTest {$/;"	c
SharedObjectTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/SharedObjectTest.hx	/^class SharedObjectTest {$/;"	c
Should we consider the origin instead, instead of inflating in all directions?	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^		\/\/ TODO: Should we consider the origin instead, instead of inflating in all directions?$/;"	i
Sigma0256	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^	function Sigma0256(x) {$/;"	f
Sigma1256	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^	function Sigma1256(x) {$/;"	f
SimpleButton	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/SimpleButton.hx	/^class SimpleButton extends InteractiveObject {$/;"	c
SimpleButton	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/SimpleButton.hx	/^class SimpleButton extends DisplayObjectContainer {$/;"	c
SimpleButtonTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/SimpleButtonTest.hx	/^class SimpleButtonTest {$/;"	c
Socket	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^class Socket extends EventDispatcher \/*implements IDataInput implements IDataOutput*\/ {$/;"	c
SocketConnection	/usr/lib/haxe/std/haxe/remoting/SocketConnection.hx	/^class SocketConnection implements AsyncConnection implements Dynamic<AsyncConnection> {$/;"	c
SocketProtocol	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^class SocketProtocol {$/;"	c
SocketWrapper	/usr/lib/haxe/std/haxe/remoting/SocketWrapper.hx	/^class SocketWrapper {$/;"	c
Something more sensible	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^		\/\/ TODO: Something more sensible$/;"	i
Something that makes more physical sense?	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^			\/\/TODO: Something that makes more physical sense?$/;"	i
Sound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^class Sound extends EventDispatcher {$/;"	c
Sound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^class Sound extends EventDispatcher {$/;"	c
SoundChannel	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^class SoundChannel extends EventDispatcher {$/;"	c
SoundChannel	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/SoundChannel.hx	/^class SoundChannel extends EventDispatcher {$/;"	c
SoundChannelTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/SoundChannelTest.hx	/^class SoundChannelTest {$/;"	c
SoundLoaderContext	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/SoundLoaderContext.hx	/^class SoundLoaderContext {$/;"	c
SoundLoaderContextTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/SoundLoaderContextTest.hx	/^class SoundLoaderContextTest {$/;"	c
SoundTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/SoundTest.hx	/^class SoundTest {$/;"	c
SoundTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/SoundTransform.hx	/^class SoundTransform {$/;"	c
SoundTransformTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/SoundTransformTest.hx	/^class SoundTransformTest {$/;"	c
SplashScreen	/usr/lib/haxe/lib/lime/2,4,3/lime/project/SplashScreen.hx	/^class SplashScreen {$/;"	c
SpreadMethodTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/SpreadMethodTest.hx	/^class SpreadMethodTest {$/;"	c
Sprite	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Sprite.hx	/^class Sprite extends DisplayObjectContainer {$/;"	c
Sprite	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Sprite.hx	/^class Sprite extends DisplayObjectContainer {$/;"	c
SpriteBatch	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^class SpriteBatch {$/;"	c
SpriteTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/SpriteTest.hx	/^class SpriteTest {$/;"	c
Sqlite	/usr/lib/haxe/std/sys/db/Sqlite.hx	/^class Sqlite {$/;"	c
Stage	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^class Stage extends DisplayObjectContainer {$/;"	c
Stage	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^class Stage extends DisplayObjectContainer implements IModule {$/;"	c
Stage3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage3D.hx	/^class Stage3D extends EventDispatcher {$/;"	c
StageAlignTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/StageAlignTest.hx	/^class StageAlignTest {$/;"	c
StageDisplayStateTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/StageDisplayStateTest.hx	/^class StageDisplayStateTest {$/;"	c
StageQualityTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/StageQualityTest.hx	/^class StageQualityTest {$/;"	c
StageScaleModeTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/StageScaleModeTest.hx	/^class StageScaleModeTest {$/;"	c
StageTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/StageTest.hx	/^class StageTest {$/;"	c
State	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^private class State {$/;"	c
StencilManager	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^class StencilManager {$/;"	c
StorageVolume	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/StorageVolume.hx	/^class StorageVolume {$/;"	c
StorageVolumeInfo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/StorageVolumeInfo.hx	/^class StorageVolumeInfo extends EventDispatcher {$/;"	c
StringBuf	/usr/lib/haxe/std/StringBuf.hx	/^class StringBuf {$/;"	c
StringHelper	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^class StringHelper {$/;"	c
StringInput	/usr/lib/haxe/std/haxe/io/StringInput.hx	/^class StringInput extends BytesInput {$/;"	c
StringMapHelper	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringMapHelper.hx	/^class StringMapHelper {$/;"	c
StringTools	/usr/lib/haxe/std/StringTools.hx	/^class StringTools {$/;"	c
StripShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/StripShader.hx	/^class StripShader extends AbstractShader {$/;"	c
Support rect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		\/\/ TODO: Support rect$/;"	i
Support rect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		\/\/ TODO: Support rect$/;"	i
Support upload from UInt8Array directly	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/CubeTexture.hx	/^		\/\/ TODO: Support upload from UInt8Array directly$/;"	i
Support upload from UInt8Array directly	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/RectangleTexture.hx	/^		\/\/ TODO: Support upload from UInt8Array directly$/;"	i
Switch to the tool's Config type?	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^			\/\/ TODO: Switch to the tool's Config type?$/;"	i
SyncSocketConnection	/usr/lib/haxe/std/haxe/remoting/SyncSocketConnection.hx	/^class SyncSocketConnection implements Connection implements Dynamic<Connection> {$/;"	c
System	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^class System {$/;"	c
System	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/System.hx	/^class System {$/;"	c
System	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/System.hx	/^class System {$/;"	c
SystemEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/SystemEvent.hx	/^class SystemEvent extends Event {$/;"	c
SystemEventTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/SystemEventTest.hx	/^class SystemEventTest {$/;"	c
SystemPath	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/SystemPath.hx	/^class SystemPath {$/;"	c
SystemTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/SystemTest.hx	/^class SystemTest {$/;"	c
T	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2TensorDampingController.hx	/^	public var T:B2Mat22;$/;"	v
T	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var T = 0x74;$/;"	v
T	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var T:Int = 84;$/;"	v
T	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var T = 84;$/;"	v
T1	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^		var T1, T2;$/;"	v
TAB	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var TAB = 0x09;$/;"	v
TAB	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var TAB:Int = 9;$/;"	v
TAB	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var TAB = 9;$/;"	v
TABLET	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	var TABLET = "tablet";$/;"	v
TAB_CHILDREN_CHANGE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public static var TAB_CHILDREN_CHANGE = "tabChildrenChange";$/;"	v
TAB_CHILDREN_CHANGE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public static var TAB_CHILDREN_CHANGE = "tabChildrenChange";$/;"	v
TAB_ENABLED_CHANGE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public static var TAB_ENABLED_CHANGE = "tabEnabledChange";$/;"	v
TAB_ENABLED_CHANGE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public static var TAB_ENABLED_CHANGE = "tabEnabledChange";$/;"	v
TAB_INDEX_CHANGE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public static var TAB_INDEX_CHANGE = "tabIndexChange";$/;"	v
TAB_INDEX_CHANGE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public static var TAB_INDEX_CHANGE = "tabIndexChange";$/;"	v
TAGALOG	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var TAGALOG = "Tglg";$/;"	v
TAGBANWA	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var TAGBANWA = "Tagb";$/;"	v
TAG_NAME	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^	public static inline var TAG_NAME		= 3;$/;"	v
TAI_LE	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var TAI_LE = "Tale";$/;"	v
TAI_THAM	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var TAI_THAM = "Lana";$/;"	v
TAI_VIET	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var TAI_VIET = "Tavt";$/;"	v
TAKRI	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var TAKRI = "Takr";$/;"	v
TAMIL	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var TAMIL = "Taml";$/;"	v
TAN22	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^	private static var TAN22 = 0.4142135623730950488016887242097;$/;"	v
TAN22	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^	private static var TAN22 = 0.4142135623730950488016887242097;$/;"	v
TAN22	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	private static var TAN22 = 0.4142135623730950488016887242097;$/;"	v
TCP_KEEPALIVE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var TCP_KEEPALIVE = 213;$/;"	v
TCP_KEEPIDLE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var TCP_KEEPIDLE = 214;$/;"	v
TCP_KEEPINTVL	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var TCP_KEEPINTVL = 215;$/;"	v
TCP_NODELAY	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var TCP_NODELAY = 121;$/;"	v
TELNETOPTIONS	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var TELNETOPTIONS = 10070;$/;"	v
TELNET_OPTION_SYNTAX	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var TELNET_OPTION_SYNTAX = 49;$/;"	v
TELUGA	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var TELUGA = "Telu";$/;"	v
TEMPLATE	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	var TEMPLATE = "TEMPLATE";$/;"	v
TEMPLATE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	var TEMPLATE = "TEMPLATE";$/;"	v
TEMP_FILE_ERROR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var TEMP_FILE_ERROR = 23;$/;"	v
TEST_HEIGHT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^	private static inline var TEST_HEIGHT : Int = 100;$/;"	v
TEST_WIDTH	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^	private static inline var TEST_WIDTH : Int = 100;$/;"	v
TEXT	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	var TEXT = "TEXT";$/;"	v
TEXT	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeMouse.hx	/^	var TEXT = 9;$/;"	v
TEXT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	var TEXT = "TEXT";$/;"	v
TEXTURE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE = 0x1702;$/;"	v
TEXTURE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE:Int;$/;"	v
TEXTURE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE = 0x1702;$/;"	v
TEXTURE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE								= 0x1702;$/;"	v
TEXTURE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE                        = 0x1702;$/;"	v
TEXTURE0	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE0 = 0x84C0;$/;"	v
TEXTURE0	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE0:Int;$/;"	v
TEXTURE0	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE0 = 0x84C0;$/;"	v
TEXTURE0	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE0							  = 0x84C0;$/;"	v
TEXTURE0	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE0                       = 0x84C0;$/;"	v
TEXTURE1	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE1 = 0x84C1;$/;"	v
TEXTURE1	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE1:Int;$/;"	v
TEXTURE1	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE1 = 0x84C1;$/;"	v
TEXTURE1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE1							  = 0x84C1;$/;"	v
TEXTURE1	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE1                       = 0x84C1;$/;"	v
TEXTURE10	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE10 = 0x84CA;$/;"	v
TEXTURE10	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE10:Int;$/;"	v
TEXTURE10	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE10 = 0x84CA;$/;"	v
TEXTURE10	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE10							 = 0x84CA;$/;"	v
TEXTURE10	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE10                      = 0x84CA;$/;"	v
TEXTURE11	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE11 = 0x84CB;$/;"	v
TEXTURE11	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE11:Int;$/;"	v
TEXTURE11	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE11 = 0x84CB;$/;"	v
TEXTURE11	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE11							 = 0x84CB;$/;"	v
TEXTURE11	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE11                      = 0x84CB;$/;"	v
TEXTURE12	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE12 = 0x84CC;$/;"	v
TEXTURE12	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE12:Int;$/;"	v
TEXTURE12	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE12 = 0x84CC;$/;"	v
TEXTURE12	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE12							 = 0x84CC;$/;"	v
TEXTURE12	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE12                      = 0x84CC;$/;"	v
TEXTURE13	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE13 = 0x84CD;$/;"	v
TEXTURE13	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE13:Int;$/;"	v
TEXTURE13	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE13 = 0x84CD;$/;"	v
TEXTURE13	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE13							 = 0x84CD;$/;"	v
TEXTURE13	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE13                      = 0x84CD;$/;"	v
TEXTURE14	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE14 = 0x84CE;$/;"	v
TEXTURE14	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE14:Int;$/;"	v
TEXTURE14	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE14 = 0x84CE;$/;"	v
TEXTURE14	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE14							 = 0x84CE;$/;"	v
TEXTURE14	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE14                      = 0x84CE;$/;"	v
TEXTURE15	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE15 = 0x84CF;$/;"	v
TEXTURE15	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE15:Int;$/;"	v
TEXTURE15	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE15 = 0x84CF;$/;"	v
TEXTURE15	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE15							 = 0x84CF;$/;"	v
TEXTURE15	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE15                      = 0x84CF;$/;"	v
TEXTURE16	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE16 = 0x84D0;$/;"	v
TEXTURE16	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE16:Int;$/;"	v
TEXTURE16	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE16 = 0x84D0;$/;"	v
TEXTURE16	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE16							 = 0x84D0;$/;"	v
TEXTURE16	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE16                      = 0x84D0;$/;"	v
TEXTURE17	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE17 = 0x84D1;$/;"	v
TEXTURE17	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE17:Int;$/;"	v
TEXTURE17	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE17 = 0x84D1;$/;"	v
TEXTURE17	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE17							 = 0x84D1;$/;"	v
TEXTURE17	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE17                      = 0x84D1;$/;"	v
TEXTURE18	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE18 = 0x84D2;$/;"	v
TEXTURE18	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE18:Int;$/;"	v
TEXTURE18	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE18 = 0x84D2;$/;"	v
TEXTURE18	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE18							 = 0x84D2;$/;"	v
TEXTURE18	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE18                      = 0x84D2;$/;"	v
TEXTURE19	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE19 = 0x84D3;$/;"	v
TEXTURE19	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE19:Int;$/;"	v
TEXTURE19	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE19 = 0x84D3;$/;"	v
TEXTURE19	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE19							 = 0x84D3;$/;"	v
TEXTURE19	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE19                      = 0x84D3;$/;"	v
TEXTURE2	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE2 = 0x84C2;$/;"	v
TEXTURE2	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE2:Int;$/;"	v
TEXTURE2	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE2 = 0x84C2;$/;"	v
TEXTURE2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE2							  = 0x84C2;$/;"	v
TEXTURE2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE2                       = 0x84C2;$/;"	v
TEXTURE20	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE20 = 0x84D4;$/;"	v
TEXTURE20	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE20:Int;$/;"	v
TEXTURE20	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE20 = 0x84D4;$/;"	v
TEXTURE20	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE20							 = 0x84D4;$/;"	v
TEXTURE20	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE20                      = 0x84D4;$/;"	v
TEXTURE21	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE21 = 0x84D5;$/;"	v
TEXTURE21	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE21:Int;$/;"	v
TEXTURE21	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE21 = 0x84D5;$/;"	v
TEXTURE21	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE21							 = 0x84D5;$/;"	v
TEXTURE21	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE21                      = 0x84D5;$/;"	v
TEXTURE22	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE22 = 0x84D6;$/;"	v
TEXTURE22	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE22:Int;$/;"	v
TEXTURE22	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE22 = 0x84D6;$/;"	v
TEXTURE22	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE22							 = 0x84D6;$/;"	v
TEXTURE22	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE22                      = 0x84D6;$/;"	v
TEXTURE23	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE23 = 0x84D7;$/;"	v
TEXTURE23	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE23:Int;$/;"	v
TEXTURE23	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE23 = 0x84D7;$/;"	v
TEXTURE23	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE23							 = 0x84D7;$/;"	v
TEXTURE23	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE23                      = 0x84D7;$/;"	v
TEXTURE24	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE24 = 0x84D8;$/;"	v
TEXTURE24	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE24:Int;$/;"	v
TEXTURE24	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE24 = 0x84D8;$/;"	v
TEXTURE24	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE24							 = 0x84D8;$/;"	v
TEXTURE24	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE24                      = 0x84D8;$/;"	v
TEXTURE25	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE25 = 0x84D9;$/;"	v
TEXTURE25	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE25:Int;$/;"	v
TEXTURE25	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE25 = 0x84D9;$/;"	v
TEXTURE25	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE25							 = 0x84D9;$/;"	v
TEXTURE25	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE25                      = 0x84D9;$/;"	v
TEXTURE26	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE26 = 0x84DA;$/;"	v
TEXTURE26	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE26:Int;$/;"	v
TEXTURE26	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE26 = 0x84DA;$/;"	v
TEXTURE26	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE26							 = 0x84DA;$/;"	v
TEXTURE26	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE26                      = 0x84DA;$/;"	v
TEXTURE27	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE27 = 0x84DB;$/;"	v
TEXTURE27	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE27:Int;$/;"	v
TEXTURE27	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE27 = 0x84DB;$/;"	v
TEXTURE27	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE27							 = 0x84DB;$/;"	v
TEXTURE27	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE27                      = 0x84DB;$/;"	v
TEXTURE28	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE28 = 0x84DC;$/;"	v
TEXTURE28	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE28:Int;$/;"	v
TEXTURE28	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE28 = 0x84DC;$/;"	v
TEXTURE28	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE28							 = 0x84DC;$/;"	v
TEXTURE28	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE28                      = 0x84DC;$/;"	v
TEXTURE29	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE29 = 0x84DD;$/;"	v
TEXTURE29	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE29:Int;$/;"	v
TEXTURE29	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE29 = 0x84DD;$/;"	v
TEXTURE29	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE29							 = 0x84DD;$/;"	v
TEXTURE29	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE29                      = 0x84DD;$/;"	v
TEXTURE3	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE3 = 0x84C3;$/;"	v
TEXTURE3	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE3:Int;$/;"	v
TEXTURE3	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE3 = 0x84C3;$/;"	v
TEXTURE3	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE3							  = 0x84C3;$/;"	v
TEXTURE3	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE3                       = 0x84C3;$/;"	v
TEXTURE30	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE30 = 0x84DE;$/;"	v
TEXTURE30	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE30:Int;$/;"	v
TEXTURE30	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE30 = 0x84DE;$/;"	v
TEXTURE30	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE30							 = 0x84DE;$/;"	v
TEXTURE30	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE30                      = 0x84DE;$/;"	v
TEXTURE31	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE31 = 0x84DF;$/;"	v
TEXTURE31	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE31:Int;$/;"	v
TEXTURE31	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE31 = 0x84DF;$/;"	v
TEXTURE31	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE31							 = 0x84DF;$/;"	v
TEXTURE31	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE31                      = 0x84DF;$/;"	v
TEXTURE4	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE4 = 0x84C4;$/;"	v
TEXTURE4	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE4:Int;$/;"	v
TEXTURE4	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE4 = 0x84C4;$/;"	v
TEXTURE4	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE4							  = 0x84C4;$/;"	v
TEXTURE4	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE4                       = 0x84C4;$/;"	v
TEXTURE5	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE5 = 0x84C5;$/;"	v
TEXTURE5	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE5:Int;$/;"	v
TEXTURE5	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE5 = 0x84C5;$/;"	v
TEXTURE5	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE5							  = 0x84C5;$/;"	v
TEXTURE5	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE5                       = 0x84C5;$/;"	v
TEXTURE6	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE6 = 0x84C6;$/;"	v
TEXTURE6	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE6:Int;$/;"	v
TEXTURE6	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE6 = 0x84C6;$/;"	v
TEXTURE6	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE6							  = 0x84C6;$/;"	v
TEXTURE6	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE6                       = 0x84C6;$/;"	v
TEXTURE7	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE7 = 0x84C7;$/;"	v
TEXTURE7	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE7:Int;$/;"	v
TEXTURE7	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE7 = 0x84C7;$/;"	v
TEXTURE7	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE7							  = 0x84C7;$/;"	v
TEXTURE7	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE7                       = 0x84C7;$/;"	v
TEXTURE8	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE8 = 0x84C8;$/;"	v
TEXTURE8	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE8:Int;$/;"	v
TEXTURE8	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE8 = 0x84C8;$/;"	v
TEXTURE8	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE8							  = 0x84C8;$/;"	v
TEXTURE8	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE8                       = 0x84C8;$/;"	v
TEXTURE9	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE9 = 0x84C9;$/;"	v
TEXTURE9	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE9:Int;$/;"	v
TEXTURE9	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE9 = 0x84C9;$/;"	v
TEXTURE9	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE9							  = 0x84C9;$/;"	v
TEXTURE9	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE9                       = 0x84C9;$/;"	v
TEXTURE_2D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE_2D = 0x0DE1;$/;"	v
TEXTURE_2D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE_2D:Int;$/;"	v
TEXTURE_2D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE_2D = 0x0DE1;$/;"	v
TEXTURE_2D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE_2D							= 0x0DE1;$/;"	v
TEXTURE_2D	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE_2D                     = 0x0DE1;$/;"	v
TEXTURE_BINDING_2D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE_BINDING_2D = 0x8069;$/;"	v
TEXTURE_BINDING_2D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE_BINDING_2D:Int;$/;"	v
TEXTURE_BINDING_2D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE_BINDING_2D = 0x8069;$/;"	v
TEXTURE_BINDING_2D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE_BINDING_2D				 = 0x8069;$/;"	v
TEXTURE_BINDING_2D	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE_BINDING_2D             = 0x8069;$/;"	v
TEXTURE_BINDING_CUBE_MAP	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE_BINDING_CUBE_MAP = 0x8514;$/;"	v
TEXTURE_BINDING_CUBE_MAP	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE_BINDING_CUBE_MAP:Int;$/;"	v
TEXTURE_BINDING_CUBE_MAP	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE_BINDING_CUBE_MAP = 0x8514;$/;"	v
TEXTURE_BINDING_CUBE_MAP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE_BINDING_CUBE_MAP		 = 0x8514;$/;"	v
TEXTURE_BINDING_CUBE_MAP	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE_BINDING_CUBE_MAP       = 0x8514;$/;"	v
TEXTURE_CUBE_MAP	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE_CUBE_MAP = 0x8513;$/;"	v
TEXTURE_CUBE_MAP	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE_CUBE_MAP:Int;$/;"	v
TEXTURE_CUBE_MAP	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE_CUBE_MAP = 0x8513;$/;"	v
TEXTURE_CUBE_MAP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE_CUBE_MAP					= 0x8513;$/;"	v
TEXTURE_CUBE_MAP	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE_CUBE_MAP               = 0x8513;$/;"	v
TEXTURE_CUBE_MAP_NEGATIVE_X	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516;$/;"	v
TEXTURE_CUBE_MAP_NEGATIVE_X	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE_CUBE_MAP_NEGATIVE_X:Int;$/;"	v
TEXTURE_CUBE_MAP_NEGATIVE_X	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516;$/;"	v
TEXTURE_CUBE_MAP_NEGATIVE_X	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE_CUBE_MAP_NEGATIVE_X	 = 0x8516;$/;"	v
TEXTURE_CUBE_MAP_NEGATIVE_X	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE_CUBE_MAP_NEGATIVE_X    = 0x8516;$/;"	v
TEXTURE_CUBE_MAP_NEGATIVE_Y	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518;$/;"	v
TEXTURE_CUBE_MAP_NEGATIVE_Y	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE_CUBE_MAP_NEGATIVE_Y:Int;$/;"	v
TEXTURE_CUBE_MAP_NEGATIVE_Y	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518;$/;"	v
TEXTURE_CUBE_MAP_NEGATIVE_Y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE_CUBE_MAP_NEGATIVE_Y	 = 0x8518;$/;"	v
TEXTURE_CUBE_MAP_NEGATIVE_Y	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE_CUBE_MAP_NEGATIVE_Y    = 0x8518;$/;"	v
TEXTURE_CUBE_MAP_NEGATIVE_Z	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A;$/;"	v
TEXTURE_CUBE_MAP_NEGATIVE_Z	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE_CUBE_MAP_NEGATIVE_Z:Int;$/;"	v
TEXTURE_CUBE_MAP_NEGATIVE_Z	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A;$/;"	v
TEXTURE_CUBE_MAP_NEGATIVE_Z	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE_CUBE_MAP_NEGATIVE_Z	 = 0x851A;$/;"	v
TEXTURE_CUBE_MAP_NEGATIVE_Z	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE_CUBE_MAP_NEGATIVE_Z    = 0x851A;$/;"	v
TEXTURE_CUBE_MAP_POSITIVE_X	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515;$/;"	v
TEXTURE_CUBE_MAP_POSITIVE_X	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE_CUBE_MAP_POSITIVE_X:Int;$/;"	v
TEXTURE_CUBE_MAP_POSITIVE_X	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515;$/;"	v
TEXTURE_CUBE_MAP_POSITIVE_X	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE_CUBE_MAP_POSITIVE_X	 = 0x8515;$/;"	v
TEXTURE_CUBE_MAP_POSITIVE_X	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE_CUBE_MAP_POSITIVE_X    = 0x8515;$/;"	v
TEXTURE_CUBE_MAP_POSITIVE_Y	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517;$/;"	v
TEXTURE_CUBE_MAP_POSITIVE_Y	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE_CUBE_MAP_POSITIVE_Y:Int;$/;"	v
TEXTURE_CUBE_MAP_POSITIVE_Y	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517;$/;"	v
TEXTURE_CUBE_MAP_POSITIVE_Y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE_CUBE_MAP_POSITIVE_Y	 = 0x8517;$/;"	v
TEXTURE_CUBE_MAP_POSITIVE_Y	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE_CUBE_MAP_POSITIVE_Y    = 0x8517;$/;"	v
TEXTURE_CUBE_MAP_POSITIVE_Z	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519;$/;"	v
TEXTURE_CUBE_MAP_POSITIVE_Z	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE_CUBE_MAP_POSITIVE_Z:Int;$/;"	v
TEXTURE_CUBE_MAP_POSITIVE_Z	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519;$/;"	v
TEXTURE_CUBE_MAP_POSITIVE_Z	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE_CUBE_MAP_POSITIVE_Z	 = 0x8519;$/;"	v
TEXTURE_CUBE_MAP_POSITIVE_Z	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE_CUBE_MAP_POSITIVE_Z    = 0x8519;$/;"	v
TEXTURE_MAG_FILTER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE_MAG_FILTER = 0x2800;$/;"	v
TEXTURE_MAG_FILTER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE_MAG_FILTER:Int;$/;"	v
TEXTURE_MAG_FILTER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE_MAG_FILTER = 0x2800;$/;"	v
TEXTURE_MAG_FILTER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE_MAG_FILTER				 = 0x2800;$/;"	v
TEXTURE_MAG_FILTER	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE_MAG_FILTER             = 0x2800;$/;"	v
TEXTURE_MAX_ANISOTROPY_EXT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	private static var TEXTURE_MAX_ANISOTROPY_EXT = 0x84FE;$/;"	v
TEXTURE_MIN_FILTER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE_MIN_FILTER = 0x2801;$/;"	v
TEXTURE_MIN_FILTER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE_MIN_FILTER:Int;$/;"	v
TEXTURE_MIN_FILTER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE_MIN_FILTER = 0x2801;$/;"	v
TEXTURE_MIN_FILTER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE_MIN_FILTER				 = 0x2801;$/;"	v
TEXTURE_MIN_FILTER	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE_MIN_FILTER             = 0x2801;$/;"	v
TEXTURE_WRAP_S	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE_WRAP_S = 0x2802;$/;"	v
TEXTURE_WRAP_S	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE_WRAP_S:Int;$/;"	v
TEXTURE_WRAP_S	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE_WRAP_S = 0x2802;$/;"	v
TEXTURE_WRAP_S	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE_WRAP_S					  = 0x2802;$/;"	v
TEXTURE_WRAP_S	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE_WRAP_S                 = 0x2802;$/;"	v
TEXTURE_WRAP_T	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TEXTURE_WRAP_T = 0x2803;$/;"	v
TEXTURE_WRAP_T	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TEXTURE_WRAP_T:Int;$/;"	v
TEXTURE_WRAP_T	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TEXTURE_WRAP_T = 0x2803;$/;"	v
TEXTURE_WRAP_T	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TEXTURE_WRAP_T					  = 0x2803;$/;"	v
TEXTURE_WRAP_T	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TEXTURE_WRAP_T                 = 0x2803;$/;"	v
TEXT_EDIT	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	var TEXT_EDIT = 1;$/;"	v
TEXT_INPUT	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	var TEXT_INPUT = 0;$/;"	v
TEXT_INPUT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TextEvent.hx	/^	public static var TEXT_INPUT:String = "textInput";$/;"	v
TFTP_BLKSIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var TFTP_BLKSIZE = 178;$/;"	v
TFTP_ILLEGAL	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var TFTP_ILLEGAL = 71;$/;"	v
TFTP_NOSUCHUSER	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var TFTP_NOSUCHUSER = 74;$/;"	v
TFTP_NOTFOUND	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var TFTP_NOTFOUND = 68;$/;"	v
TFTP_PERM	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var TFTP_PERM = 69;$/;"	v
TFTP_UNKNOWNID	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var TFTP_UNKNOWNID = 72;$/;"	v
TGT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/FocusEventTest.hx	/^		var TGT = EventPhase.AT_TARGET;$/;"	v
THAANA	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var THAANA = "Thaa";$/;"	v
THAI	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var THAI = "Thai";$/;"	v
THIRD	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLVersion.hx	/^	var THIRD = 2;$/;"	v
THOUSAND_SEPARATOR	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var THOUSAND_SEPARATOR = 0x400000B2;$/;"	v
TIBETAN	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var TIBETAN = "Tibt";$/;"	v
TIFINAGH	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var TIFINAGH = "Tfng";$/;"	v
TILE_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public static inline var TILE_ALPHA = 0x0008;$/;"	v
TILE_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Tilesheet.hx	/^	public static inline var TILE_ALPHA = 0x0008;$/;"	v
TILE_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public static inline var TILE_ALPHA = 0x0008;$/;"	v
TILE_ALPHA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Tilesheet.hx	/^	public static inline var TILE_ALPHA = 0x0008;$/;"	v
TILE_BLEND_ADD	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public static inline var TILE_BLEND_ADD = 0x00010000;$/;"	v
TILE_BLEND_ADD	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Tilesheet.hx	/^	public static inline var TILE_BLEND_ADD = 0x00010000;$/;"	v
TILE_BLEND_ADD	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public static inline var TILE_BLEND_ADD = 0x00010000;$/;"	v
TILE_BLEND_ADD	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Tilesheet.hx	/^	public static inline var TILE_BLEND_ADD      = 0x00010000;$/;"	v
TILE_BLEND_MULTIPLY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Tilesheet.hx	/^	public static inline var TILE_BLEND_MULTIPLY = 0x00020000;$/;"	v
TILE_BLEND_MULTIPLY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Tilesheet.hx	/^	public static inline var TILE_BLEND_MULTIPLY = 0x00020000;$/;"	v
TILE_BLEND_NORMAL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public static inline var TILE_BLEND_NORMAL = 0x00000000;$/;"	v
TILE_BLEND_NORMAL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Tilesheet.hx	/^	public static inline var TILE_BLEND_NORMAL = 0x00000000;$/;"	v
TILE_BLEND_NORMAL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public static inline var TILE_BLEND_NORMAL = 0x00000000;$/;"	v
TILE_BLEND_NORMAL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Tilesheet.hx	/^	public static inline var TILE_BLEND_NORMAL   = 0x00000000;$/;"	v
TILE_BLEND_SCREEN	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Tilesheet.hx	/^	public static inline var TILE_BLEND_SCREEN = 0x00040000;$/;"	v
TILE_BLEND_SCREEN	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Tilesheet.hx	/^	public static inline var TILE_BLEND_SCREEN = 0x00040000;$/;"	v
TILE_BLEND_SUBTRACT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Tilesheet.hx	/^	public static inline var TILE_BLEND_SUBTRACT = 0x00080000;$/;"	v
TILE_BLEND_SUBTRACT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Tilesheet.hx	/^	public static inline var TILE_BLEND_SUBTRACT = 0x00080000;$/;"	v
TILE_ORIGIN	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public static inline var TILE_ORIGIN = 0x0040;$/;"	v
TILE_ORIGIN	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Tilesheet.hx	/^	public static inline var TILE_ORIGIN = 0x0040;$/;"	v
TILE_ORIGIN	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public static inline var TILE_ORIGIN = 0x0040;$/;"	v
TILE_ORIGIN	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Tilesheet.hx	/^	public static inline var TILE_ORIGIN = 0x0040;$/;"	v
TILE_RECT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public static inline var TILE_RECT = 0x0020;$/;"	v
TILE_RECT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Tilesheet.hx	/^	public static inline var TILE_RECT = 0x0020;$/;"	v
TILE_RECT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public static inline var TILE_RECT = 0x0020;$/;"	v
TILE_RECT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Tilesheet.hx	/^	public static inline var TILE_RECT = 0x0020;$/;"	v
TILE_RGB	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public static inline var TILE_RGB = 0x0004;$/;"	v
TILE_RGB	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Tilesheet.hx	/^	public static inline var TILE_RGB = 0x0004;$/;"	v
TILE_RGB	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public static inline var TILE_RGB = 0x0004;$/;"	v
TILE_RGB	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Tilesheet.hx	/^	public static inline var TILE_RGB = 0x0004;$/;"	v
TILE_ROTATION	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public static inline var TILE_ROTATION = 0x0002;$/;"	v
TILE_ROTATION	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Tilesheet.hx	/^	public static inline var TILE_ROTATION = 0x0002;$/;"	v
TILE_ROTATION	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public static inline var TILE_ROTATION = 0x0002;$/;"	v
TILE_ROTATION	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Tilesheet.hx	/^	public static inline var TILE_ROTATION = 0x0002;$/;"	v
TILE_SCALE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public static inline var TILE_SCALE = 0x0001;$/;"	v
TILE_SCALE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Tilesheet.hx	/^	public static inline var TILE_SCALE = 0x0001;$/;"	v
TILE_SCALE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public static inline var TILE_SCALE = 0x0001;$/;"	v
TILE_SCALE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Tilesheet.hx	/^	public static inline var TILE_SCALE = 0x0001;$/;"	v
TILE_SMOOTH	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	private static inline var TILE_SMOOTH = 0x1000;$/;"	v
TILE_TRANS_2x2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public static inline var TILE_TRANS_2x2 = 0x0010;$/;"	v
TILE_TRANS_2x2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Tilesheet.hx	/^	public static inline var TILE_TRANS_2x2 = 0x0010;$/;"	v
TILE_TRANS_2x2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public static inline var TILE_TRANS_2x2 = 0x0010;$/;"	v
TILE_TRANS_2x2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Tilesheet.hx	/^	public static inline var TILE_TRANS_2x2 = 0x0010;$/;"	v
TIMECONDITION	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var TIMECONDITION = 33;$/;"	v
TIMEOUT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var TIMEOUT = 13;$/;"	v
TIMEOUT	/usr/lib/haxe/std/haxe/remoting/HttpConnection.hx	/^	public static var TIMEOUT = 10.;$/;"	v
TIMEOUT_MS	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var TIMEOUT_MS = 155;$/;"	v
TIMER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TimerEvent.hx	/^	public static var TIMER:String = "timer";$/;"	v
TIMER_COMPLETE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TimerEvent.hx	/^	public static var TIMER_COMPLETE:String = "timerComplete";$/;"	v
TIMEVALUE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var TIMEVALUE = 34;$/;"	v
TIRHUTA	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var TIRHUTA = "Tirh";$/;"	v
TITLE_MAX_CHARS	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	private static inline var TITLE_MAX_CHARS = 127;$/;"	v
TIZEN	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Platform.hx	/^	var TIZEN = "tizen";$/;"	v
TLSAUTH_PASSWORD	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var TLSAUTH_PASSWORD = 10205;$/;"	v
TLSAUTH_TYPE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var TLSAUTH_TYPE = 10206;$/;"	v
TLSAUTH_USERNAME	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var TLSAUTH_USERNAME = 10204;$/;"	v
TLS_SESSION	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var TLS_SESSION = 0x400000 + 43;$/;"	v
TOO_MANY_REDIRECTS	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var TOO_MANY_REDIRECTS = 47;$/;"	v
TOP_TO_BOTTOM	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextDirection.hx	/^	var TOP_TO_BOTTOM = 6;$/;"	v
TOTAL_TIME	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^	var TOTAL_TIME = 0x300000 + 3;$/;"	v
TOUCH_BEGIN	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/TouchEvent.hx	/^	public static var TOUCH_BEGIN:String = "touchBegin";$/;"	v
TOUCH_BEGIN	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TouchEvent.hx	/^	public static inline var TOUCH_BEGIN:String = "touchBegin";$/;"	v
TOUCH_END	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	var TOUCH_END = 1;$/;"	v
TOUCH_END	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/TouchEvent.hx	/^	public static var TOUCH_END:String = "touchEnd";$/;"	v
TOUCH_END	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TouchEvent.hx	/^	public static inline var TOUCH_END:String = "touchEnd";$/;"	v
TOUCH_MOVE	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	var TOUCH_MOVE = 2;$/;"	v
TOUCH_MOVE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/TouchEvent.hx	/^	public static var TOUCH_MOVE:String = "touchMove";$/;"	v
TOUCH_MOVE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TouchEvent.hx	/^	public static inline var TOUCH_MOVE:String = "touchMove";$/;"	v
TOUCH_OUT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/TouchEvent.hx	/^	public static var TOUCH_OUT:String = "touchOut";$/;"	v
TOUCH_OUT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TouchEvent.hx	/^	public static inline var TOUCH_OUT:String = "touchOut";$/;"	v
TOUCH_OVER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/TouchEvent.hx	/^	public static var TOUCH_OVER:String = "touchOver";$/;"	v
TOUCH_OVER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TouchEvent.hx	/^	public static inline var TOUCH_OVER:String = "touchOver";$/;"	v
TOUCH_ROLL_OUT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/TouchEvent.hx	/^	public static var TOUCH_ROLL_OUT:String = "touchRollOut";$/;"	v
TOUCH_ROLL_OUT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TouchEvent.hx	/^	public static inline var TOUCH_ROLL_OUT:String = "touchRollOut";$/;"	v
TOUCH_ROLL_OVER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/TouchEvent.hx	/^	public static var TOUCH_ROLL_OVER:String = "touchRollOver";$/;"	v
TOUCH_ROLL_OVER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TouchEvent.hx	/^	public static inline var TOUCH_ROLL_OVER:String = "touchRollOver";$/;"	v
TOUCH_START	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	var TOUCH_START = 0;$/;"	v
TOUCH_TAP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/TouchEvent.hx	/^	public static var TOUCH_TAP:String = "touchTap";$/;"	v
TOUCH_TAP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TouchEvent.hx	/^	public static inline var TOUCH_TAP:String = "touchTap";$/;"	v
TO_RADIAN	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/PerspectiveProjection.hx	/^	public static inline var TO_RADIAN:Float = 0.01745329251994329577; \/\/ Math.PI \/ 180$/;"	v
TRANSFERTEXT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var TRANSFERTEXT = 53;$/;"	v
TRANSFER_ENCODING	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var TRANSFER_ENCODING = 207;$/;"	v
TRANSPARENT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public inline static var TRANSPARENT = 0x0001;$/;"	v
TRIANGLES	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TRIANGLES = 0x0004;$/;"	v
TRIANGLES	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TRIANGLES:Int;$/;"	v
TRIANGLES	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TRIANGLES = 0x0004;$/;"	v
TRIANGLES	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TRIANGLES							 = 0x0004;$/;"	v
TRIANGLES	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TRIANGLES                      = 0x0004;$/;"	v
TRIANGLE_FAN	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TRIANGLE_FAN = 0x0006;$/;"	v
TRIANGLE_FAN	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TRIANGLE_FAN:Int;$/;"	v
TRIANGLE_FAN	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TRIANGLE_FAN = 0x0006;$/;"	v
TRIANGLE_FAN	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TRIANGLE_FAN						 = 0x0006;$/;"	v
TRIANGLE_FAN	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TRIANGLE_FAN                   = 0x0006;$/;"	v
TRIANGLE_STRIP	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var TRIANGLE_STRIP = 0x0005;$/;"	v
TRIANGLE_STRIP	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var TRIANGLE_STRIP:Int;$/;"	v
TRIANGLE_STRIP	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var TRIANGLE_STRIP = 0x0005;$/;"	v
TRIANGLE_STRIP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var TRIANGLE_STRIP					  = 0x0005;$/;"	v
TRIANGLE_STRIP	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var TRIANGLE_STRIP                 = 0x0005;$/;"	v
TRIGGER_LEFT	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/GamepadAxis.hx	/^	var TRIGGER_LEFT = 4;$/;"	v
TRIGGER_RIGHT	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/GamepadAxis.hx	/^	var TRIGGER_RIGHT = 5;$/;"	v
TRUE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var TRUE:Int = 1;$/;"	v
TRUE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public var TRUE:Int = 1;$/;"	v
TRUE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var TRUE:Int = 1;$/;"	v
TRUE	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static inline var TRUE:Int = 1;$/;"	v
TableCreate	/usr/lib/haxe/std/sys/db/TableCreate.hx	/^class TableCreate {$/;"	c
Template	/usr/lib/haxe/std/haxe/Template.hx	/^class Template {$/;"	c
Test	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^ class Test {$/;"	c
Test more filters	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		\/\/TODO: Test more filters$/;"	i
TestBreakable	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBreakable.hx	/^class TestBreakable extends Test{$/;"	c
TestBridge	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBridge.hx	/^	class TestBridge extends Test{$/;"	c
TestBuoyancy	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBuoyancy.hx	/^	class TestBuoyancy extends Test{$/;"	c
TestCCD	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCCD.hx	/^	class TestCCD extends Test{$/;"	c
TestCase	/usr/lib/haxe/std/haxe/unit/TestCase.hx	/^class TestCase #if mt_build implements mt.Protect #end {$/;"	c
TestCompound	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCompound.hx	/^ class TestCompound extends Test{$/;"	c
TestCrankGearsPulley	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^class TestCrankGearsPulley extends Test$/;"	c
TestOneSidedPlatform	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestOneSidedPlatform.hx	/^	class TestOneSidedPlatform extends Test {$/;"	c
TestRagdoll	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRagdoll.hx	/^	class TestRagdoll extends Test{$/;"	c
TestRaycast	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRaycast.hx	/^class TestRaycast extends Test{$/;"	c
TestResult	/usr/lib/haxe/std/haxe/unit/TestResult.hx	/^class TestResult {$/;"	c
TestRunner	/usr/lib/haxe/std/haxe/unit/TestRunner.hx	/^class TestRunner {$/;"	c
TestStack	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestStack.hx	/^	 class TestStack extends Test{$/;"	c
TestStatus	/usr/lib/haxe/std/haxe/unit/TestStatus.hx	/^class TestStatus {$/;"	c
TestTheoJansen	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^class TestTheoJansen extends Test {$/;"	c
TexCoord	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/DefaultShader.hx	/^	var TexCoord = "aTexCoord0";$/;"	v
TexCoord	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/DrawTrianglesShader.hx	/^	var TexCoord = DefAttrib.TexCoord;$/;"	v
TextEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TextEvent.hx	/^class TextEvent extends Event {$/;"	c
TextEventInfo	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^private class TextEventInfo {$/;"	c
TextEventTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/TextEventTest.hx	/^class TextEventTest {$/;"	c
TextField	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^class TextField extends InteractiveObject {$/;"	c
TextField	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^class TextField extends InteractiveObject {$/;"	c
TextFieldAutoSizeTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFieldAutoSizeTest.hx	/^class TextFieldAutoSizeTest {$/;"	c
TextFieldGraphics	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^class TextFieldGraphics {$/;"	c
TextFieldTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFieldTest.hx	/^class TextFieldTest {$/;"	c
TextFieldTypeTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFieldTypeTest.hx	/^class TextFieldTypeTest {$/;"	c
TextFormat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextFormat.hx	/^class TextFormat {$/;"	c
TextFormatAlign	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextFormatAlign.hx	/^class TextFormatAlign $/;"	c
TextFormatAlignTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFormatAlignTest.hx	/^class TextFormatAlignTest {$/;"	c
TextFormatTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFormatTest.hx	/^class TextFormatTest {$/;"	c
TextLayout	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextLayout.hx	/^class TextLayout {$/;"	c
TextLineMetrics	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextLineMetrics.hx	/^class TextLineMetrics {$/;"	c
TextLineMetrics	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextLineMetrics.hx	/^class TextLineMetrics {$/;"	c
TextLineMetricsTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextLineMetricsTest.hx	/^class TextLineMetricsTest {$/;"	c
Texture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/Texture.hx	/^class Texture extends TextureBase {$/;"	c
TextureBase	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/TextureBase.hx	/^class TextureBase extends EventDispatcher {$/;"	c
Thread	/usr/lib/haxe/std/neko/vm/Thread.hx	/^class Thread {$/;"	c
ThreadRemotingServer	/usr/lib/haxe/std/neko/net/ThreadRemotingServer.hx	/^class ThreadRemotingServer extends ThreadServer<haxe.remoting.SocketConnection,String> {$/;"	c
ThreadServer	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^class ThreadServer<Client,Message> {$/;"	c
ThrowEOFi	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	private function ThrowEOFi ():Int {$/;"	f
Tilesheet	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Tilesheet.hx	/^class Tilesheet {$/;"	c
Tilesheet	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Tilesheet.hx	/^class Tilesheet {$/;"	c
TilesheetTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/TilesheetTest.hx	/^class TilesheetTest {$/;"	c
Timer	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^class Timer {$/;"	c
Timer	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^class Timer {$/;"	c
Timer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Timer.hx	/^class Timer extends EventDispatcher {$/;"	c
Timer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/Timer.hx	/^class Timer extends EventDispatcher {$/;"	c
Timer	/usr/lib/haxe/std/haxe/Timer.hx	/^class Timer {$/;"	c
TimerEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TimerEvent.hx	/^class TimerEvent extends Event {$/;"	c
TimerEventTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/TimerEventTest.hx	/^class TimerEventTest {$/;"	c
TimerTask	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^private class TimerTask extends java.util.TimerTask {$/;"	c
TimerTask	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^private class TimerTask extends java.util.TimerTask {$/;"	c
TimerTask	/usr/lib/haxe/std/haxe/Timer.hx	/^private class TimerTask extends java.util.TimerTask {$/;"	c
TimerTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/TimerTest.hx	/^class TimerTest {$/;"	c
TizenHelper	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/TizenHelper.hx	/^class TizenHelper {$/;"	c
TizenPlatform	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/TizenPlatform.hx	/^class TizenPlatform extends PlatformTarget {$/;"	c
Tls	/usr/lib/haxe/std/neko/vm/Tls.hx	/^class Tls<T> {$/;"	c
Token	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Token.hx	/^class Token {$/;"	c
Tools	/usr/lib/haxe/std/haxe/zip/Tools.hx	/^class Tools {$/;"	c
TouchEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/TouchEvent.hx	/^class TouchEvent extends MouseEvent {$/;"	c
TouchEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TouchEvent.hx	/^class TouchEvent extends Event {$/;"	c
TouchEventInfo	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^private class TouchEventInfo {$/;"	c
TouchEventTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/TouchEventTest.hx	/^class TouchEventTest {$/;"	c
TouchInfo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^class TouchInfo {$/;"	c
Transaction	/usr/lib/haxe/std/sys/db/Transaction.hx	/^class Transaction {$/;"	c
Transform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Transform.hx	/^class Transform {$/;"	c
Transform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Transform.hx	/^class Transform {$/;"	c
TransformTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/TransformTest.hx	/^class TransformTest {$/;"	c
TranslationMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/FillShader.hx	/^	var TranslationMatrix = "uTranslationMatrix";$/;"	v
TranslationMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/PatternFillShader.hx	/^	var TranslationMatrix = "uTranslationMatrix";$/;"	v
TranslationMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/PrimitiveShader.hx	/^	var TranslationMatrix = "uTranslationMatrix";$/;"	v
TreeNode	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^class TreeNode<K,V> {$/;"	c
TriangleCullingTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/TriangleCullingTest.hx	/^class TriangleCullingTest {$/;"	c
Type as Context3DBlendFactor instead of Int?	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		\/\/ TODO: Type as Context3DBlendFactor instead of Int?$/;"	i
Type as Context3DCompareMode instead of Int?	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		\/\/ TODO: Type as Context3DCompareMode instead of Int?$/;"	i
Type as Context3DTriangleFace instead of Int?	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		\/\/ TODO: Type as Context3DTriangleFace instead of Int?$/;"	i
TypeApi	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^class TypeApi {$/;"	c
TypeError	/usr/lib/haxe/lib/openfl/3,0,8/openfl/errors/TypeError.hx	/^class TypeError extends Error {$/;"	c
TypeErrorTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/TypeErrorTest.hx	/^class TypeErrorTest {$/;"	c
TypeTools	/usr/lib/haxe/std/haxe/macro/TypeTools.hx	/^class TypeTools {$/;"	c
TypedExprTools	/usr/lib/haxe/std/haxe/macro/TypedExprTools.hx	/^class TypedExprTools {$/;"	c
U	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var U = 0x75;$/;"	v
U	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var U:Int = 85;$/;"	v
U	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var U = 85;$/;"	v
UGARITIC	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var UGARITIC = "Ugar";$/;"	v
UID	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/Shader.hx	/^	private static var UID:Int = 0;$/;"	v
UInt8Array	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/UInt8Array.hx	/^class UInt8Array extends ArrayBufferView implements ArrayAccess<Int> {$/;"	c
UInt8ArrayTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/UInt8ArrayTest.hx	/^class UInt8ArrayTest {$/;"	c
UNCAUGHT_ERROR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/UncaughtErrorEvent.hx	/^	public static var UNCAUGHT_ERROR = "uncaughtError";$/;"	v
UNDERSCORE	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var UNDERSCORE = 0x5F;$/;"	v
UNDETERMINED	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var UNDETERMINED:Int = 0x1030;$/;"	v
UNDETERMINED	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var UNDETERMINED:Int = 0x1030;$/;"	v
UNDO	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var UNDO = 0x4000007A;$/;"	v
UNKNOWN	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var UNKNOWN = "Zzzz";$/;"	v
UNKNOWN	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var UNKNOWN = 0x00;$/;"	v
UNKNOWN_JOINT	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2JointType.hx	/^	var UNKNOWN_JOINT = 0;$/;"	v
UNKNOWN_OPTION	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var UNKNOWN_OPTION = 48;$/;"	v
UNKNOWN_SHAPE	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2ShapeType.hx	/^	var UNKNOWN_SHAPE = 0;$/;"	v
UNLOAD	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public static var UNLOAD = "unload";$/;"	v
UNLOAD	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public static var UNLOAD = "unload";$/;"	v
UNPACK_ALIGNMENT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var UNPACK_ALIGNMENT = 0x0CF5;$/;"	v
UNPACK_ALIGNMENT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var UNPACK_ALIGNMENT:Int;$/;"	v
UNPACK_ALIGNMENT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var UNPACK_ALIGNMENT = 0x0CF5;$/;"	v
UNPACK_ALIGNMENT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var UNPACK_ALIGNMENT					= 0x0CF5;$/;"	v
UNPACK_ALIGNMENT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var UNPACK_ALIGNMENT               = 0x0CF5;$/;"	v
UNPACK_COLORSPACE_CONVERSION_WEBGL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243;$/;"	v
UNPACK_COLORSPACE_CONVERSION_WEBGL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var UNPACK_COLORSPACE_CONVERSION_WEBGL:Int;$/;"	v
UNPACK_COLORSPACE_CONVERSION_WEBGL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243;$/;"	v
UNPACK_COLORSPACE_CONVERSION_WEBGL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243;$/;"	v
UNPACK_COLORSPACE_CONVERSION_WEBGL	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243;$/;"	v
UNPACK_FLIP_Y_WEBGL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var UNPACK_FLIP_Y_WEBGL = 0x9240;$/;"	v
UNPACK_FLIP_Y_WEBGL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var UNPACK_FLIP_Y_WEBGL:Int;$/;"	v
UNPACK_FLIP_Y_WEBGL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var UNPACK_FLIP_Y_WEBGL = 0x9240;$/;"	v
UNPACK_FLIP_Y_WEBGL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var UNPACK_FLIP_Y_WEBGL				= 0x9240;$/;"	v
UNPACK_FLIP_Y_WEBGL	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var UNPACK_FLIP_Y_WEBGL            = 0x9240;$/;"	v
UNPACK_PREMULTIPLY_ALPHA_WEBGL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241;$/;"	v
UNPACK_PREMULTIPLY_ALPHA_WEBGL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var UNPACK_PREMULTIPLY_ALPHA_WEBGL:Int;$/;"	v
UNPACK_PREMULTIPLY_ALPHA_WEBGL	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241;$/;"	v
UNPACK_PREMULTIPLY_ALPHA_WEBGL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241;$/;"	v
UNPACK_PREMULTIPLY_ALPHA_WEBGL	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241;$/;"	v
UNRESTRICTED_AUTH	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var UNRESTRICTED_AUTH = 105;$/;"	v
UNSIGNED_BYTE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var UNSIGNED_BYTE = 0x1401;$/;"	v
UNSIGNED_BYTE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var UNSIGNED_BYTE:Int;$/;"	v
UNSIGNED_BYTE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var UNSIGNED_BYTE = 0x1401;$/;"	v
UNSIGNED_BYTE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexAttribute.hx	/^	var UNSIGNED_BYTE = GL.UNSIGNED_BYTE;$/;"	v
UNSIGNED_BYTE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var UNSIGNED_BYTE						= 0x1401;$/;"	v
UNSIGNED_BYTE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var UNSIGNED_BYTE                  = 0x1401;$/;"	v
UNSIGNED_INT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var UNSIGNED_INT = 0x1405;$/;"	v
UNSIGNED_INT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var UNSIGNED_INT:Int;$/;"	v
UNSIGNED_INT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var UNSIGNED_INT = 0x1405;$/;"	v
UNSIGNED_INT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var UNSIGNED_INT						 = 0x1405;$/;"	v
UNSIGNED_INT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var UNSIGNED_INT                   = 0x1405;$/;"	v
UNSIGNED_SHORT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var UNSIGNED_SHORT = 0x1403;$/;"	v
UNSIGNED_SHORT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var UNSIGNED_SHORT:Int;$/;"	v
UNSIGNED_SHORT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var UNSIGNED_SHORT = 0x1403;$/;"	v
UNSIGNED_SHORT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexAttribute.hx	/^	var UNSIGNED_SHORT = GL.UNSIGNED_SHORT;$/;"	v
UNSIGNED_SHORT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var UNSIGNED_SHORT					  = 0x1403;$/;"	v
UNSIGNED_SHORT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var UNSIGNED_SHORT                 = 0x1403;$/;"	v
UNSIGNED_SHORT_4_4_4_4	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var UNSIGNED_SHORT_4_4_4_4 = 0x8033;$/;"	v
UNSIGNED_SHORT_4_4_4_4	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var UNSIGNED_SHORT_4_4_4_4:Int;$/;"	v
UNSIGNED_SHORT_4_4_4_4	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var UNSIGNED_SHORT_4_4_4_4 = 0x8033;$/;"	v
UNSIGNED_SHORT_4_4_4_4	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var UNSIGNED_SHORT_4_4_4_4			= 0x8033;$/;"	v
UNSIGNED_SHORT_4_4_4_4	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var UNSIGNED_SHORT_4_4_4_4         = 0x8033;$/;"	v
UNSIGNED_SHORT_5_5_5_1	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var UNSIGNED_SHORT_5_5_5_1 = 0x8034;$/;"	v
UNSIGNED_SHORT_5_5_5_1	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var UNSIGNED_SHORT_5_5_5_1:Int;$/;"	v
UNSIGNED_SHORT_5_5_5_1	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var UNSIGNED_SHORT_5_5_5_1 = 0x8034;$/;"	v
UNSIGNED_SHORT_5_5_5_1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var UNSIGNED_SHORT_5_5_5_1			= 0x8034;$/;"	v
UNSIGNED_SHORT_5_5_5_1	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var UNSIGNED_SHORT_5_5_5_1         = 0x8034;$/;"	v
UNSIGNED_SHORT_5_6_5	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var UNSIGNED_SHORT_5_6_5 = 0x8363;$/;"	v
UNSIGNED_SHORT_5_6_5	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var UNSIGNED_SHORT_5_6_5:Int;$/;"	v
UNSIGNED_SHORT_5_6_5	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var UNSIGNED_SHORT_5_6_5 = 0x8363;$/;"	v
UNSIGNED_SHORT_5_6_5	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var UNSIGNED_SHORT_5_6_5			  = 0x8363;$/;"	v
UNSIGNED_SHORT_5_6_5	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var UNSIGNED_SHORT_5_6_5           = 0x8363;$/;"	v
UNSUPPORTED_PROTOCOL	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var UNSUPPORTED_PROTOCOL = 1;$/;"	v
UP	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var UP = 0x40000052;$/;"	v
UP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var UP:Int = 38;$/;"	v
UP	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var UP = 38;$/;"	v
UPDATE	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	var UPDATE = 0;$/;"	v
UPDATE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/AccelerometerEvent.hx	/^	public static var UPDATE:String;$/;"	v
UPLOAD	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var UPLOAD = 46;$/;"	v
UPLOAD_COMPLETE_DATA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/DataEvent.hx	/^	public static var UPLOAD_COMPLETE_DATA:String = "uploadCompleteData";$/;"	v
UPLOAD_FAILED	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var UPLOAD_FAILED = 25;$/;"	v
URIParser	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URIParser.hx	/^class URIParser {$/;"	c
URI_REGEX	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URIParser.hx	/^	public static var URI_REGEX = ~\/^(?:([^:\\\/?#]+):)?(?:\\\/\\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\\/]*\\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)\/;$/;"	v
URL	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var URL = 10002;$/;"	v
URLLoader	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^class URLLoader {$/;"	c
URLLoader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^class URLLoader extends EventDispatcher {$/;"	c
URLLoader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^class URLLoader extends EventDispatcher {$/;"	c
URLLoaderDataFormatTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLLoaderDataFormatTest.hx	/^class URLLoaderDataFormatTest {$/;"	c
URLLoaderTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLLoaderTest.hx	/^class URLLoaderTest {$/;"	c
URLLoadersManager	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^private class URLLoadersManager {$/;"	c
URLRequest	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLRequest.hx	/^class URLRequest {$/;"	c
URLRequest	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequest.hx	/^class URLRequest {$/;"	c
URLRequest	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLRequest.hx	/^class URLRequest {$/;"	c
URLRequestHeader	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLRequestHeader.hx	/^class URLRequestHeader {$/;"	c
URLRequestHeader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLRequestHeader.hx	/^class URLRequestHeader {$/;"	c
URLRequestHeaderTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLRequestHeaderTest.hx	/^class URLRequestHeaderTest {$/;"	c
URLRequestMethod	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequestMethod.hx	/^class URLRequestMethod {$/;"	c
URLRequestMethodTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLRequestMethodTest.hx	/^class URLRequestMethodTest {$/;"	c
URLRequestTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLRequestTest.hx	/^class URLRequestTest {$/;"	c
URLVariables	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLVariables.hx	/^class URLVariables implements Dynamic {$/;"	c
URLVariables	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLVariables.hx	/^class URLVariables implements Dynamic {$/;"	c
URLVariablesTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLVariablesTest.hx	/^class URLVariablesTest {$/;"	c
URL_MALFORMAT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var URL_MALFORMAT = 3;$/;"	v
USER	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	var USER = 5;$/;"	v
USER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/File.hx	/^	static inline var USER = 4;$/;"	v
USER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/SystemPath.hx	/^	private static inline var USER = 4;$/;"	v
USERAGENT	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var USERAGENT = 10018;$/;"	v
USERNAME	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var USERNAME = 10173;$/;"	v
USERPWD	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var USERPWD = 10005;$/;"	v
USER_FONT_ERROR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var USER_FONT_ERROR = 27;$/;"	v
USER_FONT_IMMUTABLE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var USER_FONT_IMMUTABLE = 26;$/;"	v
USER_FONT_NOT_IMPLEMENTED	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var USER_FONT_NOT_IMPLEMENTED = 33;$/;"	v
USE_CACHE	/usr/lib/haxe/std/haxe/Serializer.hx	/^	public static var USE_CACHE = false;$/;"	v
USE_ENUM_INDEX	/usr/lib/haxe/std/haxe/Serializer.hx	/^	public static var USE_ENUM_INDEX = false;$/;"	v
USE_SSL	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var USE_SSL = 119;$/;"	v
USE_SSL_FAILED	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var USE_SSL_FAILED = 64;$/;"	v
USHRT_MAX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Settings.hx	/^	static public var USHRT_MAX:Int = 0x0000ffff;$/;"	v
UdpSocket	/usr/lib/haxe/std/sys/net/UdpSocket.hx	/^class UdpSocket extends Socket {$/;"	c
Ui	/usr/lib/haxe/std/neko/vm/Ui.hx	/^class Ui {$/;"	c
UncaughtErrorEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/UncaughtErrorEvent.hx	/^class UncaughtErrorEvent extends ErrorEvent {$/;"	c
UncaughtErrorEvents	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/UncaughtErrorEvents.hx	/^class UncaughtErrorEvents extends EventDispatcher {$/;"	c
Uncompress	/usr/lib/haxe/std/haxe/zip/Uncompress.hx	/^class Uncompress {$/;"	c
Unserializer	/usr/lib/haxe/std/haxe/Unserializer.hx	/^class Unserializer {$/;"	c
Update	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^		public function Update():Void {$/;"	f
Update	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBreakable.hx	/^		override public function Update():Void $/;"	f
Update	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBuoyancy.hx	/^		public override function Update():Void{$/;"	f
Update	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRaycast.hx	/^		public override function Update():Void{$/;"	f
Update	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^	public override function Update():Void{$/;"	f
UpdateEventInfo	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^private class UpdateEventInfo {$/;"	c
UpdateMouseWorld	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^		public function UpdateMouseWorld():Void{$/;"	f
Use ByteArray instead of Shader?	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Program3D.hx	/^		\/\/ TODO: Use ByteArray instead of Shader?$/;"	i
Use Lime pixel format code for this?	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^				\/\/ TODO: Use Lime pixel format code for this?$/;"	i
UseTexture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/DrawTrianglesShader.hx	/^	var UseTexture = "uUseTexture";$/;"	v
Utf8	/usr/lib/haxe/std/haxe/Utf8.hx	/^class Utf8 {$/;"	c
Utils	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/Utils.hx	/^class Utils {$/;"	c
Utils3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Utils3D.hx	/^class Utils3D {$/;"	c
V	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var V = 0x76;$/;"	v
V	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var V:Int = 86;$/;"	v
V	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var V = 86;$/;"	v
V1	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthVersion.hx	/^	var V1 = "1.0";$/;"	v
V2	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthVersion.hx	/^	var V2 = "2.0";$/;"	v
VAI	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var VAI = "Vaii";$/;"	v
VALIDATE_STATUS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var VALIDATE_STATUS = 0x8B83;$/;"	v
VALIDATE_STATUS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var VALIDATE_STATUS:Int;$/;"	v
VALIDATE_STATUS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var VALIDATE_STATUS = 0x8B83;$/;"	v
VALIDATE_STATUS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var VALIDATE_STATUS						= 0x8B83;$/;"	v
VALIDATE_STATUS	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var VALIDATE_STATUS                  = 0x8B83;$/;"	v
VBGR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoSubpixelOrder.hx	/^	public var VBGR = 4;$/;"	v
VELOCITY	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var VELOCITY:Int = 0x1006;$/;"	v
VELOCITY	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var VELOCITY:Int = 0x1006;$/;"	v
VENDOR	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var VENDOR:Int = 0xB001;$/;"	v
VENDOR	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var VENDOR:Int = 0xB001;$/;"	v
VENDOR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var VENDOR = 0x1F00;$/;"	v
VENDOR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var VENDOR:Int;$/;"	v
VENDOR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var VENDOR = 0x1F00;$/;"	v
VENDOR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var VENDOR								 = 0x1F00;$/;"	v
VENDOR	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var VENDOR                         = 0x1F00;$/;"	v
VERBOSE	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var VERBOSE = 41;$/;"	v
VERSION	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Settings.hx	/^    static public var VERSION:String = "2.1alpha";$/;"	v
VERSION	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public var VERSION:Int = 0xB002;$/;"	v
VERSION	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static inline var VERSION:Int = 0xB002;$/;"	v
VERSION	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var VERSION = 0x1F02;$/;"	v
VERSION	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var VERSION:Int;$/;"	v
VERSION	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var VERSION = 0x1F02;$/;"	v
VERSION	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var VERSION								= 0x1F02;$/;"	v
VERSION	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var VERSION                        = 0x1F02;$/;"	v
VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F;$/;"	v
VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:Int;$/;"	v
VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F;$/;"	v
VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F;$/;"	v
VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F;$/;"	v
VERTEX_ATTRIB_ARRAY_ENABLED	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622;$/;"	v
VERTEX_ATTRIB_ARRAY_ENABLED	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var VERTEX_ATTRIB_ARRAY_ENABLED:Int;$/;"	v
VERTEX_ATTRIB_ARRAY_ENABLED	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622;$/;"	v
VERTEX_ATTRIB_ARRAY_ENABLED	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var VERTEX_ATTRIB_ARRAY_ENABLED		  = 0x8622;$/;"	v
VERTEX_ATTRIB_ARRAY_ENABLED	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var VERTEX_ATTRIB_ARRAY_ENABLED        = 0x8622;$/;"	v
VERTEX_ATTRIB_ARRAY_NORMALIZED	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A;$/;"	v
VERTEX_ATTRIB_ARRAY_NORMALIZED	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var VERTEX_ATTRIB_ARRAY_NORMALIZED:Int;$/;"	v
VERTEX_ATTRIB_ARRAY_NORMALIZED	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A;$/;"	v
VERTEX_ATTRIB_ARRAY_NORMALIZED	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var VERTEX_ATTRIB_ARRAY_NORMALIZED	  = 0x886A;$/;"	v
VERTEX_ATTRIB_ARRAY_NORMALIZED	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var VERTEX_ATTRIB_ARRAY_NORMALIZED     = 0x886A;$/;"	v
VERTEX_ATTRIB_ARRAY_POINTER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var VERTEX_ATTRIB_ARRAY_POINTER = 0x8645;$/;"	v
VERTEX_ATTRIB_ARRAY_POINTER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var VERTEX_ATTRIB_ARRAY_POINTER:Int;$/;"	v
VERTEX_ATTRIB_ARRAY_POINTER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var VERTEX_ATTRIB_ARRAY_POINTER = 0x8645;$/;"	v
VERTEX_ATTRIB_ARRAY_POINTER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var VERTEX_ATTRIB_ARRAY_POINTER		  = 0x8645;$/;"	v
VERTEX_ATTRIB_ARRAY_POINTER	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var VERTEX_ATTRIB_ARRAY_POINTER        = 0x8645;$/;"	v
VERTEX_ATTRIB_ARRAY_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var VERTEX_ATTRIB_ARRAY_SIZE = 0x8623;$/;"	v
VERTEX_ATTRIB_ARRAY_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var VERTEX_ATTRIB_ARRAY_SIZE:Int;$/;"	v
VERTEX_ATTRIB_ARRAY_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var VERTEX_ATTRIB_ARRAY_SIZE = 0x8623;$/;"	v
VERTEX_ATTRIB_ARRAY_SIZE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var VERTEX_ATTRIB_ARRAY_SIZE			  = 0x8623;$/;"	v
VERTEX_ATTRIB_ARRAY_SIZE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var VERTEX_ATTRIB_ARRAY_SIZE           = 0x8623;$/;"	v
VERTEX_ATTRIB_ARRAY_STRIDE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624;$/;"	v
VERTEX_ATTRIB_ARRAY_STRIDE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var VERTEX_ATTRIB_ARRAY_STRIDE:Int;$/;"	v
VERTEX_ATTRIB_ARRAY_STRIDE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624;$/;"	v
VERTEX_ATTRIB_ARRAY_STRIDE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var VERTEX_ATTRIB_ARRAY_STRIDE			= 0x8624;$/;"	v
VERTEX_ATTRIB_ARRAY_STRIDE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var VERTEX_ATTRIB_ARRAY_STRIDE         = 0x8624;$/;"	v
VERTEX_ATTRIB_ARRAY_TYPE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var VERTEX_ATTRIB_ARRAY_TYPE = 0x8625;$/;"	v
VERTEX_ATTRIB_ARRAY_TYPE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var VERTEX_ATTRIB_ARRAY_TYPE:Int;$/;"	v
VERTEX_ATTRIB_ARRAY_TYPE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var VERTEX_ATTRIB_ARRAY_TYPE = 0x8625;$/;"	v
VERTEX_ATTRIB_ARRAY_TYPE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var VERTEX_ATTRIB_ARRAY_TYPE			  = 0x8625;$/;"	v
VERTEX_ATTRIB_ARRAY_TYPE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var VERTEX_ATTRIB_ARRAY_TYPE           = 0x8625;$/;"	v
VERTEX_PROGRAM_POINT_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var VERTEX_PROGRAM_POINT_SIZE = 0x8642;$/;"	v
VERTEX_PROGRAM_POINT_SIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var VERTEX_PROGRAM_POINT_SIZE = 0x8642;$/;"	v
VERTEX_PROGRAM_POINT_SIZE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var VERTEX_PROGRAM_POINT_SIZE		 = 0x8642;$/;"	v
VERTEX_PROGRAM_POINT_SIZE	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var VERTEX_PROGRAM_POINT_SIZE       = 0x8642;$/;"	v
VERTEX_SHADER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var VERTEX_SHADER = 0x8B31;$/;"	v
VERTEX_SHADER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var VERTEX_SHADER:Int;$/;"	v
VERTEX_SHADER	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var VERTEX_SHADER = 0x8B31;$/;"	v
VERTEX_SHADER	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var VERTEX_SHADER						  = 0x8B31;$/;"	v
VERTEX_SHADER	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var VERTEX_SHADER                    = 0x8B31;$/;"	v
VERTS_PER_SPRITE	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	static inline var VERTS_PER_SPRITE:Int = 4;$/;"	v
VIEWPORT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var VIEWPORT = 0x0BA2;$/;"	v
VIEWPORT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var VIEWPORT:Int;$/;"	v
VIEWPORT	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var VIEWPORT = 0x0BA2;$/;"	v
VIEWPORT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var VIEWPORT							  = 0x0BA2;$/;"	v
VIEWPORT	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var VIEWPORT                       = 0x0BA2;$/;"	v
VOLUME_DOWN	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var VOLUME_DOWN = 0x40000081;$/;"	v
VOLUME_UP	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var VOLUME_UP = 0x40000080;$/;"	v
VRGB	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoSubpixelOrder.hx	/^	public var VRGB = 3;$/;"	v
VSYNC	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	static public var VSYNC = 0x0010;$/;"	v
Vector2	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector2.hx	/^class Vector2 {$/;"	c
Vector3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^class Vector3D {$/;"	c
Vector3DTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Vector3DTest.hx	/^class Vector3DTest {$/;"	c
Vector4	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^class Vector4 {$/;"	c
VectorDataIterator	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^private class VectorDataIterator<T> {$/;"	c
VectorTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/VectorTest.hx	/^class VectorTest {$/;"	c
VertexArray	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexArray.hx	/^class VertexArray {$/;"	c
VertexAttribute	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexAttribute.hx	/^class VertexAttribute {$/;"	c
VertexBuffer3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/VertexBuffer3D.hx	/^class VertexBuffer3D {$/;"	c
Vertical align	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMTextField.hx	/^					\/\/ TODO: Vertical align$/;"	i
Video	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Video.hx	/^class Video extends DisplayObject implements Dynamic {$/;"	c
Video	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Video.hx	/^class Video extends DisplayObject {$/;"	c
W	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^		var W = new Array<Int>();$/;"	v
W	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var W = 0x77;$/;"	v
W	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var W:Int = 87;$/;"	v
W	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var W = 87;$/;"	v
WAIT	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeMouse.hx	/^	var WAIT = 10;$/;"	v
WAIT_ARROW	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeMouse.hx	/^	var WAIT_ARROW = 11;$/;"	v
WAIT_END	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^	public static inline var WAIT_END		= 11;$/;"	v
WAIT_END_RET	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^	public static inline var WAIT_END_RET	= 12;$/;"	v
WARANG_CITI	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var WARANG_CITI = "Wara";$/;"	v
WEBOS	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Platform.hx	/^	var WEBOS = "webos";$/;"	v
WELD_JOINT	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2JointType.hx	/^	var WELD_JOINT = 8;$/;"	v
WIDE_LINE_TO	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsPathCommand.hx	/^	public static inline var WIDE_LINE_TO = 5;$/;"	v
WIDE_MOVE_TO	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsPathCommand.hx	/^	public static inline var WIDE_MOVE_TO = 4;$/;"	v
WILDCARDMATCH	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var WILDCARDMATCH = 197;$/;"	v
WINDING	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFillRule.hx	/^	public var WINDING = 0;$/;"	v
WINDOWS	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Platform.hx	/^	var WINDOWS = "windows";$/;"	v
WINDOW_ACTIVATE	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	var WINDOW_ACTIVATE = 0;$/;"	v
WINDOW_CLOSE	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	var WINDOW_CLOSE = 1;$/;"	v
WINDOW_DEACTIVATE	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	var WINDOW_DEACTIVATE = 2;$/;"	v
WINDOW_ENTER	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	var WINDOW_ENTER = 3;$/;"	v
WINDOW_FLAG_ALLOW_SHADERS	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	var WINDOW_FLAG_ALLOW_SHADERS = 0x00000080;$/;"	v
WINDOW_FLAG_BORDERLESS	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	var WINDOW_FLAG_BORDERLESS = 0x00000002;$/;"	v
WINDOW_FLAG_DEPTH_BUFFER	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	var WINDOW_FLAG_DEPTH_BUFFER = 0x00000200;$/;"	v
WINDOW_FLAG_FULLSCREEN	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	var WINDOW_FLAG_FULLSCREEN = 0x00000001;$/;"	v
WINDOW_FLAG_HARDWARE	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	var WINDOW_FLAG_HARDWARE = 0x00000008;$/;"	v
WINDOW_FLAG_HW_AA	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	var WINDOW_FLAG_HW_AA = 0x00000020;$/;"	v
WINDOW_FLAG_HW_AA_HIRES	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	var WINDOW_FLAG_HW_AA_HIRES = 0x00000060;$/;"	v
WINDOW_FLAG_REQUIRE_SHADERS	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	var WINDOW_FLAG_REQUIRE_SHADERS = 0x00000100;$/;"	v
WINDOW_FLAG_RESIZABLE	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	var WINDOW_FLAG_RESIZABLE = 0x00000004;$/;"	v
WINDOW_FLAG_STENCIL_BUFFER	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	var WINDOW_FLAG_STENCIL_BUFFER = 0x00000400;$/;"	v
WINDOW_FLAG_VSYNC	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	var WINDOW_FLAG_VSYNC = 0x00000010;$/;"	v
WINDOW_FOCUS_IN	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	var WINDOW_FOCUS_IN = 4;$/;"	v
WINDOW_FOCUS_OUT	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	var WINDOW_FOCUS_OUT = 5;$/;"	v
WINDOW_LEAVE	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	var WINDOW_LEAVE = 6;$/;"	v
WINDOW_MINIMIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	var WINDOW_MINIMIZE = 7;$/;"	v
WINDOW_MOVE	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	var WINDOW_MOVE = 8;$/;"	v
WINDOW_RESIZE	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	var WINDOW_RESIZE = 9;$/;"	v
WINDOW_RESTORE	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	var WINDOW_RESTORE = 10;$/;"	v
WRITEFUNCTION	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var WRITEFUNCTION = 20011;$/;"	v
WRITEHEADER	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var WRITEHEADER = 10029;$/;"	v
WRITEINFO	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var WRITEINFO = 10040;$/;"	v
WRITE_ERROR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^	public var WRITE_ERROR = 11;$/;"	v
WRITE_ERROR	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^	var WRITE_ERROR = 23;$/;"	v
WWW	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var WWW = 0x40000108;$/;"	v
WeakMap	/usr/lib/haxe/std/haxe/ds/WeakMap.hx	/^class WeakMap<K: { },V> implements Map.IMap<K,V> {$/;"	c
WeakRef	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/WeakRef.hx	/^class WeakRef<T> {$/;"	c
Web	/usr/lib/haxe/std/neko/Web.hx	/^class Web {$/;"	c
WebAudioContext	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/WebAudioContext.hx	/^class WebAudioContext {$/;"	c
WebOSHelper	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/WebOSHelper.hx	/^class WebOSHelper {$/;"	c
WebOSPlatform	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WebOSPlatform.hx	/^class WebOSPlatform extends PlatformTarget {$/;"	c
White text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^						\/\/ TODO: White text$/;"	i
Window	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^class Window {$/;"	c
Window	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^private class Window {$/;"	c
WindowEventInfo	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^private class WindowEventInfo {$/;"	c
WindowTest	/usr/lib/haxe/lib/lime/2,4,3/tests/runtime/test/lime/WindowTest.hx	/^class WindowTest {$/;"	c
WindowsPlatform	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WindowsPlatform.hx	/^class WindowsPlatform extends PlatformTarget {$/;"	c
Writer	/usr/lib/haxe/std/haxe/zip/Writer.hx	/^class Writer {$/;"	c
X	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/GamepadButton.hx	/^	var X = 2;$/;"	v
X	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var X = 0x78;$/;"	v
X	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var X:Int = 88;$/;"	v
X	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var X = 88;$/;"	v
XFERINFODATA	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var XFERINFODATA = 10057;$/;"	v
XFERINFOFUNCTION	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var XFERINFOFUNCTION = 20219;$/;"	v
XMLSocket	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/XMLSocket.hx	/^class XMLSocket extends EventDispatcher {$/;"	c
XMLSocket	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/XMLSocket.hx	/^class XMLSocket extends EventDispatcher {$/;"	c
XOAUTH2_BEARER	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^	var XOAUTH2_BEARER = 10220;$/;"	v
XOR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoOperator.hx	/^	public var XOR = 11;$/;"	v
X_AXIS	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	public static var X_AXIS (get, null):Vector4;$/;"	v
X_AXIS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^	public static var X_AXIS (get, null):Vector3D;$/;"	v
XmlParser	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^class XmlParser {$/;"	c
Y	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/GamepadButton.hx	/^	var Y = 3;$/;"	v
Y	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var Y = 0x79;$/;"	v
Y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var Y:Int = 89;$/;"	v
Y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var Y = 89;$/;"	v
YI	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	var YI = "Yiii";$/;"	v
Y_AXIS	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	public static var Y_AXIS (get, null):Vector4;$/;"	v
Y_AXIS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^	public static var Y_AXIS (get, null):Vector3D;$/;"	v
Z	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^	var Z = 0x7A;$/;"	v
Z	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^	public static inline var Z:Int = 90;$/;"	v
Z	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static inline var Z = 90;$/;"	v
ZERO	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var ZERO = 0;$/;"	v
ZERO	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var ZERO:Int;$/;"	v
ZERO	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline var ZERO = 0;$/;"	v
ZERO	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/BlendModeManager.hx	/^	var ZERO = GL.ZERO;$/;"	v
ZERO	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline var ZERO									= 0;$/;"	v
ZERO	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DBlendFactor.hx	/^	inline public static var ZERO:Int = GL.ZERO;$/;"	v
ZERO	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DStencilAction.hx	/^	public static inline var ZERO = GL.ZERO;$/;"	v
ZERO	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static inline var ZERO                           = 0;$/;"	v
Z_AXIS	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	public static var Z_AXIS (get, null):Vector4;$/;"	v
Z_AXIS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^	public static var Z_AXIS (get, null):Vector3D;$/;"	v
ZipHelper	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ZipHelper.hx	/^class ZipHelper {$/;"	c
_	/usr/lib/haxe/std/haxe/remoting/SocketWrapper.hx	/^	static var _ = init();$/;"	v
_BORIS	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^		\/\/TODO_BORIS$/;"	i
_BORIS	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2EdgeAndCircleContact.hx	/^		\/\/TODO_BORIS$/;"	i
_BORIS	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		\/\/TODO_BORIS$/;"	i
_BORIS:	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^		\/\/TODO_BORIS:$/;"	i
_BORIS: Remove	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestStack.hx	/^	\/\/TODO_BORIS: Remove$/;"	i
_CompileShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/AbstractShader.hx	/^	public static function _CompileShader (gl:GLRenderContext, shaderSrc, shaderType) {$/;"	f
_ERIN b2Settings	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^		var k_maxIterations:Int = 1000; \/\/TODO_ERIN b2Settings$/;"	i
_ERIN block solve with limit	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^		\/\/ TODO_ERIN block solve with limit$/;"	i
_ERIN keep a counter on the contact, only respond to M TOIs per contact.	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^				\/\/ TODO_ERIN keep a counter on the contact, only respond to M TOIs per contact.$/;"	i
_ERIN not implemented	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^		\/\/ TODO_ERIN not implemented$/;"	i
_ERIN not tested	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^		\/\/ TODO_ERIN not tested$/;"	i
_ERIN remove need for this	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		\/\/ TODO_ERIN remove need for this$/;"	i
_ERIN remove need for this	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		\/\/ TODO_ERIN remove need for this$/;"	i
_ERIN use deepest?	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^					\/\/ TODO_ERIN use deepest?$/;"	i
_PointInTriangle	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public static function _PointInTriangle (px:Float, py:Float, ax:Float, ay:Float, bx:Float, by:Float, cx:Float, cy:Float) {$/;"	f
_UID	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/AbstractShader.hx	/^	public var _UID:Int;$/;"	v
__UID	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/AbstractShader.hx	/^	private static var __UID = 0;$/;"	v
___resizeBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	private function ___resizeBuffer (len:Int):Void {$/;"	f
___resizeBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	private function ___resizeBuffer (len:Int):Void {$/;"	f
__alpha16	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	private static var __alpha16:Vector<Int>;$/;"	v
__b	/usr/lib/haxe/std/haxe/Utf8.hx	/^	var __b : String;$/;"	v
__base64Chars	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	private static var __base64Chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+\/";$/;"	v
__base64Encode	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	private static function __base64Encode (bytes:ByteArray):String {$/;"	f
__base64Encoder	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	private static var __base64Encoder:BaseCode;$/;"	v
__blendMode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/IBitmapDrawable.hx	/^	private var __blendMode:BlendMode;$/;"	v
__cacheAsBitmap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/IBitmapDrawable.hx	/^	private var __cacheAsBitmap:Bool;$/;"	v
__checkCompleteBackgroundThread	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	private static function __checkCompleteBackgroundThread () {		$/;"	f
__clamp	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	private static var __clamp:Vector<Int>;$/;"	v
__cleanValues	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	private inline function __cleanValues ():Void {$/;"	f
__cleanup	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private function __cleanup ():Void {$/;"	f
__clear_trace	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^	private static function __clear_trace() {$/;"	f
__clipRect	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	private function __clipRect (r:Rectangle):Rectangle {$/;"	f
__cnx	/usr/lib/haxe/std/haxe/remoting/AsyncAdapter.hx	/^	var __cnx : Connection;$/;"	v
__cnx	/usr/lib/haxe/std/haxe/remoting/AsyncDebugConnection.hx	/^	var __cnx : AsyncConnection;$/;"	v
__cnx	/usr/lib/haxe/std/haxe/remoting/AsyncProxy.hx	/^	var __cnx : AsyncConnection;$/;"	v
__cnx	/usr/lib/haxe/std/haxe/remoting/Proxy.hx	/^	var __cnx : Connection;$/;"	v
__compare	/usr/lib/haxe/std/neko/vm/Loader.hx	/^	function __compare( other : Loader ) {$/;"	f
__compare	/usr/lib/haxe/std/neko/vm/Module.hx	/^	function __compare( other : Module ) {$/;"	f
__compare	/usr/lib/haxe/std/neko/vm/Thread.hx	/^	function __compare(t) {$/;"	f
__contract	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	public function __contract (x:Float, y:Float, width:Float, height:Float):Void {$/;"	f
__curl	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^	private var __curl:CURL;$/;"	v
__curl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^	private var __curl:CURL;$/;"	v
__currentPath	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	private static var __currentPath:DrawPath;$/;"	v
__currentWinding	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	private static var __currentWinding:WindingRule = WindingRule.EVEN_ODD;$/;"	v
__cursor	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashMouse.hx	/^	private static var __cursor:MouseCursor;$/;"	v
__cursor	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Mouse.hx	/^	private static var __cursor:MouseCursor;$/;"	v
__cursor	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeMouse.hx	/^	private static var __cursor:MouseCursor;$/;"	v
__data	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^	private var __data:String;$/;"	v
__data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^	private var __data:String;$/;"	v
__data	/usr/lib/haxe/std/haxe/remoting/AMFConnection.hx	/^	var __data : {$/;"	v
__data	/usr/lib/haxe/std/haxe/remoting/AsyncDebugConnection.hx	/^	var __data : {$/;"	v
__data	/usr/lib/haxe/std/haxe/remoting/DelayedConnection.hx	/^	var __data : {$/;"	v
__data	/usr/lib/haxe/std/haxe/remoting/ExternalConnection.hx	/^	var __data : { name : String, ctx : Context, #if js flash : String #end };$/;"	v
__data	/usr/lib/haxe/std/haxe/remoting/FlashJsConnection.hx	/^	var __data : {$/;"	v
__data	/usr/lib/haxe/std/haxe/remoting/HttpAsyncConnection.hx	/^	var __data : { url : String, error : Dynamic -> Void };$/;"	v
__data	/usr/lib/haxe/std/haxe/remoting/LocalConnection.hx	/^	var __data : {$/;"	v
__data	/usr/lib/haxe/std/haxe/remoting/SocketConnection.hx	/^	var __data : {$/;"	v
__devices	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInput.hx	/^	private static var __devices = new Map<Gamepad, GameInputDevice> ();$/;"	v
__dirty	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextLayout.hx	/^	private var __dirty:Bool;$/;"	v
__dismissSoftKeyboard	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/InteractiveObject.hx	/^	public function __dismissSoftKeyboard ():Bool {$/;"	f
__div	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	private var __div:DivElement;$/;"	v
__drawPaths	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	private static var __drawPaths:Array<DrawPath>;$/;"	v
__embedFonts	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private var __embedFonts:Bool;$/;"	v
__enabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	private var __enabled = true;$/;"	v
__enabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	private var __enabled = true;$/;"	v
__enum_str	/usr/lib/haxe/std/neko/Boot.hx	/^	private static function __enum_str(e : Dynamic) {$/;"	f
__error	/usr/lib/haxe/std/haxe/remoting/AsyncAdapter.hx	/^	var __error : { ref : Dynamic -> Void };$/;"	v
__expand	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	public function __expand (x:Float, y:Float, width:Float, height:Float):Void {$/;"	f
__f	/usr/lib/haxe/std/haxe/xml/Proxy.hx	/^	var __f : String -> T;$/;"	v
__fill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	private static var __fill:FillType;$/;"	v
__fillIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	private static var __fillIndex:Int = 0;$/;"	v
__format	/usr/lib/haxe/std/DateTools.hx	/^	private static function __format( d : Date, f : String ) : String {$/;"	f
__format_get	/usr/lib/haxe/std/DateTools.hx	/^	private static function __format_get( d : Date, e : String ) : String {$/;"	f
__fromBase64	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	private function __fromBase64 (base64:String, type:String, onload:Image -> Void = null):Void {$/;"	f
__fromBytes	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	private function __fromBytes (bytes:ByteArray, onload:Image -> Void):Void {$/;"	f
__fromBytes	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	private inline function __fromBytes (bytes:Bytes):Void {$/;"	f
__fromBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	private inline function __fromBytes (inBytes:Bytes):Void {$/;"	f
__fromFile	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	private function __fromFile (path:String, onload:Image -> Void, onerror:Void -> Void):Void {$/;"	f
__fromImageBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	private function __fromImageBuffer (buffer:ImageBuffer):Void {$/;"	f
__fromLimeFont	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	public static function __fromLimeFont (value:LimeFont):Font {$/;"	f
__get	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^   	public function __get (pos:Int):Int {$/;"	f
__get	/usr/lib/haxe/std/sys/db/Manager.hx	/^	function __get( x : Dynamic, prop : String, key : String, lock ) {$/;"	f
__getBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public inline function __getBuffer () {$/;"	f
__getBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public inline function __getBuffer () {$/;"	f
__getNativePointer	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function __getNativePointer ():Dynamic {$/;"	f
__getType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Sprite.hx	/^	private function __getType ():String {$/;"	f
__getUTFBytesCount	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	private function __getUTFBytesCount (value:String):Int {$/;"	f
__getUniformLocationNameFromAgalRegisterIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	private function __getUniformLocationNameFromAgalRegisterIndex (programType:Context3DProgramType, firstRegister:Int):String {$/;"	f
__graphicsDataType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsGradientFill.hx	/^	public var __graphicsDataType (default,null):GraphicsDataType;$/;"	v
__graphicsDataType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/IGraphicsData.hx	/^	var __graphicsDataType (default, null):GraphicsDataType;$/;"	v
__graphicsFillType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsGradientFill.hx	/^	public var __graphicsFillType (default, null):GraphicsFillType;$/;"	v
__graphicsFillType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/IGraphicsFill.hx	/^	var __graphicsFillType (default, null):GraphicsFillType;$/;"	v
__hidden	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashMouse.hx	/^	private static var __hidden:Bool;$/;"	v
__hidden	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Mouse.hx	/^	private static var __hidden:Bool;$/;"	v
__hidden	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeMouse.hx	/^	private static var __hidden:Bool;$/;"	v
__hiddenInput	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	private var __hiddenInput:InputElement;$/;"	v
__identity	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	private static var __identity = [ 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0 ];$/;"	v
__identity	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	private static var __identity = new Matrix3 ();$/;"	v
__identity	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	private static var __identity = [ 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0 ];$/;"	v
__init	/usr/lib/haxe/std/neko/Boot.hx	/^	private static function __init() {$/;"	f
__init__	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	private static function __init__ ():Void {$/;"	f
__init__	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	private static function __init__ () {$/;"	f
__init__	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	public static function __init__ ():Void {$/;"	f
__init__	/usr/lib/haxe/lib/lime/2,4,3/tools/SVGExport.hx	/^	public static function __init__ () {$/;"	f
__init__	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3D.hx	/^	public static function __init__ () {$/;"	f
__init__	/usr/lib/haxe/std/Date.hx	/^	private static function __init__() : Void untyped {$/;"	f
__init__	/usr/lib/haxe/std/Math.hx	/^	private static function __init__() : Void untyped {$/;"	f
__init__	/usr/lib/haxe/std/haxe/Resource.hx	/^	static function __init__() {$/;"	f
__init__	/usr/lib/haxe/std/haxe/io/Input.hx	/^	static function __init__() untyped {$/;"	f
__init__	/usr/lib/haxe/std/haxe/io/Output.hx	/^	static function __init__() untyped {$/;"	f
__init__	/usr/lib/haxe/std/neko/Web.hx	/^	static function __init__() {$/;"	f
__instanceof	/usr/lib/haxe/std/neko/Boot.hx	/^	private static function __instanceof(o,cl) {$/;"	f
__instances	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInput.hx	/^	private static var __instances = [];$/;"	v
__interfLoop	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^	private static function __interfLoop(cc : Dynamic,cl : Dynamic) {$/;"	f
__interfLoop	/usr/lib/haxe/std/neko/Boot.hx	/^	private static function __interfLoop(cc : Dynamic,cl : Dynamic) {$/;"	f
__isGIF	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	private static function __isGIF (bytes:ByteArray) {$/;"	f
__isJPG	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	private static function __isJPG (bytes:ByteArray) {$/;"	f
__isNativeObj	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^	static function __isNativeObj(o:Dynamic):Bool {$/;"	f
__isPNG	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	private static function __isPNG (bytes:ByteArray) {$/;"	f
__length	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^	private var __length:Null<Int>;$/;"	v
__line	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	private static var __line:LineStyle;$/;"	v
__loadedNekoAPI	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	private static var __loadedNekoAPI:Bool;$/;"	v
__lock	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeMouse.hx	/^	private static var __lock:Bool;$/;"	v
__nativeClassName	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^	static function __nativeClassName(o:Dynamic):String {$/;"	f
__nodeNDLLModule	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	private static var __nodeNDLLModule:Dynamic;$/;"	v
__ofBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public static function __ofBuffer (buffer:ArrayBuffer):ByteArray {$/;"	f
__ofBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public static function __ofBuffer (buffer:ArrayBuffer):ByteArray {$/;"	f
__onData	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^	private function __onData (_):Void {$/;"	f
__onGamepadAxisMove	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInput.hx	/^	private static function __onGamepadAxisMove (gamepad:Gamepad, axis:GamepadAxis, value:Float):Void {$/;"	f
__onGamepadButtonDown	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInput.hx	/^	private static function __onGamepadButtonDown (gamepad:Gamepad, button:GamepadButton):Void {$/;"	f
__onGamepadButtonUp	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInput.hx	/^	private static function __onGamepadButtonUp (gamepad:Gamepad, button:GamepadButton):Void {$/;"	f
__onGamepadConnect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInput.hx	/^	private static function __onGamepadConnect (gamepad:Gamepad):Void {$/;"	f
__onGamepadDisconnect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInput.hx	/^	private static function __onGamepadDisconnect (gamepad:Gamepad):Void {$/;"	f
__onProgress	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^	private function __onProgress (event:XMLHttpRequestProgressEvent):Void {$/;"	f
__path	/usr/lib/haxe/std/haxe/remoting/AMFConnection.hx	/^	var __path : Array<String>;$/;"	v
__path	/usr/lib/haxe/std/haxe/remoting/AsyncDebugConnection.hx	/^	var __path : Array<String>;$/;"	v
__path	/usr/lib/haxe/std/haxe/remoting/DelayedConnection.hx	/^	var __path : Array<String>;$/;"	v
__path	/usr/lib/haxe/std/haxe/remoting/ExternalConnection.hx	/^	var __path : Array<String>;$/;"	v
__path	/usr/lib/haxe/std/haxe/remoting/FlashJsConnection.hx	/^	var __path : Array<String>;$/;"	v
__path	/usr/lib/haxe/std/haxe/remoting/HttpAsyncConnection.hx	/^	var __path : Array<String>;$/;"	v
__path	/usr/lib/haxe/std/haxe/remoting/HttpConnection.hx	/^	var __path : Array<String>;$/;"	v
__path	/usr/lib/haxe/std/haxe/remoting/LocalConnection.hx	/^	var __path : Array<String>;$/;"	v
__path	/usr/lib/haxe/std/haxe/remoting/SocketConnection.hx	/^	var __path : Array<String>;$/;"	v
__path	/usr/lib/haxe/std/haxe/remoting/SyncSocketConnection.hx	/^	var __path : Array<String>;$/;"	v
__proto	/usr/lib/haxe/std/haxe/remoting/SyncSocketConnection.hx	/^	var __proto : SocketProtocol;$/;"	v
__renderCairo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/IBitmapDrawable.hx	/^	function __renderCairo (renderSession:RenderSession):Void;$/;"	f
__renderCairoMask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/IBitmapDrawable.hx	/^	function __renderCairoMask (renderSession:RenderSession):Void;$/;"	f
__renderCanvas	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/IBitmapDrawable.hx	/^	function __renderCanvas (renderSession:RenderSession):Void;$/;"	f
__renderCanvasMask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/IBitmapDrawable.hx	/^	function __renderCanvasMask (renderSession:RenderSession):Void;$/;"	f
__renderGL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/IBitmapDrawable.hx	/^	function __renderGL (renderSession:RenderSession):Void;$/;"	f
__resolveNativeClass	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^	static function __resolveNativeClass(name:String) untyped {$/;"	f
__rootURL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/LoaderInfo.hx	/^	private static var __rootURL = #if (js && html5) Browser.document.URL #else "" #end;$/;"	v
__serialize	/usr/lib/haxe/std/neko/Boot.hx	/^	private static function __serialize(o) {$/;"	f
__serialize	/usr/lib/haxe/std/neko/Lib.hx	/^	static var __serialize = load("std","serialize",1);$/;"	v
__set	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public function __set (pos:Int, v:Int):Void {$/;"	f
__set	/usr/lib/haxe/std/sys/db/Manager.hx	/^	function __set( x : Dynamic, prop : String, key : String, v : T ) {$/;"	f
__setLength	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Float32Array.hx	/^	public inline function __setLength( nbFloat : Int) {$/;"	f
__soundTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/SimpleButton.hx	/^	private var __soundTransform:SoundTransform;$/;"	v
__stack	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^		var __stack = [];$/;"	v
__stage	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	private var __stage:Dynamic;$/;"	v
__stageHeight	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^	public var __stageHeight (get, null):Int;$/;"	v
__stageWidth	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^	public var __stageWidth (get, null):Int;$/;"	v
__string_rec	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^	private static function __string_rec(o,s:String) {$/;"	f
__tagserialize	/usr/lib/haxe/std/neko/Boot.hx	/^	private static function __tagserialize(o) untyped {$/;"	f
__tmp_str	/usr/lib/haxe/std/neko/Boot.hx	/^	private static function __tmp_str() {$/;"	f
__toFlashColorTransform	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	private function __toFlashColorTransform ():#if flash ColorTransform #else Dynamic #end {$/;"	f
__toFlashPoint	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector2.hx	/^	private function __toFlashPoint ():#if flash Point #else Dynamic #end {$/;"	f
__toFlashRectangle	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	private function __toFlashRectangle ():#if flash FlashRectangle #else Dynamic #end {$/;"	f
__toStr	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^	static var __toStr = untyped __js__("{}.toString");$/;"	v
__trace	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^	private static function __trace(v,i : haxe.PosInfos) {$/;"	f
__transformX	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public inline function __transformX (pos:Vector2):Float {$/;"	f
__transformY	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public inline function __transformY (pos:Vector2):Float {$/;"	f
__translateTransformed	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public inline function __translateTransformed (pos:Vector2):Void {$/;"	f
__unhtml	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^	private static function __unhtml(s : String) {$/;"	f
__unserialize	/usr/lib/haxe/std/neko/Boot.hx	/^	private static function __unserialize(v) {$/;"	f
__unserialize	/usr/lib/haxe/std/neko/Lib.hx	/^	static var __unserialize = load("std","unserialize",2);$/;"	v
__updateBlendStatus	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	private function __updateBlendStatus ():Void {$/;"	f
__updateChildren	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/IBitmapDrawable.hx	/^	function __updateChildren (transformOnly:Bool):Void;$/;"	f
__updateMask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/IBitmapDrawable.hx	/^	function __updateMask (maskGraphics:Graphics):Void;$/;"	f
__url	/usr/lib/haxe/std/haxe/remoting/HttpConnection.hx	/^	var __url : String;$/;"	v
__utf8_endline_code	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^	private static var __utf8_endline_code:Int = 10;$/;"	v
__utf8_endline_code	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^	private static var __utf8_endline_code:Int = 10;$/;"	v
__worldColorTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/IBitmapDrawable.hx	/^	var __worldColorTransform:ColorTransform;$/;"	v
__worldTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/IBitmapDrawable.hx	/^	var __worldTransform:Matrix;$/;"	v
__x	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^	var __x : Xml;$/;"	v
_agal2glsllut	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Mapping.hx	/^	private static var _agal2glsllut:Array<OpLUT>;$/;"	v
_b	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Color.hx	/^	private var _b:Int;$/;"	v
_base_decode	/usr/lib/haxe/std/neko/Web.hx	/^	static var _base_decode = Lib.load("std","base_decode",2);$/;"	v
_bitmapHeight	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Tilesheet.hx	/^	private var _bitmapHeight:Int;$/;"	v
_bitmapWidth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Tilesheet.hx	/^	private var _bitmapWidth:Int;$/;"	v
_bmp	Source/Crate.hx	/^        var _bmp = new Bitmap(Env.crateBitmapData);$/;"	v
_bmp	Source/Ground.hx	/^        var _bmp = new Sprite();$/;"	v
_buf	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^	private var _buf : haxe.io.Bytes;$/;"	v
_cgi_redirect	/usr/lib/haxe/std/neko/Web.hx	/^	static var _cgi_redirect : Dynamic;$/;"	v
_cgi_set_header	/usr/lib/haxe/std/neko/Web.hx	/^	static var _cgi_set_header : Dynamic;$/;"	v
_charAt	/usr/lib/haxe/std/StringTools.hx	/^	private static inline function _charAt(str:String, idx:Int):java.StdTypes.Char16 return untyped str._charAt(idx);$/;"	f
_command	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public static var _command:String;$/;"	v
_connected	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^    private var _connected: Bool;$/;"	v
_convex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public static function _convex (ax:Float, ay:Float, bx:Float, by:Float, cx:Float, cy:Float, sign:Bool) {$/;"	f
_debug	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public static var _debug:Bool;$/;"	v
_double_bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Memory.hx	/^	private static var _double_bytes = Lib.load ("std", "double_bytes", 2);$/;"	v
_double_bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	private static var _double_bytes = Lib.load ("std", "double_bytes", 2);$/;"	v
_double_bytes	/usr/lib/haxe/std/haxe/io/Output.hx	/^	static var _double_bytes = cpp.Lib.load("std","double_bytes",2);$/;"	v
_double_bytes	/usr/lib/haxe/std/haxe/io/Output.hx	/^	static var _double_bytes = neko.Lib.load("std","double_bytes",2);$/;"	v
_double_of_bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Memory.hx	/^	private static var _double_of_bytes = Lib.load ("std", "double_of_bytes", 2);$/;"	v
_double_of_bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	private static var _double_of_bytes = Lib.load ("std", "double_of_bytes", 2);$/;"	v
_double_of_bytes	/usr/lib/haxe/std/haxe/io/Input.hx	/^	static var _double_of_bytes = cpp.Lib.load("std","double_of_bytes",2);$/;"	v
_double_of_bytes	/usr/lib/haxe/std/haxe/io/Input.hx	/^	static var _double_of_bytes = neko.Lib.load("std","double_of_bytes",2);$/;"	v
_flip	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/Features.hx	/^	public var _flip:Int = 0;$/;"	v
_float_bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Memory.hx	/^	private static var _float_bytes = Lib.load ("std", "float_bytes", 2);$/;"	v
_float_bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	private static var _float_bytes = Lib.load ("std", "float_bytes", 2);$/;"	v
_float_bytes	/usr/lib/haxe/std/haxe/io/Output.hx	/^	static var _float_bytes = cpp.Lib.load("std","float_bytes",2);$/;"	v
_float_bytes	/usr/lib/haxe/std/haxe/io/Output.hx	/^	static var _float_bytes = neko.Lib.load("std","float_bytes",2);$/;"	v
_float_of_bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Memory.hx	/^	private static var _float_of_bytes = Lib.load ("std", "float_of_bytes", 2);$/;"	v
_float_of_bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	private static var _float_of_bytes = Lib.load ("std", "float_of_bytes", 2);$/;"	v
_float_of_bytes	/usr/lib/haxe/std/haxe/io/Input.hx	/^	static var _float_of_bytes = cpp.Lib.load("std","float_of_bytes",2);$/;"	v
_float_of_bytes	/usr/lib/haxe/std/haxe/io/Input.hx	/^	static var _float_of_bytes = neko.Lib.load("std","float_of_bytes",2);$/;"	v
_flush	/usr/lib/haxe/std/neko/Web.hx	/^	static var _flush : Dynamic;$/;"	v
_g	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Color.hx	/^	private var _g:Int;$/;"	v
_getUTFBytesCount	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	private function _getUTFBytesCount (value:String):Int {$/;"	f
_get_client_header	/usr/lib/haxe/std/neko/Web.hx	/^	static var _get_client_header : Dynamic;$/;"	v
_get_client_headers	/usr/lib/haxe/std/neko/Web.hx	/^	static var _get_client_headers : Dynamic;$/;"	v
_get_client_ip	/usr/lib/haxe/std/neko/Web.hx	/^	static var _get_client_ip : Dynamic;$/;"	v
_get_cookies	/usr/lib/haxe/std/neko/Web.hx	/^	static var _get_cookies : Dynamic;$/;"	v
_get_cwd	/usr/lib/haxe/std/neko/Web.hx	/^	static var _get_cwd : Dynamic;$/;"	v
_get_host_name	/usr/lib/haxe/std/neko/Web.hx	/^	static var _get_host_name : Dynamic;$/;"	v
_get_http_method	/usr/lib/haxe/std/neko/Web.hx	/^	static var _get_http_method : Dynamic;$/;"	v
_get_params	/usr/lib/haxe/std/neko/Web.hx	/^	static var _get_params : Dynamic;$/;"	v
_get_params_string	/usr/lib/haxe/std/neko/Web.hx	/^	static var _get_params_string : Dynamic;$/;"	v
_get_post_data	/usr/lib/haxe/std/neko/Web.hx	/^	static var _get_post_data : Dynamic;$/;"	v
_get_uri	/usr/lib/haxe/std/neko/Web.hx	/^	static var _get_uri : Dynamic;$/;"	v
_glContextId	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	public var _glContextId:Int;$/;"	v
_height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	var _height:Float;$/;"	v
_height	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^	var _height : Int;$/;"	v
_host	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^    private var _host: String;$/;"	v
_hostArchitecture	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PlatformHelper.hx	/^	private static var _hostArchitecture:Architecture;$/;"	v
_hostPlatform	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PlatformHelper.hx	/^	private static var _hostPlatform:Platform;$/;"	v
_incidentEdge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/Features.hx	/^	public var _incidentEdge:Int = 0;$/;"	v
_incidentVertex	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/Features.hx	/^	public var _incidentVertex:Int = 0;$/;"	v
_input	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^	private var _input : ByteArray;$/;"	v
_inputBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^	private var _inputBuffer : ByteArray;$/;"	v
_interval	/usr/lib/haxe/lib/openfl/3,0,8/openfl/sensors/Accelerometer.hx	/^	private var _interval:Int;$/;"	v
_is_main_thread	/usr/lib/haxe/std/neko/vm/Ui.hx	/^	static var _is_main_thread = neko.Lib.load("ui","ui_is_main",0);$/;"	v
_key	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ContactID.hx	/^	public var _key:Int = 0;$/;"	v
_lime	/usr/lib/haxe/lib/lime/2,4,3/legacy/templates/haxe/ApplicationMain.hx	/^    public static var _lime : Lime;$/;"	v
_lime	/usr/lib/haxe/lib/lime/2,4,3/legacy/templates/html5/haxe/ApplicationMain.hx	/^            var _lime = new Lime();$/;"	v
_lock	/usr/lib/haxe/std/sys/db/Object.hx	/^	var _lock(default,never) : Bool;$/;"	v
_log_message	/usr/lib/haxe/std/neko/Web.hx	/^	static var _log_message : Dynamic;$/;"	v
_loop	/usr/lib/haxe/std/neko/vm/Ui.hx	/^	static var _loop = neko.Lib.load("ui","ui_loop",0);$/;"	v
_m_id	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/Features.hx	/^	public var _m_id:B2ContactID;$/;"	v
_main_	/usr/lib/haxe/lib/lime/2,4,3/legacy/templates/haxe/ApplicationMain.hx	/^    public static var _main_ : ::APP_MAIN::;$/;"	v
_main_	/usr/lib/haxe/lib/lime/2,4,3/legacy/templates/html5/haxe/ApplicationMain.hx	/^            var _main_ = Type.createInstance (::APP_MAIN::, []);$/;"	v
_manager	/usr/lib/haxe/std/sys/db/Object.hx	/^	var _manager(default,never) : sys.db.Manager<Dynamic>;$/;"	v
_map	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/OpcodeMap.hx	/^	private static var _map:Map<String, Opcode>;$/;"	v
_map	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/RegMap.hx	/^	private static var _map:StringMap<Reg>;$/;"	v
_map	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/SamplerMap.hx	/^	private static var _map:StringMap<Sampler>;$/;"	v
_module_code_size	/usr/lib/haxe/std/neko/vm/Module.hx	/^	static var _module_code_size = neko.Lib.load("std","module_code_size",1);$/;"	v
_module_exec	/usr/lib/haxe/std/neko/vm/Module.hx	/^	static var _module_exec = neko.Lib.load("std","module_exec",1);$/;"	v
_module_exports	/usr/lib/haxe/std/neko/vm/Module.hx	/^	static var _module_exports = neko.Lib.load("std","module_exports",1);$/;"	v
_module_global_get	/usr/lib/haxe/std/neko/vm/Module.hx	/^	static var _module_global_get = neko.Lib.load("std","module_global_get",2);$/;"	v
_module_global_set	/usr/lib/haxe/std/neko/vm/Module.hx	/^	static var _module_global_set = neko.Lib.load("std","module_global_set",3);$/;"	v
_module_loader	/usr/lib/haxe/std/neko/vm/Module.hx	/^	static var _module_loader = neko.Lib.load("std","module_loader",1);$/;"	v
_module_name	/usr/lib/haxe/std/neko/vm/Module.hx	/^	static var _module_name = neko.Lib.load("std","module_name",1);$/;"	v
_module_nglobals	/usr/lib/haxe/std/neko/vm/Module.hx	/^	static var _module_nglobals = neko.Lib.load("std","module_nglobals",1);$/;"	v
_module_read	/usr/lib/haxe/std/neko/vm/Module.hx	/^	static var _module_read = neko.Lib.load("std","module_read",2);$/;"	v
_module_read_path	/usr/lib/haxe/std/neko/vm/Module.hx	/^	static var _module_read_path = neko.Lib.load("std","module_read_path",3);$/;"	v
_module_read_string	/usr/lib/haxe/std/neko/vm/Module.hx	/^	static var _module_read_string = neko.Lib.loadLazy("std","module_read_string",2);$/;"	v
_module_set_name	/usr/lib/haxe/std/neko/vm/Module.hx	/^	static var _module_set_name = neko.Lib.loadLazy("std","module_set_name",2);$/;"	v
_mp	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/PerspectiveProjection.hx	/^		var _mp = matrix3D.rawData;$/;"	v
_output	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^	private var _output : ByteArray;$/;"	v
_parse_multipart	/usr/lib/haxe/std/neko/Web.hx	/^	static var _parse_multipart : Dynamic;$/;"	v
_port	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^    private var _port: Int;$/;"	v
_processorCores	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ProcessHelper.hx	/^	private static var _processorCores:Int = 0;$/;"	v
_r	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Color.hx	/^	private var _r:Int;$/;"	v
_referenceEdge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/Features.hx	/^	public var _referenceEdge:Int = 0;$/;"	v
_run	/usr/lib/haxe/std/neko/vm/Gc.hx	/^	static var _run = neko.Lib.load("std","run_gc",1);$/;"	v
_runCommand	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ProcessHelper.hx	/^	private static function _runCommand (path:String, command:String, args:Array<String>):Int {$/;"	f
_runProcess	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ProcessHelper.hx	/^	private static function _runProcess (path:String, command:String, args:Array<String>, waitForOutput:Bool, ignoreErrors:Bool):String {$/;"	f
_set_cookie	/usr/lib/haxe/std/neko/Web.hx	/^	static var _set_cookie : Dynamic;$/;"	v
_set_main	/usr/lib/haxe/std/neko/Web.hx	/^	static var _set_main : Dynamic;$/;"	v
_set_return_code	/usr/lib/haxe/std/neko/Web.hx	/^	static var _set_return_code : Dynamic;$/;"	v
_socket	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/XMLSocket.hx	/^	private var _socket:Socket;$/;"	v
_socket	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^    private var _socket: #if sys sys.net.Socket #else Dynamic #end;$/;"	v
_socket	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/XMLSocket.hx	/^	private var _socket:Dynamic;$/;"	v
_stamp	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^	private var _stamp : Float;$/;"	v
_stats	/usr/lib/haxe/std/neko/vm/Gc.hx	/^	static var _stats = neko.Lib.load("std","gc_stats",0);$/;"	v
_stop_loop	/usr/lib/haxe/std/neko/vm/Ui.hx	/^	static var _stop_loop = neko.Lib.load("ui","ui_stop_loop",0);$/;"	v
_sw0_	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGALTokenizer.hx	/^		var _sw0_ = (header.progid);$/;"	v
_sync	/usr/lib/haxe/std/neko/vm/Ui.hx	/^	static var _sync = neko.Lib.load("ui","ui_sync",1);$/;"	v
_target	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public static var _target:Platform;$/;"	v
_targetFlags	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public static var _targetFlags:Map <String, String>;$/;"	v
_templatePaths	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public static var _templatePaths:Array <String>;$/;"	v
_textures	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/CubeTexture.hx	/^	public var _textures:Array<GLTexture>;$/;"	v
_tilePoints	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Tilesheet.hx	/^	private var _tilePoints:Array<Point>;$/;"	v
_tileUVs	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Tilesheet.hx	/^	private var _tileUVs:Array<Rectangle>;$/;"	v
_tiles	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Tilesheet.hx	/^	private var _tiles:Array<Rectangle>;$/;"	v
_urlDecode	/usr/lib/haxe/std/StringTools.hx	/^	private static var _urlDecode = neko.Lib.load("std","url_decode",1);$/;"	v
_urlEncode	/usr/lib/haxe/std/StringTools.hx	/^	private static var _urlEncode = neko.Lib.load("std","url_encode",1);$/;"	v
_width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	var _width:Float;$/;"	v
_yFlip	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	private var _yFlip:Float;$/;"	v
a	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^			var a:Float = dA.x * dA.x + dA.y * dA.y;$/;"	v
a	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SimplexVertex.hx	/^	public var a:Float = 0;		\/\/ barycentric coordinate for closest point$/;"	v
a	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^		var a:Float = -(c + Math.sqrt(sigma));$/;"	v
a	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^			var a: Float = (bX * nX + bY * nY);$/;"	v
a	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat22.hx	/^		var a:Float = col1.x; $/;"	v
a	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^		var a:B2Vec2 = mulMV(T.R, v);$/;"	v
a	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^		var a:B2Vec2 = subtractVV(v, T.position);$/;"	v
a	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Sweep.hx	/^	public var a:Float;$/;"	v
a	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var a:B2Vec2 = m_ground.m_xf.position.copy();$/;"	v
a	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^				var a = getStack(e);$/;"	v
a	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^			var a : Array<String> = untyped __var__("GLOBALS", s);$/;"	v
a	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^			var a = makeStack( err.getStackTrace() );$/;"	v
a	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^			var a = makeStack( new flash.errors.Error().getStackTrace() );$/;"	v
a	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^			var a = makeStack(untyped __dollar__callstack());$/;"	v
a	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^			var a = new Array();$/;"	v
a	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^		var a = makeStack(e.stack);$/;"	v
a	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^		var a:Int,b:Int,c:Int,d:Int,e:Int,f:Int,g:Int,h:Int;$/;"	v
a	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^						var a = data[i * 4 + 3];$/;"	v
a	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/format/BMP.hx	/^		var a, r, g, b;$/;"	v
a	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var a = image.transparent ? color & 0xFF : 0xFF;$/;"	v
a	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^		var a = (image.transparent ? data[offset + 3] : 0xFF);$/;"	v
a	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^		var a, r, g, b;$/;"	v
a	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public var a:Float;$/;"	v
a	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ImageHelper.hx	/^			var a:Int = (( backgroundColor >> 24) & 0xFF);$/;"	v
a	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/OpLUT.hx	/^	public var a:Bool;$/;"	v
a	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Token.hx	/^	public var a:Destination;$/;"	v
a	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Opcode.hx	/^	public var a:FS;$/;"	v
a	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var a:Int, b:Int, c:Int;$/;"	v
a	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var a:Int, b:Int, c:Int;$/;"	v
a	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var a, b, c, d, tx, ty;$/;"	v
a	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var a = 0.0, b = 0.0, c = 0.0, d = 0.0, tx = 0.0, ty = 0.0;$/;"	v
a	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var a = matrix.a;$/;"	v
a	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^	public var a:Float;$/;"	v
a	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^	public var a:Float;$/;"	v
a	/usr/lib/haxe/std/Lambda.hx	/^		var a = new Array<A>();$/;"	v
a	/usr/lib/haxe/std/haxe/CallStack.hx	/^			var a : Array<String> = untyped __eval__(s);$/;"	v
a	/usr/lib/haxe/std/haxe/CallStack.hx	/^			var a : Array<String> = untyped __var__("GLOBALS", s);$/;"	v
a	/usr/lib/haxe/std/haxe/CallStack.hx	/^			var a = makeStack( err.getStackTrace() );$/;"	v
a	/usr/lib/haxe/std/haxe/CallStack.hx	/^			var a = makeStack( new flash.errors.Error().getStackTrace() );$/;"	v
a	/usr/lib/haxe/std/haxe/CallStack.hx	/^			var a = makeStack(untyped __dollar__callstack());$/;"	v
a	/usr/lib/haxe/std/haxe/CallStack.hx	/^			var a = makeStack(untyped __new__("Error").stack);$/;"	v
a	/usr/lib/haxe/std/haxe/CallStack.hx	/^			var a = new Array();$/;"	v
a	/usr/lib/haxe/std/haxe/Http.hx	/^			var a = hline.split(": ");$/;"	v
a	/usr/lib/haxe/std/haxe/Unserializer.hx	/^ 			var a = new Array<Dynamic>();$/;"	v
a	/usr/lib/haxe/std/haxe/crypto/Adler32.hx	/^		var a = new Adler32();$/;"	v
a	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^		var a =  1732584193;$/;"	v
a	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^		var a = 0x67452301;$/;"	v
a	/usr/lib/haxe/std/haxe/ds/GenericStack.hx	/^		var a = new Array();$/;"	v
a	/usr/lib/haxe/std/haxe/ds/Vector.hx	/^			var a = new Array();$/;"	v
a	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^		var a = new Array();$/;"	v
a	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^		var a = new BytesData();$/;"	v
a	/usr/lib/haxe/std/haxe/io/Input.hx	/^			var a = untyped __call__('unpack', 'd', readString(8));$/;"	v
a	/usr/lib/haxe/std/haxe/io/Input.hx	/^			var a = untyped __call__('unpack', 'f', readString(4));$/;"	v
a	/usr/lib/haxe/std/haxe/macro/Context.hx	/^		var a = new Array();$/;"	v
a	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^				var a = eargs.next();$/;"	v
a	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		var a = Lambda.array(fl);$/;"	v
a	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^		var a = new Array();$/;"	v
a	/usr/lib/haxe/std/neko/Lib.hx	/^				var a = untyped __dollar__amake(v.length);$/;"	v
a	/usr/lib/haxe/std/neko/Lib.hx	/^			var a = Array.new1(v,__dollar__asize(v));$/;"	v
a	/usr/lib/haxe/std/neko/Web.hx	/^			var a = val.split(":");$/;"	v
a	/usr/lib/haxe/std/neko/Web.hx	/^		var a = new List();$/;"	v
a	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^			var a = new Array();$/;"	v
a	/usr/lib/haxe/std/neko/vm/Module.hx	/^		var a = new Array();$/;"	v
a0	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Sweep.hx	/^	public var a0:Float;$/;"	v
a0	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^		var a0 = a.clone ();$/;"	v
a0	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^		var a0 = a.clone ();$/;"	v
a0	/usr/lib/haxe/std/neko/Web.hx	/^			var a0 = untyped __dollar__loader.args[0];$/;"	v
a00	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^			var a00 = __rotationCosine * scaleX;$/;"	v
a01	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^			var a01 = __rotationSine * scaleX;$/;"	v
a1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var a1:Float = bA.m_sweep.a;$/;"	v
a1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var a1:Float = bA.m_sweep.a;$/;"	v
a1	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^			var a1 = d * norm;$/;"	v
a1	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^		var a1 = a * cos - b * sin;$/;"	v
a1	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^		var a1 = a * m.a + b * m.c;$/;"	v
a1	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var a1 = new Vector4(x, y, z);$/;"	v
a1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var a1:Float, b1:Float, c1:Float, a2:Float, b2:Float, c2:Float;$/;"	v
a1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^			var a1 = d * norm;$/;"	v
a1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^		var a1 = a * cos - b * sin;$/;"	v
a1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^		var a1 = a * m.a + b * m.c;$/;"	v
a1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^			var a1 = d * norm;$/;"	v
a1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^		var a1 = a * cos - b * sin;$/;"	v
a1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^		var a1 = a * m.a + b * m.c;$/;"	v
a1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var a1 = new Vector3D(x, y, z);$/;"	v
a1	/usr/lib/haxe/std/haxe/crypto/Adler32.hx	/^		var a1 = a1, a2 = a2;$/;"	v
a1	/usr/lib/haxe/std/haxe/crypto/Adler32.hx	/^	var a1 : Int;$/;"	v
a10	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^			var a10 = -__rotationSine * scaleY;$/;"	v
a11	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat22.hx	/^		var a11:Float = col1.x;$/;"	v
a11	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat33.hx	/^		var a11:Float = col1.x;$/;"	v
a11	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^			var a11 = __rotationCosine * scaleY;$/;"	v
a12	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat22.hx	/^		var a12:Float = col2.x;$/;"	v
a12	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat33.hx	/^		var a12:Float = col2.x;$/;"	v
a13	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat33.hx	/^		var a13:Float = col3.x;$/;"	v
a16	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var a16 = __alpha16[a];$/;"	v
a1a	/usr/lib/haxe/std/haxe/crypto/Adler32.hx	/^		var a1a = i.readByte();$/;"	v
a1b	/usr/lib/haxe/std/haxe/crypto/Adler32.hx	/^		var a1b = i.readByte();$/;"	v
a2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var a2:Float = bB.m_sweep.a;$/;"	v
a2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var a2:Float = bB.m_sweep.a;$/;"	v
a2	/usr/lib/haxe/std/haxe/crypto/Adler32.hx	/^	var a2 : Int;$/;"	v
a21	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat22.hx	/^		var a21:Float = col1.y;$/;"	v
a21	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat33.hx	/^		var a21:Float = col1.y;$/;"	v
a22	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat22.hx	/^		var a22:Float = col2.y;$/;"	v
a22	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat33.hx	/^		var a22:Float = col2.y;$/;"	v
a23	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat33.hx	/^		var a23:Float = col3.y;$/;"	v
a2a	/usr/lib/haxe/std/haxe/crypto/Adler32.hx	/^		var a2a = i.readByte();$/;"	v
a2b	/usr/lib/haxe/std/haxe/crypto/Adler32.hx	/^		var a2b = i.readByte();$/;"	v
a31	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat33.hx	/^		var a31:Float = col1.z;$/;"	v
a32	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat33.hx	/^		var a32:Float = col2.z;$/;"	v
a33	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat33.hx	/^		var a33:Float = col3.z;$/;"	v
aNeg	/usr/lib/haxe/std/UInt.hx	/^		var aNeg = a.toInt() < 0;$/;"	v
aOctFreq	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var aOctFreq = aOctFreq;$/;"	v
aOctFreq	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private var aOctFreq:Array<Float>; \/\/ frequency per octave$/;"	v
aOctPers	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var aOctPers = aOctPers;$/;"	v
aOctPers	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private var aOctPers:Array<Float>; \/\/ persistence per octave$/;"	v
aPositionCoord	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/FastShader.hx	/^	public var aPositionCoord:Int;$/;"	v
aRotation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/FastShader.hx	/^	public var aRotation:Int;$/;"	v
aScale	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/FastShader.hx	/^	public var aScale:Int;$/;"	v
aTextureCoord	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/AbstractShader.hx	/^	public var aTextureCoord:Int;$/;"	v
aVertexPosition	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/AbstractShader.hx	/^	public var aVertexPosition:Int;$/;"	v
aX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var aX:Float = cp1.normalImpulse;$/;"	v
aY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var aY:Float = cp2.normalImpulse;$/;"	v
aabb	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^		var aabb:B2AABB = new B2AABB();$/;"	v
aabb	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeNode.hx	/^	public var aabb:B2AABB;$/;"	v
aabb	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^					var aabb:B2AABB = bp.getFatAABB(f.m_proxy);$/;"	v
aabb	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var aabb:B2AABB = new B2AABB();$/;"	v
aabb	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^			var aabb:B2AABB = new B2AABB();$/;"	v
aabb1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^		var aabb1:B2AABB = new B2AABB();$/;"	v
aabb2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^		var aabb2:B2AABB = new B2AABB();$/;"	v
aabbA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^		var aabbA:B2AABB = m_tree.getFatAABB(proxyA);$/;"	v
aabbB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^		var aabbB:B2AABB = m_tree.getFatAABB(proxyB);$/;"	v
aabbOverlap	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^		var aabbOverlap:Bool = m_fixtureA.m_aabb.testOverlap(m_fixtureB.m_aabb);$/;"	v
abcWriter	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^		var abcWriter = new format.abc.Writer (abc);$/;"	v
abs	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat22.hx	/^	public function abs() : Void$/;"	f
abs	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public function abs(a:Float):Float$/;"	f
abs	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec2.hx	/^	public function abs() : Void$/;"	f
abs	/usr/lib/haxe/std/Math.hx	/^	static function abs(v:Float):Float;$/;"	f
absDX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^		var absDX:Float = Math.abs(dX);$/;"	v
absDY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^		var absDY:Float = Math.abs(dY);$/;"	v
absM	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public function absM(A:B2Mat22):B2Mat22$/;"	f
absV	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public function absV(a:B2Vec2):B2Vec2$/;"	f
abs_v	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^		var abs_v:B2Vec2 = B2Math.absV(v);$/;"	v
abuse of v1...	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^					v1X = (tMat.col1.x * tX + tMat.col2.x * tY); \/\/ note abuse of v1... $/;"	i
acc	/usr/lib/haxe/std/haxe/io/Path.hx	/^		var acc = new StringBuf();$/;"	v
accelerationX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/AccelerometerEvent.hx	/^	public var accelerationX:Float;$/;"	v
accelerationY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/AccelerometerEvent.hx	/^	public var accelerationY:Float;$/;"	v
accelerationZ	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/AccelerometerEvent.hx	/^	public var accelerationZ:Float;$/;"	v
accelerometer	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/sensors/AccelerometerTest.hx	/^		var accelerometer = new Accelerometer ();$/;"	v
accelerometerEvent	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/AccelerometerEventTest.hx	/^		var accelerometerEvent = new AccelerometerEvent (AccelerometerEvent.UPDATE);$/;"	v
accentColor	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/LogHelper.hx	/^	public static var accentColor = "\\x1b[32;1m";$/;"	v
accept	/usr/lib/haxe/std/sys/net/Socket.hx	/^	function accept() : Socket;$/;"	f
access	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^			var access = src.readUInt16();$/;"	v
access	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var access = src.readUInt16();$/;"	v
accessKey	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var accessKey:String;$/;"	v
accessibilityImplementation	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var accessibilityImplementation:Dynamic \/*flash.accessibility.AccessibilityImplementation*\/;$/;"	v
accessibilityProperties	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var accessibilityProperties:Dynamic \/*flash.accessibility.AccessibilityProperties*\/;$/;"	v
account	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var account:Dynamic;$/;"	v
acos	/usr/lib/haxe/std/Math.hx	/^	static function acos(v:Float):Float;$/;"	f
acquire	/usr/lib/haxe/std/neko/vm/Mutex.hx	/^	public function acquire() {$/;"	f
active	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2BodyDef.hx	/^	public var active:Bool;$/;"	v
active	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var active:Bool = false;$/;"	v
active	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var active:Bool = false;$/;"	v
active	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^			var active = lime_application_update (handle);$/;"	v
active	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public var active (default, null):Bool;$/;"	v
activeLoaders	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	var activeLoaders : List<URLLoader>;$/;"	v
activeLoadersIsEmpty	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	public function activeLoadersIsEmpty() {$/;"	f
activePlugin	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static var activePlugin:Dynamic;$/;"	v
activeSourceCount	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/WebAudioContext.hx	/^	public var activeSourceCount (default, null):Int;$/;"	v
activeTexture	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function activeTexture (texture:Int):Void;$/;"	f
activeTexture	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function activeTexture (texture:Int):Void {$/;"	f
activeTexture	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function activeTexture (texture:Int):Void {$/;"	f
activeTexture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function activeTexture(texture:Int):Void { lime_gl_active_texture(texture); }$/;"	f
activeTexture	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function activeTexture(texture:Int):Void;$/;"	f
actual	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var actual = matrix3D.deltaTransformVector(new Vector3D(10, 20, 30) );$/;"	v
actual	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var actual = matrix3D.rawData;$/;"	v
actual	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var actual:Vector<Float> = [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ];$/;"	v
actual	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/ByteArrayTest.hx	/^		var actual = data.readFloat();$/;"	v
actualIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^				var actualIndex = -1;$/;"	v
adbName	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^	private static var adbName:String;$/;"	v
adbPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^	private static var adbPath:String;$/;"	v
add	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec2.hx	/^	public function add(v:B2Vec2) : Void$/;"	f
add	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec3.hx	/^	public function add(v:B2Vec3) : Void$/;"	f
add	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Event.hx	/^	public function add (listener:T, once:Bool = false, priority:Int = 0):Void {$/;"	f
add	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector2.hx	/^	public function add (v:Vector2):Vector2 {$/;"	f
add	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	inline public function add (a:Vector4):Vector4 {$/;"	f
add	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Point.hx	/^	public function add (v:Point):Point {$/;"	f
add	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	public function add (channel:SoundChannel):Void {$/;"	f
add	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Point.hx	/^	public function add (v:Point):Point {$/;"	f
add	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^	inline public function add (a:Vector3D):Vector3D {$/;"	f
add	/usr/lib/haxe/std/List.hx	/^	public function add( item : T ) {$/;"	f
add	/usr/lib/haxe/std/haxe/Int64.hx	/^	public static function add( a : Int64, b : Int64 ) : Int64 {$/;"	f
add	/usr/lib/haxe/std/haxe/ds/GenericStack.hx	/^	public inline function add( item : T ) {$/;"	f
add	/usr/lib/haxe/std/haxe/io/BytesBuffer.hx	/^	public inline function add( src : Bytes ) {$/;"	f
add	/usr/lib/haxe/std/haxe/macro/Format.hx	/^		function add(e) {$/;"	f
add	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	function add( name : String, params : Array<Expr>, pos : Expr.Position ) : Void;$/;"	f
add	/usr/lib/haxe/std/haxe/unit/TestResult.hx	/^	public function add( t:TestStatus ) : Void {$/;"	f
add	/usr/lib/haxe/std/haxe/unit/TestRunner.hx	/^	public function add( c:TestCase ) : Void{$/;"	f
add	/usr/lib/haxe/std/neko/vm/Deque.hx	/^	public function add( i : T ) {$/;"	f
add data if POST	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthRequest.hx	/^		\/\/ TODO add data if POST$/;"	i
add error on other method when context3d is disposed	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		\/\/ TODO add error on other method when context3d is disposed$/;"	i
addBody	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^	public function addBody(body:B2Body) : Void$/;"	f
addBody	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2Controller.hx	/^	public function addBody(body:B2Body) : Void $/;"	f
addBucket	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^	private function addBucket (bucket:String, parent:Dynamic):Dynamic {$/;"	f
addByte	/usr/lib/haxe/std/haxe/io/BytesBuffer.hx	/^	public inline function addByte( byte : Int ) {$/;"	f
addByte	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	function addByte(b) {$/;"	f
addByte	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	public function addByte(c) {$/;"	f
addBytes	/usr/lib/haxe/std/haxe/io/BytesBuffer.hx	/^	public inline function addBytes( src : Bytes, pos : Int, len : Int ) {$/;"	f
addBytes	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	function addBytes(b,p,len) {$/;"	f
addBytes	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	public function addBytes(b,p,len) {$/;"	f
addCallback	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/external/ExternalInterface.hx	/^	public static function addCallback (functionName:String, closure:Dynamic):Void {$/;"	f
addCallback	/usr/lib/haxe/lib/openfl/3,0,8/openfl/external/ExternalInterface.hx	/^	public static function addCallback (functionName:String, closure:Dynamic):Void {$/;"	f
addChar	/usr/lib/haxe/std/StringBuf.hx	/^	public inline function addChar( c : Int ) : Void {$/;"	f
addChar	/usr/lib/haxe/std/haxe/Utf8.hx	/^	public inline function addChar( c : Int ) : Void {$/;"	f
addChild	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function addChild (child:Dynamic \/*DisplayObject*\/):Dynamic \/*DisplayObject*\/ { return null; };$/;"	f
addChild	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^	public function addChild (child:DisplayObject):DisplayObject {$/;"	f
addChild	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^	public function addChild (child:DisplayObject):DisplayObject {$/;"	f
addChild	/usr/lib/haxe/std/Xml.hx	/^	function addChild( x : Xml ) : Void;$/;"	f
addChildAt	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function addChildAt (child:Dynamic \/*DisplayObject*\/, index:Int):Dynamic \/*DisplayObject*\/ { return null; };$/;"	f
addChildAt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^	public function addChildAt (child:DisplayObject, index:Int):DisplayObject {$/;"	f
addChildAt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^	public function addChildAt (child:DisplayObject, index:Int):DisplayObject {$/;"	f
addClassPath	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^	public static function addClassPath( path : String ) {$/;"	f
addClient	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	function addClient( sock : sys.net.Socket ) {$/;"	f
addColorStopRGB	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoPattern.hx	/^	public function addColorStopRGB (offset:Float, r:Float, g:Float, b:Float):Void {$/;"	f
addColorStopRGBA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoPattern.hx	/^	public function addColorStopRGBA (offset:Float, r:Float, g:Float, b:Float, a:Float):Void {$/;"	f
addCondition	/usr/lib/haxe/std/sys/db/Manager.hx	/^	function addCondition(s : StringBuf,x) {$/;"	f
addContact	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^	public function addContact(contact:B2Contact) : Void$/;"	f
addController	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function addController(c:B2Controller) : B2Controller$/;"	f
addDist	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	function addDist(d,len) {$/;"	f
addDistOne	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	function addDistOne(n) {$/;"	f
addDouble	/usr/lib/haxe/std/haxe/io/BytesBuffer.hx	/^	public inline function addDouble( v : Float ) {$/;"	f
addEventListener	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function addEventListener (type:String, listener:Dynamic \/*EventListener*\/, ?useCapture:Bool):Void {};$/;"	f
addEventListener	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function addEventListener (type:String, listener:Dynamic->Void, useCapture:Bool = false, priority:Int = 0, useWeakReference:Bool = false):Void {};$/;"	f
addEventListener	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public static function addEventListener (type:String, listener:Dynamic, useCapture:Bool = false, priority:Int = 0, useWeakReference:Bool = false):Void {$/;"	f
addEventListener	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public static function addEventListener (type:String, listener:Dynamic, useCapture:Bool = false, priority:Int = 0, useWeakReference:Bool = false):Void {$/;"	f
addEventListener	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/EventDispatcher.hx	/^	public function addEventListener (type:String, listener:Dynamic->Void, useCapture:Bool = false, priority:Int = 0, useWeakReference:Bool = false):Void {$/;"	f
addEventListener	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/IEventDispatcher.hx	/^	public function addEventListener (type:String, listener:Function, useCapture:Bool = false, priority:Int = 0, useWeakReference:Bool = false):Void;$/;"	f
addEventListener	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^	override public function addEventListener (type:String, listener:Function, useCapture:Bool = false, priority:Int = 0, useWeakReference:Bool = false):Void {$/;"	f
addEventListener	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/sensors/Accelerometer.hx	/^	override public function addEventListener (type:String, listener:Function, useCapture:Bool = false, priority:Int = 0, useWeakReference:Bool = false):Void {$/;"	f
addEventListener	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/EventDispatcher.hx	/^	public function addEventListener (type:String, listener:Dynamic->Void, useCapture:Bool = false, priority:Int = 0, useWeakReference:Bool = false):Void {$/;"	f
addEventListener	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/IEventDispatcher.hx	/^	public function addEventListener (type:String, listener:Dynamic->Void, useCapture:Bool = false, priority:Int = 0, useWeakReference:Bool = false):Void;$/;"	f
addEventListener	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public function addEventListener (type:String, listener:Dynamic, ?useCapture:Bool):Dynamic;$/;"	f
addEventListener	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static function addEventListener (type:String, listener:Dynamic, ?useCapture:Bool):Dynamic;$/;"	f
addEventListener	/usr/lib/haxe/lib/openfl/3,0,8/openfl/sensors/Accelerometer.hx	/^	override public function addEventListener (type:String, listener:Dynamic -> Void, useCapture:Bool = false, priority:Int = 0, useWeakReference:Bool = false):Void {$/;"	f
addFloat	/usr/lib/haxe/std/haxe/io/BytesBuffer.hx	/^	public inline function addFloat( v : Float ) {$/;"	f
addHeader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^	public function addHeader (partname:String, version:Int) {$/;"	f
addHeader	/usr/lib/haxe/std/haxe/Http.hx	/^	public function addHeader( header : String, value : String ):Http {$/;"	f
addJoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^	public function addJoint(joint:B2Joint) : Void$/;"	f
addKeys	/usr/lib/haxe/std/sys/db/Manager.hx	/^	function addKeys( s : StringBuf, x : {} ) {$/;"	f
addM	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat22.hx	/^	public function addM(m:B2Mat22) : Void$/;"	f
addM	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat33.hx	/^	public function addM(m:B2Mat33) : Void$/;"	f
addMM	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public function addMM(A:B2Mat22, B:B2Mat22):B2Mat22$/;"	f
addMetadata	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^	public static function addMetadata( meta : String, className : String, ?field : String, ?isStatic : Bool ) {$/;"	f
addModule	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public function addModule (module:IModule):Void {$/;"	f
addNativeLib	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^	public static function addNativeLib( name : String ) {$/;"	f
addObject	/usr/lib/haxe/std/haxe/remoting/Context.hx	/^	public function addObject( name : String, obj : {}, ?recursive ) {$/;"	f
addPair	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^	public function addPair(proxyUserDataA:Dynamic, proxyUserDataB:Dynamic):Void {$/;"	f
addPair	/usr/lib/haxe/std/neko/Web.hx	/^	static function addPair( buf : StringBuf, name, value ) {$/;"	f
addParameter	/usr/lib/haxe/std/haxe/Http.hx	/^	public function addParameter( param : String, value : String ):Http {$/;"	f
addPath	/usr/lib/haxe/std/neko/vm/Loader.hx	/^	public function addPath( s : String ) {$/;"	f
addRenderer	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public function addRenderer (renderer:Renderer):Void {$/;"	f
addResource	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function addResource( name : String, data : haxe.io.Bytes ) {$/;"	f
addRtti	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	public static function addRtti() : Array<Field> {$/;"	f
addSocket	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	public function addSocket( s : sys.net.Socket ) {$/;"	f
addSourcePath	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^						var addSourcePath = true;$/;"	v
addString	/usr/lib/haxe/std/haxe/io/BytesBuffer.hx	/^	public inline function addString( v : String ) {$/;"	f
addSub	/usr/lib/haxe/std/StringBuf.hx	/^	public inline function addSub( s : String, pos : Int, ?len : Int) : Void {$/;"	f
addTileRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Tilesheet.hx	/^	public function addTileRect (rectangle:Rectangle, centerPoint:Point = null):Int {$/;"	f
addTileRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Tilesheet.hx	/^	public function addTileRect (rectangle:Rectangle, centerPoint:Point = null):Int {$/;"	f
addToCache	/usr/lib/haxe/std/sys/db/Manager.hx	/^	function addToCache( x : T ) {$/;"	f
addTrailingSlash	/usr/lib/haxe/std/haxe/io/Path.hx	/^	public static function addTrailingSlash( path : String ) : String {$/;"	f
addType	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactFactory.hx	/^	public function addType(createFcn:Dynamic, destroyFcn:Dynamic, type1:B2ShapeType, type2:B2ShapeType) : Void$/;"	f
addType	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private function addType(inName:String, inJavaType:String, inArrayCount:Int)$/;"	f
addVV	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public function addVV(a:B2Vec2, b:B2Vec2):B2Vec2$/;"	f
addValue	/usr/lib/haxe/std/sys/db/Connection.hx	/^	function addValue( s : StringBuf, v : Dynamic ) : Void;$/;"	f
addWindow	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public function addWindow (window:Window):Void {$/;"	f
added	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Main.hx	/^	function added(e) $/;"	f
additionalArguments	/usr/lib/haxe/lib/lime/2,4,3/lime/project/PlatformTarget.hx	/^	public var additionalArguments:Array <String>;$/;"	v
additionalArguments	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	private var additionalArguments:Array <String>;$/;"	v
addme	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^	function addme(x, y) {$/;"	f
adjust	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^			var adjust = "";$/;"	v
adjustIDs	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Tilesheet.hx	/^	private inline function adjustIDs (vec:Vector<Int>, len:Int):Vector<Int> {$/;"	f
adjustIndices	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Tilesheet.hx	/^	private inline function adjustIndices (vec:Vector<Int>, len:Int):Vector<Int> {$/;"	f
adjustLen	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Tilesheet.hx	/^	private inline function adjustLen (vec:Vector<Float>, len:Int):Vector<Float> {$/;"	f
advance	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Sweep.hx	/^	public function advance(t:Float) : Void{$/;"	f
advance	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function advance(t:Float) : Void{$/;"	f
advance	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	var advance:Int;$/;"	v
advance	/usr/lib/haxe/lib/lime/2,4,3/lime/text/GlyphMetrics.hx	/^	public var advance:Vector2;$/;"	v
advance	/usr/lib/haxe/lib/lime/2,4,3/lime/text/GlyphPosition.hx	/^	public var advance:Vector2;$/;"	v
advance	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	var advance: Int;$/;"	v
advanceWidth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	var advanceWidth:Float;$/;"	v
agal2glsllut	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGALTokenizer.hx	/^		var agal2glsllut:Array<Dynamic> = Mapping.agal2glsllut;$/;"	v
agal2glsllut	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Mapping.hx	/^	public static var agal2glsllut (get, never):Array<OpLUT>;$/;"	v
agalMiniAssembler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLCompiler.hx	/^		var agalMiniAssembler = new AGALMiniAssembler ();$/;"	v
agalMiniAssembler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/_shaders/AGLSLShaderUtils.hx	/^		var agalMiniAssembler:AGALMiniAssembler = new AGALMiniAssembler ();$/;"	v
aglsl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/_shaders/AGLSLShaderUtils.hx	/^			var aglsl:AGLSLCompiler = new AGLSLCompiler ();	$/;"	v
airMacPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var airMacPath = "http:\/\/airdownload.adobe.com\/air\/mac\/download\/latest\/AdobeAIRSDK.tbz2";$/;"	v
airTarget	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AIRHelper.hx	/^		var airTarget = "air";$/;"	v
airWindowsPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var airWindowsPath = "http:\/\/airdownload.adobe.com\/air\/win\/download\/latest\/AdobeAIRSDK.zip";$/;"	v
al	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var al = n;$/;"	v
al	/usr/lib/haxe/std/haxe/Int64.hx	/^		var al = a.low & mask, ah = ushr32(a.low , 16);$/;"	v
album	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/ID3Info.hx	/^	public var album:String;$/;"	v
alias	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Keystore.hx	/^	public var alias:String;$/;"	v
aliasPassword	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Keystore.hx	/^	public var aliasPassword:String;$/;"	v
align	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var align:String;$/;"	v
align	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public var align (get, set):StageAlign;$/;"	v
align	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextFormat.hx	/^	public var align:String;$/;"	v
align	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public var align:StageAlign;$/;"	v
align	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextFormat.hx	/^	public var align:TextFormatAlign;$/;"	v
all	/usr/lib/haxe/std/haxe/Resource.hx	/^		var all = cs.Lib.toNativeType(haxe.Resource).Assembly.GetManifestResourceNames();$/;"	v
all	/usr/lib/haxe/std/sys/db/Manager.hx	/^	public function all( ?lock: Bool ) : List<T> {$/;"	f
alloc	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^	public static function alloc( length : Int ) : Bytes {$/;"	f
allocateNode	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^	private function allocateNode():B2DynamicTreeNode$/;"	f
allocated	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	private var allocated:Int = 0;$/;"	v
allocated	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	private var allocated:Int;$/;"	v
allocated	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	private var allocated:Int = 0;$/;"	v
allowCodeImport	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/LoaderContext.hx	/^	public var allowCodeImport:Bool;$/;"	v
allowDomain	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Security.hx	/^	public static function allowDomain (?p1:Dynamic, ?p2:Dynamic, ?p3:Dynamic, ?p4:Dynamic, ?p5:Dynamic) { }$/;"	f
allowInsecureDomain	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Security.hx	/^	public static function allowInsecureDomain (?p1:Dynamic, ?p2:Dynamic, ?p3:Dynamic, ?p4:Dynamic, ?p5:Dynamic) { }$/;"	f
allowLoadBytesCodeExecution	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/LoaderContext.hx	/^	public var allowLoadBytesCodeExecution:Bool;$/;"	v
allowPackage	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^	public static function allowPackage( v : String ) {$/;"	f
allowSleep	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2BodyDef.hx	/^	public var allowSleep:Bool;$/;"	v
allowsFullScreen	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public var allowsFullScreen:Bool;$/;"	v
allowsFullScreen	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public var allowsFullScreen:Bool;$/;"	v
alpha	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^		var alpha:Float = 0.0;$/;"	v
alpha	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Sweep.hx	/^			var alpha:Float = (t - t0) \/ (1.0 - t0);$/;"	v
alpha	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var alpha:Float;$/;"	v
alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^						var alpha = data[(y * width) + x];$/;"	v
alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^			var alpha = alphas[i];$/;"	v
alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^			var alpha = alphas[i];$/;"	v
alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/ComplexPrimitiveShader.hx	/^	public var alpha:GLUniformLocation;$/;"	v
alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DrawTrianglesShader.hx	/^	public var alpha:GLUniformLocation;$/;"	v
alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/FillShader.hx	/^	public var alpha:GLUniformLocation;$/;"	v
alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/PatternFillShader.hx	/^	public var alpha:GLUniformLocation;$/;"	v
alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/PrimitiveShader.hx	/^	public var alpha:GLUniformLocation;$/;"	v
alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/StripShader.hx	/^	public var alpha:GLUniformLocation;$/;"	v
alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	public var alpha:Null<Float>;$/;"	v
alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var alpha = path.line.alpha;$/;"	v
alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var alpha:Float = 1.0;$/;"	v
alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var alpha:Float;	$/;"	v
alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var alpha = 1.0, tint = 0xFFFFFF, color = 0xFFFFFFFF;$/;"	v
alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var alpha = object.__worldAlpha;$/;"	v
alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^			var alpha = fillColor >>> 24;$/;"	v
alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public var alpha (get, set):Float;$/;"	v
alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsSolidFill.hx	/^	public var alpha:Float;$/;"	v
alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/DropShadowFilter.hx	/^	public var alpha:Float;$/;"	v
alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/GlowFilter.hx	/^	public var alpha:Float;$/;"	v
alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	public var alpha (get, set):Float;$/;"	v
alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^				var alpha = 1.0;$/;"	v
alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsSolidFill.hx	/^	public var alpha:Float;$/;"	v
alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/DropShadowFilter.hx	/^	public var alpha:Float;$/;"	v
alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/GlowFilter.hx	/^	public var alpha:Float;$/;"	v
alphaIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var alphaIndex = 0;$/;"	v
alphaIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var alphaIndex = 0;$/;"	v
alphaIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var alphaIndex = 0;$/;"	v
alphaIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^			var alphaIndex = 0;$/;"	v
alphaMultiplier	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	public var alphaMultiplier (get, set):Float;$/;"	v
alphaMultiplier	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/ColorTransform.hx	/^	public var alphaMultiplier:Float;$/;"	v
alphaMultiplier	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/ColorTransform.hx	/^	public var alphaMultiplier:Float;$/;"	v
alphaNumeric	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^				var alphaNumeric = new EReg ("[a-zA-Z0-9]", "g");$/;"	v
alphaOffset	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	public var alphaOffset (get, set):Float;$/;"	v
alphaOffset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/ColorTransform.hx	/^	public var alphaOffset:Float;$/;"	v
alphaOffset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/ColorTransform.hx	/^	public var alphaOffset:Float;$/;"	v
alphas	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsGradientFill.hx	/^	public var alphas:Array<Float>;$/;"	v
alphas	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsGradientFill.hx	/^	public var alphas:Array<Float>;$/;"	v
alphas	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var alphas = [ 0xFF, 0xFF, 0xFF ];$/;"	v
alreadyCreated	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	private static var alreadyCreated = new Map<String, Bool> ();$/;"	v
altKey	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	public var altKey (get, set):Bool;$/;"	v
altKey	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/KeyboardEvent.hx	/^	public var altKey:Bool;$/;"	v
altKey	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public var altKey:Bool;$/;"	v
altKey	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/KeyboardEvent.hx	/^	public var altKey:Bool;$/;"	v
altKey	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public var altKey:Bool;$/;"	v
altKey	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TouchEvent.hx	/^	public var altKey:Bool;$/;"	v
alternateExtensions	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static var alternateExtensions:Array<String>;$/;"	v
aname	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^			var aname = x.att.a.split(":");$/;"	v
aname	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^		var aname = null;$/;"	v
anchor	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBridge.hx	/^			var anchor:B2Vec2 = new B2Vec2();$/;"	v
anchor	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBuoyancy.hx	/^			var anchor:B2Vec2 = new B2Vec2();$/;"	v
anchor	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URIParser.hx	/^	public var anchor:String;$/;"	v
anchor1	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^				var anchor1:B2Vec2 = new B2Vec2(335 \/ m_physScale, 180 \/ m_physScale);$/;"	v
anchor2	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^				var anchor2:B2Vec2 = new B2Vec2(480 \/ m_physScale, 180 \/ m_physScale);$/;"	v
and	/usr/lib/haxe/std/Type.hx	/^	class and enum instances.$/;"	c
and	/usr/lib/haxe/std/haxe/Int64.hx	/^	public static inline function and( a : Int64, b : Int64 ) : Int64 {$/;"	f
andMask	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/format/BMP.hx	/^				var andMask = new ByteArray ();$/;"	v
andMask	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/format/BMP.hx	/^				var andMask = new ByteArray (image.width * image.height);$/;"	v
androidJAR	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^						var androidJAR = directory + "\/android.jar";$/;"	v
androidLinuxNDKPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var androidLinuxNDKPath = "http:\/\/dl.google.com\/android\/ndk\/android-ndk-r8b-linux-x86.tar.bz2";$/;"	v
androidLinuxSDKPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var androidLinuxSDKPath = "http:\/\/dl.google.com\/android\/android-sdk_r22.0.5-linux.tgz";$/;"	v
androidMacNDKPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var androidMacNDKPath = "http:\/\/dl.google.com\/android\/ndk\/android-ndk-r8b-darwin-x86.tar.bz2";$/;"	v
androidMacSDKPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var androidMacSDKPath = "http:\/\/dl.google.com\/android\/android-sdk_r22.0.5-macosx.zip";$/;"	v
androidName	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^	private static var androidName:String;$/;"	v
androidPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^	private static var androidPath:String;$/;"	v
androidWindowsNDKPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var androidWindowsNDKPath = "http:\/\/dl.google.com\/android\/ndk\/android-ndk-r8b-windows.zip";$/;"	v
androidWindowsSDKPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var androidWindowsSDKPath = "http:\/\/dl.google.com\/android\/android-sdk_r22.0.5-windows.zip";$/;"	v
angTolSqr	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^			var angTolSqr:Float = B2Settings.b2_angularSleepTolerance * B2Settings.b2_angularSleepTolerance;$/;"	v
angle	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var angle:Float = Math.asin(cross);$/;"	v
angle	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Sweep.hx	/^		var angle:Float = (1.0 - alpha) * a0 + alpha * a;$/;"	v
angle	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^			var angle: Number = 0.0;$/;"	v
angle	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2BodyDef.hx	/^	public var angle:Float;$/;"	v
angle	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^			var angle:Float = bB.m_sweep.a - bA.m_sweep.a - m_referenceAngle;$/;"	v
angle	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/DropShadowFilter.hx	/^	public var angle:Float;$/;"	v
angle	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/GlowFilter.hx	/^	private var angle:Float;$/;"	v
angle	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/DropShadowFilter.hx	/^	public var angle:Float;$/;"	v
angle2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var angle2: Float = Math.atan2(s2.getDirectionVector().y, s2.getDirectionVector().x);$/;"	v
angleBetween	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	inline public static function angleBetween (a:Vector4, b:Vector4):Float {$/;"	f
angleBetween	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^	inline public static function angleBetween (a:Vector3D, b:Vector3D):Float {$/;"	f
angleDirection	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^	public static var angleDirection:Float = 1;$/;"	v
angular	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var angular:Float = body2.getAngularVelocity();$/;"	v
angular1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var angular1:Float = body1.getAngularVelocity();$/;"	v
angularA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Jacobian.hx	/^	public var angularA:Float;$/;"	v
angularB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Jacobian.hx	/^	public var angularB:Float;$/;"	v
angularDamping	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2BodyDef.hx	/^	public var angularDamping:Float;$/;"	v
angularDrag	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^	public var angularDrag:Float;$/;"	v
angularError	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var angularError:Float = 0.0;$/;"	v
angularError	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var angularError:Float = 0.0;$/;"	v
angularError	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^		var angularError:Float = 0.0;$/;"	v
angularError	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^		var angularError:Float = B2Math.abs(C2);$/;"	v
angularVelocity	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var angularVelocity:Float = getAngularVelocity();$/;"	v
angularVelocity	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2BodyDef.hx	/^	public var angularVelocity:Float;$/;"	v
anisotropySupportTested	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	private static var anisotropySupportTested:Bool = false;$/;"	v
answer	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var answer = CLIHelper.ask ("File found. Install existing file?");$/;"	v
answer	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var answer = YES;$/;"	v
answer	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var answer = CLIHelper.ask ("Download and install Apache Cordova?");$/;"	v
answer	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var answer = CLIHelper.ask ("Download and install Apple Xcode?");$/;"	v
answer	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var answer = CLIHelper.ask ("Download and install Emscripten?");$/;"	v
answer	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var answer = CLIHelper.ask ("Download and install Visual Studio C++ Express?");$/;"	v
answer	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var answer = CLIHelper.ask ("Download and install the Adobe AIR SDK?");$/;"	v
answer	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var answer = CLIHelper.ask ("Download and install the Android SDK?");$/;"	v
answer	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var answer = CLIHelper.ask ("Download and install the BlackBerry Native SDK?");$/;"	v
answer	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var answer = CLIHelper.ask ("Download and install the HP webOS SDK?");$/;"	v
answer	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var answer = CLIHelper.ask ("Download and install the Tizen SDK?");$/;"	v
answer	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^			var answer = CLIHelper.ask ("Would you like to complete your submission now?");$/;"	v
answer	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var answer = CLIHelper.ask ("Would you like to open the developer site now?");$/;"	v
answer	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var answer:Answer;$/;"	v
ant	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^		var ant = project.environment.get ("ANT_HOME");$/;"	v
ant	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AntHelper.hx	/^	private static var ant:String;$/;"	v
antPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^					var antPath = defines.get ("ANT_HOME");$/;"	v
antiAliasType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public var antiAliasType:AntiAliasType;$/;"	v
antiAliasType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var antiAliasType:AntiAliasType;$/;"	v
antialias	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public var antialias (get, set):CairoAntialias;$/;"	v
antialias	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFontOptions.hx	/^	public var antialias (get, set):CairoAntialias;$/;"	v
apacheAntUnixPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var apacheAntUnixPath = "http:\/\/archive.apache.org\/dist\/ant\/binaries\/apache-ant-1.9.2-bin.tar.gz";$/;"	v
apacheAntWindowsPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var apacheAntWindowsPath = "http:\/\/archive.apache.org\/dist\/ant\/binaries\/apache-ant-1.9.2-bin.zip";$/;"	v
apacheCordovaPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var apacheCordovaPath = "http:\/\/www.apache.org\/dist\/incubator\/cordova\/cordova-2.1.0-incubating-src.zip";$/;"	v
api	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^	var api : JSGenApi;$/;"	v
app	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public var app:ApplicationData;$/;"	v
app	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/ApplicationMain.hx	/^	private static var app:lime.app.Application;$/;"	v
app	/usr/lib/haxe/lib/lime/2,4,3/tests/runtime/test/lime/WindowTest.hx	/^	private var app:Application;$/;"	v
app	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^			var app = apps.first ();$/;"	v
app	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/ApplicationMain.hx	/^		var app = new lime.app.Application ();$/;"	v
app	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^		var app = new lime.app.Application ();$/;"	v
appID	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var appID:Int = -1;$/;"	v
appName	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var appName = project.meta.title;$/;"	v
appSlug	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var appSlug:String = "";$/;"	v
append	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public function append (lhs:Matrix4):Void {$/;"	f
append	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public inline function append (lhs:Matrix3D):Void {$/;"	f
append	/usr/lib/haxe/std/sys/io/File.hx	/^	static function append( path : String, binary : Bool = true ) : FileOutput;$/;"	f
appendChild	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function appendChild (newChild:Dynamic \/*Node*\/):Dynamic \/*Node*\/ { return null; };$/;"	f
appendFlags	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	public function appendFlags(flags:Int) : Void{$/;"	f
appendRotation	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public function appendRotation (degrees:Float, axis:Vector4, pivotPoint:Vector4 = null):Void {$/;"	f
appendRotation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public inline function appendRotation (degrees:Float, axis:Vector3D, pivotPoint:Vector3D = null):Void {$/;"	f
appendScale	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public function appendScale (xScale:Float, yScale:Float, zScale:Float):Void {$/;"	f
appendScale	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public inline function appendScale (xScale:Float, yScale:Float, zScale:Float):Void {$/;"	f
appendText	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public function appendText (text:String):Void {$/;"	f
appendText	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public function appendText (text:String):Void {$/;"	f
appendTranslation	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public function appendTranslation (x:Float, y:Float, z:Float):Void {$/;"	f
appendTranslation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public inline function appendTranslation (x:Float, y:Float, z:Float):Void {$/;"	f
appleXcodeURL	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var appleXcodeURL = "http:\/\/developer.apple.com\/xcode\/";$/;"	v
application	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Lib.hx	/^	public static var application:Application;$/;"	v
application	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	public static var application:Application;$/;"	v
applicationDirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	public static var applicationDirectory (get, null):String;$/;"	v
applicationDirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^	private var applicationDirectory:String;$/;"	v
applicationDirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/MacPlatform.hx	/^	private var applicationDirectory:String;$/;"	v
applicationDirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WindowsPlatform.hx	/^	private var applicationDirectory:String;$/;"	v
applicationDirectory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/File.hx	/^	public static var applicationDirectory (get, null):File;$/;"	v
applicationDirectory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/SystemPath.hx	/^	public static var applicationDirectory (get, null):String;$/;"	v
applicationDomain	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/LoaderInfo.hx	/^	public var applicationDomain:ApplicationDomain;$/;"	v
applicationDomain	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/LoaderInfo.hx	/^	public var applicationDomain:ApplicationDomain;$/;"	v
applicationDomain	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/LoaderContext.hx	/^	public var applicationDomain:ApplicationDomain;$/;"	v
applicationDomain	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/ApplicationDomainTest.hx	/^		var applicationDomain = ApplicationDomain.currentDomain;$/;"	v
applicationPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^			var applicationPath = "";$/;"	v
applicationPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^		var applicationPath = "build\/" + configuration + "-iphoneos\/" + project.app.file + ".app";$/;"	v
applicationStorageDirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	public static var applicationStorageDirectory (get, null):String;$/;"	v
applicationStorageDirectory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/File.hx	/^	public static var applicationStorageDirectory (get, null):File;$/;"	v
applicationStorageDirectory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/SystemPath.hx	/^	public static var applicationStorageDirectory (get, null):String;$/;"	v
applyFilter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function applyFilter (sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, filter:BitmapFilter):Void {$/;"	f
applyFilter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function applyFilter (sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, filter:BitmapFilter):Void {$/;"	f
applyFilterPass	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^	public function applyFilterPass (filter:Dynamic, filterArea:Rectangle, width:Int, height:Int):Void {$/;"	f
applyForce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function applyForce(force:B2Vec2, point:B2Vec2) : Void{$/;"	f
applyHuffman	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	function applyHuffman(h) {$/;"	f
applyImpulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function applyImpulse(impulse:B2Vec2, point:B2Vec2) : Void{$/;"	f
applyScale	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^	public static function applyScale (?_) {$/;"	f
applyStyle	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMRenderer.hx	/^	public static function applyStyle (displayObject:DisplayObject, renderSession:RenderSession, setTransform:Bool, setAlpha:Bool, setClip:Bool):Void {$/;"	f
applyTorque	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function applyTorque(torque:Float) : Void {$/;"	f
applyTypeParameters	/usr/lib/haxe/std/haxe/macro/TypeTools.hx	/^	static public function applyTypeParameters(t:Type, typeParameters:Array<TypeParameter>, concreteTypes:Array<Type>):Type {$/;"	f
apps	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^					var apps = [];$/;"	v
apps	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var apps:List<Dynamic> = Lambda.filter (marketplace.getUserApps (), function(obj) return appName == Reflect.field (obj.name, "en-US"));$/;"	v
arc	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function arc (x:Float, y:Float, radius:Float, startAngle:Float, endAngle:Float, anticlockwise:Bool):Void {};$/;"	f
arc	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function arc (xc:Float, yc:Float, radius:Float, angle1:Float, angle2:Float):Void {$/;"	f
arcNegative	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function arcNegative (xc:Float, yc:Float, radius:Float, angle1:Float, angle2:Float):Void {$/;"	f
arcTo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function arcTo (x1:Float, y1:Float, x2:Float, y2:Float, radius:Float):Void {};$/;"	f
arcTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public function arcTo (controlX:Float, controlY:Float, x:Float, y:Float):Void {$/;"	f
arch	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/BlackBerryPlatform.hx	/^			var arch = "";$/;"	v
arch	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^			var arch = [ "armv6", "armv7", "armv7s", "arm64", "i386", "x86_64" ][archID];$/;"	v
arch	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/TizenPlatform.hx	/^		var arch = "";$/;"	v
arch	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var arch = ProcessHelper.runProcess ("", "uname", ["-m"], true, true, true);$/;"	v
architecture	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PlatformHelper.hx	/^					var architecture = Sys.getEnv ("PROCESSOR_ARCHITEW6432");$/;"	v
architectures	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public var architectures:Array <Architecture>;$/;"	v
architectures	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^		var architectures = [];$/;"	v
architectures	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^		var architectures = project.architectures;$/;"	v
areInaccessibleObjectsUnderPoint	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function areInaccessibleObjectsUnderPoint (point:Dynamic \/*flash.geom.Point*\/):Bool { return false; };$/;"	f
areInaccessibleObjectsUnderPoint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^	public function areInaccessibleObjectsUnderPoint (point:Point):Bool {$/;"	f
areInaccessibleObjectsUnderPoint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^	public function areInaccessibleObjectsUnderPoint (point:Point):Bool {$/;"	f
area	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^		var area:Float = r2 *( Math.asin(l \/ m_radius) + Math.PI \/ 2) + l * Math.sqrt( r2 - l2 );$/;"	v
area	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var area:Float = (upperX - lowerX) * (upperY - lowerY);$/;"	v
area	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var area:Float = 0.0;$/;"	v
area	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var area:Float = 0;$/;"	v
area	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^			var area:Float = 0.0;$/;"	v
areac	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^			var areac:B2Vec2 = new B2Vec2();$/;"	v
argString	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ProcessHelper.hx	/^		var argString = "";$/;"	v
argValue	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^				var argValue = argument.substr (equals + 1);$/;"	v
argValue	/usr/lib/haxe/lib/lime/2,4,3/tools/RunScript.hx	/^					var argValue = arg.substr (equals + 1);$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^			var args = [ { name: "buffer", opt: true, type: macro :lime.graphics.ImageBuffer, value: null }, { name: "offsetX", opt: true, type: macro :Int, value: null }, { name: "offsetY", opt: true, type: macro :Int, value: null }, { name: "width", opt: true, type: macro :Int, value: null }, { name: "height", opt: true, type: macro :Int, value: null }, { name: "color", opt: true, type: macro :Null<Int>, value: null }, { name: "type", opt: true, type: macro :lime.graphics.ImageType, value: null } ];$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^			var args = [ { name: "size", opt: true, type: macro :Int, value: macro 0 } ];$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^			var args = [ { name: "stream", opt: true, type: macro :openfl.net.URLRequest, value: null }, { name: "context", opt: true, type: macro :openfl.media.SoundLoaderContext, value: null }, { name: "forcePlayAsMusic", opt: true, type: macro :Bool, value: macro false } ];$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^		var args = Sys.args ();$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AIRHelper.hx	/^			var args = [ "-platform", "ios" ];$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AIRHelper.hx	/^			var args = [ "-profile", "desktop" ];$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AIRHelper.hx	/^		var args = [ "-package" ];$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^			var args = [ "wait-for-device", "shell", "getprop", "ro.build.version.sdk", ">", tempFile ];$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^		var args = [ "install", "-r" ];$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^		var args = [ "logcat" ];$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^		var args = [ "shell", "am", "start", "-a", "android.intent.action.MAIN", "-n", activityName ];$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^		var args = [ "uninstall", packageName ];$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AssetHelper.hx	/^				var args = [ "run", handler, "process", temporaryFile, outputFile ];$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^		var args = [ "-installApp" ];$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^		var args = [ "-package", targetPath, descriptorFile ];$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^		var args = [ zipPath ];$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CPPHelper.hx	/^			var args = [ "run", project.config.getString ("cpp.buildLibrary", "hxcpp"), buildFile ];$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CPPHelper.hx	/^		var args = [ "run", project.config.getString ("cpp.buildLibrary", "hxcpp"), buildFile ];$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CordovaHelper.hx	/^					var args = [ "qnx", "build" ];$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/DeploymentHelper.hx	/^			var args = ["upload" , "-f" , targetPath];$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^				var args = [];$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^		var args = [ "EmbeddedAssets", "-cp", destination, "-D", "swf-preloader-frame", "-swf", destination + "\/assets.swf" ];$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/HTML5Helper.hx	/^				var args = [ "-Dapple.awt.UIElement=true", "-jar", PathHelper.findTemplate (templatePaths, "bin\/compiler.jar"), "--js", sourceFile, "--js_output_file", tempFile ];$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/HTML5Helper.hx	/^			var args = [ server, path, "-p", Std.string (port), "-c-1", "-o", "--cors" ];$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ImageHelper.hx	/^		var args = [ "-Dapple.awt.UIElement=true", "-jar", rasterizer, "-d", temp, "-w", Std.string (width), "-h", Std.string (height) ];$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ProcessHelper.hx	/^			var args = [];$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/TizenHelper.hx	/^		var args = [ "dlog", project.app.file + ":V", "*:F" ];$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/WebOSHelper.hx	/^		var args = [];$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/EmscriptenPlatform.hx	/^		var args = [ "Main.o" ];$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FlashPlatform.hx	/^			var args = new Array<String> ();$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/TizenPlatform.hx	/^		var args = [ "-Dtizen", "-DAPP_ID=" + TizenHelper.getUUID (project) ];$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/tools/AliasScript.hx	/^		var args = [ "run", Compiler.getDefine ("command") ].concat (Sys.args ());$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^			var args = [ "run", handler, command, temporaryFile ];$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^		var args = Sys.args ();$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/tools/RunScript.hx	/^				var args = [ "tools\/tools.n", "rebuild", "lime", "-release", "-nocffi" ];$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/tools/RunScript.hx	/^			var args = [ "tools\/tools.n" ].concat (args);$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/tools/RunScript.hx	/^		var args = Sys.args ();$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var args = Sys.args();$/;"	v
args	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var args = fmatch.matched(1);$/;"	v
args	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^			var args = [ { name: "size", opt: true, type: macro :Int, value: macro 0 } ];$/;"	v
args	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^			var args = [ { name: "stream", opt: true, type: macro :openfl.net.URLRequest, value: null }, { name: "context", opt: true, type: macro :openfl.media.SoundLoaderContext, value: null }, { name: "forcePlayAsMusic", opt: true, type: macro :Bool, value: macro false } ];$/;"	v
args	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^			var args = [ { name: "width", opt: false, type: macro :Int, value: null }, { name: "height", opt: false, type: macro :Int, value: null }, { name: "transparent", opt: true, type: macro :Bool, value: macro true }, { name: "fillRGBA", opt: true, type: macro :Int, value: macro 0xFFFFFFFF } ];$/;"	v
args	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^					var args = Type.enumParameters(bucket.graphicType);		$/;"	v
args	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var args = Type.enumParameters(path.type);$/;"	v
args	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^			var args = [ { name: "size", opt: true, type: macro :Int, value: macro 0 } ];$/;"	v
args	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^			var args = [ { name: "stream", opt: true, type: macro :openfl.net.URLRequest, value: null }, { name: "context", opt: true, type: macro :openfl.media.SoundLoaderContext, value: null }, { name: "forcePlayAsMusic", opt: true, type: macro :Bool, value: macro false } ];$/;"	v
args	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^			var args = [ { name: "width", opt: false, type: macro :Int, value: null }, { name: "height", opt: false, type: macro :Int, value: null }, { name: "transparent", opt: true, type: macro :Bool, value: macro true }, { name: "fillRGBA", opt: true, type: macro :Int, value: macro 0xFFFFFFFF } ];$/;"	v
args	/usr/lib/haxe/lib/openfl/3,0,8/script/RunScript.hx	/^		var args = Sys.args ();$/;"	v
args	/usr/lib/haxe/lib/openfl/3,0,8/script/RunScript.hx	/^		var args = [ "run", "lime" ].concat (args);$/;"	v
args	/usr/lib/haxe/std/Sys.hx	/^	static function args() : Array<String>;$/;"	f
args	/usr/lib/haxe/std/haxe/Unserializer.hx	/^		var args = new Array();$/;"	v
args	/usr/lib/haxe/std/haxe/macro/Expr.hx	/^	var args : Array<FunctionArg>;$/;"	v
args	/usr/lib/haxe/std/haxe/remoting/HttpConnection.hx	/^			var args = u.unserialize();$/;"	v
args	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^		var args : Array<Dynamic> = s.unserialize();$/;"	v
args	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	var args : Null<List<{ name : String, opt : Bool, t : CType }>>;$/;"	v
args	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^			var args = new List();$/;"	v
args	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		var args = null;$/;"	v
args	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^			var args = null, argsOpt = false;$/;"	v
args	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^		var args = [];$/;"	v
argumentError	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/ArgumentErrorTest.hx	/^		var argumentError = new ArgumentError ();$/;"	v
arguments	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^		var arguments = additionalArguments.copy ();$/;"	v
arguments	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/MacPlatform.hx	/^		var arguments = additionalArguments.copy ();$/;"	v
arguments	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WindowsPlatform.hx	/^		var arguments = additionalArguments.copy ();$/;"	v
arguments	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^				var arguments = Sys.args ();$/;"	v
arguments	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^		var arguments = Sys.args ();$/;"	v
arguments	/usr/lib/haxe/lib/lime/2,4,3/tools/SVGExport.hx	/^				var arguments = Sys.args ();$/;"	v
arguments	/usr/lib/haxe/lib/lime/2,4,3/tools/SVGExport.hx	/^		var arguments = Sys.args ();$/;"	v
arguments	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var arguments = "xvzf";$/;"	v
arm64	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^		var arm64 = (command == "rebuild" || (project.architectures.indexOf (Architecture.ARM64) > -1 && !project.targetFlags.exists ("simulator")));$/;"	v
arm64	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^		var arm64 = false;$/;"	v
armv5	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^		var armv5 = (command == "rebuild" || ArrayHelper.containsValue (project.architectures, Architecture.ARMV5) || ArrayHelper.containsValue (project.architectures, Architecture.ARMV6));$/;"	v
armv6	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^		var armv6 = (project.architectures.indexOf (Architecture.ARMV6) > -1 && !project.targetFlags.exists ("simulator"));$/;"	v
armv6	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^		var armv6 = false;$/;"	v
armv7	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^		var armv7 = (command == "rebuild" || ArrayHelper.containsValue (project.architectures, Architecture.ARMV7));$/;"	v
armv7	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^		var armv7 = (command == "rebuild" || (project.architectures.indexOf (Architecture.ARMV7) > -1 && !project.targetFlags.exists ("simulator")));$/;"	v
armv7	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^		var armv7 = false;$/;"	v
armv7s	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^		var armv7s = (project.architectures.indexOf (Architecture.ARMV7S) > -1 && !project.targetFlags.exists ("simulator"));$/;"	v
armv7s	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^		var armv7s = false;$/;"	v
arr	/usr/lib/haxe/std/haxe/Serializer.hx	/^			var arr:Array<Dynamic> = Type.enumParameters(v);$/;"	v
arr	/usr/lib/haxe/std/haxe/format/JsonParser.hx	/^				var arr = [], comma : Null<Bool> = null;$/;"	v
arr2d	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		var arr2d = new Array<Array<UInt>>();$/;"	v
array	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBuoyancy.hx	/^					var array:Array<B2Vec2> = [];$/;"	v
array	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^					var array:Array<Dynamic> = Reflect.field (bucket, child.name + "___array");$/;"	v
array	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^					var array:Array<Dynamic> = Reflect.field (destination, field + "___array");$/;"	v
array	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^				var array:Array<Dynamic> = Reflect.field (this, id + "___array");$/;"	v
array	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^			var array:Array<Dynamic> = Reflect.field (current, field + "___array");$/;"	v
array	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^		var array = getArray (id);$/;"	v
array	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^		var array:Array<Dynamic> = null;$/;"	v
array	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^		var array = new Array<T> ();$/;"	v
array	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^		var array = this.data.toArray ();$/;"	v
array	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/VectorTest.hx	/^		var array = new Array<Int> ();$/;"	v
array	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var array : Array<ClassField>;$/;"	v
arrayBucket	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^					var arrayBucket = { };$/;"	v
arrayBuffer	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/ArrayBufferTest.hx	/^		var arrayBuffer = new ArrayBuffer (#if js 0 #end);$/;"	v
arrayBufferView	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/ArrayBufferViewTest.hx	/^		var arrayBufferView = new Float32Array (0);$/;"	v
artist	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/ID3Info.hx	/^	public var artist:String;$/;"	v
asArray	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	public static function asArray(vertices:Array <Dynamic>, vertexCount:Float):B2PolygonShape$/;"	f
asBox	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	public static function asBox(hx:Float, hy:Float):B2PolygonShape$/;"	f
asEdge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	static public function asEdge(v1:B2Vec2, v2:B2Vec2):B2PolygonShape$/;"	f
asOrientedBox	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	public static function asOrientedBox(hx:Float, hy:Float, center:B2Vec2 = null, angle:Float = 0.0):B2PolygonShape$/;"	f
asString	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function asString ():String {$/;"	f
asString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function asString ():String {$/;"	f
asVector	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	public static function asVector(vertices:Array <B2Vec2>, vertexCount:Float):B2PolygonShape$/;"	f
as_string	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^			var as_string = false;$/;"	v
ascend	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	var ascend:Int;$/;"	v
ascend	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	var ascend: Int;$/;"	v
ascender	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	public var ascender (get, null):Int;$/;"	v
ascender	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^		var ascender = CairoTextField.getLineMetric (this, lineIndex, ASCENDER);$/;"	v
ascender	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^		var ascender = lineHeight * 0.8;$/;"	v
ascent	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^			var ascent = Math.ceil (font.ascend * swf_em \/ font.em_size);$/;"	v
ascent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/AbstractFont.hx	/^	private var ascent:Int;$/;"	v
ascent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextLineMetrics.hx	/^	public var ascent:Float;$/;"	v
ascent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	var ascent:Float;$/;"	v
ascent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextLineMetrics.hx	/^	public var ascent:Float;$/;"	v
ascii	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		static public var ascii:Array<String> = new Array();$/;"	v
asin	/usr/lib/haxe/std/Math.hx	/^	static function asin(v:Float):Float;$/;"	f
ask	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CLIHelper.hx	/^	public static function ask (question:String, options:Array<String> = null):Answer {$/;"	f
assemble	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^	public function assemble (source:String, ext_part = null, ext_version = null):Dynamic {$/;"	f
assert	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    inline function assert(condition:Bool) {$/;"	f
assertFalse	/usr/lib/haxe/std/haxe/unit/TestCase.hx	/^	function assertFalse( b:Bool, ?c : PosInfos ) : Void {$/;"	f
assertMatrix3DnearEquals	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^	private function assertMatrix3DnearEquals(expected:Matrix3D, actual:Matrix3D, ?tolerance:Float = 0.001, ?pos : haxe.PosInfos ) {$/;"	f
assertTrue	/usr/lib/haxe/std/haxe/unit/TestCase.hx	/^	function assertTrue( b:Bool, ?c : PosInfos ) : Void {$/;"	f
assertVector3DnearEquals	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^	private function assertVector3DnearEquals(expected:Vector3D, actual:Vector3D, ?tolerance:Float =0.001, ?pos : haxe.PosInfos ) {$/;"	f
assertVectorNearEquals	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^	private function assertVectorNearEquals(expected:Vector<Float>, actual:Vector<Float>, ?tolerance:Float =0.001, ?pos : haxe.PosInfos ) {$/;"	f
asset	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Asset.hx	/^		var asset = new Asset ("", "", null, null, false);$/;"	v
asset	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^					var asset = new Asset (path + "\/" + file, targetPath + file, type, embed);$/;"	v
asset	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^					var asset = new Asset (path + childPath, targetPath + childTargetPath, childType, childEmbed);$/;"	v
asset	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^				var asset = new Asset (path, targetPath, type, embed);$/;"	v
assetType	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FlashPlatform.hx	/^			var assetType:AssetType = Reflect.field (AssetType, asset.type.toUpperCase ());$/;"	v
assetType	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^		var assetType = this.type.get (id);$/;"	v
assetType	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^		var assetType = this.type.get (id);$/;"	v
assetType	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^		var assetType = this.type.get (id);$/;"	v
assets	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public var assets:Array <Asset>;$/;"	v
assets	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^		var assets = [];$/;"	v
assets	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FlashPlatform.hx	/^		var assets:Array <Dynamic> = cast context.assets;$/;"	v
assetsPrefix	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^		var assetsPrefix = ApplicationMain.config.assetsPrefix;$/;"	v
assetsPrefix	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^		var assetsPrefix = ApplicationMain.config.assetsPrefix;$/;"	v
astr	/usr/lib/haxe/std/haxe/remoting/SocketConnection.hx	/^		var astr, estr;$/;"	v
async	/usr/lib/haxe/std/haxe/Http.hx	/^	public var async : Bool;$/;"	v
atan	/usr/lib/haxe/std/Math.hx	/^	static function atan(v:Float):Float;$/;"	f
atan2	/usr/lib/haxe/std/Math.hx	/^	static function atan2(y:Float, x:Float):Float;$/;"	f
athis	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	var athis : CType;$/;"	v
atime	/usr/lib/haxe/std/sys/FileStat.hx	/^	var atime : Date;$/;"	v
att	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^	public var att(default,null) : AttribAccess;$/;"	v
att_count	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^			var att_count = src.readUInt16();$/;"	v
attach	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLProgram.hx	/^	public function attach (shader:GLShader):Void {$/;"	f
attach	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Lib.hx	/^	public static function attach (name:String):MovieClip {$/;"	f
attach	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	public static function attach (name:String):MovieClip {$/;"	f
attach	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLProgram.hx	/^	public function attach (shader:GLShader):Void {$/;"	f
attachNetStream	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Video.hx	/^	public function attachNetStream (ns:NetStream):Void {$/;"	f
attachShader	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function attachShader (program:GLProgram, shader:GLShader):Void;$/;"	f
attachShader	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function attachShader (program:GLProgram, shader:GLShader):Void {$/;"	f
attachShader	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function attachShader (program:GLProgram, shader:GLShader):Void {$/;"	f
attachShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function attachShader(program:GLProgram, shader:GLShader):Void $/;"	f
attachShader	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function attachShader(program:GLProgram, shader:GLShader):Void;$/;"	f
attrValue	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^				var attrValue = elem.x.get (attrName);$/;"	v
attribs	/usr/lib/haxe/std/haxe/xml/Check.hx	/^			var attribs = if( attribs == null ) new Array() else attribs.copy();$/;"	v
attribute	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^			var attribute = "";$/;"	v
attributes	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var attributes (default, null):Dynamic \/*NamedNodeMap*\/;$/;"	v
attributes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/AbstractShader.hx	/^	public var attributes:Array<Int>;$/;"	v
attributes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/Shader.hx	/^	public var attributes:Map<String, Int> = new Map();$/;"	v
attributes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	var attributes:Array<VertexAttribute> = [];$/;"	v
attributes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexArray.hx	/^	public var attributes:Array<VertexAttribute> = [];$/;"	v
attributes	/usr/lib/haxe/std/Xml.hx	/^	function attributes() : Iterator<String>;$/;"	f
audio	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^					var audio = library.getAudioBuffer (symbolName);$/;"	v
audio	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^			var audio = cache.audio.get (id);$/;"	v
audio	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public var audio:Map<String, AudioBuffer>;$/;"	v
audio	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var audio = new MpegAudio(frames, encoderDelay, endPadding);$/;"	v
audioBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioBuffer.hx	/^				var audioBuffer = new AudioBuffer ();$/;"	v
audioBuffer	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^				var audioBuffer:AudioBuffer = new AudioBuffer();$/;"	v
audioBuffer	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^				var audioBuffer:AudioBuffer = new AudioBuffer();$/;"	v
audioCodec	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/NetStream.hx	/^	public var audioCodec:Int;$/;"	v
audioFormat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^		var audioFormat:Int = switch (format) {$/;"	v
audioThread	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	public var audioThread:Thread;$/;"	v
auth	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^	var auth : {$/;"	v
authType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequest.hx	/^	public var authType:Int;$/;"	v
authorID	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^	var authorID:String;$/;"	v
authority	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URIParser.hx	/^	public var authority:String;$/;"	v
authority	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthRequest.hx	/^		var authority = uri.authority.toLowerCase();$/;"	v
autoInc	/usr/lib/haxe/std/sys/db/TableCreate.hx	/^	static function autoInc( dbName ) {$/;"	f
autoShowFrame	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^	public static var autoShowFrame:Bool = true;$/;"	v
autoSize	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public var autoSize (get, set):TextFieldAutoSize;$/;"	v
autos3d	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public var autos3d (get, set):Bool;$/;"	v
avHardwareDisable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var avHardwareDisable (default, null) = true;$/;"	v
avHardwareDisable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var avHardwareDisable (default, null) = true;$/;"	v
avail	/usr/lib/haxe/std/haxe/io/BytesInput.hx	/^			var avail : Int = b.bytesAvailable;$/;"	v
avail	/usr/lib/haxe/std/haxe/io/BytesInput.hx	/^			var avail : Int = this.len;$/;"	v
available	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var available:Bool = false;$/;"	v
available	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/external/ExternalInterface.hx	/^	public static var available (get, null):Bool;$/;"	v
available	/usr/lib/haxe/lib/openfl/3,0,8/openfl/external/ExternalInterface.hx	/^	public static var available = true;$/;"	v
available	/usr/lib/haxe/std/haxe/io/BufferInput.hx	/^	public var available : Int;$/;"	v
available	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	public function available() {$/;"	f
available	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^		var available = c.buf.length - c.bufpos;$/;"	v
avds	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^				var avds = listAVDs ();$/;"	v
avds	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^		var avds = new Array <String> ();$/;"	v
avl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var avl:Array<Int> = [for (i in 0...n) i];$/;"	v
awake	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2BodyDef.hx	/^	public var awake:Bool;$/;"	v
ax	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^					var ax:B2Vec2 = circle.m_R.col1;$/;"	v
ax	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^						var ax:Float, ay:Float;$/;"	v
ax	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^			var ax = p[2* i0], ay = p[2 * i0 + 1];$/;"	v
axis	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^				var axis:B2Vec2 = xf.R.col1;$/;"	v
axis	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var axis:B2Vec2 = bA.getWorldVector(m_localXAxis1);$/;"	v
axis	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var axis:B2Vec2 = bA.getWorldVector(m_localXAxis1);$/;"	v
axis	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public var axis:Int;$/;"	v
axis	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/JoystickEvent.hx	/^	public var axis:Array<Float>;$/;"	v
axisA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^		var axisA:B2Vec2;$/;"	v
axisB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^		var axisB:B2Vec2;$/;"	v
b	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^			var b:Float = dA.x * dB.x + dA.y * dB.y;$/;"	v
b	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^		var b:Float = (sX*sX + sY*sY) - m_radius * m_radius;$/;"	v
b	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Color.hx	/^	public var b (null, set):Float;$/;"	v
b	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat22.hx	/^		var b:Float = col2.x; $/;"	v
b	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^		var b:B2Vec2 = new B2Vec2(abs(a.x), abs(a.y));$/;"	v
b	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^			var b:B2Body = m_bodies[i];$/;"	v
b	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^		var b:B2Body;$/;"	v
b	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var b:B2Body = m_bodyList;$/;"	v
b	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var b:B2Body = new B2Body(def, this);$/;"	v
b	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var b:B2Body;$/;"	v
b	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^			var b:Float = -Cdot1 - (m_impulse.y - f1.y) * m_K.col2.x;$/;"	v
b	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^		var b:B2Body = m_bodyB;$/;"	v
b	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^			var b:B2AABB = new B2AABB();$/;"	v
b	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestStack.hx	/^			var b:B2Body;$/;"	v
b	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^		var b = new StringBuf();$/;"	v
b	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^						var b = data[i * 4];$/;"	v
b	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^					var b, g, r, a;$/;"	v
b	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^			var b = bytes.readUnsignedByte ();$/;"	v
b	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var b = (color >> 8) & 0xFF;$/;"	v
b	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public var b:Float;$/;"	v
b	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ImageHelper.hx	/^			var b:Int = (backgroundColor & 0xFF);$/;"	v
b	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var b:Int;$/;"	v
b	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/OpLUT.hx	/^	public var b:Bool;$/;"	v
b	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Token.hx	/^	public var b:Destination;$/;"	v
b	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Opcode.hx	/^	public var b:FS;$/;"	v
b	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^			var b = ((format.color) & 0xFF) \/ 0xFF;$/;"	v
b	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^							var b = (color & 0x0000FF) \/ 0xFF;$/;"	v
b	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^			var b = (rgb & 0x0000FF) \/ 0xFF;$/;"	v
b	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^			var b = (color & 0x0000FF) \/ 0xFF;$/;"	v
b	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var b = (color & 0x0000FF);$/;"	v
b	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var b = (rgb & 0x0000FF);$/;"	v
b	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^			var b = (rgb & 0x0000FF);$/;"	v
b	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var b = bucketPool.pop();$/;"	v
b	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var b = color[2];$/;"	v
b	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var b = matrix.b;$/;"	v
b	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Memory.hx	/^	private static var b:Bytes;$/;"	v
b	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Memory.hx	/^	private static var b:BytesData;$/;"	v
b	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^	public var b:Float;$/;"	v
b	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^		var b = (value & 0x0000FF);$/;"	v
b	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^	public var b:Float;$/;"	v
b	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^		var b = new BytesBuffer();$/;"	v
b	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/NMEPreloader.hx	/^		var b = backgroundColor & 0xFF;$/;"	v
b	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/NMEPreloader.hx	/^		var b = backgroundColor & 0xFF;$/;"	v
b	/usr/lib/haxe/std/List.hx	/^		var b = new List();$/;"	v
b	/usr/lib/haxe/std/StringBuf.hx	/^	var b:String = "";$/;"	v
b	/usr/lib/haxe/std/haxe/CallStack.hx	/^		var b = new StringBuf();$/;"	v
b	/usr/lib/haxe/std/haxe/Http.hx	/^				var b = new haxe.io.BytesBuffer();$/;"	v
b	/usr/lib/haxe/std/haxe/Http.hx	/^			var b = new StringBuf();$/;"	v
b	/usr/lib/haxe/std/haxe/Http.hx	/^		var b = new StringBuf();$/;"	v
b	/usr/lib/haxe/std/haxe/Http.hx	/^		var b = new haxe.io.BytesBuffer();$/;"	v
b	/usr/lib/haxe/std/haxe/Resource.hx	/^				var b : haxe.io.Bytes = haxe.crypto.Base64.decode(x.data);$/;"	v
b	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^		var b = new BaseCode(haxe.io.Bytes.ofString(base));$/;"	v
b	/usr/lib/haxe/std/haxe/crypto/Crc32.hx	/^		var b = b.getData();$/;"	v
b	/usr/lib/haxe/std/haxe/crypto/Crc32.hx	/^		var b = data.getData();$/;"	v
b	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^		var b = -271733879;$/;"	v
b	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^		var b = 0xEFCDAB89;$/;"	v
b	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^			var b:BytesData = untyped s.getBytes("UTF-8");$/;"	v
b	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^		var b = b;$/;"	v
b	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^		var b = cs.system.text.Encoding.UTF8.GetBytes(s);$/;"	v
b	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^		var b = new flash.utils.ByteArray();$/;"	v
b	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^		var b = new haxe.io.BytesInput(this,pos,4);$/;"	v
b	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^		var b = new haxe.io.BytesInput(this,pos,8);$/;"	v
b	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^	var b : BytesData;$/;"	v
b	/usr/lib/haxe/std/haxe/io/BytesBuffer.hx	/^		var b = new BytesOutput();$/;"	v
b	/usr/lib/haxe/std/haxe/io/BytesBuffer.hx	/^	var b : Array<Int>;$/;"	v
b	/usr/lib/haxe/std/haxe/io/BytesBuffer.hx	/^	var b : BytesData;$/;"	v
b	/usr/lib/haxe/std/haxe/io/BytesBuffer.hx	/^	var b : Dynamic; \/\/ neko string buffer$/;"	v
b	/usr/lib/haxe/std/haxe/io/BytesBuffer.hx	/^	var b : String;$/;"	v
b	/usr/lib/haxe/std/haxe/io/BytesBuffer.hx	/^	var b : cs.system.io.MemoryStream;$/;"	v
b	/usr/lib/haxe/std/haxe/io/BytesBuffer.hx	/^	var b : flash.utils.ByteArray;$/;"	v
b	/usr/lib/haxe/std/haxe/io/BytesBuffer.hx	/^	var b : java.io.ByteArrayOutputStream;$/;"	v
b	/usr/lib/haxe/std/haxe/io/BytesInput.hx	/^	var b : BytesData;$/;"	v
b	/usr/lib/haxe/std/haxe/io/BytesOutput.hx	/^	var b : BytesBuffer;$/;"	v
b	/usr/lib/haxe/std/haxe/io/BytesOutput.hx	/^	var b : flash.utils.ByteArray;$/;"	v
b	/usr/lib/haxe/std/haxe/io/Input.hx	/^		var b = Bytes.alloc(len);$/;"	v
b	/usr/lib/haxe/std/haxe/io/Input.hx	/^		var b = s.getData();$/;"	v
b	/usr/lib/haxe/std/haxe/io/Output.hx	/^		var b = Bytes.ofString(s);$/;"	v
b	/usr/lib/haxe/std/haxe/io/Output.hx	/^		var b = s.getData();$/;"	v
b	/usr/lib/haxe/std/haxe/io/Output.hx	/^		var b = untyped new Bytes(s.length,s.__s);$/;"	v
b	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^				var b : Type.BaseType, name;$/;"	v
b	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^		var b = bits & ((1 << n) - 1);$/;"	v
b	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^		var b = bits & 1 == 1;$/;"	v
b	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^		var b = haxe.io.Bytes.alloc(BUFSIZE);$/;"	v
b	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^		var b = new StringBuf();$/;"	v
b	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var b = new StringBuf();$/;"	v
b0	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^		var b0 = b.clone ();$/;"	v
b0	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var b0 = info.frameData.get(info.infoStartIndex + 0x8d);$/;"	v
b0	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^		var b0 = b.clone ();$/;"	v
b00	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^			var b00 = parentTransform.a;$/;"	v
b01	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^			var b01 = parentTransform.b;$/;"	v
b1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var b1:B2AABB = new B2AABB();$/;"	v
b1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var b1:B2Body = joint.getBodyA();$/;"	v
b1	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^					var b1:B2AABB = new B2AABB();$/;"	v
b1	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^			var b1:B2Body = joint.m_body1;$/;"	v
b1	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var b1 = b;$/;"	v
b1	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var b1 = info.frameData.get(info.infoStartIndex + 0x8e);$/;"	v
b1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var b1 = b;$/;"	v
b1	/usr/lib/haxe/std/haxe/Serializer.hx	/^					var b1 = v.get(i++);$/;"	v
b1	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^		var b1 = b;$/;"	v
b1	/usr/lib/haxe/std/haxe/io/BytesBuffer.hx	/^		var b1 = b;$/;"	v
b1	/usr/lib/haxe/std/haxe/io/BytesInput.hx	/^			var b1 = b;$/;"	v
b10	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^			var b10 = parentTransform.c;$/;"	v
b11	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^			var b11 = parentTransform.d;$/;"	v
b2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var b2:B2AABB = new B2AABB();$/;"	v
b2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var b2:B2Body = joint.getBodyB();$/;"	v
b2	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var b2 = bytes.b;$/;"	v
b2	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var b2 = info.frameData.get(info.infoStartIndex + 0x8f);$/;"	v
b2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var b2 = data.b;$/;"	v
b2	/usr/lib/haxe/std/haxe/Serializer.hx	/^					var b2 = v.get(i++);$/;"	v
b2	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^		var b2 = new flash.utils.ByteArray();$/;"	v
b2	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^		var b2 = other.b;$/;"	v
b2	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^		var b2 = src.b;$/;"	v
b2	/usr/lib/haxe/std/haxe/io/BytesBuffer.hx	/^		var b2 = src.getData();$/;"	v
b2	/usr/lib/haxe/std/haxe/io/BytesInput.hx	/^			var b2 = buf.getData();$/;"	v
b2Assert	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Settings.hx	/^	static public function b2Assert(a:Bool) : Void$/;"	f
b2CollideEdgeAndCircle	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2EdgeAndCircleContact.hx	/^	private function b2CollideEdgeAndCircle(manifold: B2Manifold,$/;"	f
b2CollidePolyAndEdge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^	private function b2CollidePolyAndEdge(manifold: B2Manifold,$/;"	f
b2CollidePolyTempVec	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^	static private var b2CollidePolyTempVec:B2Vec2 = new B2Vec2();$/;"	v
b2LineJointDef	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJointDef.hx	/^	public function b2LineJointDef()$/;"	f
b2Mat22_identity	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public var b2Mat22_identity:B2Mat22 = B2Mat22.fromVV(new B2Vec2(1.0, 0.0), new B2Vec2(0.0, 1.0));$/;"	v
b2MixFriction	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Settings.hx	/^	public static function b2MixFriction(friction1:Float, friction2:Float):Float$/;"	f
b2MixRestitution	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Settings.hx	/^	public static function b2MixRestitution(restitution1:Float, restitution2:Float):Float$/;"	f
b2Transform_identity	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public var b2Transform_identity:B2Transform = new B2Transform(b2Vec2_zero, b2Mat22_identity);$/;"	v
b2Vec2_zero	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public var b2Vec2_zero:B2Vec2 = new B2Vec2(0.0, 0.0);$/;"	v
b2_aabbExtension	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Settings.hx	/^	static public var b2_aabbExtension:Float = 0.1;$/;"	v
b2_aabbMultiplier	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Settings.hx	/^	static public var b2_aabbMultiplier:Float = 2.0;$/;"	v
b2_angularSleepTolerance	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Settings.hx	/^	static public var b2_angularSleepTolerance:Float = 2.0 \/ 180.0 * \/*B2Settings.b2_pi*\/ Math.PI;	\/\/ 2 degrees\/s$/;"	v
b2_angularSlop	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Settings.hx	/^	static public var b2_angularSlop:Float = 2.0 \/ 180.0 * \/*b2_pi*\/ Math.PI;			\/\/ 2 degrees$/;"	v
b2_contactBaumgarte	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Settings.hx	/^	static public var b2_contactBaumgarte:Float = 0.2;$/;"	v
b2_defaultFilter	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactFilter.hx	/^	static public var b2_defaultFilter:B2ContactFilter = new B2ContactFilter();$/;"	v
b2_defaultListener	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactListener.hx	/^	public static var b2_defaultListener:B2ContactListener = new B2ContactListener();$/;"	v
b2_dynamicBody	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		static public var b2_dynamicBody:Int = 2;$/;"	v
b2_gjkCalls	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Distance.hx	/^private static var b2_gjkCalls:Int = 0;$/;"	v
b2_gjkIters	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Distance.hx	/^private static var b2_gjkIters:Int = 0;$/;"	v
b2_gjkMaxIters	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Distance.hx	/^private static var b2_gjkMaxIters:Int = 0;$/;"	v
b2_kinematicBody	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		static public var b2_kinematicBody:Int = 1;$/;"	v
b2_linearSleepTolerance	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Settings.hx	/^	static public var b2_linearSleepTolerance:Float = 0.01;			\/\/ 1 cm\/s$/;"	v
b2_linearSlop	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Settings.hx	/^	static public var b2_linearSlop:Float = 0.005;	\/\/ 0.5 cm$/;"	v
b2_maxAngularCorrection	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Settings.hx	/^	static public var b2_maxAngularCorrection:Float = 8.0 \/ 180.0 * \/*b2_pi*\/ Math.PI;			\/\/ 8 degrees$/;"	v
b2_maxLinearCorrection	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Settings.hx	/^	static public var b2_maxLinearCorrection:Float = 0.2;	\/\/ 20 cm$/;"	v
b2_maxManifoldPoints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Settings.hx	/^	static public var b2_maxManifoldPoints:Int = 2;$/;"	v
b2_maxRotation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Settings.hx	/^	static public var b2_maxRotation:Float = 0.5 * \/*b2_pi*\/ Math.PI;$/;"	v
b2_maxRotationSquared	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Settings.hx	/^	static public var b2_maxRotationSquared:Float = \/*b2_maxRotation * b2_maxRotation*\/ (0.5 * Math.PI) * (0.5 * Math.PI);$/;"	v
b2_maxTOIContactsPerIsland	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Settings.hx	/^	static public var b2_maxTOIContactsPerIsland:Int = 32;$/;"	v
b2_maxTOIJointsPerIsland	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Settings.hx	/^	static public var b2_maxTOIJointsPerIsland:Int = 32;$/;"	v
b2_maxTranslation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Settings.hx	/^	static public var b2_maxTranslation:Float = 2.0;$/;"	v
b2_maxTranslationSquared	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Settings.hx	/^	static public var b2_maxTranslationSquared:Float = \/*b2_maxTranslation * b2_maxTranslation*\/ 4.0;$/;"	v
b2_minPulleyLength	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	static public var b2_minPulleyLength:Float = 2.0;$/;"	v
b2_nullFeature	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^	static public var b2_nullFeature:Int = 0x000000ff;\/\/UCHAR_MAX;$/;"	v
b2_pi	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Settings.hx	/^	static public var b2_pi:Float = Math.PI;$/;"	v
b2_polygonRadius	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Settings.hx	/^	static public var b2_polygonRadius:Float = 2.0 * \/*b2_linearSlop*\/ 0.005;$/;"	v
b2_staticBody	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		static public var b2_staticBody:Int = 0;$/;"	v
b2_timeToSleep	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Settings.hx	/^	static public var b2_timeToSleep:Float = 0.5;					\/\/ half a second$/;"	v
b2_toiCalls	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^	private static var b2_toiCalls:Int = 0;$/;"	v
b2_toiIters	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^	private static var b2_toiIters:Int = 0;$/;"	v
b2_toiMaxIters	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^	private static var b2_toiMaxIters:Int = 0;$/;"	v
b2_toiMaxRootIters	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^	private static var b2_toiMaxRootIters:Int = 0;$/;"	v
b2_toiRootIters	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^	private static var b2_toiRootIters:Int = 0;$/;"	v
b2_toiSlop	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Settings.hx	/^	static public var b2_toiSlop:Float = 8.0 * \/*b2_linearSlop*\/ 0.005;$/;"	v
b2_velocityThreshold	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Settings.hx	/^	static public var b2_velocityThreshold:Float = 1.0;		\/\/ 1 m\/s$/;"	v
b3	/usr/lib/haxe/std/haxe/Serializer.hx	/^					var b3 = v.get(i++);$/;"	v
b4	/usr/lib/haxe/std/haxe/io/Output.hx	/^		var b4 = (exp + 0x7F) >> 1 | (exp>0 ? ((x<0) ? 1<<7 : 1<<6) : ((x<0) ? 1<<7 : 0)),$/;"	v
b64	/usr/lib/haxe/std/haxe/Serializer.hx	/^				var b64 = BASE64;$/;"	v
b8	/usr/lib/haxe/std/haxe/io/Output.hx	/^		var b8 = (exp + 0x3FF) >> 4 | (exp>0 ? ((x<0) ? 1<<7 : 1<<6) : ((x<0) ? 1<<7 : 0)),$/;"	v
bA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var bA:B2Body;$/;"	v
bA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2CircleContact.hx	/^		var bA:B2Body = m_fixtureA.getBody();$/;"	v
bA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2EdgeAndCircleContact.hx	/^		var bA:B2Body = m_fixtureA.getBody();$/;"	v
bA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndCircleContact.hx	/^		var bA:B2Body = m_fixtureA.m_body;$/;"	v
bA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var bA:B2Body = m_fixtureA.getBody();$/;"	v
bA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolygonContact.hx	/^		var bA:B2Body = m_fixtureA.getBody();$/;"	v
bA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^		var bA:B2Body = m_bodyA;$/;"	v
bA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^		var bA:B2Body = m_bodyA;$/;"	v
bA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^		var bA:B2Body = m_bodyA;$/;"	v
bA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var bA:B2Body = m_bodyA;$/;"	v
bA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var bA:B2Body = m_bodyA;$/;"	v
bA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var bA:B2Body = m_bodyA;$/;"	v
bA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^		var bA:B2Body = m_bodyA;$/;"	v
bA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^		var bA:B2Body = m_bodyA;$/;"	v
bB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var bB:B2Body;$/;"	v
bB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2CircleContact.hx	/^		var bB:B2Body = m_fixtureB.getBody();$/;"	v
bB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2EdgeAndCircleContact.hx	/^		var bB:B2Body = m_fixtureB.getBody();$/;"	v
bB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndCircleContact.hx	/^		var bB:B2Body = m_fixtureB.m_body;$/;"	v
bB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var bB:B2Body = m_fixtureB.getBody();$/;"	v
bB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolygonContact.hx	/^		var bB:B2Body = m_fixtureB.getBody();$/;"	v
bB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^		var bB:B2Body = m_bodyB;$/;"	v
bB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^		var bB:B2Body= m_bodyB;$/;"	v
bB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^		var bB:B2Body = m_bodyB;$/;"	v
bB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var bB:B2Body = m_bodyB;$/;"	v
bB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var bB:B2Body = m_bodyB;$/;"	v
bB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var bB:B2Body = m_bodyB;$/;"	v
bB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^		var bB:B2Body = m_bodyB;$/;"	v
bB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^		var bB:B2Body= m_bodyB;$/;"	v
bIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var bIndex = 0;$/;"	v
bLength	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^		var bLength = 0;$/;"	v
bNeg	/usr/lib/haxe/std/UInt.hx	/^		var bNeg = b.toInt() < 0;$/;"	v
bX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^			var bX: Float = input.p1.x - v1X;$/;"	v
bX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var bX:Float = vn1 - cp1.velocityBias;$/;"	v
bX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^			var bX:Float = -Cdot1X - (m_impulse.z - f1.z) * m_K.col3.x;$/;"	v
bY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^			var bY: Float = input.p1.y - v1Y;$/;"	v
bY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var bY:Float = vn2 - cp2.velocityBias;$/;"	v
bY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^			var bY:Float = -Cdot1Y - (m_impulse.z - f1.z) * m_K.col3.y;$/;"	v
ba	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^					var ba:ByteArray = cast(data.data, ByteArray);$/;"	v
ba	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/ByteArrayTest.hx	/^		var ba:ByteArray = new ByteArray();$/;"	v
ba	/usr/lib/haxe/std/haxe/io/BytesInput.hx	/^		var ba = b.getData();$/;"	v
backedUpConfig	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var backedUpConfig:Bool = false;$/;"	v
background	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public var background (get, set):Bool;$/;"	v
backgroundColor	/usr/lib/haxe/lib/lime/2,4,3/tools/SVGExport.hx	/^				var backgroundColor = 0x00FFFFFF;$/;"	v
backgroundColor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public var backgroundColor (get, set):Int;$/;"	v
backgroundColor	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/NMEPreloader.hx	/^		var backgroundColor = getBackgroundColor ();$/;"	v
backgroundColor	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/NMEPreloader.hx	/^		var backgroundColor = getBackgroundColor ();$/;"	v
backingStorePixelRatio	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public var backingStorePixelRatio (default, null):Float;$/;"	v
backslash	/usr/lib/haxe/std/haxe/io/Path.hx	/^	public var backslash : Bool;$/;"	v
backtrace	/usr/lib/haxe/std/haxe/unit/TestStatus.hx	/^	public var backtrace : String;$/;"	v
backup	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^					var backup = File.write (path + ".bak", false);$/;"	v
backupCache	/usr/lib/haxe/std/neko/vm/Loader.hx	/^	public function backupCache( c : Dynamic ) : Dynamic {$/;"	f
backward	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextDirection.hx	/^	public var backward (get, never):Bool;$/;"	v
balance	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^	function balance(l:TreeNode<K,V>, k:K, v:V, r:TreeNode<K,V>):TreeNode<K,V> {$/;"	f
barA	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^	private static var barA:flash.display.Sprite;$/;"	v
barB	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^	private static var barB:flash.display.Sprite;$/;"	v
base	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^		var base = lime_gl_get_context_attributes ();$/;"	v
base	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^		var base:Dynamic = {};$/;"	v
base	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^			var base = Base64.encode (File.getBytes (path));$/;"	v
base	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^		var base = lime_gl_get_context_attributes();$/;"	v
base	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^		var base = this.base;$/;"	v
base	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^	var base : haxe.io.Bytes;$/;"	v
base64	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^								var base64 = base64Encode (bytes);$/;"	v
base64	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private static var base64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+\/";$/;"	v
base64	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^								var base64 = base64Encode (bytes);$/;"	v
base64	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^								var base64 = base64Encode (bytes);$/;"	v
base64	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	private static var base64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+\/";$/;"	v
base64Chars	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	private static var base64Chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+\/";$/;"	v
base64Chars	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^	private static var base64Chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+\/";$/;"	v
base64Chars	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	private static var base64Chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+\/";$/;"	v
base64Chars	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	private static var base64Chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+\/";$/;"	v
base64Decode	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^	public static function base64Decode (base64:String):ByteArray {$/;"	f
base64Decode	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^	public static function base64Decode (base64:String):haxe.io.Bytes {$/;"	f
base64Encode	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	private static function base64Encode (bytes:Bytes):String {$/;"	f
base64Encode	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^	public static function base64Encode (bytes:ByteArray):String {$/;"	f
base64Encode	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^	public static function base64Encode (bytes:haxe.io.Bytes):String {$/;"	f
base64Encode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	private static function base64Encode (bytes:Bytes):String {$/;"	f
base64Encode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	private static function base64Encode (bytes:Bytes):String {$/;"	f
base64Encoder	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	private static var base64Encoder:BaseCode;$/;"	v
base64Encoder	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^	private static var base64Encoder:BaseCode;$/;"	v
base64Encoder	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	private static var base64Encoder:BaseCode;$/;"	v
base64Encoder	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	private static var base64Encoder:BaseCode;$/;"	v
baseFactor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private var baseFactor:Float;$/;"	v
basePath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^				var basePath = path + "\/";$/;"	v
basePath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var basePath = ProcessHelper.runProcess ("", "haxelib", [ "config" ]);$/;"	v
baseURI	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var baseURI (default, null):String;$/;"	v
baseUrl	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var baseUrl = devServer ? FirefoxHelper.DEVELOPMENT_SERVER_URL : FirefoxHelper.PRODUCTION_SERVER_URL;$/;"	v
baseX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var baseX:Float;$/;"	v
base_decode	/usr/lib/haxe/std/haxe/Unserializer.hx	/^	static var base_decode = neko.Lib.load("std","base_decode",2);$/;"	v
base_decode	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^	private static var base_decode = neko.Lib.load("std","base_decode",2);$/;"	v
base_encode	/usr/lib/haxe/std/haxe/Serializer.hx	/^	static var base_encode = neko.Lib.load("std","base_encode",2);$/;"	v
base_encode	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^	private static var base_encode = neko.Lib.load("std","base_encode",2);$/;"	v
base_encode	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^	static var base_encode = neko.Lib.load("std","base_encode",2);$/;"	v
basicAuth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequest.hx	/^	public function basicAuth (user:String, password:String):Void {$/;"	f
batchDrawing	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var batchDrawing = renderSession.spriteBatch.drawing;$/;"	v
batchSize	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var batchSize:Int = 0;$/;"	v
batchedSprites	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	var batchedSprites:Int;$/;"	v
bc	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBuoyancy.hx	/^			var bc:B2BuoyancyController = new B2BuoyancyController();$/;"	v
bd	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var bd:B2BodyDef = new B2BodyDef();$/;"	v
bd	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var bd:B2BodyDef = new B2BodyDef();$/;"	v
bd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBreakable.hx	/^				var bd:B2BodyDef = new B2BodyDef();$/;"	v
bd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBridge.hx	/^				var bd:B2BodyDef = new B2BodyDef();$/;"	v
bd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCCD.hx	/^			var bd:B2BodyDef;$/;"	v
bd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCompound.hx	/^			var bd:B2BodyDef;$/;"	v
bd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^			var bd:B2BodyDef;$/;"	v
bd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestOneSidedPlatform.hx	/^			var bd:B2BodyDef;$/;"	v
bd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRagdoll.hx	/^			var bd:B2BodyDef = new B2BodyDef();$/;"	v
bd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRaycast.hx	/^			var bd:B2BodyDef = new B2BodyDef();$/;"	v
bd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestStack.hx	/^			var bd:B2BodyDef = new B2BodyDef();$/;"	v
bd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^		var bd:B2BodyDef;$/;"	v
bd1	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^				var bd1:B2BodyDef = new B2BodyDef();$/;"	v
bd1	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^		var bd1:B2BodyDef = new B2BodyDef();$/;"	v
bd2	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^				var bd2:B2BodyDef = new B2BodyDef();$/;"	v
bd2	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^		var bd2:B2BodyDef = new B2BodyDef();$/;"	v
bd3	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^				var bd3:B2BodyDef = new B2BodyDef();$/;"	v
before	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^				var before = data.length;$/;"	v
begin	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^	public function begin (renderSession:RenderSession, buffer:GLFramebuffer = null):Void {$/;"	f
begin	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	public function begin(renderSession:RenderSession, ?clipRect:Rectangle = null):Void {$/;"	f
beginBitmapFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public function beginBitmapFill (bitmap:BitmapData, matrix:Matrix = null, repeat:Bool = true, smooth:Bool = false):Void {$/;"	f
beginBitmapFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public function beginBitmapFill (bitmap:BitmapData, matrix:Matrix = null, repeat:Bool = true, smooth:Bool = false) {$/;"	f
beginContact	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactListener.hx	/^	public function beginContact(contact:B2Contact):Void { }$/;"	f
beginFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public function beginFill (color:Int, alpha:Float = 1.0):Void {$/;"	f
beginFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public function beginFill (color:Int = 0, alpha:Float = 1):Void {$/;"	f
beginGradientFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public function beginGradientFill (type:GradientType, colors:Array<Dynamic>, alphas:Array<Dynamic>, ratios:Array<Dynamic>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:Float = 0.0):Void {$/;"	f
beginGradientFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public function beginGradientFill (type:GradientType, colors:Array<Dynamic>, alphas:Array<Dynamic>, ratios:Array<Dynamic>, matrix:Matrix = null, spreadMethod:Null<SpreadMethod> = null, interpolationMethod:Null<InterpolationMethod> = null, focalPointRatio:Null<Float> = null):Void {$/;"	f
beginPath	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function beginPath ():Void {};$/;"	f
best	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^				var best = "";$/;"	v
bestEdge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var bestEdge:Int;$/;"	v
bestIndex	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DistanceProxy.hx	/^		var bestIndex:Int = 0;$/;"	v
bestIndex	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var bestIndex:Int = 0;$/;"	v
bestSeparation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var bestSeparation:Float;$/;"	v
bestValue	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DistanceProxy.hx	/^		var bestValue:Float = m_vertices[0].x * d.x + m_vertices[0].y * d.y;$/;"	v
bestValue	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var bestValue:Float = m_vertices[0].x * d.x + m_vertices[0].y * d.y;$/;"	v
bestWidth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		var bestWidth = 0.0;$/;"	v
best_m	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		var best_m = 0.0;$/;"	v
bezierCurveTo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function bezierCurveTo (cp1x:Float, cp1y:Float, cp2x:Float, cp2y:Float, x:Float, y:Float):Void {};$/;"	f
bh	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^			var bh:Int = height - sh - dy;$/;"	v
bh	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^			var bh:Int = height - sh - dy;$/;"	v
bias	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^				\/\/ todo bias$/;"	i
bigEndian	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public var bigEndian (get, set):Bool;$/;"	v
bigEndian	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public var bigEndian:Bool;$/;"	v
bigEndian	/usr/lib/haxe/std/haxe/io/Input.hx	/^	public var bigEndian(default,set) : Bool;$/;"	v
bigEndian	/usr/lib/haxe/std/haxe/io/Output.hx	/^	public var bigEndian(default, set) : Bool;$/;"	v
binDirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^	private static var binDirectory:String;$/;"	v
binDirectory	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var binDirectory = "";$/;"	v
binaries	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^								var binaries = substitute (element.att.binaries);$/;"	v
binaryExtensions	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^	private static var binaryExtensions = [ "jpg", "jpeg", "png", "exe", "gif", "ini", "zip", "tar", "gz", "fla", "swf" ];$/;"	v
bind	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexArray.hx	/^	public inline function bind() {$/;"	f
bind	/usr/lib/haxe/std/sys/net/Socket.hx	/^	function bind( host : Host, port : Int ) : Void;$/;"	f
bindAttribLocation	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function bindAttribLocation (program:GLProgram, index:Int, name:String):Void;$/;"	f
bindAttribLocation	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function bindAttribLocation (program:GLProgram, index:Int, name:String):Void {$/;"	f
bindAttribLocation	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function bindAttribLocation (program:GLProgram, index:Int, name:String):Void {$/;"	f
bindAttribLocation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function bindAttribLocation(program:GLProgram, index:Int, name:String):Void $/;"	f
bindAttribLocation	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function bindAttribLocation(program:GLProgram, index:Int, name:String):Void;$/;"	f
bindBitmapDataTexture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function bindBitmapDataTexture(texture:BitmapData):Void $/;"	f
bindBitmapDataTexture	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function bindBitmapDataTexture(texture:BitmapData):Void;$/;"	f
bindBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function bindBuffer (target:Int, buffer:GLBuffer):Void;$/;"	f
bindBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function bindBuffer (target:Int, buffer:GLBuffer):Void {$/;"	f
bindBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function bindBuffer (target:Int, buffer:GLBuffer):Void {$/;"	f
bindBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function bindBuffer(target:Int, buffer:GLBuffer):Void $/;"	f
bindBuffer	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function bindBuffer(target:Int, buffer:GLBuffer):Void;$/;"	f
bindFramebuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function bindFramebuffer (target:Int, framebuffer:GLFramebuffer):Void;$/;"	f
bindFramebuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function bindFramebuffer (target:Int, framebuffer:GLFramebuffer):Void {$/;"	f
bindFramebuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function bindFramebuffer (target:Int, framebuffer:GLFramebuffer):Void {$/;"	f
bindFramebuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function bindFramebuffer(target:Int, framebuffer:GLFramebuffer):Void $/;"	f
bindFramebuffer	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function bindFramebuffer(target:Int, framebuffer:GLFramebuffer):Void;$/;"	f
bindGraphics	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^	public function bindGraphics (object:DisplayObject, glData:GLGraphicsData, renderSession:RenderSession):Void {$/;"	f
bindRenderbuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function bindRenderbuffer (target:Int, renderbuffer:GLRenderbuffer):Void;$/;"	f
bindRenderbuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function bindRenderbuffer (target:Int, renderbuffer:GLRenderbuffer):Void {$/;"	f
bindRenderbuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function bindRenderbuffer (target:Int, renderbuffer:GLRenderbuffer):Void {$/;"	f
bindRenderbuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function bindRenderbuffer(target:Int, renderbuffer:GLRenderbuffer):Void $/;"	f
bindRenderbuffer	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function bindRenderbuffer(target:Int, renderbuffer:GLRenderbuffer):Void;$/;"	f
bindTexture	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function bindTexture (target:Int, texture:GLTexture):Void;$/;"	f
bindTexture	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function bindTexture (target:Int, texture:GLTexture):Void {$/;"	f
bindTexture	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function bindTexture (target:Int, texture:GLTexture):Void {$/;"	f
bindTexture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	private static function bindTexture(gl:GLRenderContext, bucket:GLBucket) {$/;"	f
bindTexture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function bindTexture(target:Int, texture:GLTexture):Void $/;"	f
bindTexture	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function bindTexture(target:Int, texture:GLTexture):Void;$/;"	f
bindVertexArray	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/Shader.hx	/^	public function bindVertexArray(va:VertexArray) {$/;"	f
binops	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var binops : Array<{op:Expr.Binop, field:ClassField}>;$/;"	v
bit	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^			var bit:Int = 0;$/;"	v
bitAND	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^	function bitAND(a, b){$/;"	f
bitOR	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^	function bitOR(a, b){$/;"	f
bitXOR	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^	function bitXOR(a, b){$/;"	f
bitmap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^				var bitmap = new BitmapData (Math.ceil (bounds.width), Math.ceil (bounds.height), true);$/;"	v
bitmap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^			var bitmap = new BitmapData (Math.ceil (bounds.width), Math.ceil (bounds.height), true);$/;"	v
bitmap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^		var bitmap = shape.__graphics.__bitmap;$/;"	v
bitmap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var bitmap:BitmapData;$/;"	v
bitmap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Loader.hx	/^			var bitmap = new Bitmap (__image);$/;"	v
bitmap	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapTest.hx	/^		var bitmap = new Bitmap ();$/;"	v
bitmap	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var bitmap = new Bitmap (new BitmapData (100, 100));$/;"	v
bitmapData	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^					var bitmapData = new BitmapData (newWidth, newHeight, true, 0x000000);$/;"	v
bitmapData	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^				var bitmapData = cast (Type.createInstance (className.get (id), []), BitmapData);$/;"	v
bitmapData	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^				var bitmapData = cast (event.currentTarget.content, Bitmap).bitmapData;$/;"	v
bitmapData	/usr/lib/haxe/lib/lime/2,4,3/tools/SVGExport.hx	/^				var bitmapData = new BitmapData (width, height, true, backgroundColor);$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^				var bitmapData = BitmapData.fromImage (image);$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^				var bitmapData = image.src;$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^			var bitmapData = BitmapData.fromImage (image);$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^			var bitmapData = cache.getBitmapData (id);$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^			var bitmapData = image.src;$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^				var bitmapData = new BitmapData (width, height);$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^			var bitmapData = fontBitmapData.get (size);$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^	private static var bitmapData = new Map<Font, Map<Int, BitmapData>> ();$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^					var bitmapData = library.getBitmapData (symbolName);$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^			var bitmapData = cache.getBitmapData (id);$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public var bitmapData:Map<String, BitmapData>;$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Bitmap.hx	/^	public var bitmapData (default, set):BitmapData;$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^			var bitmapData = sourceBitmapData.clone ();$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var bitmapData = new BitmapData (0, 0, transparent);$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var bitmapData = new BitmapData (image.width, image.height);$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsBitmapFill.hx	/^	public var bitmapData:BitmapData;$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Bitmap.hx	/^	public var bitmapData:BitmapData;$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^			var bitmapData = sourceBitmapData.clone ();$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var bitmapData = new BitmapData (0, 0, transparent);$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var bitmapData = new BitmapData (0, 0, true);$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsBitmapFill.hx	/^	public var bitmapData:BitmapData;$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^				var bitmapData = cast (Type.createInstance (className.get (id), []), BitmapData);$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^				var bitmapData = cast (event.currentTarget.content, Bitmap).bitmapData;$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var bitmapData = new BitmapData (1, 1);$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var bitmapData = new BitmapData (100, 100);$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var bitmapData = new BitmapData (100, 100, false);$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var bitmapData = new BitmapData (100, 100, false, 0x00FF0000);$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var bitmapData = new BitmapData (100, 100, true);$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var bitmapData = new BitmapData (100, 100, true, 0xFF000000);$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var bitmapData = new BitmapData (100, 100, true, 0xFFFF0000);$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var bitmapData = new BitmapData (100, 100, true, color);$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var bitmapData = new BitmapData (100, 80, false, 0x00FF0000);$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var bitmapData = new BitmapData (40, 40, false, 0x000000FF);$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var bitmapData = new BitmapData (50, 50, true, 0xFFFF8800);$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var bitmapData = new BitmapData (TEST_WIDTH, TEST_HEIGHT, sourceAlpha, color);$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapTest.hx	/^		var bitmapData = new BitmapData (100, 100, false, 0xFF0000);$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var bitmapData = new BitmapData (100, 100, true, color);$/;"	v
bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFieldTest.hx	/^		var bitmapData = new BitmapData (Std.int (textField.width), Std.int (textField.height));$/;"	v
bitmapData2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var bitmapData2 = bitmapData.clone();$/;"	v
bitmapData2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var bitmapData2 = new Bitmap (new BitmapData (100, 100, true, 0xFF0000FF));$/;"	v
bitmapData2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var bitmapData2 = new BitmapData (100, 100);$/;"	v
bitmapData2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var bitmapData2 = new BitmapData (100, 100, true, 0x00FF0000);$/;"	v
bitmapData2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var bitmapData2 = new BitmapData (100, 100, true, 0x22FF0000);$/;"	v
bitmapData2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var bitmapData2 = new BitmapData (100, 100, true, 0xFFFF0000);$/;"	v
bitmapData2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var bitmapData2 = new BitmapData (50, 50, true, 0xCCCC6600);$/;"	v
bitmapData2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var bitmapData2 = new BitmapData (80, 40, false, 0x0000CC44);$/;"	v
bitmapData3	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var bitmapData3:BitmapData = cast bitmapData.compare (bitmapData2);$/;"	v
bitmapFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^	private static var bitmapFill:BitmapData;$/;"	v
bitmapFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^	private static var bitmapFill:BitmapData;$/;"	v
bitmapFill	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsBitmapFillTest.hx	/^		var bitmapFill = new GraphicsBitmapFill ();$/;"	v
bitmapFill	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsBitmapFillTest.hx	/^		var bitmapFill = new GraphicsBitmapFill (new BitmapData (100, 100));$/;"	v
bitmapFill	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsBitmapFillTest.hx	/^		var bitmapFill = new GraphicsBitmapFill (null, new Matrix ());$/;"	v
bitmapFilter	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/BitmapFilterTest.hx	/^		var bitmapFilter = new BlurFilter ();$/;"	v
bitmapRepeat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^	private static var bitmapRepeat:Bool;$/;"	v
bitmapRepeat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^	private static var bitmapRepeat:Bool;$/;"	v
bitmapStroke	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^	private static var bitmapStroke:BitmapData;$/;"	v
bitrate	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/FrameHeader.hx	/^    public var bitrate(default, null):Int;$/;"	v
bitrate	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var bitrate = switch (version) {$/;"	v
bitrateIndex	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var bitrateIndex = (b >> 4) & 0xf;$/;"	v
bits	/usr/lib/haxe/std/haxe/zip/Huffman.hx	/^		var bits = new haxe.ds.IntMap();$/;"	v
bits	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	var bits : Int;$/;"	v
bitsPerPixel	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ImageBuffer.hx	/^	public var bitsPerPixel:Int;$/;"	v
bitsPerSample	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioBuffer.hx	/^	public var bitsPerSample:Int;$/;"	v
bitsPerSample	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^		var bitsPerSample = switch(format) {$/;"	v
bl	/usr/lib/haxe/std/haxe/Int64.hx	/^		var bl = b.low & mask, bh = ushr32(b.low , 16);$/;"	v
blackBerryCodeSigningURL	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var blackBerryCodeSigningURL = "https:\/\/www.blackberry.com\/SignedKeys\/";$/;"	v
blackBerryLinuxNativeSDKPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var blackBerryLinuxNativeSDKPath = "http:\/\/developer.blackberry.com\/native\/downloads\/fetch\/installer-bbndk-2.1.0-linux-1032-201209271809-201209280007.bin";$/;"	v
blackBerryMacNativeSDKPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var blackBerryMacNativeSDKPath = "http:\/\/developer.blackberry.com\/native\/downloads\/fetch\/installer-bbndk-2.1.0-macosx-1032-201209271809-201209280007.dmg";$/;"	v
blackBerryMacWebWorksSDKPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var blackBerryMacWebWorksSDKPath = "https:\/\/developer.blackberry.com\/html5\/downloads\/fetch\/BB10-WebWorks-SDK_1.0.4.7.zip";$/;"	v
blackBerryWindowsNativeSDKPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var blackBerryWindowsNativeSDKPath = "http:\/\/developer.blackberry.com\/native\/downloads\/fetch\/installer-bbndk-2.1.0-win32-1032-201209271809-201209280007.exe";$/;"	v
blackBerryWindowsWebWorksSDKPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var blackBerryWindowsWebWorksSDKPath = "https:\/\/developer.blackberry.com\/html5\/downloads\/fetch\/BB10-WebWorks-SDK_1.0.4.7.exe";$/;"	v
blanks	/usr/lib/haxe/std/haxe/xml/Check.hx	/^	static var blanks = ~\/^[ \\r\\n\\t]*$\/;$/;"	v
blendColor	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function blendColor (red:Float, green:Float, blue:Float, alpha:Float):Void;$/;"	f
blendColor	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function blendColor (red:Float, green:Float, blue:Float, alpha:Float):Void {$/;"	f
blendColor	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function blendColor (red:Float, green:Float, blue:Float, alpha:Float):Void {$/;"	f
blendColor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function blendColor(red:Float, green:Float, blue:Float, alpha:Float):Void $/;"	f
blendColor	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function blendColor(red:Float, green:Float, blue:Float, alpha:Float):Void;$/;"	f
blendDestinationFactor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	private var blendDestinationFactor:Int; \/\/ to mimic Stage3d behavior of keeping blending across frames:$/;"	v
blendEnabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	private var blendEnabled:Bool; \/\/ to mimic Stage3d behavior of keeping blending across frames:$/;"	v
blendEquation	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function blendEquation (mode:Int):Void;$/;"	f
blendEquation	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function blendEquation (mode:Int):Void {$/;"	f
blendEquation	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function blendEquation (mode:Int):Void {$/;"	f
blendEquation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function blendEquation(mode:Int):Void $/;"	f
blendEquation	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function blendEquation(mode:Int):Void;$/;"	f
blendEquationSeparate	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function blendEquationSeparate (modeRGB:Int, modeAlpha:Int):Void;$/;"	f
blendEquationSeparate	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function blendEquationSeparate (modeRGB:Int, modeAlpha:Int):Void {$/;"	f
blendEquationSeparate	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function blendEquationSeparate (modeRGB:Int, modeAlpha:Int):Void {$/;"	f
blendEquationSeparate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function blendEquationSeparate(modeRGB:Int, modeAlpha:Int):Void $/;"	f
blendEquationSeparate	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function blendEquationSeparate(modeRGB:Int, modeAlpha:Int):Void;$/;"	f
blendFunc	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function blendFunc (sfactor:Int, dfactor:Int):Void;$/;"	f
blendFunc	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function blendFunc (sfactor:Int, dfactor:Int):Void {$/;"	f
blendFunc	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function blendFunc (sfactor:Int, dfactor:Int):Void {$/;"	f
blendFunc	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function blendFunc(sfactor:Int, dfactor:Int):Void $/;"	f
blendFunc	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function blendFunc(sfactor:Int, dfactor:Int):Void;$/;"	f
blendFuncSeparate	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function blendFuncSeparate (srcRGB:Int, dstRGB:Int, srcAlpha:Int, dstAlpha:Int):Void;$/;"	f
blendFuncSeparate	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function blendFuncSeparate (srcRGB:Int, dstRGB:Int, srcAlpha:Int, dstAlpha:Int):Void {$/;"	f
blendFuncSeparate	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function blendFuncSeparate (srcRGB:Int, dstRGB:Int, srcAlpha:Int, dstAlpha:Int):Void {$/;"	f
blendFuncSeparate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function blendFuncSeparate(srcRGB:Int, dstRGB:Int, srcAlpha:Int, dstAlpha:Int):Void $/;"	f
blendFuncSeparate	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function blendFuncSeparate(srcRGB:Int, dstRGB:Int, srcAlpha:Int, dstAlpha:Int):Void;$/;"	f
blendMode	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var blendMode:Dynamic \/*BlendMode*\/;$/;"	v
blendMode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var blendMode:Int = args[5];$/;"	v
blendMode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var blendMode:BlendMode = switch(flags & 0xF0000) {$/;"	v
blendMode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	public var blendMode:BlendMode;$/;"	v
blendMode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public var blendMode (get, set):BlendMode;$/;"	v
blendMode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	public var blendMode(default, set):BlendMode;$/;"	v
blendModeCache	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var blendModeCache = source.__blendMode;$/;"	v
blendModeManager	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/RenderSession.hx	/^	public var blendModeManager:BlendModeManager;$/;"	v
blendModeManager	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	public var blendModeManager:BlendModeManager;$/;"	v
blendShader	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var blendShader (null, default):Dynamic \/*Shader*\/;$/;"	v
blendSourceFactor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	private var blendSourceFactor:Int; \/\/ to mimic Stage3d behavior of keeping blending across frames:$/;"	v
blit	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^	public function blit( pos : Int, src : Bytes, srcpos : Int, len : Int ) : Void {$/;"	f
blks	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^		var blks = new Array<Int>();$/;"	v
blks	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^		var blks = new Array();$/;"	v
blks	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^		var blks = new Array<Int>();$/;"	v
blksSize	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^		var blksSize = nblk * 16;$/;"	v
blockAlign	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^		var blockAlign:Int = Std.int(numChannels * bitsPerSample \/ 8);$/;"	v
blockIndent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextFormat.hx	/^	public var blockIndent:Null<Float>;$/;"	v
blockIndent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextFormat.hx	/^	public var blockIndent:Null<Float>;$/;"	v
blockSize	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Hmac.hx	/^	var blockSize : Int;$/;"	v
blueMultiplier	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	public var blueMultiplier (get, set):Float;$/;"	v
blueMultiplier	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/ColorTransform.hx	/^	public var blueMultiplier:Float;$/;"	v
blueMultiplier	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/ColorTransform.hx	/^	public var blueMultiplier:Float;$/;"	v
blueOffset	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	public var blueOffset (get, set):Float;$/;"	v
blueOffset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/ColorTransform.hx	/^	public var blueOffset:Float;$/;"	v
blueOffset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/ColorTransform.hx	/^	public var blueOffset:Float;$/;"	v
blur	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function blur ():Void {};$/;"	f
blurFilter	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/BlurFilterTest.hx	/^		var blurFilter = new BlurFilter ();$/;"	v
blurX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/BlurFilter.hx	/^	public var blurX:Float;$/;"	v
blurX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/DropShadowFilter.hx	/^	public var blurX:Float;$/;"	v
blurX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/GlowFilter.hx	/^	public var blurX:Float;$/;"	v
blurX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/BlurFilter.hx	/^	public var blurX:Float;$/;"	v
blurX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/DropShadowFilter.hx	/^	public var blurX:Float;$/;"	v
blurX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/GlowFilter.hx	/^	public var blurX:Float;$/;"	v
blurY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/BlurFilter.hx	/^	public var blurY:Float;$/;"	v
blurY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/DropShadowFilter.hx	/^	public var blurY:Float;$/;"	v
blurY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/GlowFilter.hx	/^	public var blurY:Float;$/;"	v
blurY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/BlurFilter.hx	/^	public var blurY:Float;$/;"	v
blurY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/DropShadowFilter.hx	/^	public var blurY:Float;$/;"	v
blurY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/GlowFilter.hx	/^	public var blurY:Float;$/;"	v
body	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var body:B2Body = m_bodyList;$/;"	v
body	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^			var body:B2Body = i.body;$/;"	v
body	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2ConstantAccelController.hx	/^			var body:B2Body = i.body;$/;"	v
body	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2ConstantForceController.hx	/^			var body:B2Body = i.body;$/;"	v
body	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2ControllerEdge.hx	/^	public var body:B2Body;$/;"	v
body	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2TensorDampingController.hx	/^			var body:B2Body = i.body;$/;"	v
body	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^				var body:B2Body = GetBodyAtMouse();$/;"	v
body	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^				var body:B2Body = GetBodyAtMouse(true);$/;"	v
body	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^			var body:B2Body = null;$/;"	v
body	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBridge.hx	/^			var body:B2Body;$/;"	v
body	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBuoyancy.hx	/^			var body:B2Body;$/;"	v
body	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCCD.hx	/^			var body:B2Body;$/;"	v
body	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCompound.hx	/^			var body:B2Body;$/;"	v
body	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^			var body:B2Body;$/;"	v
body	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestOneSidedPlatform.hx	/^			var body:B2Body;$/;"	v
body	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRaycast.hx	/^			var body:B2Body = m_world.createBody(bd);$/;"	v
body	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^		var body:B2Body;$/;"	v
body	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLParser.hx	/^		var body:String = "";$/;"	v
body	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^		var body = Browser.document.getElementsByTagName ("body")[0];$/;"	v
body	Source/Crate.hx	/^    private var body:B2Body;$/;"	v
body	Source/Ground.hx	/^    private var body:B2Body;$/;"	v
body	Source/Main.hx	/^                    var body = next;$/;"	v
body1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var body1:B2Body = this;$/;"	v
body1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2GravityController.hx	/^		var body1:B2Body = null;$/;"	v
body1	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^				var body1:B2Body = m_world.createBody(bd1);$/;"	v
body1	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^		var body1:B2Body = m_world.createBody(bd1);$/;"	v
body2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var body2:B2Body = m_world.createBody(getDefinition());$/;"	v
body2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var body2:B2Body = other;$/;"	v
body2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2GravityController.hx	/^		var body2:B2Body = null;$/;"	v
body2	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^				var body2:B2Body = m_world.createBody(bd2);$/;"	v
body2	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^		var body2:B2Body = m_world.createBody(bd2);$/;"	v
body3	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^				var body3:B2Body = m_world.createBody(bd3);$/;"	v
bodyA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^			var bodyA:B2Body = fixtureA.getBody();$/;"	v
bodyA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^		var bodyA:B2Body = fixtureA.getBody();$/;"	v
bodyA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var bodyA:B2Body = def.bodyA;$/;"	v
bodyA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var bodyA:B2Body = j.m_bodyA;$/;"	v
bodyA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^		var bodyA:B2Body = fixtureA.getBody();$/;"	v
bodyA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^		var bodyA:B2Body = m_fixtureA.getBody();$/;"	v
bodyA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^		var bodyA:B2Body = m_fixtureA.m_body;$/;"	v
bodyA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactConstraint.hx	/^	public var bodyA:B2Body;$/;"	v
bodyA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var bodyA:B2Body = c.bodyA;$/;"	v
bodyA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var bodyA:B2Body = fixtureA.m_body;$/;"	v
bodyA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2JointDef.hx	/^	public var bodyA:B2Body;$/;"	v
bodyB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^			var bodyB:B2Body = fixtureB.getBody();$/;"	v
bodyB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^		var bodyB:B2Body = fixtureB.getBody();$/;"	v
bodyB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var bodyB:B2Body = def.bodyB;$/;"	v
bodyB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var bodyB:B2Body = j.m_bodyB;$/;"	v
bodyB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^		var bodyB:B2Body = fixtureB.getBody();$/;"	v
bodyB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^		var bodyB:B2Body = m_fixtureB.getBody();$/;"	v
bodyB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^		var bodyB:B2Body = m_fixtureB.m_body;$/;"	v
bodyB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactConstraint.hx	/^	public var bodyB:B2Body;$/;"	v
bodyB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var bodyB:B2Body = c.bodyB;$/;"	v
bodyB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var bodyB:B2Body = fixtureB.m_body;$/;"	v
bodyB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2JointDef.hx	/^	public var bodyB:B2Body;$/;"	v
bodyDef	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBridge.hx	/^				var bodyDef:B2BodyDef = new B2BodyDef();$/;"	v
bodyDef	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBuoyancy.hx	/^			var bodyDef:B2BodyDef = new B2BodyDef();$/;"	v
bodyDefC	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBridge.hx	/^				var bodyDefC:B2BodyDef = new B2BodyDef();$/;"	v
bodyDefC	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBuoyancy.hx	/^				var bodyDefC:B2BodyDef = new B2BodyDef();$/;"	v
bodyDefP	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBridge.hx	/^				var bodyDefP:B2BodyDef = new B2BodyDef();$/;"	v
bodyDefP	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBuoyancy.hx	/^				var bodyDefP:B2BodyDef;$/;"	v
bodyDefinition	Source/Crate.hx	/^        var bodyDefinition = new B2BodyDef ();$/;"	v
bodyDefinition	Source/Ground.hx	/^        var bodyDefinition = new B2BodyDef();$/;"	v
bold	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextFormat.hx	/^	public var bold:Null<Bool>;$/;"	v
bold	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextFormat.hx	/^	public var bold:Null<Bool>;$/;"	v
border	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DefaultShader.hx	/^				var border = (data.border != #if !neko 0 #else null #end) ? data.border : 0;$/;"	v
border	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public var border (get, set):Bool;$/;"	v
borderColor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public var borderColor (get, set):Int;$/;"	v
bottom	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^		var bottom:Int = 0;$/;"	v
bottom	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	public var bottom (get, set):Float;$/;"	v
bottom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	public var bottom (get, set):Float;$/;"	v
bottom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^	public var bottom (get, set):Float;$/;"	v
bottomRight	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	public var bottomRight (get, set):Vector2;$/;"	v
bottomRight	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	public var bottomRight (get, set):Point;$/;"	v
bottomRight	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^	public var bottomRight (get, set):Point;$/;"	v
bottomScrollV	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public var bottomScrollV (get, null):Int;$/;"	v
bottomScrollV	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var bottomScrollV (get, null):Int;$/;"	v
boundR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var boundR = Math.round ((rect.x + rect.width + image.offsetX));$/;"	v
boundary	/usr/lib/haxe/std/haxe/Http.hx	/^		var boundary = null;$/;"	v
bounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^		var bounds = textField.getBounds( null );$/;"	v
bounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^	private static var bounds:Rectangle;$/;"	v
bounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		var bounds = textField.getBounds (null);$/;"	v
bounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^	private static var bounds:Rectangle;$/;"	v
bounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^		var bounds = textField.getBounds (null);$/;"	v
bounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^		var bounds = shape.getBounds (null);$/;"	v
bounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^		var bounds = graphics.__bounds;$/;"	v
bounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^				var bounds = graphics.__bounds;$/;"	v
bounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^		var bounds = new Rectangle();$/;"	v
bounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Bitmap.hx	/^			var bounds = new Rectangle (0, 0, bitmapData.width, bitmapData.height);$/;"	v
bounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^					var bounds = scrollRect.clone ();$/;"	v
bounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^			var bounds = new Rectangle ();$/;"	v
bounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^		var bounds = new Rectangle ();$/;"	v
bounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^		var bounds = new Rectangle ();$/;"	v
bounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^		var bounds = __bounds.transform (matrix);$/;"	v
bounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Video.hx	/^		var bounds = new Rectangle (0, 0, __width, __height);$/;"	v
bounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^		var bounds = bounds.transform (matrix);$/;"	v
bounds	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var bounds = sprite.getRect (sprite);$/;"	v
box	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^				var box:B2PolygonShape = new B2PolygonShape();$/;"	v
box	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRagdoll.hx	/^			var box:B2PolygonShape;$/;"	v
box	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRaycast.hx	/^			var box:B2PolygonShape = new B2PolygonShape();$/;"	v
box2D.collision	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^package box2D.collision;$/;"	p
box2D.collision	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^package box2D.collision;$/;"	p
box2D.collision	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ContactID.hx	/^package box2D.collision;$/;"	p
box2D.collision	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ContactPoint.hx	/^package box2D.collision;$/;"	p
box2D.collision	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Distance.hx	/^package box2D.collision;$/;"	p
box2D.collision	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DistanceInput.hx	/^package box2D.collision;$/;"	p
box2D.collision	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DistanceOutput.hx	/^package box2D.collision;$/;"	p
box2D.collision	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DistanceProxy.hx	/^package box2D.collision;$/;"	p
box2D.collision	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^package box2D.collision;$/;"	p
box2D.collision	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeNode.hx	/^package box2D.collision;$/;"	p
box2D.collision	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Manifold.hx	/^package box2D.collision;$/;"	p
box2D.collision	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ManifoldPoint.hx	/^package box2D.collision;$/;"	p
box2D.collision	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ManifoldType.hx	/^package box2D.collision;$/;"	p
box2D.collision	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2OBB.hx	/^package box2D.collision;$/;"	p
box2D.collision	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2RayCastInput.hx	/^package box2D.collision;$/;"	p
box2D.collision	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2RayCastOutput.hx	/^package box2D.collision;$/;"	p
box2D.collision	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^package box2D.collision;$/;"	p
box2D.collision	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunctionType.hx	/^package box2D.collision;$/;"	p
box2D.collision	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^package box2D.collision;$/;"	p
box2D.collision	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SimplexCache.hx	/^package box2D.collision;$/;"	p
box2D.collision	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SimplexVertex.hx	/^package box2D.collision;$/;"	p
box2D.collision	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TOIInput.hx	/^package box2D.collision;$/;"	p
box2D.collision	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^package box2D.collision;$/;"	p
box2D.collision	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2WorldManifold.hx	/^package box2D.collision;$/;"	p
box2D.collision	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/ClipVertex.hx	/^package box2D.collision;$/;"	p
box2D.collision	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/Features.hx	/^package box2D.collision;$/;"	p
box2D.collision.shapes	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^package box2D.collision.shapes;$/;"	p
box2D.collision.shapes	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^package box2D.collision.shapes;$/;"	p
box2D.collision.shapes	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2MassData.hx	/^package box2D.collision.shapes;$/;"	p
box2D.collision.shapes	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^package box2D.collision.shapes;$/;"	p
box2D.collision.shapes	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2Shape.hx	/^package box2D.collision.shapes;$/;"	p
box2D.collision.shapes	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2ShapeType.hx	/^package box2D.collision.shapes;$/;"	p
box2D.common	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Color.hx	/^package box2D.common;$/;"	p
box2D.common	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Settings.hx	/^package box2D.common;$/;"	p
box2D.common.math	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat22.hx	/^package box2D.common.math;$/;"	p
box2D.common.math	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat33.hx	/^package box2D.common.math;$/;"	p
box2D.common.math	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^package box2D.common.math;$/;"	p
box2D.common.math	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Sweep.hx	/^package box2D.common.math;$/;"	p
box2D.common.math	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Transform.hx	/^package box2D.common.math;$/;"	p
box2D.common.math	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec2.hx	/^package box2D.common.math;$/;"	p
box2D.common.math	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec3.hx	/^package box2D.common.math;$/;"	p
box2D.dynamics	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^package box2D.dynamics;$/;"	p
box2D.dynamics	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2BodyDef.hx	/^package box2D.dynamics;$/;"	p
box2D.dynamics	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2BodyType.hx	/^package box2D.dynamics;$/;"	p
box2D.dynamics	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactFilter.hx	/^package box2D.dynamics;$/;"	p
box2D.dynamics	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactImpulse.hx	/^package box2D.dynamics;$/;"	p
box2D.dynamics	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactListener.hx	/^package box2D.dynamics;$/;"	p
box2D.dynamics	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^package box2D.dynamics;$/;"	p
box2D.dynamics	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^package box2D.dynamics;$/;"	p
box2D.dynamics	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DestructionListener.hx	/^package box2D.dynamics;$/;"	p
box2D.dynamics	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2FilterData.hx	/^package box2D.dynamics;$/;"	p
box2D.dynamics	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^package box2D.dynamics;$/;"	p
box2D.dynamics	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2FixtureDef.hx	/^package box2D.dynamics;$/;"	p
box2D.dynamics	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^package box2D.dynamics;$/;"	p
box2D.dynamics	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2TimeStep.hx	/^package box2D.dynamics;$/;"	p
box2D.dynamics	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^package box2D.dynamics;$/;"	p
box2D.dynamics.contacts	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2CircleContact.hx	/^package box2D.dynamics.contacts;$/;"	p
box2D.dynamics.contacts	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^package box2D.dynamics.contacts;$/;"	p
box2D.dynamics.contacts	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactConstraint.hx	/^package box2D.dynamics.contacts;$/;"	p
box2D.dynamics.contacts	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactConstraintPoint.hx	/^package box2D.dynamics.contacts;$/;"	p
box2D.dynamics.contacts	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactEdge.hx	/^package box2D.dynamics.contacts;$/;"	p
box2D.dynamics.contacts	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactFactory.hx	/^package box2D.dynamics.contacts;$/;"	p
box2D.dynamics.contacts	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactRegister.hx	/^package box2D.dynamics.contacts;$/;"	p
box2D.dynamics.contacts	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^package box2D.dynamics.contacts;$/;"	p
box2D.dynamics.contacts	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2EdgeAndCircleContact.hx	/^package box2D.dynamics.contacts;$/;"	p
box2D.dynamics.contacts	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndCircleContact.hx	/^package box2D.dynamics.contacts;$/;"	p
box2D.dynamics.contacts	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^package box2D.dynamics.contacts;$/;"	p
box2D.dynamics.contacts	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolygonContact.hx	/^package box2D.dynamics.contacts;$/;"	p
box2D.dynamics.contacts	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PositionSolverManifold.hx	/^package box2D.dynamics.contacts;$/;"	p
box2D.dynamics.controllers	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^package box2D.dynamics.controllers;$/;"	p
box2D.dynamics.controllers	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2ConstantAccelController.hx	/^package box2D.dynamics.controllers;$/;"	p
box2D.dynamics.controllers	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2ConstantForceController.hx	/^package box2D.dynamics.controllers;$/;"	p
box2D.dynamics.controllers	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2Controller.hx	/^package box2D.dynamics.controllers;$/;"	p
box2D.dynamics.controllers	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2GravityController.hx	/^package box2D.dynamics.controllers;$/;"	p
box2D.dynamics.controllers	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2TensorDampingController.hx	/^package box2D.dynamics.controllers;$/;"	p
box2D.dynamics.joints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^package box2D.dynamics.joints;$/;"	p
box2D.dynamics.joints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJointDef.hx	/^package box2D.dynamics.joints;$/;"	p
box2D.dynamics.joints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^package box2D.dynamics.joints;$/;"	p
box2D.dynamics.joints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJointDef.hx	/^package box2D.dynamics.joints;$/;"	p
box2D.dynamics.joints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^package box2D.dynamics.joints;$/;"	p
box2D.dynamics.joints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJointDef.hx	/^package box2D.dynamics.joints;$/;"	p
box2D.dynamics.joints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Jacobian.hx	/^package box2D.dynamics.joints;$/;"	p
box2D.dynamics.joints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^package box2D.dynamics.joints;$/;"	p
box2D.dynamics.joints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2JointDef.hx	/^package box2D.dynamics.joints;$/;"	p
box2D.dynamics.joints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2JointEdge.hx	/^package box2D.dynamics.joints;$/;"	p
box2D.dynamics.joints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2JointType.hx	/^package box2D.dynamics.joints;$/;"	p
box2D.dynamics.joints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LimitState.hx	/^package box2D.dynamics.joints;$/;"	p
box2D.dynamics.joints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^package box2D.dynamics.joints;$/;"	p
box2D.dynamics.joints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJointDef.hx	/^package box2D.dynamics.joints;$/;"	p
box2D.dynamics.joints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^package box2D.dynamics.joints;$/;"	p
box2D.dynamics.joints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJointDef.hx	/^package box2D.dynamics.joints;$/;"	p
box2D.dynamics.joints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^package box2D.dynamics.joints;$/;"	p
box2D.dynamics.joints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJointDef.hx	/^package box2D.dynamics.joints;$/;"	p
box2D.dynamics.joints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^package box2D.dynamics.joints;$/;"	p
box2D.dynamics.joints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJointDef.hx	/^package box2D.dynamics.joints;$/;"	p
box2D.dynamics.joints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^package box2D.dynamics.joints;$/;"	p
box2D.dynamics.joints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJointDef.hx	/^package box2D.dynamics.joints;$/;"	p
box2D.dynamics.joints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^package box2D.dynamics.joints;$/;"	p
box2D.dynamics.joints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJointDef.hx	/^package box2D.dynamics.joints;$/;"	p
boxDef	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBuoyancy.hx	/^			var boxDef:B2PolygonShape = new B2PolygonShape();$/;"	v
boxShape	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBridge.hx	/^				var boxShape:B2PolygonShape = new B2PolygonShape();$/;"	v
bp	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var bp:IBroadPhase;$/;"	v
bp	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^			var bp:B2BroadPhase = m_world.m_broadPhase;$/;"	v
bpos	/usr/lib/haxe/std/haxe/Unserializer.hx	/^			var bpos = 0;$/;"	v
breaks	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		var breaks = [];$/;"	v
breaks	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		var breaks = getLineBreakIndices (textField);$/;"	v
breaks	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^		var breaks = [];$/;"	v
broadPhase	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^			var broadPhase:IBroadPhase = m_world.m_contactManager.m_broadPhase;$/;"	v
broadPhase	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var broadPhase:IBroadPhase = m_world.m_contactManager.m_broadPhase;$/;"	v
broadPhase	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var broadPhase:IBroadPhase;$/;"	v
broadPhase	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var broadPhase:IBroadPhase = m_contactManager.m_broadPhase;$/;"	v
browseStrings	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	function browseStrings( inf : { e : Expr, str : String }, e : Expr ) {$/;"	f
bubbles	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public var bubbles (get, never):Bool;$/;"	v
bubbles	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public var bubbles (default, null):Bool;$/;"	v
bucket	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^		var bucket = this;$/;"	v
bucket	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var bucket = prepareBucket(path, glStack);$/;"	v
bucket	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var bucket:GLBucket = null;$/;"	v
bucket	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var bucket:GLBucket;$/;"	v
bucket	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^		var bucket:GLBucket;$/;"	v
bucketPool	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public static var bucketPool:Array<GLBucket> = [];$/;"	v
bucketType	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^		var bucketType = "";$/;"	v
buckets	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var buckets:Array<GLBucket>;$/;"	v
buf	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var buf = Inflate.run (bytes).getData ();$/;"	v
buf	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var buf = null;$/;"	v
buf	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^		var buf = Inflate.run (bytes).getData();$/;"	v
buf	/usr/lib/haxe/std/haxe/Http.hx	/^				var buf = haxe.io.Bytes.alloc(bufsize);$/;"	v
buf	/usr/lib/haxe/std/haxe/Http.hx	/^		var buf = haxe.io.Bytes.alloc(bufsize);$/;"	v
buf	/usr/lib/haxe/std/haxe/Serializer.hx	/^	var buf : StringBuf;$/;"	v
buf	/usr/lib/haxe/std/haxe/Template.hx	/^	var buf : StringBuf;$/;"	v
buf	/usr/lib/haxe/std/haxe/Unserializer.hx	/^			var buf = buf;$/;"	v
buf	/usr/lib/haxe/std/haxe/Unserializer.hx	/^ 	var buf : String;$/;"	v
buf	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^		var buf = 0;$/;"	v
buf	/usr/lib/haxe/std/haxe/format/JsonParser.hx	/^		var buf = new StringBuf();$/;"	v
buf	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^	var buf : #if flash9 flash.utils.ByteArray #else StringBuf #end;$/;"	v
buf	/usr/lib/haxe/std/haxe/io/BufferInput.hx	/^	public var buf : haxe.io.Bytes;$/;"	v
buf	/usr/lib/haxe/std/haxe/io/BytesBuffer.hx	/^		var buf = b.GetBuffer();$/;"	v
buf	/usr/lib/haxe/std/haxe/io/BytesBuffer.hx	/^		var buf = b.toByteArray();$/;"	v
buf	/usr/lib/haxe/std/haxe/io/Input.hx	/^		var buf = Bytes.alloc(bufsize);$/;"	v
buf	/usr/lib/haxe/std/haxe/io/Input.hx	/^		var buf = new StringBuf();$/;"	v
buf	/usr/lib/haxe/std/haxe/io/Output.hx	/^		var buf = Bytes.alloc(bufsize);$/;"	v
buf	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^	var buf : StringBuf;$/;"	v
buf	/usr/lib/haxe/std/haxe/unit/TestResult.hx	/^		var buf = new StringBuf();$/;"	v
buf	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^		var buf = new StringBuf();$/;"	v
buf	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^		var buf = haxe.io.Bytes.alloc(bufsize);$/;"	v
buf	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var buf = null;$/;"	v
buf	/usr/lib/haxe/std/neko/Web.hx	/^		var buf : haxe.io.BytesBuffer = null;$/;"	v
buf	/usr/lib/haxe/std/neko/Web.hx	/^		var buf = new StringBuf();$/;"	v
buf	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	var buf : haxe.io.Bytes;$/;"	v
buf2	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^			var buf2 = haxe.io.Bytes.alloc(nsize);$/;"	v
bufSize	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^				var bufSize = 65536;$/;"	v
bufSize	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^					var bufSize = 65536;$/;"	v
bufbytes	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^	var bufbytes : Int;$/;"	v
buffer	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^		var buffer:Bool = m_tree.moveProxy(proxy, aabb, displacement);$/;"	v
buffer	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^					var buffer = new lime.graphics.ImageBuffer ();$/;"	v
buffer	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^	public var buffer:AudioBuffer;$/;"	v
buffer	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/FlashAudioContext.hx	/^		var buffer = new AudioBuffer ();$/;"	v
buffer	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^		var buffer = new AudioBuffer ();$/;"	v
buffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^			var buffer = null;$/;"	v
buffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^		var buffer = new ImageBuffer (null, bitmapData.width, bitmapData.height);$/;"	v
buffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^		var buffer = new ImageBuffer (null, canvas.width, canvas.height);$/;"	v
buffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^		var buffer = new ImageBuffer (null, image.width, image.height);$/;"	v
buffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public var buffer:ImageBuffer;$/;"	v
buffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ImageBuffer.hx	/^		var buffer = new ImageBuffer (data, width, height, bitsPerPixel);$/;"	v
buffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageCanvasUtil.hx	/^		var buffer = image.buffer;$/;"	v
buffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^		var buffer = image.buffer;$/;"	v
buffer	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^			var buffer = new ImageBuffer (data.byteView, width, height, 1);$/;"	v
buffer	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^			var buffer = new ImageBuffer (new UInt8Array (data), width, height, 1);$/;"	v
buffer	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^			var buffer = new ImageBuffer (null, bufferWidth, bufferHeight, 1);$/;"	v
buffer	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ProcessHelper.hx	/^			var buffer = new BytesOutput ();$/;"	v
buffer	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ArrayBufferView.hx	/^	public var buffer (default, null):ByteArray;$/;"	v
buffer	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^		var buffer = new AudioBuffer ();$/;"	v
buffer	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    var buffer:Bytes;$/;"	v
buffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^		var buffer = LimeAssets.getAudioBuffer (id, false);$/;"	v
buffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^		var buffer = LimeAssets.getAudioBuffer (id, useCache);$/;"	v
buffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^		var buffer = this.buffer;$/;"	v
buffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^	public var buffer:GLFramebuffer;$/;"	v
buffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexArray.hx	/^	public var buffer:ArrayBuffer;$/;"	v
buffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ArrayBufferView.hx	/^	public var buffer (default, null):ByteArray;$/;"	v
buffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^				var buffer = __image.buffer;$/;"	v
buffer	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^		var buffer = new AudioBuffer ();$/;"	v
buffer	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	public var buffer : haxe.io.Bytes;$/;"	v
buffer	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^	var buffer : haxe.io.Bytes;$/;"	v
buffer3f	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function buffer3f (buffer:Int, param:Int, value1:Float, value2:Float, value3:Float):Void {$/;"	f
buffer3f	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function buffer3f (buffer:Int, param:Int, value1:Float, value2:Float, value3:Float):Void {$/;"	f
buffer3i	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function buffer3i (buffer:Int, param:Int, value1:Int, value2:Int, value3:Int):Void {$/;"	f
buffer3i	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function buffer3i (buffer:Int, param:Int, value1:Int, value2:Int, value3:Int):Void {$/;"	f
bufferCursor	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    var bufferCursor:Int;$/;"	v
bufferData	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function bufferData (buffer:Int, format:Int, data:ByteArray, size:Int, freq:Int):Void {$/;"	f
bufferData	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function bufferData (buffer:Int, format:Int, data:ByteArray, size:Int, freq:Int):Void {$/;"	f
bufferData	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function bufferData (target:Int, size:Int, usage:Int):Void;$/;"	f
bufferData	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function bufferData (target:Int, data:ArrayBufferView, usage:Int):Void {$/;"	f
bufferData	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function bufferData (target:Int, data:ArrayBufferView, usage:Int):Void {$/;"	f
bufferData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function bufferData(target:Int, data:IMemoryRange, usage:Int):Void $/;"	f
bufferData	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function bufferData(target:Int, data:ArrayBufferView, usage:Int):Void;$/;"	f
bufferHeight	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^			var bufferHeight = 128;$/;"	v
bufferLength	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    var bufferLength:Int;$/;"	v
bufferLength	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/NetStream.hx	/^	public var bufferLength:Float;$/;"	v
bufferMove	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^	private function bufferMove(proxy:B2DynamicTreeNode):Void$/;"	f
bufferSize	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		static private var bufferSize:Int;$/;"	v
bufferSpace	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    inline function bufferSpace(bytes = 1) {$/;"	f
bufferSubData	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function bufferSubData (target:Int, offset:Int, data:lime.utils.ArrayBufferView):Void;$/;"	f
bufferSubData	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function bufferSubData (target:Int, offset:Int, data:ArrayBufferView):Void {$/;"	f
bufferSubData	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function bufferSubData (target:Int, offset:Int, data:ArrayBufferView):Void {$/;"	f
bufferSubData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function bufferSubData(target:Int, offset:Int, data:IMemoryRange):Void $/;"	f
bufferSubData	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function bufferSubData(target:Int, offset:Int, data:ArrayBufferView):Void;$/;"	f
bufferTime	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/SoundLoaderContext.hx	/^	public var bufferTime:Float;$/;"	v
bufferTime	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/NetStream.hx	/^	public var bufferTime:Float;$/;"	v
bufferWidth	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^			var bufferWidth = 128;$/;"	v
bufferf	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function bufferf (buffer:Int, param:Int, value:Float):Void {$/;"	f
bufferf	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function bufferf (buffer:Int, param:Int, value:Float):Void {$/;"	f
bufferfv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function bufferfv (buffer:Int, param:Int, values:Array<Float>):Void {$/;"	f
bufferfv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function bufferfv (buffer:Int, param:Int, values:Array<Float>):Void {$/;"	f
bufferi	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function bufferi (buffer:Int, param:Int, value:Int):Void {$/;"	f
bufferi	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function bufferi (buffer:Int, param:Int, value:Int):Void {$/;"	f
bufferiv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function bufferiv (buffer:Int, param:Int, values:Array<Int>):Void {$/;"	f
bufferiv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function bufferiv (buffer:Int, param:Int, values:Array<Int>):Void {$/;"	f
buflen	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^		var buflen = cl.buffer.length;$/;"	v
bufpos	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	var bufpos : Int;$/;"	v
bufsize	/usr/lib/haxe/std/haxe/Http.hx	/^				var bufsize = 4096;$/;"	v
bufsize	/usr/lib/haxe/std/haxe/Http.hx	/^		var bufsize = 1024;$/;"	v
bug	/usr/lib/haxe/std/haxe/Http.hx	/^		var bug = small_url.split("xxx");$/;"	v
build	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AIRHelper.hx	/^	public static function build (workingDirectory:String, targetPath:String, applicationXML:String, files:Array <String>, debug:Bool):Void {$/;"	f
build	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^		var build = "debug";$/;"	v
build	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^	public static function build (project:HXProject, projectDirectory:String):Void {$/;"	f
build	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CordovaHelper.hx	/^				var build:String = "debug";$/;"	v
build	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CordovaHelper.hx	/^	public static function build (workingDirectory:String, debug:Bool):Void {$/;"	f
build	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^	public static function build (project:HXProject, workingDirectory:String, additionalArguments:Array <String> = null):Void {$/;"	f
build	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^		var build = "debug";$/;"	v
build	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^	public override function build ():Void {$/;"	f
build	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/BlackBerryPlatform.hx	/^	public override function build ():Void {$/;"	f
build	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/EmscriptenPlatform.hx	/^	public override function build ():Void {$/;"	f
build	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FlashPlatform.hx	/^	public override function build ():Void {$/;"	f
build	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/HTML5Platform.hx	/^	public override function build ():Void {$/;"	f
build	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^	public override function build ():Void {$/;"	f
build	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^	public override function build ():Void {$/;"	f
build	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/MacPlatform.hx	/^	public override function build ():Void {$/;"	f
build	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/TizenPlatform.hx	/^	public override function build ():Void {$/;"	f
build	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WebOSPlatform.hx	/^	public override function build ():Void {$/;"	f
build	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WindowsPlatform.hx	/^	public override function build ():Void {$/;"	f
build	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	public static function build(graphics:Graphics, gl:GLRenderContext):GLStack {$/;"	f
buildCircle	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public static function buildCircle (path:DrawPath, glStack:GLStack, localCoords:Bool = false):Void {$/;"	f
buildCmp	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	function buildCmp( op, e1, e2, pos ) {$/;"	f
buildComplexPoly	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public static function buildComplexPoly (path:DrawPath, glStack:GLStack, localCoords:Bool = false):Void {$/;"	f
buildCond	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	function buildCond( cond : Expr ) {$/;"	f
buildDebug	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CPPHelper.hx	/^		var buildDebug = (project.targetFlags.exists ("debug") || (!project.targetFlags.exists ("rebuild") && !project.targetFlags.exists ("release") && project.config.exists ("project.rebuild.fulldebug")));$/;"	v
buildDefault	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	function buildDefault( cond : Expr ) {$/;"	f
buildDrawTiles	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public static inline function buildDrawTiles (path:DrawPath, glStack:GLStack):Void {$/;"	f
buildDrawTriangles	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public static function buildDrawTriangles (path:DrawPath, object:DisplayObject, glStack:GLStack, localCoords:Bool = false):Void {$/;"	f
buildEq	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	function buildEq( eq, e1 : Expr, e2, pos ) {$/;"	f
buildField	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	static function buildField( f : Field, fields : Array<Field>, ft : ComplexType, rt : ComplexType ) {$/;"	f
buildFixedHuffman	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	function buildFixedHuffman() {$/;"	f
buildInt	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	function buildInt( op, e1, e2, pos ) {$/;"	f
buildLine	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public static function buildLine (path:DrawPath, bucket:GLBucket, localCoords:Bool = false):Void {$/;"	f
buildMetaData	/usr/lib/haxe/std/haxe/macro/JSGenApi.hx	/^	function buildMetaData( t : BaseType ) : Null<TypedExpr>;$/;"	f
buildNum	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	function buildNum( op, e1, e2, pos ) {$/;"	f
buildOptions	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	function buildOptions( eopt : Expr ) {$/;"	f
buildParams	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^	static function buildParams(_) {$/;"	f
buildPoly	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public static function buildPoly (path:DrawPath, glStack:GLStack):Void {$/;"	f
buildProject	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	private function buildProject (project:HXProject, command:String = "") {$/;"	f
buildProperties	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^		var buildProperties = projectDirectory + "\/bin\/build.prop";$/;"	v
buildRectangle	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public static function buildRectangle (path:DrawPath, glStack:GLStack, localCoords:Bool = false):Void {$/;"	f
buildRelease	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CPPHelper.hx	/^		var buildRelease = (!project.targetFlags.exists ("debug"));$/;"	v
buildRoundedRectangle	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public static function buildRoundedRectangle (path:DrawPath, glStack:GLStack, localCoords:Bool = false):Void {$/;"	f
buildSQL	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	static function buildSQL( em : Expr, econd : Expr, prefix : String, ?eopt : Expr ) {$/;"	f
buildScript	/usr/lib/haxe/lib/lime/2,4,3/tools/RunScript.hx	/^			var buildScript = File.getContent (PathHelper.combine (extendedToolsDirectory, "tools.hxml"));$/;"	v
bullet	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2BodyDef.hx	/^	public var bullet:Bool;$/;"	v
bullet	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextFormat.hx	/^	public var bullet:Null<Bool>;$/;"	v
bullet	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextFormat.hx	/^	public var bullet:Null<Bool>;$/;"	v
buoyancyForce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^			var buoyancyForce:B2Vec2 = gravity.getNegative();$/;"	v
button	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashApplication.hx	/^			var button = switch (event.type) {$/;"	v
button	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public var button:Int;$/;"	v
button	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var button:Int = event.value;$/;"	v
buttonDown	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public var buttonDown:Bool;$/;"	v
buttonDown	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public var buttonDown:Bool;$/;"	v
buttonDown	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TouchEvent.hx	/^	public var buttonDown:Bool;$/;"	v
buttonMode	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var buttonMode:Bool;$/;"	v
buttonMode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Sprite.hx	/^	public var buttonMode:Bool;$/;"	v
buttonMode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Sprite.hx	/^	public var buttonMode:Bool;$/;"	v
bv	Source/Main.hx	/^                    var bv = body.getPosition();$/;"	v
bw	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^			var bw:Int = width - sw - dx;$/;"	v
bw	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^			var bw:Int = width - sw - dx;$/;"	v
bx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^			var bx = p[2 * i1], by = p[2 * i1 + 1];$/;"	v
byte	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^						var byte = bytes.readUnsignedByte ();$/;"	v
byte	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^				var byte = input.readByte ();$/;"	v
byte	/usr/lib/haxe/std/haxe/crypto/Crc32.hx	/^	public function byte( b : Int ) {$/;"	f
byteArray	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^				var byteArray = lime.utils.ByteArray.fromBytes (haxe.Resource.getBytes (resourceName));$/;"	v
byteArray	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^				var byteArray = openfl.utils.ByteArray.fromBytes (haxe.Resource.getBytes(resourceName));$/;"	v
byteArray	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^				var byteArray = buffer.__srcBitmapData.getPixels (rect.__toFlashRectangle ());$/;"	v
byteArray	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ImageBuffer.hx	/^			var byteArray = ByteArray.fromBytes (bytes);$/;"	v
byteArray	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^		var byteArray = new ByteArray ();$/;"	v
byteArray	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^		var byteArray = new ByteArray (length * 4);$/;"	v
byteArray	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^				var byteArray = openfl.utils.ByteArray.fromBytes (haxe.Resource.getBytes (resourceName));$/;"	v
byteArray	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^					var byteArray = openfl.utils.ByteArray.fromBytes (haxe.Resource.getBytes(resourceName));$/;"	v
byteArray	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^				var byteArray = openfl.utils.ByteArray.fromBytes (haxe.Resource.getBytes (resourceName));$/;"	v
byteArray	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^				var byteArray = openfl.utils.ByteArray.fromBytes (haxe.Resource.getBytes(resourceName));$/;"	v
byteArray	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var byteArray = new ByteArray ();$/;"	v
byteHeader	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^		var byteHeader = [];$/;"	v
byteLength	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ArrayBufferView.hx	/^	public var byteLength (default, null):Int;$/;"	v
byteLength	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public var byteLength (get, null):Int;$/;"	v
byteLength	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ArrayBufferView.hx	/^	public var byteLength (default, null):Int;$/;"	v
byteLength	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public var byteLength (get, null):Int;$/;"	v
byteOffset	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ArrayBufferView.hx	/^	public var byteOffset (default, null):Int;$/;"	v
byteOffset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ArrayBufferView.hx	/^	public var byteOffset (default, null):Int;$/;"	v
byteOffset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		var byteOffset = firstIndex * 2;$/;"	v
byteRate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^		var byteRate:Int = Std.int (sampleRate * numChannels * bitsPerSample \/ 8);$/;"	v
byteView	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public var byteView:Uint8Array;$/;"	v
byteView	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public var byteView:Uint8Array;$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^							var bytes = File.getBytes (path);$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^			var bytes = File.getBytes (path);$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^		var bytes = getBytes (id);$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^					var bytes = File.getBytes (path);$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ImageBuffer.hx	/^			var bytes = Bytes.alloc (data.byteLength);$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/format/PNG.hx	/^				var bytes = Bytes.alloc (image.width * image.height * 4 + image.height);$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthRequest.hx	/^		var bytes = hash.make (Bytes.ofString (key), Bytes.ofString (message));$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^		var bytes = new ByteArray ();$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^						var bytes = File.getBytes (src);$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^			var bytes:Bytes = null;$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^				var bytes = image.encode ("png");$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^		var bytes = out.getBytes ();$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^		var bytes = base64Encoder.decodeBytes (Bytes.ofString (base64));$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/TizenHelper.hx	/^				var bytes = Bytes.ofString (project.meta.packageName);$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^					var bytes = image.encode ("png");$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ArrayBufferView.hx	/^	private var bytes:BytesData;$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^			var bytes = untyped __dollar__smake (allocated);$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var bytes = Bytes.ofData (cast byteView);$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var bytes = Bytes.ofString (value);$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var bytes = function (bytes:ByteArray) { return bytes == null ? null : bytes.b; }$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var bytes = function (bytes:Dynamic) {$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var bytes = new ByteArray ();$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var bytes = new Bytes (value.length, untyped value.__s);$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^				var bytes = new ByteArray ();$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^			var bytes = ByteArray.readFile ("..\/res\/manifest");$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^			var bytes = ByteArray.readFile ("app\/native\/manifest");$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^			var bytes = ByteArray.readFile ("assets\/manifest");$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^			var bytes = ByteArray.readFile ("manifest");$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^		var bytes = getBytes (id);$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^		var bytes:ByteArray = null;$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^				var bytes = new ByteArray ();$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^			var bytes = ByteArray.readFile ("..\/Resources\/manifest");$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^			var bytes = ByteArray.readFile ("..\/res\/manifest");$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^			var bytes = ByteArray.readFile ("app\/native\/manifest");$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^			var bytes = ByteArray.readFile ("assets\/manifest");$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^			var bytes = ByteArray.readFile ("manifest");$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^		var bytes = getBytes (id);$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^		var bytes:ByteArray = null;$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var bytes:Bytes = Bytes.alloc(length);$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var bytes = Bytes.alloc(len);$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var bytes = input.readAll ();$/;"	v
bytes	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	function bytes(n) {$/;"	f
bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^							var bytes = File.getBytes (path);$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^			var bytes = File.getBytes (path);$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^							var bytes = File.getBytes (path);$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^			var bytes = File.getBytes (path);$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^		var bytes = getBytes (id);$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var bytes = new ByteArray ();$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var bytes:ByteArray = lime_bitmap_data_get_pixels (__handle, rect);$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/LoaderInfo.hx	/^	public var bytes (get, null):ByteArray;$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^				var bytes = ByteArray.readFile (request.url);$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^				var bytes = URLLoadersManager.getInstance().getData(__handle);$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ArrayBufferView.hx	/^	private var bytes:BytesData;$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^			var bytes = untyped __dollar__smake (allocated);$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var bytes = Bytes.ofData (_double_bytes (x, bigEndian));$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var bytes = Bytes.ofData (_float_bytes (x, bigEndian));$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var bytes = Bytes.ofString (s);$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var bytes = function (bytes:ByteArray) { return bytes == null ? null : bytes.b; }$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var bytes = new Bytes (4, _float_bytes (x, bigEndian));$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var bytes = new Bytes (4, b.slice (position, position + 4));$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var bytes = new Bytes (4, data);$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var bytes = new Bytes (4, untyped __dollar__ssub (b, position, 4));$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var bytes = new Bytes (8, _double_bytes (x, bigEndian));$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var bytes = new Bytes (8, b.slice (position, position + 8));$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var bytes = new Bytes (8, data);$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var bytes = new Bytes (8, untyped __dollar__ssub (b, position, 8));$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var bytes = new Bytes (s.length, untyped s.__s);$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^		var bytes:Bytes = null;$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/LoaderInfo.hx	/^	public var bytes (default, null):ByteArray;$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^		var bytes = Bytes.ofData (cast byteView);$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^		var bytes = new ByteArray ();$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^				var bytes = new ByteArray ();$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^			var bytes = ByteArray.readFile ("..\/Resources\/manifest");$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^			var bytes = ByteArray.readFile ("..\/res\/manifest");$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^			var bytes = ByteArray.readFile ("app\/native\/manifest");$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^			var bytes = ByteArray.readFile ("assets\/manifest");$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^			var bytes = ByteArray.readFile ("manifest");$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^		var bytes = getBytes (id);$/;"	v
bytes	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^		var bytes:ByteArray = null;$/;"	v
bytes	/usr/lib/haxe/std/haxe/Unserializer.hx	/^			var bytes = haxe.io.Bytes.alloc(size);$/;"	v
bytes	/usr/lib/haxe/std/haxe/Unserializer.hx	/^			var bytes = haxe.io.Bytes.ofData( base_decode(untyped buf.substr(pos,len).__s,untyped BASE64.__s) );$/;"	v
bytes	/usr/lib/haxe/std/haxe/io/BytesBuffer.hx	/^		var bytes = new Bytes(__dollar__ssize(str),str);$/;"	v
bytes	/usr/lib/haxe/std/haxe/io/BytesBuffer.hx	/^		var bytes = new Bytes(b.length, cast b);$/;"	v
bytes	/usr/lib/haxe/std/haxe/io/BytesBuffer.hx	/^		var bytes = new Bytes(b.length,b);$/;"	v
bytes	/usr/lib/haxe/std/haxe/io/BytesBuffer.hx	/^		var bytes = new Bytes(buf.length, buf);$/;"	v
bytes	/usr/lib/haxe/std/haxe/io/BytesBuffer.hx	/^		var bytes = new Bytes(cast b.Length, buf);$/;"	v
bytes	/usr/lib/haxe/std/haxe/io/BytesOutput.hx	/^		var bytes = b;$/;"	v
bytes	/usr/lib/haxe/std/haxe/io/Input.hx	/^			var bytes = [];$/;"	v
bytes	/usr/lib/haxe/std/haxe/io/Input.hx	/^		var bytes = [];$/;"	v
bytes	/usr/lib/haxe/std/haxe/io/Output.hx	/^		var bytes = cs.system.BitConverter.GetBytes(cast(x, Single));$/;"	v
bytes	/usr/lib/haxe/std/haxe/io/Output.hx	/^		var bytes = cs.system.BitConverter.GetBytes(x);$/;"	v
bytes	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^			var bytes = input.read(rlen);$/;"	v
bytes	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^		var bytes = c.sock.input.readBytes(c.buf,c.bufpos,available);$/;"	v
bytes2blks	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^	static function bytes2blks( b : haxe.io.Bytes ) : Array<Int> {$/;"	f
bytes2blks	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^	static function bytes2blks( b : haxe.io.Bytes ){$/;"	f
bytes2blks	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^	static function bytes2blks( b : haxe.io.Bytes ) : Array<Int> {$/;"	f
bytesAvailable	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public var bytesAvailable (get, null):Int;$/;"	v
bytesAvailable	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/IDataInput.hx	/^	public var bytesAvailable (get_bytesAvailable, null):Int;$/;"	v
bytesAvailable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public var bytesAvailable (get, null):Int;$/;"	v
bytesAvailable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IDataInput.hx	/^	public var bytesAvailable (get, null):Int;$/;"	v
bytesAvailable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^    public var bytesAvailable(get, null) : Int;$/;"	v
bytesAvailable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public var bytesAvailable (get, null):Int;$/;"	v
bytesAvailable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataInput.hx	/^	var bytesAvailable (default, null):Int;$/;"	v
bytesCount	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var bytesCount = readUnsignedShort ();$/;"	v
bytesCount	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^		var bytesCount = readUnsignedShort ();$/;"	v
bytesLoaded	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^	public var bytesLoaded:Int;$/;"	v
bytesLoaded	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^	public var bytesLoaded (default, null):Int;$/;"	v
bytesLoaded	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	public var bytesLoaded (default, null):Int;$/;"	v
bytesLoaded	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/LoaderInfo.hx	/^	public var bytesLoaded (default, null):Int;$/;"	v
bytesLoaded	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/ProgressEvent.hx	/^	public var bytesLoaded:Float;$/;"	v
bytesLoaded	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public var bytesLoaded (default, null):Int;$/;"	v
bytesLoaded	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/NetStream.hx	/^	public var bytesLoaded:Int;$/;"	v
bytesLoaded	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^	public var bytesLoaded:Int;$/;"	v
bytesPending	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^	public var bytesPending(get, null) : Int;$/;"	v
bytesPerIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/IndexBuffer3D.hx	/^		var bytesPerIndex = 2;$/;"	v
bytesPerVertex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/VertexBuffer3D.hx	/^		var bytesPerVertex = data32PerVertex * 4;$/;"	v
bytesReference	/usr/lib/haxe/std/neko/Lib.hx	/^	public inline static function bytesReference( s : String ) : haxe.io.Bytes {$/;"	f
bytesTotal	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^	public var bytesTotal:Int;$/;"	v
bytesTotal	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^	public var bytesTotal (default, null):Int;$/;"	v
bytesTotal	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	public var bytesTotal (default, null):Int;$/;"	v
bytesTotal	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/LoaderInfo.hx	/^	public var bytesTotal (default, null):Int;$/;"	v
bytesTotal	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/ProgressEvent.hx	/^	public var bytesTotal:Float;$/;"	v
bytesTotal	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public var bytesTotal (default, null):Int;$/;"	v
bytesTotal	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/NetStream.hx	/^	public var bytesTotal:Int;$/;"	v
bytesTotal	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^	public var bytesTotal:Int;$/;"	v
bytes_a	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^				var bytes_a = extractBits (pixels, 0, s * s);$/;"	v
bytes_b	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^				var bytes_b = packBits (pixels, 3, s * s);$/;"	v
bytes_g	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^				var bytes_g = packBits (pixels, 2, s * s);$/;"	v
bytes_r	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^				var bytes_r = packBits (pixels, 1, s * s);$/;"	v
c	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^			var c:B2Vec2 = node.aabb.getCenter();$/;"	v
c	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^			var c:Float = dA.x * r.x + dA.y * r.y;$/;"	v
c	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^		var c:Float =  (sX*rX + sY*rY);$/;"	v
c	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var c:B2Vec2 = new B2Vec2();$/;"	v
c	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat22.hx	/^		var c:Float = Math.cos(angle);$/;"	v
c	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat22.hx	/^		var c:Float = col1.y; $/;"	v
c	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^		var c:B2Vec2 = new B2Vec2(max(a.x, b.x), max(a.y, b.y));$/;"	v
c	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^		var c:B2Vec2 = new B2Vec2(min(a.x, b.x), min(a.y, b.y));$/;"	v
c	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Sweep.hx	/^	public var c:B2Vec2;$/;"	v
c	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^			var c:B2Contact = edge.contact;$/;"	v
c	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^		var c:B2Contact = m_contactFactory.create(fixtureA, fixtureB);$/;"	v
c	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^		var c:B2Contact = m_world.m_contactList;$/;"	v
c	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^			var c:B2Contact = m_contacts[i];$/;"	v
c	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^			var c:B2Controller = m_controllerList;$/;"	v
c	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var c:B2Contact = m_contactList;$/;"	v
c	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactFactory.hx	/^		var c:B2Contact;$/;"	v
c	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var c:B2ContactConstraint = m_constraints[ i ];$/;"	v
c	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var c:B2ContactConstraint = m_constraints[i];$/;"	v
c	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^			var c = callStack();$/;"	v
c	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public var c:Float;$/;"	v
c	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var c = Math.cos (theta);$/;"	v
c	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var c = Math.cos(rad);$/;"	v
c	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^			var c;$/;"	v
c	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CLIHelper.hx	/^			var c;$/;"	v
c	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CordovaHelper.hx	/^			var c;$/;"	v
c	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/TizenHelper.hx	/^			var c;$/;"	v
c	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^			var c = StringTools.fastCodeAt (value, i);$/;"	v
c	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^			var c = data.getUint8 (this.position++);$/;"	v
c	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var c = new neko.zip.Uncompress(-15);$/;"	v
c	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var c = matrix.c;$/;"	v
c	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^	public var c:Float;$/;"	v
c	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^	public var c:Float;$/;"	v
c	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var c = Math.cos (theta);$/;"	v
c	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var c = Math.cos(rad);$/;"	v
c	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^			var c = StringTools.fastCodeAt (value, i);$/;"	v
c	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^			var c = data.getUint8 (this.position++);$/;"	v
c	/usr/lib/haxe/std/StringTools.hx	/^		var c = s.charCodeAt( pos );$/;"	v
c	/usr/lib/haxe/std/haxe/CallStack.hx	/^			var c = callStack();$/;"	v
c	/usr/lib/haxe/std/haxe/Http.hx	/^				var c = s.get(0);$/;"	v
c	/usr/lib/haxe/std/haxe/Http.hx	/^				var c = s.get(1);$/;"	v
c	/usr/lib/haxe/std/haxe/Http.hx	/^				var c = s.get(2);$/;"	v
c	/usr/lib/haxe/std/haxe/Http.hx	/^				var c = s.get(3);$/;"	v
c	/usr/lib/haxe/std/haxe/Template.hx	/^				var c = data.charCodeAt(parp);$/;"	v
c	/usr/lib/haxe/std/haxe/Unserializer.hx	/^			var c = get(pos++);$/;"	v
c	/usr/lib/haxe/std/haxe/Unserializer.hx	/^ 				var c = get(pos);$/;"	v
c	/usr/lib/haxe/std/haxe/Unserializer.hx	/^ 			var c = get(pos);$/;"	v
c	/usr/lib/haxe/std/haxe/crypto/Adler32.hx	/^			var c = b.get(p);$/;"	v
c	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^		var c = -1732584194;$/;"	v
c	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^		var c = 0x98BADCFE;$/;"	v
c	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^			var c = compare(key, node.key);$/;"	v
c	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^		var c = compare(k, node.key);$/;"	v
c	/usr/lib/haxe/std/haxe/format/JsonParser.hx	/^					var c = nextChar();$/;"	v
c	/usr/lib/haxe/std/haxe/format/JsonParser.hx	/^			var c = nextChar();$/;"	v
c	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^			var c = StringTools.fastCodeAt(s, i++);$/;"	v
c	/usr/lib/haxe/std/haxe/io/BufferInput.hx	/^		var c = buf.get(pos);$/;"	v
c	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^			var c : Int = StringTools.fastCodeAt(s,i++);$/;"	v
c	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^			var c = b[i++];$/;"	v
c	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^			var c = get(i);$/;"	v
c	/usr/lib/haxe/std/haxe/macro/Context.hx	/^		var c : neko.NativeArray<neko.NativeString> = load("class_path",0)();$/;"	v
c	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^			var c = c.get();$/;"	v
c	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^			var c = e.constructs.get(c);$/;"	v
c	/usr/lib/haxe/std/haxe/macro/Format.hx	/^					var c = StringTools.fastCodeAt(str, i);$/;"	v
c	/usr/lib/haxe/std/haxe/macro/Format.hx	/^					var c = StringTools.fastCodeAt(str,i++);$/;"	v
c	/usr/lib/haxe/std/haxe/macro/Format.hx	/^			var c = StringTools.fastCodeAt(str, i);$/;"	v
c	/usr/lib/haxe/std/haxe/remoting/AMFConnection.hx	/^		var c = new flash.NetConnection();$/;"	v
c	/usr/lib/haxe/std/haxe/remoting/AMFConnection.hx	/^		var c = new flash.net.NetConnection();$/;"	v
c	/usr/lib/haxe/std/haxe/remoting/DelayedConnection.hx	/^			var c = cnx;$/;"	v
c	/usr/lib/haxe/std/haxe/remoting/FlashJsConnection.hx	/^		var c = new FlashJsConnection(__data,__path.copy());$/;"	v
c	/usr/lib/haxe/std/haxe/remoting/HttpAsyncConnection.hx	/^		var c = new HttpAsyncConnection(__data,__path.copy());$/;"	v
c	/usr/lib/haxe/std/haxe/remoting/HttpConnection.hx	/^		var c = new HttpConnection(__url,__path.copy());$/;"	v
c	/usr/lib/haxe/std/haxe/remoting/LocalConnection.hx	/^		var c = new LocalConnection({$/;"	v
c	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		var c = new haxe.xml.Fast(x);$/;"	v
c	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^				var c = i.get();$/;"	v
c	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^			var c = Type.getClass(cfg.obj);$/;"	v
c	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^			var c = c.get();$/;"	v
c	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^		var c = Type.getClass(obj);$/;"	v
c	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^		var c = str.fastCodeAt(p);$/;"	v
c	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^		var c = window.getLastChar();$/;"	v
c	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var c = new haxe.zip.Uncompress(-15);$/;"	v
c	/usr/lib/haxe/std/neko/net/Poll.hx	/^			var c = __dollar__hnew(16);$/;"	v
c	/usr/lib/haxe/std/sys/db/Manager.hx	/^			var c = getFromCache(x,lock);$/;"	v
c	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var c : Dynamic = object_cache.get(makeCacheKey(x));$/;"	v
c	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var c = getFromCache(r,lock);$/;"	v
c	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^									var c = e.get().constructs.get(n);$/;"	v
c	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^					var c = c.get();$/;"	v
c	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var c = csup.t.get();$/;"	v
c	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var c = c.get();$/;"	v
c	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var c = switch( t ) {$/;"	v
c	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var c = unifyClass(t);$/;"	v
c	/usr/lib/haxe/std/sys/net/Address.hx	/^		var c = new Address();$/;"	v
c0	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Sweep.hx	/^	public var c0:B2Vec2;$/;"	v
c1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^		var c1:B2Vec2 = new B2Vec2(dot(A.col1, B.col1), dot(A.col2, B.col1));$/;"	v
c1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var c1:B2Vec2 = bA.m_sweep.c;$/;"	v
c1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var c1:B2Vec2 = bA.m_sweep.c;$/;"	v
c1	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^		var c1 = c * cos - d * sin;$/;"	v
c1	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^		var c1 = c * m.a + d * m.c;$/;"	v
c1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^		var c1 = c * cos - d * sin;$/;"	v
c1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^		var c1 = c * m.a + d * m.c;$/;"	v
c1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^		var c1 = c * cos - d * sin;$/;"	v
c1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^		var c1 = c * m.a + d * m.c;$/;"	v
c1	/usr/lib/haxe/std/haxe/Unserializer.hx	/^				var c1 = codes[StringTools.fastCodeAt(buf,i++)];$/;"	v
c1	/usr/lib/haxe/std/haxe/io/Path.hx	/^		var c1 = path.lastIndexOf("\/");$/;"	v
c1	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^		var c1 = encodeChar(len>>6);$/;"	v
c1	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^		var c1 = i.readByte();$/;"	v
c1	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var c1 = unifyClass(r1.t);$/;"	v
c2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^		var c2:B2Vec2 = new B2Vec2(dot(A.col1, B.col2), dot(A.col2, B.col2));$/;"	v
c2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var c2:B2Vec2 = bB.m_sweep.c;$/;"	v
c2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var c2:B2Vec2 = bB.m_sweep.c;$/;"	v
c2	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^				var c2 = data.getUint8 (this.position++);$/;"	v
c2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^				var c2 = data.getUint8 (this.position++);$/;"	v
c2	/usr/lib/haxe/std/haxe/Unserializer.hx	/^				var c2 = codes[StringTools.fastCodeAt(buf,i++)];$/;"	v
c2	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^				var c2 = b[i++];$/;"	v
c2	/usr/lib/haxe/std/haxe/io/Path.hx	/^		var c2 = path.lastIndexOf("\\\\");$/;"	v
c2	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^		var c2 = encodeChar(len&63);$/;"	v
c2	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^		var c2 = i.readByte();$/;"	v
c2	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var c2 = unifyClass(r2.t);$/;"	v
c3	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^				var c3 = data.getUint8 (this.position++);$/;"	v
c3	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^				var c3 = data.getUint8 (this.position++);$/;"	v
c3	/usr/lib/haxe/std/haxe/Unserializer.hx	/^					var c3 = codes[StringTools.fastCodeAt(buf,i++)];$/;"	v
c3	/usr/lib/haxe/std/haxe/Unserializer.hx	/^				var c3 = codes[StringTools.fastCodeAt(buf,i++)];$/;"	v
c3	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^				var c3 = b[i++];$/;"	v
c4	/usr/lib/haxe/std/haxe/Unserializer.hx	/^				var c4 = codes[StringTools.fastCodeAt(buf,i++)];$/;"	v
cA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^				var cA:B2Vec2 = fixtureA.getAABB().getCenter();$/;"	v
cAX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2WorldManifold.hx	/^				var cAX:Float = pointAX + radiusA * m_normal.x;$/;"	v
cAY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2WorldManifold.hx	/^				var cAY:Float = pointAY + radiusA * m_normal.y;$/;"	v
cB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^				var cB:B2Vec2 = fixtureB.getAABB().getCenter();$/;"	v
cBX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2WorldManifold.hx	/^				var cBX:Float = pointBX - radiusB * m_normal.x;$/;"	v
cBY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2WorldManifold.hx	/^				var cBY:Float = pointBY - radiusB * m_normal.y;$/;"	v
cEdge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var cEdge:B2ContactEdge;$/;"	v
cLocalX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var cLocalX:Float = (dX * tMat.col1.x + dY * tMat.col1.y);$/;"	v
cLocalX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2EdgeAndCircleContact.hx	/^		var cLocalX: Number = (tX * tMat.col1.x + tY * tMat.col1.y );$/;"	v
cLocalY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var cLocalY:Float = (dX * tMat.col2.x + dY * tMat.col2.y);$/;"	v
cLocalY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2EdgeAndCircleContact.hx	/^		var cLocalY: Number = (tX * tMat.col2.x + tY * tMat.col2.y );$/;"	v
cNuke	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^					var cNuke:B2Contact = c;$/;"	v
cNuke	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^				var cNuke:B2Contact = c;$/;"	v
cOffsetIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var cOffsetIndex = 0;$/;"	v
cX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var cX:Float = xf2.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);$/;"	v
cX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^		var cX:Float = a.x-b.x;$/;"	v
cX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2EdgeAndCircleContact.hx	/^		var cX: Number = xf2.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);$/;"	v
cY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var cY:Float = xf2.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);$/;"	v
cY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^		var cY:Float = a.y-b.y;$/;"	v
cY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2EdgeAndCircleContact.hx	/^		var cY: Number = xf2.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);$/;"	v
ca	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^						var ca = Math.cos (rotation);$/;"	v
cache	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public static var cache = new AssetCache ();$/;"	v
cache	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^			var cache = LogHelper.verbose;$/;"	v
cache	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^			var cache = LogHelper.verbose;$/;"	v
cache	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public static var cache:IAssetCache = new AssetCache ();$/;"	v
cache	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public static var cache:IAssetCache = new AssetCache ();$/;"	v
cache	/usr/lib/haxe/std/haxe/Serializer.hx	/^	var cache : Array<Dynamic>;$/;"	v
cache	/usr/lib/haxe/std/haxe/Unserializer.hx	/^ 	var cache : Array<Dynamic>;$/;"	v
cache	/usr/lib/haxe/std/neko/vm/Loader.hx	/^		var cache = untyped l.cache;$/;"	v
cache	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var cache : { v : Dynamic } = Reflect.field(x, "cache_" + name);$/;"	v
cache	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var cache = Reflect.field(x,cache_field);$/;"	v
cache	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var cache = "cache_" + f.name;$/;"	v
cache	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var cache : haxe.ds.StringMap<RecordInfos>;$/;"	v
cache	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var cache = new haxe.ds.StringMap();$/;"	v
cache this somehow?, don't do each state change?	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		\/\/ TODO cache this somehow?, don't do each state change?$/;"	i
cacheAsBitmap	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var cacheAsBitmap:Bool;$/;"	v
cacheAsBitmap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public var cacheAsBitmap (get, set):Bool;$/;"	v
cacheAsBitmap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	public var cacheAsBitmap:Bool;$/;"	v
cacheBottom	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^		var cacheBottom = bottom;$/;"	v
cacheBottom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^		var cacheBottom = bottom;$/;"	v
cacheCount	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/FPS.hx	/^	private var cacheCount:Int;$/;"	v
cacheCwd	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^			var cacheCwd = Sys.getCwd ();$/;"	v
cacheDryRun	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^				var cacheDryRun = ProcessHelper.dryRun;$/;"	v
cacheDryRun	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ProcessHelper.hx	/^		var cacheDryRun = dryRun;$/;"	v
cacheHeight	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Application.hx	/^					var cacheHeight = parent.window.height;$/;"	v
cacheID	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/TizenHelper.hx	/^	private static var cacheID:String = null;$/;"	v
cacheID	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^			var cacheID:Int = -1;$/;"	v
cacheLock	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeRenderer.hx	/^	private var cacheLock:Dynamic;$/;"	v
cacheModule	/usr/lib/haxe/std/neko/Web.hx	/^	public static function cacheModule( f : Void -> Void ) {$/;"	f
cacheObject	/usr/lib/haxe/std/sys/db/Manager.hx	/^	function cacheObject( x : T, lock : Bool ) {$/;"	f
cachePosition	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var cachePosition = position;$/;"	v
cachePosition	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^		var cachePosition = position;$/;"	v
cacheRight	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^		var cacheRight = right;$/;"	v
cacheRight	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^		var cacheRight = right;$/;"	v
cacheTime	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashApplication.hx	/^	private var cacheTime:Int;$/;"	v
cacheTime	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^			var cacheTime = FileHelper.getLastModified (targetPath);$/;"	v
cacheUUID	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/TizenHelper.hx	/^	private static var cacheUUID:String = null;$/;"	v
cacheValue	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Mouse.hx	/^			var cacheValue = __cursor;$/;"	v
cacheVisible	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^		var cacheVisible = visible;$/;"	v
cacheWidth	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Application.hx	/^					var cacheWidth = parent.window.width;$/;"	v
cache_field	/usr/lib/haxe/std/sys/db/Manager.hx	/^	private static inline var cache_field = "__cache__";$/;"	v
cached	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var cached = source.__cacheAsBitmap;$/;"	v
cachedAxisData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^				var cachedAxisData:String = '';$/;"	v
cachedTexture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var cachedTexture = object.__graphics.__cachedTexture;$/;"	v
cairo	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeRenderer.hx	/^	private var cairo:Cairo;$/;"	v
cairo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/RenderSession.hx	/^	public var cairo:CairoRenderContext;$/;"	v
cairo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoBitmap.hx	/^		var cairo = renderSession.cairo;$/;"	v
cairo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^			var cairo = renderSession.cairo;$/;"	v
cairo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^	private static var cairo:Cairo;$/;"	v
cairo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoMaskManager.hx	/^		var cairo = renderSession.cairo;$/;"	v
cairo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoRenderer.hx	/^	private var cairo:Cairo;$/;"	v
cairo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoShape.hx	/^				var cairo = renderSession.cairo;$/;"	v
cairo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^			var cairo = textField.__graphics.__cairo;$/;"	v
cairo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		var cairo = graphics.__cairo;$/;"	v
cairo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var cairo = renderSession.cairo;$/;"	v
calc	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^			var calc = window.checksum();$/;"	v
calculateAudioLengthSamples	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/Utils.hx	/^    public static function calculateAudioLengthSamples(mpegAudio:MpegAudio) {$/;"	f
call	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/external/ExternalInterface.hx	/^	public static function call (functionName:String, ?p1:Dynamic, ?p2:Dynamic, ?p3:Dynamic, ?p4:Dynamic, ?p5:Dynamic):Dynamic {$/;"	f
call	/usr/lib/haxe/lib/openfl/3,0,8/openfl/external/ExternalInterface.hx	/^	public static function call (functionName:String, ?p1:Dynamic, ?p2:Dynamic, ?p3:Dynamic, ?p4:Dynamic, ?p5:Dynamic):Dynamic {$/;"	f
call	/usr/lib/haxe/std/haxe/remoting/AMFConnection.hx	/^	public function call( params : Array<Dynamic>, ?onResult : Dynamic -> Void ) : Void {$/;"	f
call	/usr/lib/haxe/std/haxe/remoting/AsyncAdapter.hx	/^	public function call( params : Array<Dynamic>, ?onResult : Dynamic -> Void ) {$/;"	f
call	/usr/lib/haxe/std/haxe/remoting/AsyncConnection.hx	/^	function call( params : Array<Dynamic>, ?result : Dynamic -> Void ) : Void;$/;"	f
call	/usr/lib/haxe/std/haxe/remoting/AsyncDebugConnection.hx	/^	public function call( params : Array<Dynamic>, ?onResult : Dynamic -> Void ) {$/;"	f
call	/usr/lib/haxe/std/haxe/remoting/Connection.hx	/^	function call( params : Array<Dynamic> ) : Dynamic;$/;"	f
call	/usr/lib/haxe/std/haxe/remoting/Context.hx	/^	public function call( path : Array<String>, params : Array<Dynamic> ) : Dynamic {$/;"	f
call	/usr/lib/haxe/std/haxe/remoting/ContextAll.hx	/^	public override function call( path : Array<String>, params : Array<Dynamic> ) : Dynamic {$/;"	f
call	/usr/lib/haxe/std/haxe/remoting/DelayedConnection.hx	/^	public function call( params : Array<Dynamic>, ?onResult ) {$/;"	f
call	/usr/lib/haxe/std/haxe/remoting/ExternalConnection.hx	/^	public function call( params : Array<Dynamic> ) : Dynamic {$/;"	f
call	/usr/lib/haxe/std/haxe/remoting/FlashJsConnection.hx	/^	public function call( params : Array<Dynamic>, ?onResult : Dynamic -> Void ) {$/;"	f
call	/usr/lib/haxe/std/haxe/remoting/HttpAsyncConnection.hx	/^	public function call( params : Array<Dynamic>, ?onResult : Dynamic -> Void ) {$/;"	f
call	/usr/lib/haxe/std/haxe/remoting/HttpConnection.hx	/^	public function call( params : Array<Dynamic> ) : Dynamic {$/;"	f
call	/usr/lib/haxe/std/haxe/remoting/LocalConnection.hx	/^	public function call( params : Array<Dynamic>, ?onResult : Dynamic -> Void ) : Void {$/;"	f
call	/usr/lib/haxe/std/haxe/remoting/SocketConnection.hx	/^	public function call( params : Array<Dynamic>, ?onResult : Dynamic -> Void ) {$/;"	f
call	/usr/lib/haxe/std/haxe/remoting/SyncSocketConnection.hx	/^	public function call( params : Array<Dynamic> ) : Dynamic {$/;"	f
call	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^		var call = { expr : ECall( { expr : EField(ethis, "runtimeGetParams"), pos : p }, [ { expr : EConst(CInt(Std.string(index))), pos : p } ]), pos : p };$/;"	v
callMember	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	public function callMember (args:Array<Dynamic>):Dynamic {$/;"	f
callMember	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	public static function callMember (method:Dynamic, jobject:Dynamic, a:Array<Dynamic>):Dynamic {$/;"	f
callMethod	/usr/lib/haxe/std/Reflect.hx	/^	public static function callMethod( o : Dynamic, func : Dynamic, args : Array<Dynamic> ) : Dynamic;$/;"	f
callResponse	/usr/lib/haxe/lib/openfl/3,0,8/openfl/external/ExternalInterface.hx	/^		var callResponse:Dynamic = null;$/;"	v
callStack	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^	public static function callStack() : Array<StackItem> {$/;"	f
callStack	/usr/lib/haxe/std/haxe/CallStack.hx	/^	public static function callStack() : Array<StackItem> {$/;"	f
callStatic	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	public function callStatic (args:Array<Dynamic>):Dynamic {$/;"	f
callStatic	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	public static function callStatic (method:Dynamic, a:Array<Dynamic>):Dynamic {$/;"	f
callback	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^		var callback = function (bytes:ByteArray):Void {$/;"	v
callback	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^		var callback = function (bytes:ByteArray):Void {$/;"	v
callback	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^		var callback = function (bytes:ByteArray):Void {$/;"	v
callback	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^		var callback = function (bytes:ByteArray):Void {$/;"	v
callback	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/EventDispatcher.hx	/^	public var callback:Dynamic->Void;$/;"	v
callback	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/EventDispatcher.hx	/^	public var callback:Dynamic->Void;$/;"	v
callback	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^		var callback = function (bytes:ByteArray):Void {$/;"	v
callbacks	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/external/ExternalInterface.hx	/^	private static var callbacks = new Map<String, Dynamic> ();$/;"	v
called	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventTest.hx	/^		var called = false;$/;"	v
called	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/FocusEventTest.hx	/^		var called = false;$/;"	v
called2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventTest.hx	/^		var called2 = false;$/;"	v
called2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/FocusEventTest.hx	/^		var called2 = false;$/;"	v
canOptimizeMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^						var canOptimizeMatrix = true;$/;"	v
canPlayType	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function canPlayType (buffer:AudioBuffer, type:String):String {$/;"	f
canStringify	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	function canStringify( t : RecordType ) {$/;"	f
canUseCache	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^	private static function canUseCache (targetPath:String, icons:Array<Icon>):Bool {$/;"	f
cancel	/usr/lib/haxe/std/haxe/Http.hx	/^	public function cancel()$/;"	f
cancelable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public var cancelable (get, never):Bool;$/;"	v
cancelable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public var cancelable (default, null):Bool;$/;"	v
canvas	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^	public var canvas:CanvasElement;$/;"	v
canvas	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public var canvas:Dynamic \/*CanvasElement*\/;$/;"	v
canvas	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var canvas (default, null):CanvasElement;$/;"	v
canvas	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^		var canvas:CanvasElement = cast Browser.document.createElement ("canvas");$/;"	v
canvas	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/OpenGLView.hx	/^			var canvas:CanvasElement = cast Browser.document.createElement ("canvas");$/;"	v
canvasMemory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^			var canvasMemory = (sw * sh) * 4;$/;"	v
canvasMemory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^			var canvasMemory = (sw * sh) * 4;$/;"	v
capitalizeNext	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^				var capitalizeNext = true;$/;"	v
capitalizeStrings	/usr/lib/haxe/std/haxe/macro/ExprTools.hx	/^		function capitalizeStrings(e:Expr) {$/;"	f
caps	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	public var caps:CapsStyle;$/;"	v
caps	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsStroke.hx	/^	public var caps:CapsStyle;$/;"	v
caps	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsStroke.hx	/^	public var caps:CapsStyle;$/;"	v
capsLock	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	public var capsLock (get, set):Bool;$/;"	v
capsLock	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static var capsLock (default, null):Bool;$/;"	v
caption	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Global.hx	/^	public static var caption:TextField = new TextField();$/;"	v
capture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/EventDispatcher.hx	/^		var capture = (event.eventPhase == EventPhase.CAPTURING_PHASE);$/;"	v
capture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/EventDispatcher.hx	/^		var capture = (event.eventPhase == EventPhase.CAPTURING_PHASE);$/;"	v
caretIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var caretIndex:Int;$/;"	v
caretPos	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var caretPos (get, null):Int;$/;"	v
cascade	/usr/lib/haxe/std/sys/db/RecordInfos.hx	/^	var cascade : Bool;$/;"	v
cases	/usr/lib/haxe/std/haxe/unit/TestRunner.hx	/^	var cases  : List<TestCase>;$/;"	v
catchArguments	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^		var catchArguments = false;$/;"	v
catchHaxeFlag	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^		var catchHaxeFlag = false;$/;"	v
categories	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var categories = project.config.getArrayString ("firefox-marketplace.categories.category", "name");$/;"	v
categoryBits	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2FilterData.hx	/^	public var categoryBits: Int;$/;"	v
caughtEvent	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventDispatcherTest.hx	/^		var caughtEvent = false;$/;"	v
cc	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^			var cc:B2ContactConstraint = constraints[ i ];$/;"	v
cc	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var cc:B2ContactConstraint = m_constraints[ i ];$/;"	v
ccount	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var ccount = src.readUInt16();$/;"	v
ccp	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^					var ccp:B2ContactConstraintPoint = c.points[ j ];$/;"	v
ccp	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var ccp:B2ContactConstraintPoint = c.points[j];$/;"	v
ccp	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var ccp:B2ContactConstraintPoint = cc.points[ k ];$/;"	v
ccp	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^		var ccp:B2ContactConstraintPoint;$/;"	v
ccp1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var ccp1:B2ContactConstraintPoint = cc.points[0];$/;"	v
ccp2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^					var ccp2:B2ContactConstraintPoint = c.points[ j ];$/;"	v
ccp2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var ccp2:B2ContactConstraintPoint = cc.points[1];$/;"	v
cd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCCD.hx	/^				var cd:B2CircleShape = new B2CircleShape((Math.random() * 10 + 5) \/ m_physScale);$/;"	v
cd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestStack.hx	/^			var cd:B2CircleShape = new B2CircleShape();$/;"	v
cd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^		var cd:B2CircleShape;$/;"	v
cd1	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCompound.hx	/^				var cd1:B2CircleShape = new B2CircleShape();$/;"	v
cd2	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCompound.hx	/^				var cd2:B2CircleShape = new B2CircleShape();$/;"	v
cdr_offset	/usr/lib/haxe/std/haxe/zip/Writer.hx	/^		var cdr_offset = 0;$/;"	v
cdr_size	/usr/lib/haxe/std/haxe/zip/Writer.hx	/^		var cdr_size = 0;$/;"	v
cdx	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^							var cdx = cpx - dx;$/;"	v
cdx	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^							var cdx = native_glyph.points[i++];$/;"	v
cdy	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^							var cdy = cpy - dy;$/;"	v
cdy	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^							var cdy = native_glyph.points[i++];$/;"	v
ce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^			var ce:B2ContactEdge = m_contactList;$/;"	v
ce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var ce:B2ContactEdge = m_contactList;$/;"	v
ce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^				var ce:B2ContactEdge = b.m_contactList;$/;"	v
ce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var ce:B2ContactEdge = b.m_contactList;$/;"	v
ce0	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^				var ce0:B2ContactEdge = ce;$/;"	v
ce0	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^			var ce0:B2ContactEdge = ce;$/;"	v
ceil	/usr/lib/haxe/std/Math.hx	/^	static function ceil(v:Float):Int;$/;"	f
center	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^		var center:B2Vec2 = leaf.aabb.getCenter();$/;"	v
center	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2OBB.hx	/^	public var center:B2Vec2;$/;"	v
center	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2MassData.hx	/^	public var center:B2Vec2;$/;"	v
center	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var center:B2Vec2 = new B2Vec2();$/;"	v
center	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var center:B2Vec2 = B2Vec2.make(0, 0);$/;"	v
center	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var center:B2Vec2 = getWorldCenter();$/;"	v
center	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^				var center:B2Vec2 = B2Math.mulX(xf, circle.m_p);$/;"	v
center	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var center = null;$/;"	v
center	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var center = null;$/;"	v
center	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var center:Point = sheet.__point;$/;"	v
center1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var center1:B2Vec2 = body1.getWorldCenter();$/;"	v
center2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var center2:B2Vec2 = body2.getWorldCenter();$/;"	v
centerX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^				var centerX:Float = 0.5 * (lowerX + upperX);$/;"	v
centerX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var centerX:Float = 0.0;$/;"	v
centerY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^				var centerY:Float = 0.5 * (lowerY + upperY);$/;"	v
centerY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var centerY:Float = 0.0;$/;"	v
certificate	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public var certificate:Keystore;$/;"	v
cfg	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^		var cfg = makeConfig(obj);$/;"	v
cfg	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^	public var cfg : DispatchConfig;$/;"	v
ch1	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		 var ch1 = readUnsignedByte ();$/;"	v
ch1	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var ch1 = readUnsignedByte ();$/;"	v
ch1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var ch1 = readUnsignedByte ();$/;"	v
ch1	/usr/lib/haxe/std/haxe/io/Input.hx	/^		var ch1 = readByte();$/;"	v
ch2	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var ch2 = readUnsignedByte ();$/;"	v
ch2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var ch2 = readUnsignedByte ();$/;"	v
ch2	/usr/lib/haxe/std/haxe/io/Input.hx	/^		var ch2 = readByte();$/;"	v
ch3	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var ch3 = readUnsignedByte ();$/;"	v
ch3	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var ch3 = readUnsignedByte ();$/;"	v
ch3	/usr/lib/haxe/std/haxe/io/Input.hx	/^		var ch3 = readByte();$/;"	v
ch4	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var ch4 = readUnsignedByte ();$/;"	v
ch4	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var ch4 = readUnsignedByte ();$/;"	v
ch4	/usr/lib/haxe/std/haxe/io/Input.hx	/^		var ch4 = readByte();$/;"	v
channel	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^			var channel = buffer.src.play (pauseTime \/ 1000);$/;"	v
channel	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^	private var channel:SoundChannel;$/;"	v
channel	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^				var channel = new SoundChannel (null, startTime, loops, soundTransform);$/;"	v
channel	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^			var channel = new SoundChannel (__handle, startTime, loops, soundTransform);$/;"	v
channelList	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	public var channelList:Array<SoundChannel>;$/;"	v
channels	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioBuffer.hx	/^	public var channels:Int;$/;"	v
char	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^			var char = name.charAt (i);$/;"	v
char	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^					var char = Utf8.charCodeAt (textField.text, i);$/;"	v
char	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^				var char = Utf8.charCodeAt (textField.text, i);$/;"	v
char	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^			var char = Utf8.charCodeAt (textField.text, i);$/;"	v
char	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^				var char = Utf8.charCodeAt (textField.text, i);$/;"	v
char	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^				var char = locale.charAt (i);$/;"	v
charAt	/usr/lib/haxe/std/String.hx	/^	function charAt(index : Int) : String;$/;"	f
charCode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/KeyboardEvent.hx	/^	public var charCode:Int;$/;"	v
charCode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^			var charCode = Keyboard.__getCharCode (keyCode, modifier.shiftKey);$/;"	v
charCode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/KeyboardEvent.hx	/^	public var charCode:Int;$/;"	v
charCode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	var charCode:Int;$/;"	v
charCodeAt	/usr/lib/haxe/std/String.hx	/^	function charCodeAt( index : Int) : Null<Int>;$/;"	f
charCodeAt	/usr/lib/haxe/std/haxe/Utf8.hx	/^	public static inline function charCodeAt( s : String, index : Int ) : Int {$/;"	f
char_code	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	var char_code:Int;$/;"	v
char_code	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	var char_code: Int;$/;"	v
chars	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^		var chars = name.toLowerCase ();$/;"	v
chars	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^		var chars = uuidChars.split ("");$/;"	v
chars	/usr/lib/haxe/std/haxe/Serializer.hx	/^				var chars = charsBuf.toString();$/;"	v
chars	/usr/lib/haxe/std/haxe/Serializer.hx	/^				var chars = new String(base_encode(v.getData(),untyped BASE64.__s));$/;"	v
chars	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^		var chars = [];$/;"	v
charsBuf	/usr/lib/haxe/std/haxe/Serializer.hx	/^				var charsBuf = new StringBuf();$/;"	v
chartoindex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^		var chartoindex = { x: 0, y: 1, z: 2, w: 3 };$/;"	v
check	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^					var check = StringTools.trim (required);$/;"	v
check	/usr/lib/haxe/std/haxe/xml/Check.hx	/^	static function check( x : Xml, r : Rule ) {$/;"	f
check if this can cause loops	/usr/lib/haxe/std/haxe/macro/Printer.hx	/^	\/\/ TODO: check if this can cause loops$/;"	i
check whether this is kept across frame	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^			\/\/ TODO check whether this is kept across frame$/;"	i
checkData	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function checkData (length:Int) {$/;"	f
checkData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function checkData (length:Int) {$/;"	f
checkDocument	/usr/lib/haxe/std/haxe/xml/Check.hx	/^	public static function checkDocument( x : Xml, r : Rule ) {$/;"	f
checkEvent	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/FocusEventTest.hx	/^		var checkEvent = function (e:FocusEvent) {$/;"	v
checkFieldName	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^	function checkFieldName( c : ClassType, f : ClassField ) {$/;"	f
checkFont	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Preloader.hx	/^			var checkFont = function () {$/;"	v
checkFramebufferStatus	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function checkFramebufferStatus (target:Int):Int;$/;"	f
checkFramebufferStatus	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function checkFramebufferStatus (target:Int):Int {$/;"	f
checkFramebufferStatus	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function checkFramebufferStatus (target:Int):Int {$/;"	f
checkFramebufferStatus	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function checkFramebufferStatus(target:Int):Int $/;"	f
checkFramebufferStatus	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function checkFramebufferStatus(target:Int):Int;$/;"	f
checkKeys	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	function checkKeys( econd : Expr ) {$/;"	f
checkList	/usr/lib/haxe/std/haxe/xml/Check.hx	/^	static function checkList( it : Iterator<Xml>, r : Rule ) {$/;"	f
checkNode	/usr/lib/haxe/std/haxe/xml/Check.hx	/^	public static function checkNode( x : Xml, r : Rule ) {$/;"	f
checkParams	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^	function checkParams( params : Array<{ name : String, opt : Bool, rule : MatchRule }>, opt ) {$/;"	f
checkPolicyFile	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/SoundLoaderContext.hx	/^	public var checkPolicyFile:Bool;$/;"	v
checkPolicyFile	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/NetStream.hx	/^	public var checkPolicyFile:Bool;$/;"	v
checkPolicyFile	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/LoaderContext.hx	/^	public var checkPolicyFile:Bool;$/;"	v
checkValidationStatus	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	public function checkValidationStatus (uploadID:String):Dynamic {$/;"	f
checksum	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	public function checksum() {$/;"	f
child	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^			var child;$/;"	v
child	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^						var child = Xml.createCData(str.substr(start, p - start));$/;"	v
child	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^						var child = Xml.createPCData(buf.toString() + str.substr(start, p - start));$/;"	v
child	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^						var child = Xml.createPCDataFromCustomParser(buf.toString() + str.substr(start, p - start));$/;"	v
child1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^				var child1:B2DynamicTreeNode = sibling.child1;$/;"	v
child1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeNode.hx	/^	public var child1:B2DynamicTreeNode;$/;"	v
child2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^				var child2:B2DynamicTreeNode = sibling.child2;$/;"	v
child2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeNode.hx	/^	public var child2:B2DynamicTreeNode;$/;"	v
childAllowsParent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/LoaderInfo.hx	/^	public var childAllowsParent (default, null):Bool;$/;"	v
childAllowsParent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/LoaderInfo.hx	/^	public var childAllowsParent (default, null):Bool;$/;"	v
childArchives	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var childArchives = [];$/;"	v
childBucket	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^					var childBucket = addBucket (child.name, bucket);$/;"	v
childElementCount	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var childElementCount (default, null):Int;$/;"	v
childEmbed	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^					var childEmbed:Null<Bool> = embed;$/;"	v
childGlyphs	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^					var childGlyphs = glyphs;$/;"	v
childNodes	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var childNodes (default, null):Dynamic \/*NodeList*\/;$/;"	v
childPath	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^					var childPath = substitute (childElement.has.name ? childElement.att.name : childElement.att.path);$/;"	v
childPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ZipHelper.hx	/^			var childPath = PathHelper.combine (path, file);$/;"	v
childTargetPath	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^					var childTargetPath = childPath;$/;"	v
childType	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^					var childType = type;$/;"	v
children	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var children (default, null):Dynamic \/*HTMLCollection*\/;$/;"	v
chunk_buf	/usr/lib/haxe/std/haxe/Http.hx	/^	var chunk_buf : haxe.io.Bytes;$/;"	v
chunk_re	/usr/lib/haxe/std/haxe/Http.hx	/^		var chunk_re = ~\/^([0-9A-Fa-f]+)[ ]*\\r\\n\/m;$/;"	v
chunk_size	/usr/lib/haxe/std/haxe/Http.hx	/^	var chunk_size : Null<Int>;$/;"	v
chunked	/usr/lib/haxe/std/haxe/Http.hx	/^		var chunked = false;$/;"	v
ci	/usr/lib/haxe/std/haxe/Serializer.hx	/^			var ci = cache[i];$/;"	v
cid	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^		var cid = nextAssetID ();$/;"	v
cid	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var cid = 1;$/;"	v
cinfo	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^			var cinfo = cmf >> 4;$/;"	v
circ	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^				var circ:B2CircleShape = new B2CircleShape(40 \/ m_physScale);$/;"	v
circ	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRagdoll.hx	/^			var circ:B2CircleShape; $/;"	v
circDef	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBuoyancy.hx	/^				var circDef:B2CircleShape;$/;"	v
circShape	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBridge.hx	/^				var circShape:B2CircleShape = new B2CircleShape((Math.random() * 5 + 10) \/ m_physScale);$/;"	v
circle	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DistanceProxy.hx	/^				var circle:B2CircleShape = cast (shape, B2CircleShape);$/;"	v
circle	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^				var circle:B2CircleShape = cast (shape, B2CircleShape);$/;"	v
circle	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^					var circle:B2CircleShape = shape as B2CircleShape;$/;"	v
circle	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestOneSidedPlatform.hx	/^				var circle:B2CircleShape = new B2CircleShape(m_radius);$/;"	v
circle	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRaycast.hx	/^			var circle:B2CircleShape = new B2CircleShape(30 \/ m_physScale);$/;"	v
circle1	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^				var circle1:B2CircleShape = new B2CircleShape(25 \/ m_physScale);$/;"	v
circle2	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^				var circle2:B2CircleShape = new B2CircleShape(50 \/ m_physScale);$/;"	v
circleBody	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^			var circleBody:B2Body;$/;"	v
circlePointA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PositionSolverManifold.hx	/^	private static var circlePointA:B2Vec2 = new B2Vec2();$/;"	v
circlePointB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PositionSolverManifold.hx	/^	private static var circlePointB:B2Vec2 = new B2Vec2();$/;"	v
cl	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^				var cl = r.matched(1).split("::").join(".");$/;"	v
cl	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^			var cl = untyped __define_feature__("js.Boot.getClass", o.__class__);$/;"	v
cl	/usr/lib/haxe/std/haxe/CallStack.hx	/^				var cl = r.matched(1).split("::").join(".");$/;"	v
cl	/usr/lib/haxe/std/haxe/Unserializer.hx	/^			var cl = resolver.resolveClass(name);$/;"	v
cl	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^					var cl = prefix + file.substr(0, file.length - 3);$/;"	v
cl	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		var cl = new List();$/;"	v
cl	/usr/lib/haxe/std/haxe/unit/TestRunner.hx	/^		var cl = Type.getClass(t);$/;"	v
cl	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^			var cl : Dynamic = Type.resolveClass(c);$/;"	v
cl	/usr/lib/haxe/std/neko/Boot.hx	/^			var cl = neko.Boot.__classes;$/;"	v
cl	/usr/lib/haxe/std/neko/Lib.hx	/^			var cl = v.__class__;$/;"	v
cl	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^				var cl : ServerClient<ClientData> = untyped s.__client;$/;"	v
cl	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^		var cl : ServerClient<ClientData> = untyped s.__client;$/;"	v
cl	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var cl = c.get();$/;"	v
cl	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var cl = e.get().names;$/;"	v
clamp	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public function clamp(a:Float, low:Float, high:Float):Float$/;"	f
clamp	/usr/lib/haxe/lib/openfl/3,0,8/docs/haxe/Int32.hx	/^	static inline function clamp( x : Int ) : Int {$/;"	f
clamp	/usr/lib/haxe/std/haxe/Int32.hx	/^	static inline function clamp( x : Int ) : Int {$/;"	f
clampV	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public function clampV(a:B2Vec2, low:B2Vec2, high:B2Vec2):B2Vec2$/;"	f
classDef	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^			var classDef:ClassDef = {$/;"	v
classFile	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^		var classFile = PathHelper.combine (tempDirectory, name + ".hx");$/;"	v
classList	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var classList (default, null):Dynamic \/*DOMTokenList*\/;$/;"	v
className	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^						var className = fullName.substr(0, idx);$/;"	v
className	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^				var className = el.getClassName();$/;"	v
className	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var className:String;$/;"	v
className	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^	public var className (default, null) = new Map <String, Dynamic> ();$/;"	v
className	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^	public var className (default, null) = new Map <String, Dynamic> ();$/;"	v
className	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^		var className = extension.substr (0, 1).toUpperCase () + extension.substr (1);$/;"	v
className	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^		var className = Type.getClassName (Type.getClass (this));$/;"	v
className	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^	public var className (default, null) = new Map <String, Dynamic> ();$/;"	v
className	/usr/lib/haxe/std/haxe/CallStack.hx	/^							var className = fullName.substr(0, idx);$/;"	v
className	/usr/lib/haxe/std/haxe/CallStack.hx	/^				var className = el.getClassName();$/;"	v
className	/usr/lib/haxe/std/haxe/PosInfos.hx	/^	var className : String;$/;"	v
classRef	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^		var classRef = Type.resolveClass (args[1]);$/;"	v
classString	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^	function classString ( v : Dynamic ) {$/;"	f
classType	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^		var classType = Context.getLocalClass().get();$/;"	v
classType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^		var classType = Context.getLocalClass().get();$/;"	v
classType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^		var classType = Context.getLocalClass().get();$/;"	v
classType	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/ApplicationMain.hx	/^		var classType = Context.getLocalClass ().get ();$/;"	v
classType	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^		var classType = Context.getLocalClass ().get ();$/;"	v
class_def	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^				var class_def = File.getBytes("classes.jar");$/;"	v
class_name	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^			var class_name =  java_name.substr(0, java_name.length - 4) + "class";$/;"	v
class_name	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var class_name = parts[parts.length - 1].split("$").join(dollars);$/;"	v
class_proto	/usr/lib/haxe/std/sys/db/Manager.hx	/^	var class_proto : { prototype : Dynamic };$/;"	v
class_str	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^				var class_str = BaseCode.encode(class_def.toString(), base64);$/;"	v
classes	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^		var classes = new haxe.ds.StringMap();$/;"	v
classname	/usr/lib/haxe/std/haxe/unit/TestStatus.hx	/^	public var classname : String;$/;"	v
clazz	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^			var clazz = mStack.pop();$/;"	v
clean	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^	public override function clean ():Void {$/;"	f
clean	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/BlackBerryPlatform.hx	/^	public override function clean ():Void {$/;"	f
clean	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/EmscriptenPlatform.hx	/^	public override function clean ():Void {$/;"	f
clean	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FirefoxPlatform.hx	/^	public override function clean ():Void {$/;"	f
clean	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FlashPlatform.hx	/^	public override function clean ():Void {$/;"	f
clean	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/HTML5Platform.hx	/^	public override function clean ():Void {$/;"	f
clean	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^	public override function clean ():Void {$/;"	f
clean	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^	public override function clean ():Void {$/;"	f
clean	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/MacPlatform.hx	/^	public override function clean ():Void {$/;"	f
clean	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/TizenPlatform.hx	/^	public override function clean ():Void {$/;"	f
clean	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WebOSPlatform.hx	/^	public override function clean ():Void {$/;"	f
clean	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WindowsPlatform.hx	/^	public override function clean ():Void {$/;"	f
cleanup	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLEasy.hx	/^	public static function cleanup (handle:CURL):Void {$/;"	f
cleanup	/usr/lib/haxe/std/sys/db/Manager.hx	/^	public static function cleanup() {$/;"	f
clear	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^	public function clear() : Void$/;"	f
clear	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2Controller.hx	/^	public function clear():Void$/;"	f
clear	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public function clear (prefix:String = null):Void {$/;"	f
clear	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ConsoleRenderContext.hx	/^	public function clear ():Void {}$/;"	f
clear	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ConsoleRenderContext.hx	/^	public inline function clear ():Void {$/;"	f
clear	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function clear (mask:Int):Void;$/;"	f
clear	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function clear (mask:Int):Void {$/;"	f
clear	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function clear (mask:Int):Void {$/;"	f
clear	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function clear ():Void {$/;"	f
clear	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function clear (prefix:String = null):Void {$/;"	f
clear	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function clear (prefix:String = null):Void;$/;"	f
clear	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterTexture.hx	/^	public function clear ():Void {$/;"	f
clear	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function clear (prefix:String = null):Void {$/;"	f
clear	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function clear (prefix:String = null):Void;$/;"	f
clear	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function clear (color:Int):Void {$/;"	f
clear	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public function clear ():Void {$/;"	f
clear	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function clear(mask:Int):Void $/;"	f
clear	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^	public function clear ():Void {$/;"	f
clear	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function clear ():Void {$/;"	f
clear	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public function clear ():Void {$/;"	f
clear	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function clear (red:Float = 0, green:Float = 0, blue:Float = 0, alpha:Float = 1, depth:Float = 1, stencil:Int = 0, mask:Int = Context3DClearMask.ALL):Void {$/;"	f
clear	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Video.hx	/^	public function clear ():Void {$/;"	f
clear	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/SharedObject.hx	/^	public function clear ():Void {$/;"	f
clear	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public function clear () {$/;"	f
clear	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function clear(mask:Int):Void;$/;"	f
clear	/usr/lib/haxe/std/List.hx	/^	public function clear() : Void {$/;"	f
clearColor	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ConsoleRenderContext.hx	/^	public function clearColor (r:Float, g:Float, b:Float, a:Float):Void {}$/;"	f
clearColor	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ConsoleRenderContext.hx	/^	public inline function clearColor (r:Float, g:Float, b:Float, a:Float):Void {$/;"	f
clearColor	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function clearColor (red:Float, green:Float, blue:Float, alpha:Float):Void;$/;"	f
clearColor	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function clearColor (red:Float, green:Float, blue:Float, alpha:Float):Void {$/;"	f
clearColor	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function clearColor (red:Float, green:Float, blue:Float, alpha:Float):Void {$/;"	f
clearColor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function clearColor(red:Float, green:Float, blue:Float, alpha:Float):Void $/;"	f
clearColor	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function clearColor(red:Float, green:Float, blue:Float, alpha:Float):Void;$/;"	f
clearDepth	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ConsoleRenderContext.hx	/^	public function clearDepth (depth:Float):Void {}$/;"	f
clearDepth	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ConsoleRenderContext.hx	/^	public inline function clearDepth (depth:Float):Void {$/;"	f
clearDepth	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function clearDepth (depth:Float):Void;$/;"	f
clearDepth	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function clearDepth (depth:Float):Void {$/;"	f
clearDepth	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function clearDepth (depth:Float):Void {$/;"	f
clearDepth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function clearDepth(depth:Float):Void $/;"	f
clearDepth	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function clearDepth(depth:Float):Void;$/;"	f
clearFlags	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	public function clearFlags(flags:Int) : Void {$/;"	f
clearForces	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function clearForces() : Void$/;"	f
clearRect	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function clearRect (x:Float, y:Float, width:Float, height:Float):Void {};$/;"	f
clearShadow	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function clearShadow ():Void {};$/;"	f
clearStencil	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ConsoleRenderContext.hx	/^	public function clearStencil (stencil:Int):Void {}$/;"	f
clearStencil	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ConsoleRenderContext.hx	/^	public inline function clearStencil (stencil:Int):Void {$/;"	f
clearStencil	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function clearStencil (s:Int):Void;$/;"	f
clearStencil	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function clearStencil (s:Int):Void {$/;"	f
clearStencil	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function clearStencil (s:Int):Void {$/;"	f
clearStencil	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function clearStencil(s:Int):Void $/;"	f
clearStencil	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function clearStencil(s:Int):Void;$/;"	f
click	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function click ():Void {};$/;"	f
clickCount	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public var clickCount:Int;$/;"	v
clickCount	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public var clickCount:Int;$/;"	v
clickObject	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var clickObject = stack.length > 0 ? stack[stack.length - 1] : this;$/;"	v
clickType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^		var clickType = switch (type) {$/;"	v
client	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	public var client:OAuthClient;$/;"	v
client	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/NetStream.hx	/^	public var client:Dynamic;$/;"	v
client	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	var client : Client;$/;"	v
clientConnected	/usr/lib/haxe/std/neko/net/ThreadRemotingServer.hx	/^	public override function clientConnected( s : sys.net.Socket ) {$/;"	f
clientDisconnected	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^	public function clientDisconnected( d : ClientData ) {$/;"	f
clientHeight	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var clientHeight (default, null):Int;$/;"	v
clientLeft	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var clientLeft (default, null):Int;$/;"	v
clientMessage	/usr/lib/haxe/std/neko/net/ThreadRemotingServer.hx	/^	public override function clientMessage( cnx : haxe.remoting.SocketConnection, msg : String ) {$/;"	f
clientTop	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var clientTop (default, null):Int;$/;"	v
clientWidth	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var clientWidth (default, null):Int;$/;"	v
clientWrite	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^	public function clientWrite( s : Socket, buf : haxe.io.Bytes, pos : Int, len : Int ) {$/;"	f
clients	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^	public var clients : List<ClientData>;$/;"	v
clip	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function clip ():Void {};$/;"	f
clip	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function clip ():Void {$/;"	f
clip	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMRenderer.hx	/^				var clip = displayObject.__worldClip.transform (displayObject.__worldTransform.clone ().invert ());$/;"	v
clip	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^			var clip = scrollRect.transform(m);$/;"	v
clipExtents	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function clipExtents (x1:Float, y1:Float, x2:Float, y2:Float):Void {$/;"	f
clipPointX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2WorldManifold.hx	/^		var clipPointX:Float;$/;"	v
clipPointX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PositionSolverManifold.hx	/^		var clipPointX:Float;$/;"	v
clipPointY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2WorldManifold.hx	/^		var clipPointY:Float;$/;"	v
clipPointY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PositionSolverManifold.hx	/^		var clipPointY:Float;$/;"	v
clipPoints1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var clipPoints1:Array <ClipVertex> = s_clipPoints1;$/;"	v
clipPoints2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var clipPoints2:Array <ClipVertex> = s_clipPoints2;$/;"	v
clipPreserve	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function clipPreserve ():Void {$/;"	f
clipRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var clipRect = @:privateAccess renderSession.spriteBatch.clipRect;$/;"	v
clipRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	var clipRect:Rectangle;$/;"	v
clipSegmentToLine	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^	static public function clipSegmentToLine(vOut:Array <ClipVertex>, vIn:Array <ClipVertex>, normal:B2Vec2, offset:Float):Int$/;"	f
clipText	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^	private static function clipText (textField:TextField, value:String):String {$/;"	f
clone	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public function clone ():GamepadEventInfo {$/;"	f
clone	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public function clone ():KeyEventInfo {$/;"	f
clone	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public function clone ():MouseEventInfo {$/;"	f
clone	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public function clone ():RenderEventInfo {$/;"	f
clone	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public function clone ():TextEventInfo {$/;"	f
clone	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public function clone ():TouchEventInfo {$/;"	f
clone	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public function clone ():UpdateEventInfo {$/;"	f
clone	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public function clone ():WindowEventInfo {$/;"	f
clone	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public function clone ():Image {$/;"	f
clone	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ImageBuffer.hx	/^	public function clone ():ImageBuffer {$/;"	f
clone	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	public function clone ():ColorMatrix {$/;"	f
clone	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public inline function clone ():Matrix3 {$/;"	f
clone	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public function clone ():Matrix4 {$/;"	f
clone	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	public function clone ():Rectangle {$/;"	f
clone	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector2.hx	/^	public function clone ():Vector2 {$/;"	f
clone	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	inline public function clone ():Vector4 {$/;"	f
clone	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Asset.hx	/^	public function clone ():Asset {$/;"	f
clone	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^	public function clone ():ConfigData {$/;"	f
clone	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Dependency.hx	/^	public function clone ():Dependency {$/;"	f
clone	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public function clone ():HXProject {$/;"	f
clone	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Haxelib.hx	/^	public function clone ():Haxelib {$/;"	f
clone	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Icon.hx	/^	public function clone ():Icon {$/;"	f
clone	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Keystore.hx	/^	public function clone ():Keystore {$/;"	f
clone	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Library.hx	/^	public function clone ():Library {$/;"	f
clone	/usr/lib/haxe/lib/lime/2,4,3/lime/project/NDLL.hx	/^	public function clone ():NDLL {$/;"	f
clone	/usr/lib/haxe/lib/lime/2,4,3/lime/project/SplashScreen.hx	/^	public function clone ():SplashScreen {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function clone ():BitmapData {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public function clone ():Event {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/HTTPStatusEvent.hx	/^	public override function clone ():Event {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/KeyboardEvent.hx	/^	public override function clone ():Event {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public override function clone ():Event {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/SystemEvent.hx	/^	public override function clone ():Event {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/BitmapFilter.hx	/^	public function clone ():BitmapFilter {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/BlurFilter.hx	/^	override public function clone ():BitmapFilter {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/ColorMatrixFilter.hx	/^	override public function clone ():BitmapFilter {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/DropShadowFilter.hx	/^	override public function clone ():BitmapFilter {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/GlowFilter.hx	/^	override public function clone ():BitmapFilter {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^	public function clone ():Matrix {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Point.hx	/^	public function clone ():Point {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	public function clone ():Rectangle {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function clone ():BitmapData {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/AccelerometerEvent.hx	/^	public override function clone ():Event {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/ErrorEvent.hx	/^	public override function clone ():Event {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public function clone ():Event {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/FocusEvent.hx	/^	public override function clone ():Event {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/GameInputEvent.hx	/^	public override function clone ():Event {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/IOErrorEvent.hx	/^	public override function clone ():Event {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/JoystickEvent.hx	/^	public override function clone ():Event {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/KeyboardEvent.hx	/^	public override function clone ():Event {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public override function clone ():Event {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/ProgressEvent.hx	/^	public override function clone ():Event {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/SampleDataEvent.hx	/^	public override function clone ():Event {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/SecurityErrorEvent.hx	/^	public override function clone ():Event {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TextEvent.hx	/^	public override function clone ():Event {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TimerEvent.hx	/^	public override function clone ():Event {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/UncaughtErrorEvent.hx	/^	public override function clone ():Event {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/BitmapFilter.hx	/^	public function clone ():BitmapFilter {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/BlurFilter.hx	/^	public override function clone ():BitmapFilter {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/ColorMatrixFilter.hx	/^	public override function clone ():BitmapFilter {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/DropShadowFilter.hx	/^	public override function clone ():BitmapFilter {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/GlowFilter.hx	/^	public override function clone ():BitmapFilter {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^	public inline function clone ():Matrix {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public inline function clone ():Matrix3D {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Point.hx	/^	public function clone ():Point {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^	public function clone ():Rectangle {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^	inline public function clone ():Vector3D {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/SoundTransform.hx	/^	public function clone ():SoundTransform {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextFormat.hx	/^	public function clone ():TextFormat {$/;"	f
clone	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var clone = matrix3D.clone();$/;"	v
clone	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/RectangleTest.hx	/^		var clone = rect.clone ();$/;"	v
clone	/usr/lib/haxe/std/sys/net/Address.hx	/^	public function clone() {$/;"	f
cloneNode	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function cloneNode (deep:Bool):Dynamic \/*Node*\/ { return null; };$/;"	f
close	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashWindow.hx	/^	public function close ():Void {$/;"	f
close	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^	public function close ():Void {$/;"	f
close	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	public function close ():Void {$/;"	f
close	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/FlashAudioContext.hx	/^	public function close (buffer:AudioBuffer):Void {$/;"	f
close	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^	public function close ():Void {$/;"	f
close	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public function close ():Void {$/;"	f
close	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	public override function close() {$/;"	f
close	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	public function close ():Void {$/;"	f
close	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^		var close = Lib.load ("lime-legacy", "lime_legacy_close", 0);$/;"	v
close	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	public static function close ():Void {$/;"	f
close	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^	public function close ():Void {$/;"	f
close	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^	public function close ():Void {$/;"	f
close	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	public function close ():Void {$/;"	f
close	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/XMLSocket.hx	/^	public function close():Void {$/;"	f
close	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Loader.hx	/^	public function close ():Void {$/;"	f
close	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public function close ():Void {$/;"	f
close	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^    public function close(): Void {$/;"	f
close	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^	public function close ():Void {$/;"	f
close	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/XMLSocket.hx	/^	public function close ():Void {$/;"	f
close	/usr/lib/haxe/std/haxe/Http.hx	/^	function close() : Void;$/;"	f
close	/usr/lib/haxe/std/haxe/io/Input.hx	/^	public function close() {$/;"	f
close	/usr/lib/haxe/std/haxe/io/Output.hx	/^	public function close() {$/;"	f
close	/usr/lib/haxe/std/haxe/remoting/AMFConnection.hx	/^	public function close() {$/;"	f
close	/usr/lib/haxe/std/haxe/remoting/ExternalConnection.hx	/^	public function close() {$/;"	f
close	/usr/lib/haxe/std/haxe/remoting/FlashJsConnection.hx	/^	public function close() {$/;"	f
close	/usr/lib/haxe/std/haxe/remoting/LocalConnection.hx	/^	public function close() {$/;"	f
close	/usr/lib/haxe/std/haxe/remoting/SocketConnection.hx	/^	public function close() {$/;"	f
close	/usr/lib/haxe/std/haxe/remoting/SyncSocketConnection.hx	/^	public function close() {$/;"	f
close	/usr/lib/haxe/std/haxe/zip/Compress.hx	/^	public function close() {$/;"	f
close	/usr/lib/haxe/std/haxe/zip/Uncompress.hx	/^	public function close() {$/;"	f
close	/usr/lib/haxe/std/sys/db/Connection.hx	/^	function close() : Void;$/;"	f
close	/usr/lib/haxe/std/sys/io/Process.hx	/^	function close() : Void;$/;"	f
close	/usr/lib/haxe/std/sys/net/Socket.hx	/^	function close() : Void;$/;"	f
closeConnection	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^	public function closeConnection( s : Socket ) : Bool {$/;"	f
closeDevice	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public function closeDevice (device:ALDevice):Bool {$/;"	f
closeDevice	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static function closeDevice (device:ALDevice):Bool {$/;"	f
closeFontIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^					var closeFontIndex = segment.indexOf ("<\/font>");$/;"	v
closeGap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^		var closeGap = false;$/;"	v
closeGap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^		var closeGap = false;$/;"	v
closePath	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function closePath ():Void {};$/;"	f
closePath	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function closePath ():Void {$/;"	f
closePath	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^	private static function closePath() : Void {$/;"	f
closePath	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^	private static function closePath() : Void {$/;"	f
closePath	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	private static function closePath():Void {$/;"	f
closestPoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Distance.hx	/^	var closestPoint:B2Vec2 = simplex.getClosestPoint();$/;"	v
cm	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^			var cm = cmf & 15;$/;"	v
cmf	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^			var cmf = input.readByte();$/;"	v
cmn	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^	function cmn(q, a, b, x, s, t){$/;"	f
cmp	/usr/lib/haxe/std/haxe/Int64.hx	/^			var cmp = ucompare(divisor, modulus);$/;"	v
cname	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var cname = c.toString();$/;"	v
cnx	/usr/lib/haxe/std/haxe/remoting/AMFConnection.hx	/^		var cnx = new AMFConnection({ cnx : c, error : function(e) throw e },[]);$/;"	v
cnx	/usr/lib/haxe/std/haxe/remoting/AsyncDebugConnection.hx	/^		var cnx = new AsyncDebugConnection([],cnx,{$/;"	v
cnx	/usr/lib/haxe/std/haxe/remoting/AsyncDebugConnection.hx	/^		var cnx = new AsyncDebugConnection(__path.copy(),__cnx.resolve(name),__data);$/;"	v
cnx	/usr/lib/haxe/std/haxe/remoting/DelayedConnection.hx	/^		var cnx = d.__data.cnx;$/;"	v
cnx	/usr/lib/haxe/std/haxe/remoting/ExternalConnection.hx	/^			var cnx = connections.get(name);$/;"	v
cnx	/usr/lib/haxe/std/haxe/remoting/ExternalConnection.hx	/^		var cnx = new ExternalConnection({ ctx : ctx, name : name, flash : flashObjectID },[]);$/;"	v
cnx	/usr/lib/haxe/std/haxe/remoting/ExternalConnection.hx	/^		var cnx = new ExternalConnection({ name : name, ctx : ctx },[]);$/;"	v
cnx	/usr/lib/haxe/std/haxe/remoting/FlashJsConnection.hx	/^			var cnx = connections.get(name);$/;"	v
cnx	/usr/lib/haxe/std/haxe/remoting/FlashJsConnection.hx	/^		var cnx = new FlashJsConnection({$/;"	v
cnx	/usr/lib/haxe/std/haxe/remoting/SocketWrapper.hx	/^		var cnx = haxe.remoting.ExternalConnection.jsConnect(id,ctx);$/;"	v
cnx	/usr/lib/haxe/std/neko/net/ThreadRemotingServer.hx	/^		var cnx = haxe.remoting.SocketConnection.create(s,ctx);$/;"	v
cnx	/usr/lib/haxe/std/sys/db/Manager.hx	/^	public static var cnx(default, set) : Connection;$/;"	v
cnx	/usr/lib/haxe/std/sys/db/TableCreate.hx	/^		var cnx : Connection = untyped manager.getCnx();$/;"	v
cnxTimeout	/usr/lib/haxe/std/haxe/Http.hx	/^	public var cnxTimeout : Float;$/;"	v
code	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CPPHelper.hx	/^			var code = ProcessHelper.runCommand (path, "haxelib", args);$/;"	v
code	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^				var code =  ([ "s8mk", "l8mk", "h8mk", "t8mk" ])[i];$/;"	v
code	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^			var code =  ([ "ic11", "ic12", "ic08", "ic09", "ic10" ])[i];$/;"	v
code	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^			var code =  ([ "is32", "il32", "ih32", "it32" ])[i];$/;"	v
code	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^			var code = chars.charCodeAt (i);$/;"	v
code	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Reg.hx	/^	public var code:Int;$/;"	v
code	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^		var code = Keyboard.__getCharCode (value, modifier.shiftKey);$/;"	v
code	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^			var code = URLLoadersManager.getInstance().getCode(__handle);$/;"	v
code	/usr/lib/haxe/std/haxe/zip/Huffman.hx	/^		var code = 0;$/;"	v
codeSize	/usr/lib/haxe/std/neko/vm/Module.hx	/^	public function codeSize() : Int {$/;"	f
codeSourceryWindowsPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var codeSourceryWindowsPath = "http:\/\/sourcery.mentor.com\/public\/gnu_toolchain\/arm-none-linux-gnueabi\/arm-2009q1-203-arm-none-linux-gnueabi.exe";$/;"	v
codes	/usr/lib/haxe/std/haxe/Unserializer.hx	/^			var codes = CODES;$/;"	v
codes	/usr/lib/haxe/std/haxe/Unserializer.hx	/^		var codes =$/;"	v
codesize	/usr/lib/haxe/std/neko/vm/Module.hx	/^		var codesize = readInt();$/;"	v
coe	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var coe:B2ControllerEdge = b.m_controllerList;$/;"	v
coe0	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^			var coe0:B2ControllerEdge = coe;$/;"	v
col1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat22.hx	/^	public var col1:B2Vec2;$/;"	v
col1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat33.hx	/^	public var col1:B2Vec3;$/;"	v
col2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat22.hx	/^	public var col2:B2Vec2;$/;"	v
col2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat33.hx	/^	public var col2:B2Vec3;$/;"	v
col3	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat33.hx	/^	public var col3:B2Vec3;$/;"	v
collide	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactFilter.hx	/^		var collide:Bool = (filter1.maskBits & filter2.categoryBits) != 0 && (filter1.categoryBits & filter2.maskBits) != 0;$/;"	v
collide	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^	public function collide() : Void$/;"	f
collideCircles	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^	static public function collideCircles($/;"	f
collideConnected	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var collideConnected:Bool = j.m_collideConnected;$/;"	v
collideConnected	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2JointDef.hx	/^	public var collideConnected:Bool;$/;"	v
collidePolygonAndCircle	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^	static public function collidePolygonAndCircle($/;"	f
collidePolygons	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^	static public function collidePolygons(manifold:B2Manifold, $/;"	f
colon	/usr/lib/haxe/std/haxe/io/Path.hx	/^		var colon = false;$/;"	v
colonIndex	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^			var colonIndex = words[0].indexOf (":");$/;"	v
colonIndex	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^		var colonIndex = words[0].indexOf (":");$/;"	v
color	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Color.hx	/^	public var color (get, null):Int;$/;"	v
color	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var color:B2Color = new B2Color(0, 0, 0);$/;"	v
color	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var color:B2Color = s_jointColor;$/;"	v
color	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^		var color:B2Color = new B2Color(0,0,1);$/;"	v
color	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^					var color;$/;"	v
color	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^				var color = buffer.__srcBitmapData.getPixel (x + offsetX, y + offsetY);$/;"	v
color	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^				var color = buffer.__srcBitmapData.getPixel32 (x + offsetX, y + offsetY);$/;"	v
color	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var color;$/;"	v
color	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	public var color (get, set):Int;$/;"	v
color	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^		var color = null;$/;"	v
color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^						var color = alpha << 24 | 0xFF << 16 | 0xFF << 8 | 0xFF;$/;"	v
color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^			var color = format.color;$/;"	v
color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^			var color = textField.backgroundColor;$/;"	v
color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^			var color = textField.borderColor;$/;"	v
color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/ComplexPrimitiveShader.hx	/^	public var color:GLUniformLocation;$/;"	v
color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DrawTrianglesShader.hx	/^	public var color:GLUniformLocation;$/;"	v
color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/FillShader.hx	/^	public var color:GLUniformLocation;$/;"	v
color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	public var color:Int;$/;"	v
color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var color = hex2rgb (path.line.color);$/;"	v
color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var color:Array<Float>;$/;"	v
color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var color:Int = ((Std.int(alpha * 255)) & 0xFF) << 24 | 0xFFFFFF;$/;"	v
color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsSolidFill.hx	/^	public var color:UInt;$/;"	v
color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public var color (get, set):Int;$/;"	v
color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/DropShadowFilter.hx	/^	public var color:Int;$/;"	v
color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/GlowFilter.hx	/^	public var color:Int;$/;"	v
color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/ColorTransform.hx	/^	public var color (get, set):Int;$/;"	v
color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextFormat.hx	/^	public var color:Null<Int>;$/;"	v
color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsSolidFill.hx	/^	public var color:UInt;$/;"	v
color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public var color (get, set):Int;$/;"	v
color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/DropShadowFilter.hx	/^	public var color:Int;$/;"	v
color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/GlowFilter.hx	/^	public var color:Int;$/;"	v
color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/ColorTransform.hx	/^	public var color (get, set):Int;$/;"	v
color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextFormat.hx	/^	public var color:Null<Int>;$/;"	v
color	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/NMEPreloader.hx	/^		var color = 0x000000;$/;"	v
color	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/NMEPreloader.hx	/^		var color = 0x000000;$/;"	v
color	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var color = 0xFF000000;$/;"	v
color	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var color = 0xFFFF0000;$/;"	v
color	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var color = 0xFFFFFFFF;$/;"	v
color	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var color = { a: 0xFF, rgb: 0x000000 };$/;"	v
color	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var color = 0xFFFF0000;$/;"	v
color2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var color2 = 0xFFFF0000;$/;"	v
color2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var color2 = { a: 0xFF, rgb: 0xFF0000 };$/;"	v
colorArray	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^	public var colorArray:Float32Array;$/;"	v
colorAttrib	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var colorAttrib = fill.vertexArray.attributes[2];$/;"	v
colorAttribute	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/AbstractShader.hx	/^	public var colorAttribute:Int;$/;"	v
colorBoundsRect	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var colorBoundsRect = bitmapData.getColorBoundsRect (mask, color);$/;"	v
colorBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^	public var colorBuffer:GLBuffer;$/;"	v
colorCodes	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/LogHelper.hx	/^	private static var colorCodes:EReg = ~\/\\x1b\\[[^m]+m\/g;$/;"	v
colorFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var colorFill = bitmapFill == null;$/;"	v
colorFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var colorFill = bitmapFill == null;$/;"	v
colorIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^						var colorIndex = segment.indexOf ("color=");$/;"	v
colorMask	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function colorMask (red:Bool, green:Bool, blue:Bool, alpha:Bool):Void;$/;"	f
colorMask	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function colorMask (red:Bool, green:Bool, blue:Bool, alpha:Bool):Void {$/;"	f
colorMask	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function colorMask (red:Bool, green:Bool, blue:Bool, alpha:Bool):Void {$/;"	f
colorMask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function colorMask(red:Bool, green:Bool, blue:Bool, alpha:Bool):Void $/;"	f
colorMask	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function colorMask(red:Bool, green:Bool, blue:Bool, alpha:Bool):Void;$/;"	f
colorMatrixFilter	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/ColorMatrixFilterTest.hx	/^		var colorMatrixFilter = new ColorMatrixFilter ();$/;"	v
colorStopCount	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoPattern.hx	/^	public var colorStopCount (get, never):Int;$/;"	v
colorSupported	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/LogHelper.hx	/^	private static var colorSupported:Null<Bool>;$/;"	v
colorTransform	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public function colorTransform (rect:Rectangle, colorMatrix:ColorMatrix):Void {$/;"	f
colorTransform	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageCanvasUtil.hx	/^	public static function colorTransform (image:Image, rect:Rectangle, colorMatrix:ColorMatrix):Void {$/;"	f
colorTransform	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	public static function colorTransform (image:Image, rect:Rectangle, colorMatrix:ColorMatrix):Void {$/;"	f
colorTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	public var colorTransform:ColorTransform;$/;"	v
colorTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function colorTransform (rect:Rectangle, colorTransform:ColorTransform):Void {$/;"	f
colorTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^		var colorTransform = new ColorTransform ();$/;"	v
colorTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^		var colorTransform = new ColorTransform();$/;"	v
colorTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Transform.hx	/^	public var colorTransform (get, set):ColorTransform;$/;"	v
colorTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function colorTransform (rect:Rectangle, colorTransform:ColorTransform):Void {$/;"	f
colorTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Transform.hx	/^	public var colorTransform (get, set):ColorTransform;$/;"	v
colorTransform	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var colorTransform = new ColorTransform (0, 0, 0, 1, 0x88, 0, 0, 0);$/;"	v
colorTransform	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var colorTransform = new ColorTransform (0, 0, 0, 1, 0xFF, 0, 0, 0);$/;"	v
colorTransform	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/ColorTransformTest.hx	/^		var colorTransform = new ColorTransform ();$/;"	v
colors	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var colors:Vector<Int> = cast args[4];$/;"	v
colors	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	var colors:UInt32Array;$/;"	v
colors	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsGradientFill.hx	/^	public var colors:Array<Int>;$/;"	v
colors	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsGradientFill.hx	/^	public var colors:Array<Int>;$/;"	v
colors	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var colors = [ 0x000000, 0xFF0000, 0xFFFFFF ];$/;"	v
columnEnd	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^				var columnEnd = Std.int (rect.right + image.offsetX);$/;"	v
columnEnd	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var columnEnd = Std.int (rect.right + image.offsetX);$/;"	v
columnOffset	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var columnOffset = Std.int (destPoint.x + image.offsetX - sourceRect.x - sourceImage.offsetY);$/;"	v
columnStart	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^				var columnStart = Std.int (rect.x + image.offsetX);$/;"	v
columnStart	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var columnStart = Std.int (rect.left + image.offsetX);$/;"	v
com	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^		var com:Float = -2 \/ 3 * Math.pow(r2 - l2, 1.5) \/ area;$/;"	v
combine	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^	public function combine(aabb1:B2AABB, aabb2:B2AABB):Void$/;"	f
combine	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^	public static function combine (firstPath:String, secondPath:String):String {$/;"	f
command	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public var command:String;$/;"	v
command	/usr/lib/haxe/lib/lime/2,4,3/lime/project/PlatformTarget.hx	/^	public var command:String;$/;"	v
command	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^				var command = "\/bin\/ln";$/;"	v
command	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	private var command:String;$/;"	v
command	/usr/lib/haxe/lib/lime/2,4,3/tools/RunScript.hx	/^		var command = args[0].toLowerCase ();$/;"	v
command	/usr/lib/haxe/lib/lime/2,4,3/tools/SVGExport.hx	/^		var command = (haxePath != null && haxePath != "") ? haxePath + "\/haxelib" : "haxelib";$/;"	v
command	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^						var command:Int;$/;"	v
command	/usr/lib/haxe/std/Sys.hx	/^	static function command( cmd : String, ?args : Array<String> ) : Int;$/;"	f
commandKey	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/KeyboardEvent.hx	/^	public var commandKey:Bool;$/;"	v
commandKey	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public var commandKey:Bool;$/;"	v
commandKey	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/KeyboardEvent.hx	/^	public var commandKey:Bool;$/;"	v
commandKey	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public var commandKey:Bool;$/;"	v
commandKey	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TouchEvent.hx	/^	public var commandKey:Bool;$/;"	v
commandName	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	public static var commandName = "lime";$/;"	v
commands	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^		var commands = [ "-configuration", configuration, "PLATFORM_NAME=" + platformName, "SDKROOT=" + platformName + iphoneVersion ];$/;"	v
commands	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^		var commands = [ "-s", identity ];$/;"	v
commands	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^		var commands = [];$/;"	v
commands	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/BlackBerryPlatform.hx	/^		var commands = [];$/;"	v
commands	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^		var commands = [];$/;"	v
commands	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^		var commands = [];$/;"	v
commands	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/MacPlatform.hx	/^		var commands = [];$/;"	v
commands	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/TizenPlatform.hx	/^		var commands = [];$/;"	v
commands	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsPath.hx	/^	public var commands (get, set):Array<Int>;$/;"	v
commands	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsPath.hx	/^	public var commands:Vector<Int>;$/;"	v
commands	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^		var commands = glyph.commands;$/;"	v
commands	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	var commands:Array<Int>;$/;"	v
commands	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsPathTest.hx	/^		var commands = new Vector<Int> ();$/;"	v
comment	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/ID3Info.hx	/^	public var comment:String;$/;"	v
commentContent	/usr/lib/haxe/std/haxe/xml/Printer.hx	/^				var commentContent:String = value.nodeValue;$/;"	v
commit	/usr/lib/haxe/std/sys/db/Connection.hx	/^	function commit() : Void;$/;"	f
common	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^			var common = 0;$/;"	v
company	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^		var company = "MyCompany";$/;"	v
company	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^				var company = "Company Name";$/;"	v
company	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	static public var company (default, null):String;$/;"	v
companyName	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^						var companyName = CLIHelper.param ("Company name");$/;"	v
compare	/usr/lib/haxe/std/haxe/Int64.hx	/^	public static inline function compare( a : Int64, b : Int64 ) : Int {$/;"	f
compare	/usr/lib/haxe/std/haxe/Utf8.hx	/^	public static function compare( a : String, b : String ) : Int {$/;"	f
compare	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^	function compare(k1:K, k2:K) {$/;"	f
compare	/usr/lib/haxe/std/haxe/ds/EnumValueMap.hx	/^	override function compare(k1:EnumValue, k2:EnumValue):Int {$/;"	f
compare	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^	public function compare( other : Bytes ) : Int {$/;"	f
compare	/usr/lib/haxe/std/sys/net/Address.hx	/^	public function compare( a : Address ) {$/;"	f
compare supers & interfaces	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		\/\/ todo : compare supers & interfaces$/;"	i
compareArg	/usr/lib/haxe/std/haxe/ds/EnumValueMap.hx	/^	function compareArg(v1:Dynamic, v2:Dynamic):Int {$/;"	f
compareArgs	/usr/lib/haxe/std/haxe/ds/EnumValueMap.hx	/^	function compareArgs(a1:Array<Dynamic>, a2:Array<Dynamic>):Int {$/;"	f
compareDocumentPosition	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function compareDocumentPosition (other:Dynamic \/*Node*\/):Int { return -1; };$/;"	f
compareMethods	/usr/lib/haxe/std/Reflect.hx	/^	public static function compareMethods( f1 : Dynamic, f2 : Dynamic ) : Bool;$/;"	f
comparePairs	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^	private function comparePairs(pair1:B2DynamicTreePair, pair2:B2DynamicTreePair):Int$/;"	f
compile	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CPPHelper.hx	/^	public static function compile (project:HXProject, path:String, flags:Array<String> = null, buildFile:String = "Build.xml"):Void {$/;"	f
compile	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLCompiler.hx	/^	public function compile (programType:String, source:String):String {$/;"	f
compile	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/_shaders/AGLSLShaderUtils.hx	/^	inline public static function compile (programType:String, source:String):ByteArray {$/;"	f
compileProgram	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/AbstractShader.hx	/^	public static function compileProgram (gl:GLRenderContext, vertexSrc, fragmentSrc):Dynamic {$/;"	f
compileProgram	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/Shader.hx	/^	public static function compileProgram(gl:GLRenderContext, vertexSrc:Array<String>, fragmentSrc:Array<String>):GLProgram {$/;"	f
compileSWC	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^	private static function compileSWC (project:HXProject, assets:Array<Asset>, id:Int):Void {$/;"	f
compileShader	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function compileShader (shader:GLShader):Void;$/;"	f
compileShader	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function compileShader (shader:GLShader):Void {$/;"	f
compileShader	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function compileShader (shader:GLShader):Void {$/;"	f
compileShader	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/GLUtils.hx	/^	public static function compileShader (source:String, type:Int):GLShader {$/;"	f
compileShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/Shader.hx	/^	static function compileShader(gl:GLRenderContext, shaderSrc:Array<String>, type:Int):GLShader {$/;"	f
compileShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function compileShader(shader:GLShader):Void $/;"	f
compileShader	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function compileShader(shader:GLShader):Void;$/;"	f
compilerFlags	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^		var compilerFlags = [];$/;"	v
complete	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Preloader.hx	/^	public var complete:Bool;$/;"	v
completeEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^			var completeEvent = new Event (Event.SOUND_COMPLETE);$/;"	v
completed	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^		var completed:Bool = false;$/;"	v
components	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^			var components = key.split ("-");$/;"	v
components	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexAttribute.hx	/^	public var components:Int;$/;"	v
compositeS3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^	private function compositeS3D(rect:Rectangle) {$/;"	f
compress	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ZipHelper.hx	/^	public static function compress (path:String, targetPath:String = ""):Void {$/;"	f
compress	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function compress (algorithm:CompressionAlgorithm = null):Void {$/;"	f
compress	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	private function compress () { $/;"	f
compress	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	private static function compress (project:HXProject):String {$/;"	f
compress	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function compress (algorithm:CompressionAlgorithm = null):Void {$/;"	f
compress	/usr/lib/haxe/std/haxe/zip/Tools.hx	/^	public static function compress( f : Entry, level : Int ) {$/;"	f
compressed	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var compressed = (compression != 0);$/;"	v
compressed	/usr/lib/haxe/std/haxe/zip/Entry.hx	/^	var compressed : Bool;$/;"	v
compressed	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var compressed = (compression != 0);$/;"	v
compressedTexImage2D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function compressedTexImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, data:lime.utils.ArrayBufferView):Void;$/;"	f
compressedTexImage2D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function compressedTexImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, data:ArrayBufferView):Void {$/;"	f
compressedTexImage2D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function compressedTexImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, data:ArrayBufferView):Void {$/;"	f
compressedTexImage2D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function compressedTexImage2D(target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, data:IMemoryRange):Void $/;"	f
compressedTexImage2D	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function compressedTexImage2D(target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, data:ArrayBufferView):Void;$/;"	f
compressedTexSubImage2D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function compressedTexSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, data:lime.utils.ArrayBufferView):Void;$/;"	f
compressedTexSubImage2D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function compressedTexSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, data:ArrayBufferView):Void {$/;"	f
compressedTexSubImage2D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function compressedTexSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, data:ArrayBufferView):Void {$/;"	f
compressedTexSubImage2D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function compressedTexSubImage2D(target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, data:IMemoryRange):Void $/;"	f
compressedTexSubImage2D	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function compressedTexSubImage2D(target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, data:ArrayBufferView):Void;$/;"	f
compression	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var compression = i.readUInt16();$/;"	v
compression	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var compression = i.readUInt16();$/;"	v
compute	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Jacobian.hx	/^	public function compute(x1:B2Vec2, a1:Float, x2:B2Vec2, a2:Float):Float{$/;"	f
computeAABB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^	public override function computeAABB(aabb:B2AABB, transform:B2Transform) : Void{$/;"	f
computeAABB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public override function computeAABB(aabb:B2AABB, transform:B2Transform) : Void{$/;"	f
computeAABB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	public override function computeAABB(aabb:B2AABB, xf:B2Transform) : Void$/;"	f
computeAABB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2Shape.hx	/^	public function computeAABB(aabb:B2AABB, xf:B2Transform) : Void {}$/;"	f
computeCentroid	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	static public function computeCentroid(vs:Array <B2Vec2>, count:Int) : B2Vec2$/;"	f
computeMass	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^	public override function computeMass(massData:B2MassData, density:Float) : Void{$/;"	f
computeMass	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public override function computeMass(massData:B2MassData, density:Float) : Void{$/;"	f
computeMass	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	public override function computeMass(massData:B2MassData, density:Float) : Void{$/;"	f
computeMass	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2Shape.hx	/^	public function computeMass(massData:B2MassData, density:Float) : Void { }$/;"	f
computeOBB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	static public function computeOBB(obb:B2OBB, vs:Array <B2Vec2>, count:Int) : Void$/;"	f
computeSubmergedArea	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^	public override function computeSubmergedArea($/;"	f
computeSubmergedArea	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public override function computeSubmergedArea($/;"	f
computeSubmergedArea	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	public override function computeSubmergedArea($/;"	f
computeSubmergedArea	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2Shape.hx	/^	public function computeSubmergedArea($/;"	f
computeTOI	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	public function computeTOI(sweepA:B2Sweep, sweepB:B2Sweep):Float$/;"	f
concat	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	public function concat (second:ColorMatrix):Void {$/;"	f
concat	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public function concat (m:Matrix3):Void {$/;"	f
concat	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ArrayHelper.hx	/^		var concat = a.copy ();$/;"	v
concat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public function concat (?a:Array<T>):Vector<T> {$/;"	f
concat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public inline function concat (?a:Array<T>):Vector<T> {$/;"	f
concat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public inline function concat (?a:VectorData<T>):Vector<T> {$/;"	f
concat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/ColorTransform.hx	/^	public function concat (second:ColorTransform):Void {$/;"	f
concat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^	public function concat (m:Matrix):Void {$/;"	f
concat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/ColorTransform.hx	/^	public function concat (second:ColorTransform):Void {$/;"	f
concat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^	public function concat (m:Matrix):Void {$/;"	f
concat	/usr/lib/haxe/std/Array.hx	/^	function concat( a : Array<T> ) : Array<T>;$/;"	f
concatSource	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLCompiler.hx	/^		var concatSource:String;$/;"	v
concatSource	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/_shaders/AGLSLShaderUtils.hx	/^		var concatSource:String;$/;"	v
concatStrings	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	function concatStrings( e : Expr ) {$/;"	f
concatenatedColorTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Transform.hx	/^	public var concatenatedColorTransform (get, null):ColorTransform;$/;"	v
concatenatedColorTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Transform.hx	/^	public var concatenatedColorTransform:ColorTransform;$/;"	v
concatenatedMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Transform.hx	/^	public var concatenatedMatrix (get, null):Matrix;$/;"	v
concatenatedMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Transform.hx	/^	public var concatenatedMatrix:Matrix;$/;"	v
config	/usr/lib/haxe/lib/lime/2,4,3/legacy/templates/haxe/ApplicationMain.hx	/^        var config : LimeConfig = {$/;"	v
config	/usr/lib/haxe/lib/lime/2,4,3/legacy/templates/html5/haxe/ApplicationMain.hx	/^            var config : LimeConfig = {$/;"	v
config	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public var config (default, null):Config;$/;"	v
config	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public var config:ConfigData;$/;"	v
config	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var config:Config;$/;"	v
config	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/ApplicationMain.hx	/^	public static var config:lime.app.Config;$/;"	v
config	/usr/lib/haxe/lib/lime/2,4,3/tests/runtime/test/lime/WindowTest.hx	/^		var config = { width: 400, height: 300 };$/;"	v
config	/usr/lib/haxe/lib/lime/2,4,3/tests/runtime/test/lime/WindowTest.hx	/^		var config = {};$/;"	v
config	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^			var config = getHXCPPConfig ();$/;"	v
config	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^		var config = "";$/;"	v
config	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^		var config = getHXCPPConfig ();$/;"	v
config	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private var config:HXProject;$/;"	v
config	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^					var config = CommandLineTools.getHXCPPConfig ();$/;"	v
config	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var config = CommandLineTools.getHXCPPConfig ();$/;"	v
config	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/ApplicationMain.hx	/^	public static var config:lime.app.Config;$/;"	v
config	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^	public static var config:lime.app.Config;$/;"	v
configuration	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^		var configuration = "Release";$/;"	v
configureBackBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function configureBackBuffer (width:Int, height:Int, antiAlias:Int, enableDepthAndStencil:Bool = true):Void {$/;"	f
connect	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^	private static function connect (deviceID:String):Void {$/;"	f
connect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/XMLSocket.hx	/^	public function connect(host: String, port:Int):Void {$/;"	f
connect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/NetConnection.hx	/^	public function connect (command:String, ?_, ?_, ?_, ?_, ?_):Void {$/;"	f
connect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^	public function connect( ?host: String = null, ?port: Int = 0) {$/;"	f
connect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/XMLSocket.hx	/^	public function connect (host: String, port:Int):Void {$/;"	f
connect	/usr/lib/haxe/std/haxe/Http.hx	/^	function connect( host : Host, port : Int ) : Void;$/;"	f
connect	/usr/lib/haxe/std/haxe/remoting/AMFConnection.hx	/^	public static function connect( nc ) {$/;"	f
connect	/usr/lib/haxe/std/haxe/remoting/FlashJsConnection.hx	/^	public static function connect( name : String, objId : String, ?ctx : Context ) {$/;"	f
connect	/usr/lib/haxe/std/haxe/remoting/LocalConnection.hx	/^	public static function connect( name : String, ?ctx : Context, ?allowDomains : Array<String> ) {$/;"	f
connect	/usr/lib/haxe/std/sys/db/Mysql.hx	/^	public static function connect( params : {$/;"	f
connect	/usr/lib/haxe/std/sys/net/Socket.hx	/^	function connect( host : Host, port : Int ) : Void;$/;"	f
connectEdges	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	private function connectEdges(s1: B2EdgeShape, s2: B2EdgeShape, angle1: Float): Float$/;"	f
connectLag	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	public var connectLag : Float;$/;"	v
connectWithProto	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/XMLSocket.hx	/^	public function connectWithProto (host: String, port:Int, protocol:String):Void {$/;"	f
connected	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Gamepad.hx	/^	public var connected (default, null):Bool;$/;"	v
connected	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/XMLSocket.hx	/^	public var connected(default, null):Bool;$/;"	v
connected	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^    public var connected(get, null): Bool;$/;"	v
connected	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/XMLSocket.hx	/^	public var connected (default, null):Bool;$/;"	v
connected	/usr/lib/haxe/std/haxe/remoting/SocketWrapper.hx	/^		var connected = false;$/;"	v
connection	/usr/lib/haxe/std/haxe/remoting/DelayedConnection.hx	/^	public var connection(get,set) : AsyncConnection;$/;"	v
connections	/usr/lib/haxe/std/haxe/remoting/ExternalConnection.hx	/^	static var connections = new haxe.ds.StringMap<ExternalConnection>();$/;"	v
connections	/usr/lib/haxe/std/haxe/remoting/FlashJsConnection.hx	/^	static var connections = new haxe.ds.StringMap<FlashJsConnection>();$/;"	v
constructed	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var constructed = false;$/;"	v
constructor	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^			var constructor = macro { $/;"	v
constructor	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^			var constructor = macro {$/;"	v
constructor	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var constructor : null;$/;"	v
constructor	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^			var constructor = func_name == "<init>";$/;"	v
constructor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^			var constructor = macro { $/;"	v
constructor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^			var constructor = macro { $/;"	v
constructor	/usr/lib/haxe/std/Type.hx	/^		class constructor.$/;"	c
constructor	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var constructor : Null<Ref<ClassField>>;$/;"	v
constructorEq	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	public static function constructorEq( c1 : EnumField, c2: EnumField ) {$/;"	f
constructors	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	var constructors : List<EnumField>;$/;"	v
constructs	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^		var constructs = e.names.map(api.quoteString).join(",");$/;"	v
constructs	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var constructs : haxe.ds.StringMap<EnumField>;$/;"	v
consumer	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthClient.hx	/^	public var consumer:OAuthConsumer;$/;"	v
contact	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^			var contact:B2Contact = edge.contact;$/;"	v
contact	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^			var contact:B2Contact = m_contactManager.m_contactList;$/;"	v
contact	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactEdge.hx	/^	public var contact:B2Contact;$/;"	v
contact	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^		var contact:B2Contact;$/;"	v
contactSolver	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^		var contactSolver:B2ContactSolver = m_contactSolver;$/;"	v
contactsOkay	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^			var contactsOkay:Bool = contactSolver.solvePositionConstraints(B2Settings.b2_contactBaumgarte);$/;"	v
contactsOkay	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^			var contactsOkay:Bool = contactSolver.solvePositionConstraints(k_toiBaumgarte);$/;"	v
container	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^	private static var container:flash.display.Sprite;$/;"	v
contains	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^	public function contains(aabb:B2AABB):Bool$/;"	f
contains	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function contains (other:Dynamic \/*Node*\/):Bool { return false; };$/;"	f
contains	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function contains (child:Dynamic \/*DisplayObject*\/):Bool { return false; };$/;"	f
contains	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	public function contains (x:Float, y:Float):Bool {$/;"	f
contains	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^	public function contains (child:DisplayObject):Bool {$/;"	f
contains	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	public function contains (x:Float, y:Float):Bool {$/;"	f
contains	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^	public function contains (child:DisplayObject):Bool {$/;"	f
contains	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^	public function contains (x:Float, y:Float):Bool {$/;"	f
containsPoint	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	public function containsPoint (point:Vector2):Bool {$/;"	f
containsPoint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	public function containsPoint (point:Point):Bool {$/;"	f
containsPoint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^	public function containsPoint (point:Point):Bool {$/;"	f
containsRect	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	public function containsRect (rect:Rectangle):Bool {$/;"	f
containsRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	public function containsRect (rect:Rectangle):Bool {$/;"	f
containsRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^	public function containsRect (rect:Rectangle):Bool {$/;"	f
content	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^		var content:Dynamic = getData ();$/;"	v
content	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var content = bytes.getString (0, bytes.length);$/;"	v
content	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var content = bytes.readString (0, bytes.length);$/;"	v
content	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Loader.hx	/^	public var content (default, null):DisplayObject;$/;"	v
content	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/LoaderInfo.hx	/^	public var content:DisplayObject;$/;"	v
content	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Loader.hx	/^	public var content (default, null):DisplayObject;$/;"	v
content	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/LoaderInfo.hx	/^	public var content (default, null):DisplayObject;$/;"	v
content	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^		var content:Dynamic = getData ();$/;"	v
content	/usr/lib/haxe/std/haxe/Resource.hx	/^	static var content : Array<{ name : String, data : String, str : String }>;$/;"	v
content	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^		var content = try sys.io.File.getContent(temp) catch( e : Dynamic ) return null;$/;"	v
contentDirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/MacPlatform.hx	/^	private var contentDirectory:String;$/;"	v
contentEditable	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var contentEditable:String;$/;"	v
contentLoaderInfo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Loader.hx	/^	public var contentLoaderInfo (default, null):LoaderInfo;$/;"	v
contentLoaderInfo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Loader.hx	/^	public var contentLoaderInfo (default, null):LoaderInfo;$/;"	v
contentLoaderInfo_onData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Loader.hx	/^	private function contentLoaderInfo_onData (event:Event):Void {$/;"	f
contentType	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLRequest.hx	/^	public var contentType:String;$/;"	v
contentType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/LoaderInfo.hx	/^	public var contentType:String;$/;"	v
contentType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequest.hx	/^	public var contentType:String;$/;"	v
contentType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/LoaderInfo.hx	/^	public var contentType (default, null):String;$/;"	v
contentType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLRequest.hx	/^	public var contentType:String;$/;"	v
context	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public var context:RenderContext;$/;"	v
context	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioManager.hx	/^	public static var context:AudioContext;$/;"	v
context	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Renderer.hx	/^	public var context:RenderContext;$/;"	v
context	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var context:RenderingContext;$/;"	v
context	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^		var context:Dynamic = {};$/;"	v
context	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^		var context = project.templateContext;$/;"	v
context	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/BlackBerryPlatform.hx	/^		var context = project.templateContext;$/;"	v
context	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/EmscriptenPlatform.hx	/^		var context = project.templateContext;$/;"	v
context	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FirefoxPlatform.hx	/^		var context = project.templateContext;$/;"	v
context	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FlashPlatform.hx	/^		var context = generateContext ();$/;"	v
context	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FlashPlatform.hx	/^		var context = project.templateContext;$/;"	v
context	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/HTML5Platform.hx	/^		var context = project.templateContext;$/;"	v
context	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^		var context = generateContext ();$/;"	v
context	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^		var context = project.templateContext;$/;"	v
context	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^		var context = generateContext ();$/;"	v
context	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^		var context = project.templateContext;$/;"	v
context	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/MacPlatform.hx	/^		var context = generateContext ();$/;"	v
context	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/MacPlatform.hx	/^		var context = project.templateContext;$/;"	v
context	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/TizenPlatform.hx	/^		var context = project.templateContext;$/;"	v
context	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WebOSPlatform.hx	/^		var context = project.templateContext;$/;"	v
context	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WindowsPlatform.hx	/^		var context = generateContext ();$/;"	v
context	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WindowsPlatform.hx	/^		var context = project.templateContext;$/;"	v
context	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^				var context:Dynamic = { };$/;"	v
context	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^		var context:Dynamic = { };$/;"	v
context	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/RenderSession.hx	/^	public var context:CanvasRenderContext;$/;"	v
context	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasBitmap.hx	/^		var context = renderSession.context;$/;"	v
context	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^			var context = renderSession.context;$/;"	v
context	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^		var context = canvas.getContext ("2d");$/;"	v
context	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^	private static var context:CanvasRenderingContext2D;$/;"	v
context	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasMaskManager.hx	/^		var context = renderSession.context;$/;"	v
context	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasRenderer.hx	/^	private var context:CanvasRenderContext;$/;"	v
context	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasShape.hx	/^				var context = renderSession.context;$/;"	v
context	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^		var context = textField.__context;$/;"	v
context	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^	private static var context:CanvasRenderingContext2D;$/;"	v
context	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GLMaskManager.hx	/^		var context = renderSession.context;$/;"	v
context	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var context = renderSession.context;$/;"	v
context	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/OpenGLView.hx	/^			var context = cast canvas.getContext ("webgl");$/;"	v
context	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Video.hx	/^		var context = renderSession.context;$/;"	v
context	/usr/lib/haxe/std/haxe/Template.hx	/^	var context : Dynamic;$/;"	v
context	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^	public var context : Context;$/;"	v
context3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage3D.hx	/^	public var context3D:Context3D;$/;"	v
contextLost	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	public var contextLost:Bool;$/;"	v
contextMenu	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var contextMenu:Dynamic \/*flash.ui.ContextMenu*\/;$/;"	v
contextMenuOwner	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/ContextMenuEvent.hx	/^	public var contextMenuOwner:InteractiveObject;$/;"	v
control	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInput.hx	/^				var control = new GameInputControl (device, "AXIS_" + axis, -1, 1);$/;"	v
control	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInput.hx	/^				var control = new GameInputControl (device, "BUTTON_" + button, 0, 1);$/;"	v
control	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInput.hx	/^			var control = device.__axis.get (axis);$/;"	v
control	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInput.hx	/^			var control = device.__button.get (button);$/;"	v
control	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInputDevice.hx	/^		var control;$/;"	v
controlKey	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/KeyboardEvent.hx	/^	public var controlKey:Bool;$/;"	v
controlKey	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/KeyboardEvent.hx	/^	public var controlKey:Bool;$/;"	v
controller	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var controller:B2Controller= m_controllerList;$/;"	v
controller	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2ControllerEdge.hx	/^	public var controller:B2Controller;$/;"	v
convertKeyCode	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashApplication.hx	/^	private function convertKeyCode (keyCode:Int):KeyCode {$/;"	f
convertKeyCode	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Application.hx	/^	private function convertKeyCode (keyCode:Int):KeyCode {$/;"	f
convertKeyCode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static function convertKeyCode (key:KeyCode):Int {$/;"	f
convertToCanvas	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageCanvasUtil.hx	/^	public static function convertToCanvas (image:Image):Void {$/;"	f
convertToData	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageCanvasUtil.hx	/^	public static function convertToData (image:Image):Void {$/;"	f
convertType	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	function convertType( t : RecordType ) {$/;"	f
convex	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var convex: Bool = B2Math.dot(s1.getDirectionVector(), s2.getNormalVector()) > 0.0;$/;"	v
cookieString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequest.hx	/^	public var cookieString:String;$/;"	v
cookies	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^						var cookies : Array<String> = lime_curl_get_cookies (handle);$/;"	v
coordinate1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^		var coordinate1:Float;$/;"	v
coordinate2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^		var coordinate2:Float;$/;"	v
copy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ContactID.hx	/^	public function copy():B2ContactID{$/;"	f
copy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Manifold.hx	/^		var copy:B2Manifold = new B2Manifold();$/;"	v
copy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Manifold.hx	/^	public function copy():B2Manifold$/;"	f
copy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^	override public function copy():B2Shape $/;"	f
copy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	public override function copy():B2Shape $/;"	f
copy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2Shape.hx	/^	public function copy():B2Shape$/;"	f
copy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat22.hx	/^	public function copy():B2Mat22{$/;"	f
copy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat33.hx	/^	public function copy():B2Mat33{$/;"	f
copy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Sweep.hx	/^		var copy:B2Sweep = new B2Sweep();$/;"	v
copy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Sweep.hx	/^	public function copy():B2Sweep$/;"	f
copy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec2.hx	/^	public function copy():B2Vec2{$/;"	f
copy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec3.hx	/^	public function copy():B2Vec3{$/;"	f
copy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2FilterData.hx	/^		var copy: B2FilterData = new B2FilterData();$/;"	v
copy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2FilterData.hx	/^	public function copy() : B2FilterData {$/;"	f
copy	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ImageBuffer.hx	/^			var copy = new UInt8Array (data);$/;"	v
copy	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ImageBuffer.hx	/^			var copy = new Uint8ClampedArray (__srcImageData.data);$/;"	v
copy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public function copy ():Vector<T> {$/;"	f
copy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public inline function copy ():Vector<T> {$/;"	f
copy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexAttribute.hx	/^	public function copy() {$/;"	f
copy	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var copy = new Matrix3D();$/;"	v
copy	/usr/lib/haxe/std/Array.hx	/^	function copy() : Array<T>;$/;"	f
copy	/usr/lib/haxe/std/sys/io/File.hx	/^	static function copy( srcPath : String, dstPath : String ) : Void;$/;"	f
copyAsset	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^	public static function copyAsset (asset:Asset, destination:String, context:Dynamic = null) {$/;"	f
copyAssetIfNewer	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^	public static function copyAssetIfNewer (asset:Asset, destination:String) {$/;"	f
copyChannel	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public function copyChannel (sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, sourceChannel:ImageChannel, destChannel:ImageChannel):Void {$/;"	f
copyChannel	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageCanvasUtil.hx	/^	public static function copyChannel (image:Image, sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, sourceChannel:ImageChannel, destChannel:ImageChannel):Void {$/;"	f
copyChannel	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	public static function copyChannel (image:Image, sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, sourceChannel:ImageChannel, destChannel:ImageChannel):Void {$/;"	f
copyChannel	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function copyChannel (sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, sourceChannel:Int, destChannel:Int):Void {$/;"	f
copyChannel	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function copyChannel (sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, sourceChannel:Int, destChannel:Int):Void {$/;"	f
copyColumnFrom	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public function copyColumnFrom (column:Int, vector4:Vector4):Void {$/;"	f
copyColumnFrom	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public function copyColumnFrom (column:Int, vector:Vector4):Void {$/;"	f
copyColumnFrom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^	public function copyColumnFrom (column:Int, vector3D:Vector3D):Void {$/;"	f
copyColumnFrom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^	public function copyColumnFrom (column:Int, vector3D:Vector3D):Void {$/;"	f
copyColumnFrom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public function copyColumnFrom (column:Int, vector3D:Vector3D):Void {$/;"	f
copyColumnTo	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public function copyColumnTo (column:Int, vector4:Vector4):Void {$/;"	f
copyColumnTo	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public function copyColumnTo (column:Int, vector:Vector4):Void {$/;"	f
copyColumnTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^	public function copyColumnTo (column:Int, vector3D:Vector3D):Void {$/;"	f
copyColumnTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^	public function copyColumnTo (column:Int, vector3D:Vector3D):Void {$/;"	f
copyColumnTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public function copyColumnTo (column:Int, vector3D:Vector3D):Void {$/;"	f
copyFile	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^	public static function copyFile (source:String, destination:String, context:Dynamic = null, process:Bool = true) {$/;"	f
copyFileTemplate	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^	public static function copyFileTemplate (templatePaths:Array <String>, source:String, destination:String, context:Dynamic = null, process:Bool = true) {$/;"	f
copyFrom	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	public function copyFrom (other:ColorMatrix):Void {$/;"	f
copyFrom	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public function copyFrom (sourceMatrix3:Matrix3):Void {$/;"	f
copyFrom	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public function copyFrom (other:Matrix4):Void {$/;"	f
copyFrom	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	public function copyFrom (sourceRect:Rectangle):Void {$/;"	f
copyFrom	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	inline public function copyFrom (sourceVector4:Vector4):Void {$/;"	f
copyFrom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public function copyFrom (sourceGraphics:Graphics):Void {$/;"	f
copyFrom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^	public function copyFrom (other:Matrix):Void {$/;"	f
copyFrom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Point.hx	/^	public function copyFrom (sourcePoint:Point):Void {$/;"	f
copyFrom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	public function copyFrom (sourceRect:Rectangle):Void {$/;"	f
copyFrom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public function copyFrom (sourceGraphics:Graphics):Void {$/;"	f
copyFrom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^	public function copyFrom (sourceMatrix:Matrix):Void {$/;"	f
copyFrom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public function copyFrom (other:Matrix3D):Void {$/;"	f
copyFrom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Point.hx	/^	public function copyFrom (sourcePoint:Point):Void {$/;"	f
copyFrom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^	public function copyFrom (sourceRect:Rectangle):Void {$/;"	f
copyFrom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^	inline public function copyFrom (sourceVector3D:Vector3D):Void {$/;"	f
copyIfNewer	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^	public static function copyIfNewer (source:String, destination:String) {$/;"	f
copyLibraries	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/JavaHelper.hx	/^	public static function copyLibraries (templatePaths:Array <String>, platformName:String, targetPath:String) {$/;"	f
copyLibraries	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/NekoHelper.hx	/^	public static function copyLibraries (templatePaths:Array <String>, platformName:String, targetPath:String) {$/;"	f
copyLibrary	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^	public static function copyLibrary (project:HXProject, ndll:NDLL, directoryName:String, namePrefix:String, nameSuffix:String, targetDirectory:String, allowDebug:Bool = false, targetSuffix:String = null) {$/;"	f
copyPage	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function copyPage ():Void {$/;"	f
copyPixels	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public function copyPixels (sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, alphaImage:Image = null, alphaPoint:Vector2 = null, mergeAlpha:Bool = false):Void {$/;"	f
copyPixels	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageCanvasUtil.hx	/^	public static function copyPixels (image:Image, sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, alphaImage:Image = null, alphaPoint:Vector2 = null, mergeAlpha:Bool = false):Void {$/;"	f
copyPixels	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	public static function copyPixels (image:Image, sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, alphaImage:Image = null, alphaPoint:Vector2 = null, mergeAlpha:Bool = false):Void {$/;"	f
copyPixels	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function copyPixels (sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, alphaBitmapData:BitmapData = null, alphaPoint:Point = null, mergeAlpha:Bool = false):Void {$/;"	f
copyPixels	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function copyPixels (sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, alphaBitmapData:BitmapData = null, alphaPoint:Point = null, mergeAlpha:Bool = false):Void {$/;"	f
copyRawDataFrom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public function copyRawDataFrom (vector:Vector<Float>, index:UInt = 0, transpose:Bool = false):Void {$/;"	f
copyRawDataFrom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public function copyRawDataFrom( vector:Vector<Float>, index:UInt = 0, transpose:Bool = false ) {$/;"	f
copyRawDataTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public function copyRawDataTo (vector:Vector<Float>, index:UInt = 0, transpose:Bool = false):Void {$/;"	f
copyRawDataTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public function copyRawDataTo( vector:Vector<Float>, index:UInt = 0, transpose:Bool = false ) {$/;"	f
copyRowFrom	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public function copyRowFrom (row:Int, vector4:Vector4):Void {$/;"	f
copyRowFrom	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public function copyRowFrom( row:UInt, vector:Vector4 ) {$/;"	f
copyRowFrom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^	public function copyRowFrom (row:Int, vector3D:Vector3D):Void {$/;"	f
copyRowFrom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^	public function copyRowFrom (row:Int, vector3D:Vector3D):Void {$/;"	f
copyRowFrom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public function copyRowFrom( row:UInt, vector3D:Vector3D ) {$/;"	f
copyRowTo	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public function copyRowTo (row:Int, vector4:Vector4):Void {$/;"	f
copyRowTo	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public function copyRowTo (row:Int, vector:Vector4):Void {$/;"	f
copyRowTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^	public function copyRowTo (row:Int, vector3D:Vector3D):Void {$/;"	f
copyRowTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^	public function copyRowTo (row:Int, vector3D:Vector3D):Void {$/;"	f
copyRowTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public function copyRowTo (row:Int, vector3D:Vector3D):Void {$/;"	f
copyTexImage2D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function copyTexImage2D (target:Int, level:Int, internalformat:Int, x:Int, y:Int, width:Int, height:Int, border:Int):Void;$/;"	f
copyTexImage2D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function copyTexImage2D (target:Int, level:Int, internalformat:Int, x:Int, y:Int, width:Int, height:Int, border:Int):Void {$/;"	f
copyTexImage2D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function copyTexImage2D (target:Int, level:Int, internalformat:Int, x:Int, y:Int, width:Int, height:Int, border:Int):Void {$/;"	f
copyTexImage2D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function copyTexImage2D(target:Int, level:Int, internalformat:Int, x:Int, y:Int, width:Int, height:Int, border:Int):Void $/;"	f
copyTexImage2D	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function copyTexImage2D(target:Int, level:Int, internalformat:Int, x:Int, y:Int, width:Int, height:Int, border:Int):Void;$/;"	f
copyTexSubImage2D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function copyTexSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, x:Int, y:Int, width:Int, height:Int):Void;$/;"	f
copyTexSubImage2D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function copyTexSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, x:Int, y:Int, width:Int, height:Int):Void {$/;"	f
copyTexSubImage2D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function copyTexSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, x:Int, y:Int, width:Int, height:Int):Void {$/;"	f
copyTexSubImage2D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function copyTexSubImage2D(target:Int, level:Int, xoffset:Int, yoffset:Int, x:Int, y:Int, width:Int, height:Int):Void $/;"	f
copyTexSubImage2D	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function copyTexSubImage2D(target:Int, level:Int, xoffset:Int, yoffset:Int, x:Int, y:Int, width:Int, height:Int):Void;$/;"	f
copyToMatrix3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public function copyToMatrix3D (other:Matrix3D):Void {$/;"	f
copyToMatrix4	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public function copyToMatrix4 (other:Matrix4):Void {$/;"	f
copyright	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/FrameHeader.hx	/^    public var copyright(default, null):Bool;$/;"	v
copyright	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var copyright = (b >> 3) & 1 == 1;$/;"	v
copythisFrom	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public function copythisFrom( array:Float32Array, index:UInt = 0, transposeValues:Bool = false ) {$/;"	f
copythisTo	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public function copythisTo( array:Float32Array, index:UInt = 0, transposeValues:Bool = false ) {$/;"	f
core	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var core: B2Vec2 = B2Math.mulFV(coreOffset, s2.getDirectionVector());$/;"	v
coreOffset	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var coreOffset: Float = Math.tan((angle2 - angle1) * 0.5);$/;"	v
cores	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ProcessHelper.hx	/^				var cores = ~\/Total Number of Cores: (\\d+)\/;$/;"	v
corner1IsConvex	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public function corner1IsConvex(): Bool$/;"	f
corner2IsConvex	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public function corner2IsConvex(): Bool$/;"	f
cornerDir	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var cornerDir: B2Vec2 = B2Math.addVV(s1.getDirectionVector(), s2.getDirectionVector());$/;"	v
correctOrder	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventDispatcherTest.hx	/^		var correctOrder = true;$/;"	v
correctPhase	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventDispatcherTest.hx	/^		var correctPhase = true;$/;"	v
cos	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^			var cos = Math.cos (rotation);$/;"	v
cos	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^		var cos = Math.cos (theta);$/;"	v
cos	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^			var cos = Math.cos (rotation);$/;"	v
cos	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^		var cos = Math.cos (angle);$/;"	v
cos	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^			var cos = Math.cos (rotation);$/;"	v
cos	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^		var cos = Math.cos (theta);$/;"	v
cos	/usr/lib/haxe/std/Math.hx	/^	static function cos(v:Float):Float;$/;"	f
cosTheta	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var cosTheta = 1.0, sinTheta = 0.0;$/;"	v
cotan	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/PerspectiveProjection.hx	/^		var cotan = 1 \/ Math.tan (p_nFovY \/ 2);$/;"	v
count	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^		var count:Int = 0;$/;"	v
count	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^		var count:Int = cache.count;$/;"	v
count	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SimplexCache.hx	/^	public var count:Int = 0;$/;"	v
count	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/ContactListenerBreakable.hx	/^		var count:Int = contact.getManifold().m_pointCount;$/;"	v
count	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^			var count = bytes.readUnsignedInt ();$/;"	v
count	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextLayout.hx	/^				var count = __buffer.readUnsignedInt ();$/;"	v
count	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var count:Int = 0;$/;"	v
count	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GLMaskManager.hx	/^	public var count:Int;$/;"	v
count	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^	public var count:Int;$/;"	v
count	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var count = Std.int (length \/ 4);$/;"	v
count	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var count = Std.int (rect.width * rect.height);$/;"	v
count	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^			var count = text.split ("\\n").length;$/;"	v
count	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^		var count:Int = 0;$/;"	v
count	/usr/lib/haxe/std/haxe/macro/Format.hx	/^				var count = 1;$/;"	v
count	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^						var count = 0, hasParam = false;$/;"	v
count1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var count1:Int = poly1.m_vertexCount;$/;"	v
count2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var count2:Int = poly2.m_vertexCount;$/;"	v
counts	/usr/lib/haxe/std/haxe/zip/Huffman.hx	/^		var counts = new Array();$/;"	v
cp	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^				var cp:B2ManifoldPoint = manifold.m_points[ pointCount ];$/;"	v
cp	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var cp:B2ManifoldPoint = manifold.m_points[ k ];$/;"	v
cp	/usr/lib/haxe/std/haxe/io/Path.hx	/^		var cp = path.lastIndexOf(".");$/;"	v
cp	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^				var cp = StringTools.replace(classPaths[i], "\\\\", "\/");$/;"	v
cp1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var cp1:B2ContactConstraintPoint = c.points[ 0 ];$/;"	v
cp1x	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^							var cp1x = p1x + dx;$/;"	v
cp1y	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^							var cp1y = p1y + dy;$/;"	v
cp2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var cp2:B2ContactConstraintPoint = c.points[ 1 ];$/;"	v
cp2x	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^							var cp2x = p2x + cp1x;$/;"	v
cp2y	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^							var cp2y = p2y + cp1y;$/;"	v
cppParams	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^			var cppParams = [ "-Dandroid", "-Dandroid-9" ];$/;"	v
cpuArchitecture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var cpuArchitecture (default, null) = ""; \/\/ TODO$/;"	v
cpuArchitecture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var cpuArchitecture (default, null) = ""; \/\/ TODO$/;"	v
cpuTime	/usr/lib/haxe/std/Sys.hx	/^	static function cpuTime() : Float;$/;"	f
cpuinfo	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ProcessHelper.hx	/^					var cpuinfo = runProcess ("", "cat", [ "\/proc\/cpuinfo" ], true, true, true);$/;"	v
cpx	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^							var cpx = Std.int ((-0.25 * dx) + (0.75 * cp1x) + (0.75 * cp2x) + ( -0.25 * endx));$/;"	v
cpy	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^							var cpy = Std.int (( -0.25 * dy) + (0.75 * cp1y) + (0.75 * cp2y) + ( -0.25 * endy));$/;"	v
cr1u	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^		var cr1u:Float = (r1X * m_u.y - r1Y * m_u.x);$/;"	v
cr1u1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var cr1u1:Float = r1X * m_u1.y - r1Y * m_u1.x;$/;"	v
cr2u	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^		var cr2u:Float = (r2X * m_u.y - r2Y * m_u.x);$/;"	v
cr2u2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var cr2u2:Float = r2X * m_u2.y - r2Y * m_u2.x;$/;"	v
crate	Source/Main.hx	/^	private static var crate:Crate;$/;"	v
crate	Source/Main.hx	/^            var crate = new Crate();$/;"	v
crateBitmapData	Source/Env.hx	/^    public static var crateBitmapData:BitmapData;$/;"	v
crateWidthInPixels	Source/Env.hx	/^    public static var crateWidthInPixels = 100;$/;"	v
crc	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/TizenHelper.hx	/^				var crc = Crc32.make (bytes);$/;"	v
crc	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^					var crc = i.readInt32();$/;"	v
crc	/usr/lib/haxe/std/haxe/crypto/Crc32.hx	/^		var crc = init;$/;"	v
crc	/usr/lib/haxe/std/haxe/crypto/Crc32.hx	/^	var crc : Int;$/;"	v
crc	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^			var crc = Adler32.read(input);$/;"	v
crc	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	var crc : Adler32;$/;"	v
crc	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^					var crc = i.readInt32();$/;"	v
crc32	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var crc32 = i.readInt32();$/;"	v
crc32	/usr/lib/haxe/std/haxe/zip/Entry.hx	/^	var crc32 : Null<Int>;$/;"	v
crc32	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var crc32 : Null<Int> = i.readInt32();$/;"	v
create	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public function create( body:B2Body, xf:B2Transform, def:B2FixtureDef):Void$/;"	f
create	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2CircleContact.hx	/^	static public function create(allocator:Dynamic):B2Contact{$/;"	f
create	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactFactory.hx	/^	public function create(fixtureA:B2Fixture, fixtureB:B2Fixture):B2Contact{$/;"	f
create	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2EdgeAndCircleContact.hx	/^	static public function create(allocator:Dynamic):B2Contact{$/;"	f
create	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndCircleContact.hx	/^	static public function create(allocator:Dynamic):B2Contact{$/;"	f
create	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^	static public function create(allocator:Dynamic):B2Contact{$/;"	f
create	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolygonContact.hx	/^	static public function create(allocator:Dynamic):B2Contact{$/;"	f
create	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	static public function create(def:B2JointDef, allocator:Dynamic):B2Joint{$/;"	f
create	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashApplication.hx	/^	public function create (config:Config):Void {$/;"	f
create	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashRenderer.hx	/^	public function create ():Void {$/;"	f
create	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashWindow.hx	/^	public function create (application:Application):Void {$/;"	f
create	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Application.hx	/^	public function create (config:Config):Void {$/;"	f
create	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Renderer.hx	/^	public function create ():Void {$/;"	f
create	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^	public function create (application:Application):Void {$/;"	f
create	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public function create (config:Config):Void {$/;"	f
create	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeRenderer.hx	/^	public function create ():Void {$/;"	f
create	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	public function create (application:Application):Void {$/;"	f
create	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public function create (config:Config):Void {$/;"	f
create	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Preloader.hx	/^	public function create (config:Config):Void {$/;"	f
create	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Renderer.hx	/^	public function create ():Void {$/;"	f
create	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CordovaHelper.hx	/^	public static function create (workingDirectory:String, targetPath:String, context:Dynamic):Void {$/;"	f
create	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public function create (application:Application):Void {$/;"	f
create	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/ApplicationMain.hx	/^	public static function create ():Void {$/;"	f
create	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	public static function create (onLoaded:Void->Void, width:Int, height:Int, frameRate:Float = 60.0, color:Int = 0xffffff, flags:Int = 0x0f, title:String = "OpenFL", icon:BitmapData = null, stageClass:Class<Stage> = null):Void {$/;"	f
create	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/LoaderInfo.hx	/^	public static function create (loader:Loader):LoaderInfo {$/;"	f
create	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	public function create (request : URLRequest) : Dynamic {$/;"	f
create	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/LoaderInfo.hx	/^	public static function create (loader:Loader):LoaderInfo {$/;"	f
create	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/ApplicationMain.hx	/^	public static function create ():Void {$/;"	f
create	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^	public static function create ():Void {$/;"	f
create	/usr/lib/haxe/std/haxe/remoting/AsyncAdapter.hx	/^	public static function create( cnx : Connection ) : AsyncConnection {$/;"	f
create	/usr/lib/haxe/std/haxe/remoting/AsyncDebugConnection.hx	/^	public static function create( cnx : AsyncConnection ) {$/;"	f
create	/usr/lib/haxe/std/haxe/remoting/DelayedConnection.hx	/^	public static function create() {$/;"	f
create	/usr/lib/haxe/std/haxe/remoting/SocketConnection.hx	/^	public static function create( s : Socket, ?ctx : Context ) {$/;"	f
create	/usr/lib/haxe/std/haxe/remoting/SocketWrapper.hx	/^	static function create( prefix : String ) : String {$/;"	f
create	/usr/lib/haxe/std/haxe/remoting/SyncSocketConnection.hx	/^	public static function create( s : Socket, ?ctx : Context ) {$/;"	f
create	/usr/lib/haxe/std/neko/vm/Thread.hx	/^	public static function create( callb : Void -> Void ) {$/;"	f
create	/usr/lib/haxe/std/sys/db/TableCreate.hx	/^	public static function create( manager : sys.db.Manager<Dynamic>, ?engine ) {$/;"	f
create new sound channel	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^			\/\/ TODO: create new sound channel$/;"	i
create2D	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public static function create2D (x:Float, y:Float, scale:Float = 1, rotation:Float = 0) {$/;"	f
create2D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public static function create2D (x:Float, y:Float, scale:Float = 1, rotation:Float = 0) {$/;"	f
createABCD	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public static function createABCD (a:Float, b:Float, c:Float, d:Float, tx:Float, ty:Float) {$/;"	f
createABCD	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public static function createABCD (a:Float, b:Float, c:Float, d:Float, tx:Float, ty:Float) {$/;"	f
createAnalyser	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/WebAudioContext.hx	/^	public function createAnalyser ():Dynamic \/*AnalyserNode*\/ { return null; }$/;"	f
createApp	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	public function createApp (uploadID:String):Dynamic {$/;"	f
createBiquadFilter	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/WebAudioContext.hx	/^	public function createBiquadFilter ():Dynamic \/*BiquadFilterNode*\/ { return null; }$/;"	f
createBitmapFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^	private static function createBitmapFill (bitmap:BitmapData, bitmapRepeat:Bool) {$/;"	f
createBody	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function createBody(def:B2BodyDef) : B2Body{$/;"	f
createBox	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public function createBox (scaleX:Float, scaleY:Float, rotation:Float = 0, tx:Float = 0, ty:Float = 0):Void {$/;"	f
createBox	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^	public function createBox (scaleX:Float, scaleY:Float, rotation:Float = 0, tx:Float = 0, ty:Float = 0):Void {$/;"	f
createBox	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^	public function createBox (scaleX:Float, scaleY:Float, rotation:Float = 0, tx:Float = 0, ty:Float = 0):Void {$/;"	f
createBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/FlashAudioContext.hx	/^	public function createBuffer (stream:Dynamic \/*URLRequest*\/ = null, context:Dynamic \/*SoundLoaderContext*\/ = null):AudioBuffer {$/;"	f
createBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function createBuffer (urlString:String = null):AudioBuffer {$/;"	f
createBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/WebAudioContext.hx	/^	public function createBuffer (buffer:Dynamic \/*js.html.ArrayBuffer*\/, mixToMono:Bool):Dynamic \/*AudioBuffer*\/ { return null; }$/;"	f
createBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function createBuffer ():GLBuffer;$/;"	f
createBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function createBuffer ():GLBuffer {$/;"	f
createBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function createBuffer ():GLBuffer {$/;"	f
createBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function createBuffer():GLBuffer $/;"	f
createBuffer	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function createBuffer():GLBuffer;$/;"	f
createBufferSource	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/WebAudioContext.hx	/^	public function createBufferSource ():Dynamic \/*AudioBufferSourceNode*\/ { return null; }$/;"	f
createBuffers	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^	private function createBuffers(r:Rectangle) {$/;"	f
createCData	/usr/lib/haxe/std/Xml.hx	/^	static function createCData( data : String ) : Xml;$/;"	f
createCanvas	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageCanvasUtil.hx	/^	public static function createCanvas (image:Image, width:Int, height:Int):Void {$/;"	f
createChannelMerger	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/WebAudioContext.hx	/^	public function createChannelMerger (?numberOfInputs:Int):Dynamic \/*ChannelMergerNode*\/ { return null; }$/;"	f
createChannelSplitter	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/WebAudioContext.hx	/^	public function createChannelSplitter (?numberOfOutputs:Int):Dynamic \/*ChannelSplitterNode*\/ { return null; }$/;"	f
createComment	/usr/lib/haxe/std/Xml.hx	/^	static function createComment( data : String ) : Xml;$/;"	f
createContext	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Renderer.hx	/^	private function createContext ():Void {$/;"	f
createContext	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public function createContext (device:ALDevice, attrlist:Array<Int> = null):ALContext {$/;"	f
createContext	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static function createContext (device:ALDevice, attrlist:Array<Int> = null):ALContext {$/;"	f
createController	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function createController(controller:B2Controller):B2Controller$/;"	f
createConvolver	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/WebAudioContext.hx	/^	public function createConvolver ():Dynamic \/*ConvolverNode*\/ { return null; }$/;"	f
createCubeTexture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function createCubeTexture (size:Int, format:Context3DTextureFormat, optimizeForRenderToTexture:Bool, streamingLevels:Int = 0):CubeTexture {$/;"	f
createDelay	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/WebAudioContext.hx	/^	public function createDelay (?maxDelayTime:Float):Dynamic \/*DelayNode*\/ { return null; }$/;"	f
createDirectory	/usr/lib/haxe/std/sys/FileSystem.hx	/^	static function createDirectory( path : String ) : Void;$/;"	f
createDocType	/usr/lib/haxe/std/Xml.hx	/^	static function createDocType( data : String ) : Xml;$/;"	f
createDocument	/usr/lib/haxe/std/Xml.hx	/^	static function createDocument() : Xml;$/;"	f
createDynamic	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	public static function createDynamic (handle:Dynamic, soundTransform:SoundTransform, dataProvider:EventDispatcher):SoundChannel {$/;"	f
createDynamicImageData	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function createDynamicImageData (sw:Float, sh:Float):Dynamic \/*ImageData*\/ { return null; };$/;"	f
createDynamicsCompressor	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/WebAudioContext.hx	/^	public function createDynamicsCompressor ():Dynamic \/*DynamicsCompressorNode*\/ { return null; }$/;"	f
createElement	/usr/lib/haxe/std/Xml.hx	/^	static function createElement( name : String ) : Xml;$/;"	f
createExecutable	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/NekoHelper.hx	/^	public static function createExecutable (templatePaths:Array <String>, platformName:String, source:String, target:String, iconPath:String = null):Void {$/;"	f
createExtension	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^	public static function createExtension (words:Array <String>, userDefines:Map<String, Dynamic>):Void {$/;"	f
createFcn	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactFactory.hx	/^		var createFcn:Dynamic = reg.createFcn;$/;"	v
createFcn	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactRegister.hx	/^	public var createFcn:Dynamic; \/\/ fcn pointer$/;"	v
createFixture	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function createFixture(def:B2FixtureDef) : B2Fixture{$/;"	f
createFixture2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function createFixture2(shape:B2Shape, density:Float=0.0):B2Fixture$/;"	f
createFont	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/AbstractFont.hx	/^	private static function createFont (definition:FontDefinition):AbstractFont {$/;"	f
createForData	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoSurface.hx	/^	public static function createForData (data:Dynamic, format:CairoFormat, width:Int, height:Int, stride:Int):CairoSurface {$/;"	f
createForSurface	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoPattern.hx	/^	public static function createForSurface (surface:CairoSurface):CairoPattern {$/;"	f
createFramebuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function createFramebuffer ():GLFramebuffer;$/;"	f
createFramebuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function createFramebuffer ():GLFramebuffer {$/;"	f
createFramebuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function createFramebuffer ():GLFramebuffer {$/;"	f
createFramebuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function createFramebuffer():GLFramebuffer $/;"	f
createFramebuffer	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function createFramebuffer():GLFramebuffer;$/;"	f
createGain	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/WebAudioContext.hx	/^	public function createGain ():Dynamic \/*GainNode*\/ { return null; }$/;"	f
createGradientBox	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public function createGradientBox (width:Float, height:Float, rotation:Float = 0, tx:Float = 0, ty:Float = 0):Void {$/;"	f
createGradientBox	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^	public function createGradientBox (width:Float, height:Float, rotation:Float = 0, tx:Float = 0, ty:Float = 0):Void {$/;"	f
createGradientBox	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^	public function createGradientBox (width:Float, height:Float, rotation:Float = 0, tx:Float = 0, ty:Float = 0):Void {$/;"	f
createGradientPattern	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^	private static function createGradientPattern( type:GradientType, colors:Array<Dynamic>, alphas:Array<Dynamic>, ratios:Array<Dynamic>, matrix:Matrix, spreadMethod:Null<SpreadMethod>, interpolationMethod:Null<InterpolationMethod>, focalPointRatio:Null<Float> ): CairoPattern {$/;"	f
createGradientPattern	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^	private static function createGradientPattern( type:GradientType, colors:Array<Dynamic>, alphas:Array<Dynamic>, ratios:Array<Dynamic>, matrix:Matrix, spreadMethod:Null<SpreadMethod>, interpolationMethod:Null<InterpolationMethod>, focalPointRatio:Null<Float> ) {$/;"	f
createHardwareSurface	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function createHardwareSurface ():Void {$/;"	f
createIcon	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^	public static function createIcon (icons:Array<Icon>, width:Int, height:Int, targetPath:String):Bool {$/;"	f
createImageData	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageCanvasUtil.hx	/^	public static function createImageData (image:Image):Void {$/;"	f
createImagePattern	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^	private static function createImagePattern (bitmapFill:BitmapData, matrix:Matrix, bitmapRepeat:Bool):CairoPattern {$/;"	f
createIndexBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function createIndexBuffer (numIndices:Int):IndexBuffer3D {$/;"	f
createInstance	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static function createInstance (src:String):SoundJSInstance;$/;"	f
createInterface	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	public static function createInterface (haxeClass:Dynamic, className:String, classDef:String):Dynamic {$/;"	f
createJoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function createJoint(def:B2JointDef) : B2Joint{$/;"	f
createLinear	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoPattern.hx	/^	public static function createLinear (x0:Float, y0:Float, x1:Float, y1:Float):CairoPattern {$/;"	f
createLinearGradient	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function createLinearGradient (x0:Float, y0:Float, x1:Float, y1:Float):Dynamic \/*CanvasGradient*\/ { return null; };$/;"	f
createMacIcon	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^	public static function createMacIcon (icons:Array<Icon>, targetPath:String):Bool {$/;"	f
createManagedStage	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	public static function createManagedStage (width:Int, height:Int, flags:Int = 0):ManagedStage {$/;"	f
createManifest	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AssetHelper.hx	/^	public static function createManifest (project:HXProject, targetPath:String = ""):String {$/;"	f
createMediaElementSource	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/WebAudioContext.hx	/^	public function createMediaElementSource (mediaElement:Dynamic \/*js.html.MediaElement*\/):Dynamic \/*MediaElementAudioSourceNode*\/ { return null; }$/;"	f
createMediaStreamSource	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/WebAudioContext.hx	/^	public function createMediaStreamSource (mediaStream:Dynamic \/*js.html.rtc.MediaStream*\/):Dynamic \/*MediaStreamAudioSourceNode*\/ { return null; }$/;"	f
createMemberField	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	public static function createMemberField (className:String, memberName:String, signature:String):JNIMemberField {$/;"	f
createMemberMethod	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	public static function createMemberMethod (className:String, memberName:String, signature:String, useArray:Bool = false, quietFail:Bool = false):Dynamic {$/;"	f
createOrtho	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public static function createOrtho (x0:Float, x1:Float,  y0:Float, y1:Float, zNear:Float, zFar:Float) {$/;"	f
createOrtho	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public static function createOrtho (x0:Float, x1:Float,  y0:Float, y1:Float, zNear:Float, zFar:Float) {$/;"	f
createOscillator	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/WebAudioContext.hx	/^	public function createOscillator ():Dynamic \/*OscillatorNode*\/ { return null; }$/;"	f
createPCData	/usr/lib/haxe/std/Xml.hx	/^	static function createPCData( data : String ) : Xml;$/;"	f
createPackage	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^	public static function createPackage (project:HXProject, workingDirectory:String, descriptorFile:String, targetPath:String):Void {$/;"	f
createPackage	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/TizenHelper.hx	/^	public static function createPackage (project:HXProject, workingDirectory:String, targetPath:String):Void {$/;"	f
createPackage	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/WebOSHelper.hx	/^	public static function createPackage (project:HXProject, workingDirectory:String, targetPath:String):Void {$/;"	f
createPanner	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/WebAudioContext.hx	/^	public function createPanner ():Dynamic \/*PannerNode*\/ { return null; }$/;"	f
createPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static function createPath (path:String, defaultPath:String = ""):String {$/;"	f
createPattern	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function createPattern (image:Dynamic \/*ImageElement*\/, repetitionType:String):Dynamic \/*CanvasPattern*\/ { return null; };$/;"	f
createProcessingInstruction	/usr/lib/haxe/std/Xml.hx	/^	static function createProcessingInstruction( data : String ) : Xml;$/;"	f
createProgram	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function createProgram ():GLProgram;$/;"	f
createProgram	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function createProgram ():GLProgram {$/;"	f
createProgram	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function createProgram ():GLProgram {$/;"	f
createProgram	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/GLUtils.hx	/^	public static function createProgram (vertexSource:String, fragmentSource:String):GLProgram {$/;"	f
createProgram	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function createProgram():GLProgram $/;"	f
createProgram	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function createProgram ():Program3D {$/;"	f
createProgram	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function createProgram():GLProgram;$/;"	f
createProject	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^	public static function createProject (words:Array <String>, userDefines:Map<String, Dynamic>):Void {$/;"	f
createProxy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^	public function createProxy(aabb:B2AABB, userData:Dynamic):B2DynamicTreeNode$/;"	f
createProxy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^	public function createProxy(aabb:B2AABB, userData:Dynamic):Dynamic$/;"	f
createProxy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/IBroadPhase.hx	/^	function createProxy(aabb:B2AABB, userData:Dynamic):Dynamic;$/;"	f
createProxy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public function createProxy(broadPhase:IBroadPhase, xf:B2Transform):Void {$/;"	f
createRGB	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoPattern.hx	/^	public static function createRGB (r:Float, g:Float, b:Float):CairoPattern {$/;"	f
createRGBA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoPattern.hx	/^	public static function createRGBA (r:Float, g:Float, b:Float, a:Float):CairoPattern {$/;"	f
createRadial	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoPattern.hx	/^	public static function createRadial (cx0:Float, cy0:Float, radius0:Float, cx1:Float, cy1:Float, radius1:Float):CairoPattern {$/;"	f
createRadialGradient	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function createRadialGradient (x0:Float, y0:Float, r0:Float, x1:Float, y1:Float, r1:Float):Dynamic \/*CanvasGradient*\/ { return null; };$/;"	f
createRectangleTexture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function createRectangleTexture (width:Int, height:Int, format:Context3DTextureFormat, optimizeForRenderToTexture:Bool):RectangleTexture {$/;"	f
createRenderbuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function createRenderbuffer ():GLRenderbuffer;$/;"	f
createRenderbuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function createRenderbuffer ():GLRenderbuffer {$/;"	f
createRenderbuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function createRenderbuffer ():GLRenderbuffer {$/;"	f
createRenderbuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function createRenderbuffer():GLRenderbuffer $/;"	f
createRenderbuffer	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function createRenderbuffer():GLRenderbuffer;$/;"	f
createRequest	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthClient.hx	/^	public function createRequest (method:URLRequestMethod, url:String):URLRequest {$/;"	f
createSample	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^	public static function createSample (words:Array <String>, userDefines:Map<String, Dynamic>) {$/;"	f
createScriptProcessor	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/WebAudioContext.hx	/^	public function createScriptProcessor (bufferSize:Int, ?numberOfInputChannels:Int, ?numberOfOutputChannels:Int):Dynamic \/*ScriptProcessorNode*\/ { return null; }$/;"	f
createShader	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function createShader (type:Int):GLShader;$/;"	f
createShader	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function createShader (type:Int):GLShader {$/;"	f
createShader	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function createShader (type:Int):GLShader {$/;"	f
createShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function createShader(type:Int):GLShader $/;"	f
createShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/_shaders/AGLSLShaderUtils.hx	/^	inline public static function createShader (type:Context3DProgramType, shaderSource:String):Shader {$/;"	f
createShader	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function createShader(type:Int):GLShader;$/;"	f
createStaticField	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	public static function createStaticField (className:String, memberName:String, signature:String):JNIStaticField {$/;"	f
createStaticMethod	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	public static function createStaticMethod (className:String, memberName:String, signature:String, useArray:Bool = false, quietFail:Bool = false):Dynamic {$/;"	f
createTempPatternCanvas	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^	private static function createTempPatternCanvas (bitmap:BitmapData, repeat:Bool, width:Int, height:Int) {$/;"	f
createTemplate	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	private function createTemplate () {$/;"	f
createTexture	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function createTexture ():GLTexture;$/;"	f
createTexture	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function createTexture ():GLTexture {$/;"	f
createTexture	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function createTexture ():GLTexture {$/;"	f
createTexture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function createTexture():GLTexture $/;"	f
createTexture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function createTexture (width:Int, height:Int, format:Context3DTextureFormat, optimizeForRenderToTexture:Bool, streamingLevels:Int = 0):Texture {$/;"	f
createTexture	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function createTexture():GLTexture;$/;"	f
createVertexBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function createVertexBuffer (numVertices:Int, data32PerVertex:Int):VertexBuffer3D {$/;"	f
createWaveShaper	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/WebAudioContext.hx	/^	public function createWaveShaper ():Dynamic \/*WaveShaperNode*\/ { return null; }$/;"	f
createWaveTable	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/WebAudioContext.hx	/^	public function createWaveTable (real:Dynamic \/*js.html.Float32Array*\/, imag:Dynamic \/*js.html.Float32Array*\/):Dynamic \/*WaveTable*\/ { return null; }$/;"	f
createWebWorksPackage	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^	public static function createWebWorksPackage (project:HXProject, sourceDirectory:String, targetPath:String):Void {$/;"	f
createWindowsExecutable	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/NekoHelper.hx	/^	public static function createWindowsExecutable (templatePaths:Array <String>, source:String, target:String, iconPath:String):Void {$/;"	f
createWindowsIcon	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^	public static function createWindowsIcon (icons:Array <Icon>, targetPath:String):Bool {$/;"	f
create_main_frame	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^		var create_main_frame = Lib.load ("lime-legacy", "lime_legacy_create_main_frame", -1);$/;"	v
creating a joint doesn't wake the bodies.	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		\/\/ Note: creating a joint doesn't wake the bodies.$/;"	i
credentials	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequest.hx	/^	public var credentials:String;$/;"	v
cref	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^					var cref = src.readUInt16();$/;"	v
cross	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var cross:Float = b2Math.b2CrossVV(m_normals[int(i-1)], m_normals[i]);$/;"	v
crossFV	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public function crossFV(s:Float, a:B2Vec2):B2Vec2$/;"	f
crossFV	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec2.hx	/^	public function crossFV(s:Float) : Void$/;"	f
crossProduct	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	inline public function crossProduct (a:Vector4):Vector4 {$/;"	f
crossProduct	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^	inline public function crossProduct (a:Vector3D):Vector3D {$/;"	f
crossVF	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public function crossVF(a:B2Vec2, s:Float):B2Vec2$/;"	f
crossVF	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec2.hx	/^	public function crossVF(s:Float) : Void$/;"	f
crossVV	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public function crossVV(a:B2Vec2, b:B2Vec2):Float$/;"	f
crug	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^		var crug:Float;$/;"	v
csize	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var csize = i.readInt32();$/;"	v
csize	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var csize = i.readInt32();$/;"	v
cskPIN	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^						var cskPIN = CLIHelper.param ("Code signing key PIN");$/;"	v
cskPassword	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^					var cskPassword:String = null;$/;"	v
cstr	/usr/lib/haxe/std/haxe/Http.hx	/^					var cstr = chunk_re.matched(1);$/;"	v
csup	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^				var csup = c.superClass;$/;"	v
csup	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^				var csup = c.get().superClass;$/;"	v
csup	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var csup = cl.superClass;$/;"	v
csup	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var csup = c.superClass;$/;"	v
csuper	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		var csuper = null;$/;"	v
ct	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^			var ct:ColorTransform = object.__worldColorTransform;$/;"	v
ct	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var ct:ColorTransform = object.__worldColorTransform;$/;"	v
ct	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^			var ct = state.colorTransform;$/;"	v
ctCache	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var ctCache = source.__worldColorTransform;$/;"	v
ctime	/usr/lib/haxe/std/sys/FileStat.hx	/^	var ctime : Date;$/;"	v
ctrlKey	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	public var ctrlKey (get, set):Bool;$/;"	v
ctrlKey	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/KeyboardEvent.hx	/^	public var ctrlKey:Bool;$/;"	v
ctrlKey	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public var ctrlKey:Bool;$/;"	v
ctrlKey	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/KeyboardEvent.hx	/^	public var ctrlKey:Bool;$/;"	v
ctrlKey	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public var ctrlKey:Bool;$/;"	v
ctrlKey	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TouchEvent.hx	/^	public var ctrlKey:Bool;$/;"	v
ctx	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioManager.hx	/^					var ctx = ALC.createContext (device);$/;"	v
ctx	/usr/lib/haxe/std/haxe/remoting/Context.hx	/^		var ctx = new Context();$/;"	v
ctx	/usr/lib/haxe/std/haxe/remoting/SocketWrapper.hx	/^		var ctx = new Context();$/;"	v
ctx	/usr/lib/haxe/std/neko/net/ThreadRemotingServer.hx	/^		var ctx = new haxe.remoting.Context();$/;"	v
cubicCurveTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	private static inline function cubicCurveTo(cx:Float, cy:Float, cx2:Float, cy2:Float, x:Float, y:Float) {$/;"	f
cubicCurveTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public function cubicCurveTo (controlX1:Float, controlY1:Float, controlX2:Float, controlY2:Float, anchorX:Float, anchorY:Float):Void {$/;"	f
cubicCurveTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public function cubicCurveTo (controlX1:Float, controlY1:Float, controlX2:Float, controlY2:Float, anchorX:Float, anchorY:Float):Void {$/;"	f
cull	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^		var cull:Int = (culling == null ? 0 : Type.enumIndex (culling) - 1);$/;"	v
cullFace	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function cullFace (mode:Int):Void;$/;"	f
cullFace	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function cullFace (mode:Int):Void {$/;"	f
cullFace	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function cullFace (mode:Int):Void {$/;"	f
cullFace	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function cullFace(mode:Int):Void $/;"	f
cullFace	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function cullFace(mode:Int):Void;$/;"	f
culling	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var culling:TriangleCulling = cast args[3];$/;"	v
cur	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	var cur : Int;$/;"	v
cur	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^	public var cur:Part;$/;"	v
cur	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		var cur = root;$/;"	v
cur	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^					var cur = c.superClass;$/;"	v
curPointX	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^				var curPointX = queue.pop ();$/;"	v
curPointY	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^				var curPointY = queue.pop ();$/;"	v
cur_test_ind	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Main.hx	/^	var cur_test_ind:Int = 0;$/;"	v
curbits	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^		var curbits = 0;$/;"	v
curname	/usr/lib/haxe/std/neko/Web.hx	/^		var curname = null;$/;"	v
curpack	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		var curpack = new Array();$/;"	v
curplatform	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	var curplatform : String;$/;"	v
currLine	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		var currLine = 0;$/;"	v
currTime	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Application.hx	/^					var currTime = new Date().getTime();$/;"	v
currWidth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		var currWidth = 0.0;$/;"	v
current	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public static var current (default, null):Application;$/;"	v
current	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^			var current = this;$/;"	v
current	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^		var current = this;$/;"	v
current	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ProcessHelper.hx	/^						var current = process.stdout.readAll (1024);$/;"	v
current	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Lib.hx	/^	public static var current (default, null):MovieClip = new MovieClip ();$/;"	v
current	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Lib.hx	/^	public static var current (get, set):MovieClip;$/;"	v
current	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^		var current = null;$/;"	v
current	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	public static var current (get, null):MovieClip;$/;"	v
current	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^			var current = this;$/;"	v
current	/usr/lib/haxe/std/haxe/ds/GenericStack.hx	/^	public var current : GenericCell<T>;$/;"	v
current	/usr/lib/haxe/std/neko/vm/Thread.hx	/^	public static function current() {$/;"	f
currentBlendMode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/RenderSession.hx	/^	public var currentBlendMode:BlendMode;$/;"	v
currentBlendMode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/BlendModeManager.hx	/^	public var currentBlendMode:BlendMode;$/;"	v
currentBounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^			var currentBounds = getBounds (this);$/;"	v
currentBounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^			var currentBounds = getBounds (this);$/;"	v
currentContext	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioManager.hx	/^					var currentContext = alc.getCurrentContext ();$/;"	v
currentCount	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Timer.hx	/^	public var currentCount:Int;$/;"	v
currentCount	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/FPS.hx	/^		var currentCount = times.length;$/;"	v
currentCount	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/Timer.hx	/^	public var currentCount (default, null):Int;$/;"	v
currentDomain	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/ApplicationDomain.hx	/^	public static var currentDomain (default, null) = new ApplicationDomain (null);$/;"	v
currentDomain	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/SecurityDomain.hx	/^	public static var currentDomain (default, null) = new SecurityDomain ();$/;"	v
currentFPS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/FPS.hx	/^	public var currentFPS (default, null):Float;$/;"	v
currentFPS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/NetStream.hx	/^	public var currentFPS:Float;$/;"	v
currentFilter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^			var currentFilter = filterStack[filterStack.length-1];$/;"	v
currentFrame	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/MovieClip.hx	/^	public var currentFrame (get, null):Int;$/;"	v
currentFrame	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/MovieClip.hx	/^	public var currentFrame (get, null):Int;$/;"	v
currentFrameLabel	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/MovieClip.hx	/^	public var currentFrameLabel (get, null):String;$/;"	v
currentFrameLabel	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/MovieClip.hx	/^	public var currentFrameLabel (get, null):String;$/;"	v
currentID	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeNode.hx	/^	private static var currentID:Int = 0;$/;"	v
currentIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^						var currentIndex = 0;$/;"	v
currentIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^				var currentIndex = 0;$/;"	v
currentIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^						var currentIndex = 0;$/;"	v
currentIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^			var currentIndex = i * 4;$/;"	v
currentLabel	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/MovieClip.hx	/^	public var currentLabel (get, null):String;$/;"	v
currentLabel	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/MovieClip.hx	/^	public var currentLabel (get, null):String;$/;"	v
currentLabels	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/MovieClip.hx	/^	public var currentLabels (get, null):Array<FrameLabel>;$/;"	v
currentLabels	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/MovieClip.hx	/^	public var currentLabels (get, null):Array<FrameLabel>;$/;"	v
currentPath	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^					var currentPath = haxe.io.Path.directory (Sys.executablePath ());$/;"	v
currentPoint	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public var currentPoint (get, never):Vector2;$/;"	v
currentPos	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function currentPos() : Position {$/;"	f
currentProgram	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	private var currentProgram:Program3D;$/;"	v
currentRatio	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^				var currentRatio = scaleX \/ scaleY;$/;"	v
currentRatio	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^				var currentRatio = scaleX \/ scaleY;$/;"	v
currentRenderer	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var currentRenderer:Renderer;$/;"	v
currentShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/ShaderManager.hx	/^	public var currentShader:Shader;$/;"	v
currentSize	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^		var currentSize = 0;$/;"	v
currentState	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	var currentState:State;$/;"	v
currentTarget	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public var currentTarget (get, set):Dynamic;$/;"	v
currentTarget	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public var currentTarget:Dynamic;$/;"	v
currentTest	/usr/lib/haxe/std/haxe/unit/TestCase.hx	/^	public var currentTest : TestStatus;$/;"	v
currentTime	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashApplication.hx	/^		var currentTime = Lib.getTimer ();$/;"	v
currentTime	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^			var currentTime = System.getTimer ();$/;"	v
currentTime	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^	public var currentTime (get, set):Int;$/;"	v
currentTime	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/WebAudioContext.hx	/^	public var currentTime (default, null):Float;$/;"	v
currentTime	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/FPS.hx	/^		var currentTime = Timer.stamp ();$/;"	v
currentTime	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^				var currentTime = Lib.getTimer ();$/;"	v
currentType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^				var currentType = Type.getClass (this);$/;"	v
currentUpdate	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Application.hx	/^	private var currentUpdate:Float;$/;"	v
current_onEnter	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Preloader.hx	/^	private function current_onEnter (event:Event):Void {$/;"	f
currently does not work (framebufferStatus always return zero)	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		\/\/ TODO : currently does not work (framebufferStatus always return zero)$/;"	i
cursor	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Mouse.hx	/^	public static var cursor (get, set):MouseCursor;$/;"	v
cursor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^		var cursor = null;$/;"	v
cursorOffset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^						var cursorOffset = getTextWidth (textField, text.substring (0, textField.__cursorPosition)) + 3;$/;"	v
curveTo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function curveTo (x1:Float, y1:Float, x2:Float, y2:Float, x3:Float, y3:Float):Void {$/;"	f
curveTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	private static inline function curveTo (cx:Float, cy:Float, x:Float, y:Float) {$/;"	f
curveTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	private static function curveTo (points:Array<Float>, cx:Float, cy:Float, x:Float, y:Float) {$/;"	f
curveTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public function curveTo (controlX:Float, controlY:Float, anchorX:Float, anchorY:Float):Void {$/;"	f
curveTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsPath.hx	/^	public function curveTo (controlX:Float, controlY:Float, anchorX:Float, anchorY:Float):Void {$/;"	f
curveTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public function curveTo (controlX:Float, controlY:Float, anchorX:Float, anchorY:Float) {$/;"	f
curveTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsPath.hx	/^	public function curveTo (controlX:Float, controlY:Float, anchorX:Float, anchorY:Float):Void {$/;"	f
custom	/usr/lib/haxe/std/sys/net/Socket.hx	/^	var custom : Dynamic;$/;"	v
customRequest	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	public function customRequest (method:URLRequestMethod, path:String, ?data:Dynamic):URLRequest {$/;"	f
customRequest	/usr/lib/haxe/std/haxe/Http.hx	/^	public function customRequest( post : Bool, api : haxe.io.Output, ?sock : AbstractSocket, ?method : String  ) {$/;"	f
customTrace	/usr/lib/haxe/std/haxe/unit/TestRunner.hx	/^	private static function customTrace( v, ?p : haxe.PosInfos ) {$/;"	f
cv	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var cv: ClipVertex;$/;"	v
cv	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var cv:ClipVertex;$/;"	v
cv2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^			var cv2: ClipVertex;$/;"	v
cx	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^				var cx = Math.cos(components[1].x);$/;"	v
cx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^						var cx:Float, cy:Float;$/;"	v
cx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^			var cx = p[2 * i2], cy = p[2 * i2 + 1];$/;"	v
cx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^				var cx = Math.cos(components[1].x);$/;"	v
cx1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^		var cx1 = current.x + ((2 \/ 3) * (cx - current.x));$/;"	v
cx2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^		var cx2 = x + ((2 \/ 3) * (cx - x));$/;"	v
cx2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^						var cx2:Float, cy2:Float;$/;"	v
cy	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^				var cy = Math.cos(components[1].y);$/;"	v
cy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^				var cy = Math.cos(components[1].y);$/;"	v
cy1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^		var cy1 = current.y + ((2 \/ 3) * (cy - current.y));$/;"	v
cy2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^		var cy2 = y + ((2 \/ 3) * (cy - y));$/;"	v
cz	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^				var cz = Math.cos(components[1].z);$/;"	v
cz	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^				var cz = Math.cos(components[1].z);$/;"	v
d	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Distance.hx	/^		var d:B2Vec2 = simplex.getSearchDirection();$/;"	v
d	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2WorldManifold.hx	/^					var d:Float = Math.sqrt(d2);$/;"	v
d	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat22.hx	/^		var d:Float = col2.y;$/;"	v
d	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PositionSolverManifold.hx	/^					var d:Float = Math.sqrt(d2);$/;"	v
d	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^			var d:Float = 2.0 * m_mass * m_dampingRatio * omega;$/;"	v
d	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^		var d:Float = 2.0 * mass * m_dampingRatio * omega;$/;"	v
d	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^						var d:B2Vec2 = new B2Vec2(r * Math.cos(theta), r * Math.sin(theta));$/;"	v
d	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^				var d = a[i].split("::");$/;"	v
d	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^			var d = document.getElementById("haxe:trace");$/;"	v
d	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^			var d;$/;"	v
d	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public var d:Float;$/;"	v
d	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var d = determinant;$/;"	v
d	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^				var d = depth + 1;$/;"	v
d	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var d = i.readUInt16();$/;"	v
d	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var d = matrix.d;$/;"	v
d	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^	public var d:Float;$/;"	v
d	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		var d = matrix.rawData;$/;"	v
d	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^	public var d:Float;$/;"	v
d	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var d = determinant;$/;"	v
d	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/SharedObject.hx	/^		var d = Serializer.run (data);$/;"	v
d	/usr/lib/haxe/std/Date.hx	/^				var d : Date = __new__(Date);$/;"	v
d	/usr/lib/haxe/std/Date.hx	/^			var d : Date = __new__(Date);$/;"	v
d	/usr/lib/haxe/std/Date.hx	/^			var d = date.getDate();$/;"	v
d	/usr/lib/haxe/std/Date.hx	/^		var d #if !swf_mark : Dynamic #end = Date;$/;"	v
d	/usr/lib/haxe/std/haxe/CallStack.hx	/^				var d = a[i].split("::");$/;"	v
d	/usr/lib/haxe/std/haxe/Serializer.hx	/^				var d : Date = v;$/;"	v
d	/usr/lib/haxe/std/haxe/Unserializer.hx	/^			var d = Date.fromString(buf.substr(pos,19));$/;"	v
d	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^		var d =  271733878;$/;"	v
d	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^		var d = 0x10325476;$/;"	v
d	/usr/lib/haxe/std/haxe/ds/EnumValueMap.hx	/^			var d = compareArg(a1[i], a2[i]);$/;"	v
d	/usr/lib/haxe/std/haxe/ds/EnumValueMap.hx	/^		var d = k1.getIndex() - k2.getIndex();$/;"	v
d	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^				var d = b1.readUnsignedInt() - b2.readUnsignedInt();$/;"	v
d	/usr/lib/haxe/std/haxe/macro/Context.hx	/^		var d = load("defined_value", 1)(untyped key.__s);$/;"	v
d	/usr/lib/haxe/std/haxe/remoting/DelayedConnection.hx	/^		var d = new DelayedConnection(__data,__path.copy());$/;"	v
d	/usr/lib/haxe/std/haxe/unit/TestRunner.hx	/^			var d;$/;"	v
d	/usr/lib/haxe/std/haxe/zip/Huffman.hx	/^		var d = treeDepth(t);$/;"	v
d	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var d = i.readUInt16();$/;"	v
d	/usr/lib/haxe/std/neko/net/Poll.hx	/^	var d : Dynamic;$/;"	v
d	/usr/lib/haxe/std/sys/db/Manager.hx	/^				var d = Reflect.field(x,f);$/;"	v
d	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var d = try makeType(t) catch( e : String ) try makeType(follow(t)) catch( e : String ) error("Unsupported type " + Std.string(t), cond.pos);$/;"	v
d1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^		var d1:Float = B2Math.dot(normal, v1) - offset;$/;"	v
d123_1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^	var d123_1:Float = n123 * B2Math.crossVV(w2, w3);$/;"	v
d123_2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^	var d123_2:Float = n123 * B2Math.crossVV(w3, w1);$/;"	v
d123_3	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^	var d123_3:Float = n123 * B2Math.crossVV(w1, w2);$/;"	v
d12_1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^	var d12_1:Float = (w2.x * e12.x + w2.y * e12.y);$/;"	v
d12_1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^	var d12_1:Float = w2e12;$/;"	v
d12_2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^	var d12_2:Float = -(w1.x * e12.x + w1.y * e12.y);$/;"	v
d12_2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^	var d12_2:Float = -w1e12;$/;"	v
d13_1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^	var d13_1:Float = w3e13;$/;"	v
d13_2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^	var d13_2:Float = -w1e13;$/;"	v
d1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^		var d1X:Float = other.lowerBound.x - upperBound.x;$/;"	v
d1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var d1X:Float = t1.x - t2.x;$/;"	v
d1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJointDef.hx	/^		var d1X:Float = anchorA.x - gaA.x;$/;"	v
d1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^		var d1Y:Float = other.lowerBound.y - upperBound.y;$/;"	v
d1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var d1Y:Float = t1.y - t2.y;$/;"	v
d1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJointDef.hx	/^		var d1Y:Float = anchorA.y - gaA.y;$/;"	v
d2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2WorldManifold.hx	/^				var d2:Float = dX * dX + dY * dY;$/;"	v
d2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^		var d2:Float = B2Math.dot(normal, v2) - offset;$/;"	v
d2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PositionSolverManifold.hx	/^				var d2:Float = dX * dX + dY * dY;$/;"	v
d23_1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^	var d23_1:Float = w3e23;$/;"	v
d23_2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^	var d23_2:Float = -w2e23;$/;"	v
d2X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^		var d2X:Float = lowerBound.x - other.upperBound.x;$/;"	v
d2X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var d2X:Float = t1.x - t2.x;$/;"	v
d2X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJointDef.hx	/^		var d2X:Float = anchorB.x - gaB.x;$/;"	v
d2Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^		var d2Y:Float = lowerBound.y - other.upperBound.y;$/;"	v
d2Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var d2Y:Float = t1.y - t2.y;$/;"	v
d2Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJointDef.hx	/^		var d2Y:Float = anchorB.y - gaB.y;$/;"	v
dA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^			var dA:B2Vec2 = B2Math.mulMV(transformA.R, B2Math.subtractVV(localPointA2, localPointA1));$/;"	v
dB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^			var dB:B2Vec2 = B2Math.mulMV(transformB.R, B2Math.subtractVV(localPointB2, localPointB1));$/;"	v
dLocal1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var dLocal1X:Float = (dX * xf1.R.col1.x + dY * xf1.R.col1.y);$/;"	v
dLocal1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var dLocal1Y:Float = (dX * xf1.R.col2.x + dY * xf1.R.col2.y);$/;"	v
dX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^		var dX:Float = input.p2.x - input.p1.x;$/;"	v
dX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^		var dX:Float = upperBound.x - lowerBound.x;$/;"	v
dX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var dX:Float = p2X - p1X;$/;"	v
dX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var dX:Float = xf2.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);$/;"	v
dX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var dX:Float;$/;"	v
dX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2WorldManifold.hx	/^				var dX:Float = pointBX - pointAX;$/;"	v
dX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^		var dX:Float = transform.position.x + (tMat.col1.x * m_p.x + tMat.col2.x * m_p.y);$/;"	v
dX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^				var dX:Float = p[j].x - root.x;$/;"	v
dX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var dX:Float = p2X - p1X;$/;"	v
dX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^		var dX:Float;$/;"	v
dX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2EdgeAndCircleContact.hx	/^		var dX: Number;$/;"	v
dX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PositionSolverManifold.hx	/^				var dX:Float = pointBX - pointAX;$/;"	v
dX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^		var dX:Float = bB.m_sweep.c.x + r2X - bA.m_sweep.c.x - r1X;$/;"	v
dX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJointDef.hx	/^		var dX:Float = anchorB.x - anchorA.x;$/;"	v
dX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var dX:Float = bB.m_sweep.c.x + r2X - bA.m_sweep.c.x - r1X;$/;"	v
dX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var dX:Float = c2.x + r2X - c1.x - r1X;$/;"	v
dX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var dX:Float = p2.x - p1.x;$/;"	v
dX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var dX:Float = p2X - p1X;$/;"	v
dX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var dX:Float = bB.m_sweep.c.x + r2X - bA.m_sweep.c.x - r1X;$/;"	v
dX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var dX:Float = c2.x + r2X - c1.x - r1X;$/;"	v
dX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var dX:Float = p2.x - p1.x;$/;"	v
dX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var dX:Float = p2X - p1X;$/;"	v
dX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var dX:Float = p.x - sX;$/;"	v
dY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^		var dY:Float = input.p2.y - input.p1.y;$/;"	v
dY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^		var dY:Float = upperBound.y - lowerBound.y;$/;"	v
dY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var dY:Float = p2Y - p1Y;$/;"	v
dY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var dY:Float = xf2.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);$/;"	v
dY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var dY:Float;$/;"	v
dY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2WorldManifold.hx	/^				var dY:Float = pointBY - pointAY;$/;"	v
dY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^		var dY:Float = transform.position.y + (tMat.col1.y * m_p.x + tMat.col2.y * m_p.y);$/;"	v
dY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^				var dY:Float = p[j].y - root.y;$/;"	v
dY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var dY:Float = p2Y - p1Y;$/;"	v
dY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^		var dY:Float;$/;"	v
dY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2EdgeAndCircleContact.hx	/^		var dY: Number;$/;"	v
dY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PositionSolverManifold.hx	/^				var dY:Float = pointBY - pointAY;$/;"	v
dY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^		var dY:Float = bB.m_sweep.c.y + r2Y - bA.m_sweep.c.y - r1Y;$/;"	v
dY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJointDef.hx	/^		var dY:Float = anchorB.y - anchorA.y;$/;"	v
dY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var dY:Float = bB.m_sweep.c.y + r2Y - bA.m_sweep.c.y - r1Y;$/;"	v
dY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var dY:Float = c2.y + r2Y - c1.y - r1Y;$/;"	v
dY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var dY:Float = p2.y - p1.y;$/;"	v
dY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var dY:Float = p2Y - p1Y;$/;"	v
dY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var dY:Float = bB.m_sweep.c.y + r2Y - bA.m_sweep.c.y - r1Y;$/;"	v
dY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var dY:Float = c2.y + r2Y - c1.y - r1Y;$/;"	v
dY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var dY:Float = p2.y - p1.y;$/;"	v
dY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var dY:Float = p2Y - p1Y;$/;"	v
dY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var dY:Float = p.y - sY;$/;"	v
da	/usr/lib/haxe/std/haxe/zip/Huffman.hx	/^			var da = treeDepth(a);$/;"	v
damping	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2TensorDampingController.hx	/^			var damping:B2Vec2 =$/;"	v
dampingRatio	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJointDef.hx	/^	public var dampingRatio:Float;$/;"	v
dampingRatio	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJointDef.hx	/^	public var dampingRatio:Float;$/;"	v
dash	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public var dash (get, set):Array<Float>;$/;"	v
dashCount	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public var dashCount (get, never):Int;$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^		var data = getText ("libraries\/" + name + ".json");$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioBuffer.hx	/^			var data = lime_audio_load (bytes);$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioBuffer.hx	/^			var data = lime_audio_load (path);$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioBuffer.hx	/^	public var data:ByteArray;$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^					var data = Tools.extract32 (png);$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^					var data = new UInt8Array (ByteArray.fromBytes (Bytes.ofData (data.getData ())));$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^				var data = lime_image_load (path);$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^				var data = new BitmapData (newWidth, newHeight, true, 0x00FFFFFF);$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^			var data = lime_image_load (bytes);$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public var data (get, set):UInt8Array;$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ImageBuffer.hx	/^	public var data:UInt8Array;$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/format/BMP.hx	/^		var data = new ByteArray ();$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/format/BMP.hx	/^		var data = new ByteArray (fileHeaderLength + infoHeaderLength + pixelValuesLength);$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/format/PNG.hx	/^				var data = new List ();$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var data = image.buffer.data;$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var data = image.data;$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^		var data = image.buffer.data;$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^		var data = image.data;$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^			var data:ByteArray = cast data;$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^			var data:URLVariables = cast data;$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^	public var data:Dynamic;$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLRequest.hx	/^	public var data:Dynamic;$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Asset.hx	/^	public var data:Dynamic;$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^			var data = new ByteArray (bufferWidth * bufferHeight);$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^			var data = new ByteArray (width * height);$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AssetHelper.hx	/^						var data:HXProject = Unserializer.run (output);$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AssetHelper.hx	/^				var data = {$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AssetHelper.hx	/^		var data = Serializer.run (manifest);$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^		var data:BlackBerryDebugToken = { authorID: "", deviceIDs: new Array<String> () };$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^				var data = null;$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ZipHelper.hx	/^			var data = input.readAll ();$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^			var data = new BytesData (#if java size #end);$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^			var data:Dynamic = data;$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var data:Dynamic = data;$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	private var data:DataView;$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^					var data = bytes.readUTFBytes (bytes.length);$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^		var data = ApplicationMain.urlLoaders.get (path.get (id)).data;$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^					var data = bytes.readUTFBytes (bytes.length);$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^		var data = Preloader.loaders.get (path.get (id)).data;$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^					var data = new haxe.io.BytesBuffer();$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var data = null;$/;"	v
data	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^						var data = Reader.unzip (entry);$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^				var data = new haxe.ds.Vector<T> (this.data.length + 10);$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^				var data = new haxe.ds.Vector<T> (this.length + 10);$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^				var data = new haxe.ds.Vector<T> (value);$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^		var data = new haxe.ds.Vector<T> (this.length);$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public var data:Array<T>;$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public var data:haxe.ds.Vector<T>;$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLCompiler.hx	/^		var data:ByteArray;$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Part.hx	/^	public var data:ByteArray;$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DefaultShader.hx	/^			var data = uniform.textureData;$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var data:Array<GLBucketData>;$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var data:Array<Float> = [];$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^		var data = getText ("libraries\/" + name + ".json");$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var data = new ByteArray (length);$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsPath.hx	/^	public var data (get, set):Array<Float>;$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^				var data = __joyAxisData.get (event.id);$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/SystemEvent.hx	/^	public var data (default, null):Int;$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^	public var data (default, null):Dynamic;$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	public var data:Dynamic;$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequest.hx	/^	public var data:Dynamic;$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/sensors/Accelerometer.hx	/^		var data = lime_input_get_acceleration ();$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^			var data = new BytesData ();$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var data = new BytesData (4);$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var data = new BytesData (8);$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^				var data = __image.buffer.data;$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^			var data = [$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsPath.hx	/^	public var data:Vector<Float>;$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/_shaders/AGLSLShaderUtils.hx	/^		var data:ByteArray = null;$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/DataEvent.hx	/^	public var data:String;$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/SampleDataEvent.hx	/^	public var data:ByteArray;$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/SystemEvent.hx	/^	var data(default, null) : Int;$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/SharedObject.hx	/^		var data = Serializer.run (data);$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/SharedObject.hx	/^	public var data (default, null):Dynamic;$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^			var data:ByteArray = cast data;$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^			var data:URLVariables = cast data;$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^	public var data:Dynamic;$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLRequest.hx	/^	public var data:Dynamic;$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/sensors/Accelerometer.hx	/^		var data = { x: 0, y: 1, z: 0 };$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^		var data = Unserializer.run (Resource.getString(resourceName));$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^		var data = glyph.data;$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	var data:Array<Float>;$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^			var data:Dynamic = data;$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^		var data:Dynamic = data;$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	private var data:DataView;$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^					var data = bytes.readUTFBytes (bytes.length);$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^		var data = ApplicationMain.urlLoaders.get (path.get (id)).data;$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^		var data = Preloader.loaders.get (path.get (id)).data;$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsPathTest.hx	/^		var data = new Vector<Float> ();$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/ByteArrayTest.hx	/^		var data = new ByteArray();$/;"	v
data	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/ByteArrayTest.hx	/^		var data:ByteArray = new ByteArray();$/;"	v
data	/usr/lib/haxe/std/haxe/Http.hx	/^		var data;$/;"	v
data	/usr/lib/haxe/std/haxe/remoting/ExternalConnection.hx	/^		var data = null;$/;"	v
data	/usr/lib/haxe/std/haxe/remoting/FlashJsConnection.hx	/^			var data = flash.external.ExternalInterface.call("haxe.remoting.FlashJsConnection.flashCall",__data.id,__data.name,__path.join("."),params);$/;"	v
data	/usr/lib/haxe/std/haxe/remoting/FlashJsConnection.hx	/^			var data = null;$/;"	v
data	/usr/lib/haxe/std/haxe/remoting/HttpConnection.hx	/^			var data = ctx.call(path,args);$/;"	v
data	/usr/lib/haxe/std/haxe/remoting/HttpConnection.hx	/^		var data = null;$/;"	v
data	/usr/lib/haxe/std/haxe/remoting/SocketConnection.hx	/^			var data = e.data;$/;"	v
data	/usr/lib/haxe/std/haxe/remoting/SocketConnection.hx	/^		var data = {$/;"	v
data	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^		var data = i.readString(len - 3);$/;"	v
data	/usr/lib/haxe/std/haxe/remoting/SyncSocketConnection.hx	/^			var data = proto.readMessage();$/;"	v
data	/usr/lib/haxe/std/haxe/remoting/SyncSocketConnection.hx	/^		var data = __proto.readMessage();$/;"	v
data	/usr/lib/haxe/std/haxe/zip/Entry.hx	/^	var data : Null<haxe.io.Bytes>;$/;"	v
data	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^					var data = new haxe.io.BytesBuffer();$/;"	v
data	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var data = null;$/;"	v
data	/usr/lib/haxe/std/haxe/zip/Tools.hx	/^		var data = haxe.zip.Compress.run( f.data, level );$/;"	v
data	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^		var data : Dynamic = parseOSXConfiguration(xml);$/;"	v
data	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^	var data : ClientData;$/;"	v
data32PerVertex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/VertexBuffer3D.hx	/^	public var data32PerVertex:Int;$/;"	v
dataBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var dataBuffer:GLBuffer;$/;"	v
dataFormat	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^	public var dataFormat (default, set):URLLoaderDataFormat;$/;"	v
dataFormat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	public var dataFormat:URLLoaderDataFormat;$/;"	v
dataFormat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^	public var dataFormat (default, set):URLLoaderDataFormat;$/;"	v
dataIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^		var dataIndex = 0;$/;"	v
dataOffset	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^		var dataOffset = 6 + (16 * images.length);$/;"	v
dataSize	/usr/lib/haxe/std/haxe/zip/Entry.hx	/^	var dataSize : Int;$/;"	v
dataset	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var dataset (default, null):Dynamic<String>;$/;"	v
date	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ZipHelper.hx	/^			var date = Date.now ();$/;"	v
date	/usr/lib/haxe/std/Date.hx	/^			var date : Date = __this__;$/;"	v
date_format	/usr/lib/haxe/std/DateTools.hx	/^	static var date_format = neko.Lib.load("std","date_format",2);$/;"	v
day	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var day = d & 31;$/;"	v
day	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var day = d & 31;$/;"	v
day	/usr/lib/haxe/std/haxe/zip/Writer.hx	/^		var day = date.getDate();$/;"	v
days	/usr/lib/haxe/std/DateTools.hx	/^	public static inline function days( n : Float ) : Float {$/;"	f
db	/usr/lib/haxe/std/haxe/zip/Huffman.hx	/^			var db = treeDepth(b);$/;"	v
dbClass	/usr/lib/haxe/std/sys/db/Manager.hx	/^	public function dbClass() : Class<Dynamic> {$/;"	f
dbInfos	/usr/lib/haxe/std/sys/db/Manager.hx	/^	public function dbInfos() {$/;"	f
dbName	/usr/lib/haxe/std/sys/db/Connection.hx	/^	function dbName() : String;$/;"	f
dbName	/usr/lib/haxe/std/sys/db/TableCreate.hx	/^		var dbName = cnx.dbName();$/;"	v
dbgDraw	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^			var dbgDraw:B2DebugDraw = new B2DebugDraw();$/;"	v
dbgSprite	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^			var dbgSprite:Sprite = new Sprite();$/;"	v
dc	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^		var dc = haxe.rtti.Meta.getType(c);$/;"	v
deblocking	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Video.hx	/^	public var deblocking:Int;$/;"	v
debug	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public var debug:Bool;$/;"	v
debug	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^			var debug = (Sys.getEnv ("OPENFL_LOAD_DEBUG") !=null);$/;"	v
debug	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^			var debug = (get_env ("OPENFL_LOAD_DEBUG") != null);$/;"	v
debug	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	private var debug:Bool;$/;"	v
debug	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private static function debug(s:String)$/;"	f
debug	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^		var debug = (Sys.getEnv ("OPENFL_LOAD_DEBUG") !=null);$/;"	v
debug	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^		var debug = (get_env ("OPENFL_LOAD_DEBUG") != null);$/;"	v
debugDest	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^					var debugDest = projectDirectory + "\/lib\/" + arch + "-debug\/lib" + ndll.name + ".a";$/;"	v
debugDraw	Source/Main.hx	/^		var debugDraw = new B2DebugDraw ();$/;"	v
debugLib	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^					var debugLib = PathHelper.getLibraryPath (ndll, "iPhone", "lib", libExt, true);$/;"	v
debugTokenPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CordovaHelper.hx	/^						var debugTokenPath = PathHelper.tryFullPath (defines.get ("BLACKBERRY_DEBUG_TOKEN"));$/;"	v
debugTokenPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var debugTokenPath:String = null;$/;"	v
decls	/usr/lib/haxe/std/sys/db/TableCreate.hx	/^		var decls = [];$/;"	v
decode	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLVariables.hx	/^	public function decode (inVars:String):Void {$/;"	f
decode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLVariables.hx	/^	public function decode (inVars:String):Void {$/;"	f
decode	/usr/lib/haxe/std/haxe/Utf8.hx	/^	public static function decode( s : String ) : String {$/;"	f
decode	/usr/lib/haxe/std/haxe/crypto/Base64.hx	/^	public static function decode( str : String, complement = true ) : haxe.io.Bytes {$/;"	f
decode	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^	public static function decode( s : String, base : String ) {$/;"	f
decodeAudioData	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/WebAudioContext.hx	/^	public function decodeAudioData (audioData:Dynamic \/*js.html.ArrayBuffer*\/, successCallback:Dynamic \/*AudioBufferCallback*\/, ?errorCallback:Dynamic \/*AudioBufferCallback*\/):Void {}$/;"	f
decodeBytes	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^	public function decodeBytes( b : haxe.io.Bytes ) : haxe.io.Bytes {$/;"	f
decodeChar	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^	function decodeChar(c) : Null<Int> {$/;"	f
decodeString	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^	public function decodeString( s : String ) {$/;"	f
decodedFrames	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/NetStream.hx	/^	public var decodedFrames:Int;$/;"	v
decoderDelay	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var decoderDelay = 529; \/\/ This is a constant delay caused by the Fraunhofer MP3 Decoder used in Flash Player.$/;"	v
decompose	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	public function decompose ():NativeFontData {$/;"	f
decompose	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public function decompose (orientationStyle:Orientation3D = null):Vector<Vector3D> {$/;"	f
decompose	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public function decompose(?orientationStyle:Orientation3D):Vector<Vector3D> {$/;"	f
decrementBy	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	inline public function decrementBy (a:Vector4):Void {$/;"	f
decrementBy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^	inline public function decrementBy (a:Vector3D):Void {$/;"	f
decribeAGALByteArray	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGALTokenizer.hx	/^	public function decribeAGALByteArray (bytes:ByteArray):Description {$/;"	f
deepestSepN	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var deepestSepN: Number = Number.MAX_VALUE; \/\/ the depth of the deepest poly vertex under the end (stored as a separation, so it's negative)$/;"	v
def	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var def:B2FixtureDef = new B2FixtureDef();$/;"	v
default ByteArray endian is BIG_ENDIAN	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	private var littleEndian:Bool = false; \/\/ NOTE: default ByteArray endian is BIG_ENDIAN$/;"	i
defaultApp	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	private var defaultApp:ApplicationData;$/;"	v
defaultFramebuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/RenderSession.hx	/^	public var defaultFramebuffer:GLFramebuffer;$/;"	v
defaultFramebuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	public var defaultFramebuffer:GLFramebuffer;$/;"	v
defaultFramebuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var defaultFramebuffer:GLFramebuffer;$/;"	v
defaultInstallPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^				var defaultInstallPath = "";$/;"	v
defaultInstallPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var defaultInstallPath = "";$/;"	v
defaultInterruptBehavior	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static var defaultInterruptBehavior:String;$/;"	v
defaultInterval	/usr/lib/haxe/lib/openfl/3,0,8/openfl/sensors/Accelerometer.hx	/^	private static var defaultInterval:Int = 34;$/;"	v
defaultLibrary	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	public static var defaultLibrary = "lime";$/;"	v
defaultLibraryName	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	public static var defaultLibraryName = "Lime";$/;"	v
defaultLog	/usr/lib/haxe/std/haxe/remoting/SocketConnection.hx	/^	function defaultLog(path,args,e) {$/;"	f
defaultMeta	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	private var defaultMeta:MetaData;$/;"	v
defaultRatio	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Tilesheet.hx	/^	static private var defaultRatio:Point = new Point(0, 0);$/;"	v
defaultShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^	public var defaultShader:DefaultShader;$/;"	v
defaultShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/ShaderManager.hx	/^	public var defaultShader:DefaultShader;$/;"	v
defaultTextFormat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public var defaultTextFormat (get, set):TextFormat;$/;"	v
defaultTextFormat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var defaultTextFormat (get, set):TextFormat;$/;"	v
defaultTrue	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	static function defaultTrue( e : Expr ) {$/;"	f
defaultValue	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexAttribute.hx	/^	public var defaultValue:Float32Array;$/;"	v
defaultVertexSrc	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DefaultShader.hx	/^	public static var defaultVertexSrc = [$/;"	v
defaultWindow	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	private var defaultWindow:WindowData;$/;"	v
defaultsampler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Context3D.hx	/^	public static var defaultsampler = new Sampler ();$/;"	v
define	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^	public static function define( flag : String, ?value : String ) untyped {$/;"	f
defineModule	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function defineModule( modulePath : String, types : Array<TypeDefinition> ) : Void {$/;"	f
defineType	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function defineType( t : TypeDefinition ) : Void {$/;"	f
defined	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function defined( s : String ) : Bool {$/;"	f
definedValue	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function definedValue( key : String ) : String {$/;"	f
defines	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^			var defines = StringMapHelper.copy (userDefines);$/;"	v
defines	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public var defines:Map <String, Dynamic>;$/;"	v
defines	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^	private static var defines:Map <String, String>;$/;"	v
defines	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CPPHelper.hx	/^				var defines = StringMapHelper.copy (project.defines);$/;"	v
defines	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CordovaHelper.hx	/^	private static var defines:Map <String, String>;$/;"	v
defines	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^					var defines = new Map <String, Dynamic> ();$/;"	v
defines	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^			var defines = new Map <String, Dynamic> ();$/;"	v
defines	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^		var defines = new Map <String, Dynamic> ();$/;"	v
defines	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^					var defines = getDefines ();$/;"	v
defines	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^				var defines = getDefines (names, descriptions);$/;"	v
defines	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var defines = getDefines ();$/;"	v
defines	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var defines = getDefines ([ "BLACKBERRY_SIMULATOR_IP" ], [ "Simulator IP address" ]);$/;"	v
defines	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var defines = getDefines ([ "BLACKBERRY_WEBWORKS_SDK" ], [ "Path to BlackBerry WebWorks SDK" ]);$/;"	v
defines	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var defines = getDefines ();$/;"	v
defines	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var defines = getDefines ([ "BLACKBERRY_NDK_ROOT" ], [ "Path to BlackBerry Native SDK" ]);$/;"	v
defines	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var defines = getDefines ([ "EMSCRIPTEN_SDK" ], [ "Path to Emscripten SDK" ]);$/;"	v
defines	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var defines = getDefines ([ "TIZEN_SDK" ], [ "Path to Tizen SDK" ]);$/;"	v
defines	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var defines = getDefines (requiredVariables, requiredVariableDescriptions, ignoreValues);$/;"	v
defines	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var defines = getDefines (requiredVariables, requiredVariableDescriptions, null);$/;"	v
defines	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var defines = new Map <String, Dynamic> ();$/;"	v
defines	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var defines = null;$/;"	v
defines	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var defines = project.defines;$/;"	v
definesText	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var definesText = "";$/;"	v
deflate	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function deflate():Void {$/;"	f
deflate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function deflate():Void {$/;"	f
defplat	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	function defplat() {$/;"	f
del_object_caption	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Main.hx	/^		var del_object_caption:TextField = new TextField();$/;"	v
delay	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^	public static function delay (f:Void -> Void, time:Int) {$/;"	f
delay	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^	public static function delay( f : Void -> Void, time_ms : Int ) {$/;"	f
delay	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^	public static function delay (f:Void -> Void, time:Int) {$/;"	f
delay	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^	public static function delay( f : Void -> Void, time_ms : Int ) {$/;"	f
delay	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Timer.hx	/^	public var delay (get, set):Float;$/;"	v
delay	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/Timer.hx	/^	public var delay (get, set):Float;$/;"	v
delay	/usr/lib/haxe/std/haxe/Timer.hx	/^	public static function delay( f : Void -> Void, time_ms : Int ) {$/;"	f
delete	/usr/lib/haxe/std/sys/db/Object.hx	/^	public function delete() {$/;"	f
deleteBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function deleteBuffer (buffer:Int):Void {$/;"	f
deleteBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function deleteBuffer (buffer:Int):Void {$/;"	f
deleteBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function deleteBuffer (buffer:GLBuffer):Void;$/;"	f
deleteBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function deleteBuffer (buffer:GLBuffer):Void {$/;"	f
deleteBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function deleteBuffer (buffer:GLBuffer):Void {$/;"	f
deleteBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function deleteBuffer(buffer:GLBuffer):Void $/;"	f
deleteBuffer	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function deleteBuffer(buffer:GLBuffer):Void;$/;"	f
deleteBuffers	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function deleteBuffers (buffers:Array<Int>):Void {$/;"	f
deleteBuffers	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function deleteBuffers (buffers:Array<Int>):Void {$/;"	f
deleteDirectory	/usr/lib/haxe/std/sys/FileSystem.hx	/^	static function deleteDirectory( path : String ) : Void;$/;"	f
deleteField	/usr/lib/haxe/std/Reflect.hx	/^	public static function deleteField( o : Dynamic, field : String ) : Bool;$/;"	f
deleteFile	/usr/lib/haxe/std/sys/FileSystem.hx	/^	static function deleteFile( path : String ) : Void;$/;"	f
deleteFramebuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function deleteFramebuffer (framebuffer:GLFramebuffer):Void;$/;"	f
deleteFramebuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function deleteFramebuffer (framebuffer:GLFramebuffer):Void {$/;"	f
deleteFramebuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function deleteFramebuffer (framebuffer:GLFramebuffer):Void {$/;"	f
deleteFramebuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function deleteFramebuffer(framebuffer:GLFramebuffer):Void $/;"	f
deleteFramebuffer	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function deleteFramebuffer(framebuffer:GLFramebuffer):Void;$/;"	f
deleteProgram	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function deleteProgram (program:GLProgram):Void;$/;"	f
deleteProgram	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function deleteProgram (program:GLProgram):Void {$/;"	f
deleteProgram	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function deleteProgram (program:GLProgram):Void {$/;"	f
deleteProgram	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function deleteProgram(program:GLProgram):Void $/;"	f
deleteProgram	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function deleteProgram(program:GLProgram):Void;$/;"	f
deleteRenderbuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function deleteRenderbuffer (renderbuffer:GLRenderbuffer):Void;$/;"	f
deleteRenderbuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function deleteRenderbuffer (renderbuffer:GLRenderbuffer):Void {$/;"	f
deleteRenderbuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function deleteRenderbuffer (renderbuffer:GLRenderbuffer):Void {$/;"	f
deleteRenderbuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static function deleteRenderbuffer(renderbuffer:GLRenderbuffer):Void $/;"	f
deleteRenderbuffer	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function deleteRenderbuffer(renderbuffer:GLRenderbuffer):Void;$/;"	f
deleteShader	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function deleteShader (shader:GLShader):Void;$/;"	f
deleteShader	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function deleteShader (shader:GLShader):Void {$/;"	f
deleteShader	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function deleteShader (shader:GLShader):Void {$/;"	f
deleteShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function deleteShader(shader:GLShader):Void $/;"	f
deleteShader	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function deleteShader(shader:GLShader):Void;$/;"	f
deleteSource	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function deleteSource (source:Int):Void {$/;"	f
deleteSource	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function deleteSource (source:Int):Void {$/;"	f
deleteSources	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function deleteSources (sources:Array<Int>):Void {$/;"	f
deleteSources	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function deleteSources (sources:Array<Int>):Void {$/;"	f
deleteTexture	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function deleteTexture (texture:GLTexture):Void;$/;"	f
deleteTexture	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function deleteTexture (texture:GLTexture):Void {$/;"	f
deleteTexture	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function deleteTexture (texture:GLTexture):Void {$/;"	f
deleteTexture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function deleteTexture(texture:GLTexture):Void $/;"	f
deleteTexture	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function deleteTexture(texture:GLTexture):Void;$/;"	f
delta	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public var delta:Int;$/;"	v
delta	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^		var delta = Std.int (deltaY);$/;"	v
delta	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public var delta:Int;$/;"	v
delta	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TouchEvent.hx	/^	public var delta:Int;$/;"	v
delta	/usr/lib/haxe/std/DateTools.hx	/^	public static inline function delta( d : Date, t : Float ) : Date {$/;"	f
deltaTime	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashApplication.hx	/^		var deltaTime = currentTime - cacheTime;$/;"	v
deltaTime	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Application.hx	/^	private var deltaTime:Float;$/;"	v
deltaTime	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public var deltaTime:Int;$/;"	v
deltaTransformPoint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^	public function deltaTransformPoint (point:Point):Point {$/;"	f
deltaTransformPoint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^	public function deltaTransformPoint (point:Point):Point {$/;"	f
deltaTransformVector	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public function deltaTransformVector( v:Vector4 ):Vector4 {$/;"	f
deltaTransformVector	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public function deltaTransformVector( v:Vector3D ):Vector3D {$/;"	f
deltaTransformVector2	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public function deltaTransformVector2 (Vector2:Vector2):Vector2 {$/;"	f
denom	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^			var denom:Float = a * e-b * b;$/;"	v
denom	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^		var denom: Float = -(rX * nX + rY * nY);$/;"	v
denom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var denom:Float;$/;"	v
denom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var denom:Float;$/;"	v
denom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var denom:Float, pdist:Float, dist:Float;$/;"	v
denominator	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var denominator:Float = (tVec.x * dX + tVec.y * dY);$/;"	v
density	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2FixtureDef.hx	/^	public var density:Float;$/;"	v
density	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^	public var density:Float;$/;"	v
dependencies	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public var dependencies:Array <Dependency>;$/;"	v
dependencyName	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^						var dependencyName = output.substring (start, end);$/;"	v
depends on S3D hardware implementation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^				\/\/ TODO: depends on S3D hardware implementation$/;"	i
deploy	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^	public static function deploy (project:HXProject, workingDirectory:String, targetPath:String, run:Bool = true):Void {$/;"	f
deploy	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/DeploymentHelper.hx	/^	public static function deploy (project:HXProject, targetFlags:Map <String, String>, targetDirectory:String, targetName:String) {$/;"	f
deploy	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^	public override function deploy ():Void {$/;"	f
deploy	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/BlackBerryPlatform.hx	/^	public override function deploy ():Void {$/;"	f
deploy	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/EmscriptenPlatform.hx	/^	public override function deploy ():Void {$/;"	f
deploy	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FirefoxPlatform.hx	/^	public override function deploy ():Void {$/;"	f
deploy	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FlashPlatform.hx	/^	public override function deploy ():Void {$/;"	f
deploy	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/HTML5Platform.hx	/^	public override function deploy ():Void {$/;"	f
deploy	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^	public override function deploy ():Void {$/;"	f
deploy	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^	public override function deploy ():Void {$/;"	f
deploy	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/MacPlatform.hx	/^	public override function deploy ():Void {$/;"	f
deploy	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/TizenPlatform.hx	/^	public override function deploy ():Void {$/;"	f
deploy	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WebOSPlatform.hx	/^	public override function deploy ():Void {$/;"	f
deploy	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WindowsPlatform.hx	/^	public override function deploy ():Void {$/;"	f
deployment	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^								var deployment = Std.parseFloat (substitute (element.att.deployment));$/;"	v
depth	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ConsoleRenderContext.hx	/^	private var depth = 0.0;$/;"	v
depthFunc	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function depthFunc (func:Int):Void;$/;"	f
depthFunc	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function depthFunc (func:Int):Void {$/;"	f
depthFunc	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function depthFunc (func:Int):Void {$/;"	f
depthFunc	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function depthFunc(func:Int):Void $/;"	f
depthFunc	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function depthFunc(func:Int):Void;$/;"	f
depthMask	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function depthMask (flag:Bool):Void;$/;"	f
depthMask	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function depthMask (flag:Bool):Void {$/;"	f
depthMask	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function depthMask (flag:Bool):Void {$/;"	f
depthMask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function depthMask(flag:Bool):Void $/;"	f
depthMask	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function depthMask(flag:Bool):Void;$/;"	f
depthRange	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function depthRange (zNear:Float, zFar:Float):Void;$/;"	f
depthRange	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function depthRange (zNear:Float, zFar:Float):Void {$/;"	f
depthRange	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function depthRange (zNear:Float, zFar:Float):Void {$/;"	f
depthRange	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function depthRange(zNear:Float, zFar:Float):Void $/;"	f
depthRange	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function depthRange(zNear:Float, zFar:Float):Void;$/;"	f
depths	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var depths:Array <Float> = new Array <Float>();$/;"	v
deque_add	/usr/lib/haxe/std/neko/vm/Deque.hx	/^	static var deque_add = neko.Lib.loadLazy("std","deque_add",2);$/;"	v
deque_create	/usr/lib/haxe/std/neko/vm/Deque.hx	/^	static var deque_create = neko.Lib.loadLazy("std","deque_create",0);$/;"	v
deque_pop	/usr/lib/haxe/std/neko/vm/Deque.hx	/^	static var deque_pop = neko.Lib.loadLazy("std","deque_pop",2);$/;"	v
deque_push	/usr/lib/haxe/std/neko/vm/Deque.hx	/^	static var deque_push = neko.Lib.loadLazy("std","deque_push",2);$/;"	v
desc	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGALTokenizer.hx	/^		var desc = new Description();$/;"	v
desc	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Reg.hx	/^	public var desc:String;$/;"	v
desc_ref	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^			var desc_ref = src.readUInt16();$/;"	v
descend	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	var descend:Int;$/;"	v
descend	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	var descend: Int;$/;"	v
descender	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	public var descender (get, null):Int;$/;"	v
descender	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^		var descender = CairoTextField.getLineMetric (this, lineIndex, DESCENDER);$/;"	v
descender	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^		var descender = lineHeight * 0.2;$/;"	v
descent	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^			var descent = -Math.ceil (font.descend * swf_em \/ font.em_size);$/;"	v
descent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/AbstractFont.hx	/^	private var descent:Int;$/;"	v
descent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextLineMetrics.hx	/^	public var descent:Float;$/;"	v
descent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	var descent:Float;$/;"	v
descent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextLineMetrics.hx	/^	public var descent:Float;$/;"	v
description	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var description = descriptions[i];$/;"	v
description	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLCompiler.hx	/^		var description:Description = tokenizer.decribeAGALByteArray (data);$/;"	v
descriptions	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^					var descriptions:Array<String> = [];$/;"	v
descriptions	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^				var descriptions:Array<String> = [];$/;"	v
desktopDirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	public static var desktopDirectory (get, null):String;$/;"	v
desktopDirectory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/File.hx	/^	public static var desktopDirectory (get, null):File;$/;"	v
desktopDirectory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/SystemPath.hx	/^	public static var desktopDirectory (get, null):String;$/;"	v
dest	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/OpLUT.hx	/^	public var dest:Bool;$/;"	v
dest	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Token.hx	/^	public var dest:Destination;$/;"	v
dest	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Opcode.hx	/^	public var dest:String;$/;"	v
destAlpha	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^				var destAlpha:Float;$/;"	v
destChannel	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var destChannel = switch (destChannel) {$/;"	v
destData	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var destData = image.buffer.data;$/;"	v
destData	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^		var destData = image.buffer.data;$/;"	v
destIdx	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^		var destIdx = switch (destChannel) {$/;"	v
destPixels	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var destPixels = getPixels (destRect);$/;"	v
destPosition	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var destPosition = Std.int (((destPoint.x + image.offsetX) * 4) + (destStride * (destPoint.y + image.offsetY)) + destIdx);$/;"	v
destRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var destRect = new Rectangle (destPoint.x, destPoint.y, sw, sh);$/;"	v
destRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var destRect = new Rectangle (destPoint.x, destPoint.y, sw, sh);$/;"	v
destRowEnd	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var destRowEnd = Std.int (4 * (destPoint.x + image.offsetX + sourceRect.width));$/;"	v
destRowOffset	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var destRowOffset = destStride - Std.int (4 * (sourceRect.width + image.offsetX));$/;"	v
destStride	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var destStride = Std.int (image.buffer.width * 4);$/;"	v
destcaststring	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLParser.hx	/^				var destcaststring:String;$/;"	v
destination	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/WebAudioContext.hx	/^	public var destination (default, null):Dynamic \/*AudioDestinationNode*\/;$/;"	v
destination	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^		var destination = project.app.path + "\/flash\/obj";$/;"	v
destination	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^		var destination = targetDirectory + "\/bin";$/;"	v
destination	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^		var destination = targetDirectory + "\/bin\/";$/;"	v
destination	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/BlackBerryPlatform.hx	/^			var destination = targetDirectory + "\/bin\/";$/;"	v
destination	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/BlackBerryPlatform.hx	/^		var destination = targetDirectory + "\/bin\/";$/;"	v
destination	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/EmscriptenPlatform.hx	/^		var destination = targetDirectory + "\/bin\/";$/;"	v
destination	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FirefoxPlatform.hx	/^		var destination = targetDirectory + "\/bin\/";$/;"	v
destination	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FlashPlatform.hx	/^			var destination = targetDirectory + "\/bin";$/;"	v
destination	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FlashPlatform.hx	/^		var destination = targetDirectory + "\/bin";$/;"	v
destination	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FlashPlatform.hx	/^		var destination = targetDirectory + "\/bin\/";$/;"	v
destination	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/HTML5Platform.hx	/^		var destination = targetDirectory + "\/bin\/";$/;"	v
destination	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^		var destination = buildDirectory + "\/ios";$/;"	v
destination	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/TizenPlatform.hx	/^		var destination = targetDirectory + "\/bin\/";$/;"	v
destination	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WebOSPlatform.hx	/^		var destination = targetDirectory + "\/bin\/";$/;"	v
destination	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var destination = outputDirectory + "\/dist\/" + packagedFile;$/;"	v
destmaskstring	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLParser.hx	/^				var destmaskstring:String;$/;"	v
destregstring	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLParser.hx	/^				var destregstring:String;$/;"	v
destroy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^	public function destroy(c:B2Contact) : Void$/;"	f
destroy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public function destroy():Void$/;"	f
destroy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2CircleContact.hx	/^	static public function destroy(contact:B2Contact, allocator:Dynamic) : Void{$/;"	f
destroy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactFactory.hx	/^	public function destroy(contact:B2Contact) : Void{$/;"	f
destroy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2EdgeAndCircleContact.hx	/^	static public function destroy(contact:B2Contact, allocator:Dynamic) : Void{$/;"	f
destroy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndCircleContact.hx	/^	static public function destroy(contact:B2Contact, allocator:Dynamic): Void{$/;"	f
destroy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^	static public function destroy(contact:B2Contact, allocator:Dynamic): Void{$/;"	f
destroy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolygonContact.hx	/^	static public function destroy(contact:B2Contact, allocator:Dynamic): Void{$/;"	f
destroy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	static public function destroy(joint:B2Joint, allocator:Dynamic) : Void{$/;"	f
destroy	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function destroy ():Void {$/;"	f
destroy	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFont.hx	/^	public function destroy() {$/;"	f
destroy	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoPattern.hx	/^	public function destroy ():Void {$/;"	f
destroy	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoSurface.hx	/^	public function destroy ():Void {$/;"	f
destroy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	public function destroy ():Void {$/;"	f
destroy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/AbstractShader.hx	/^	public function destroy ():Void {$/;"	f
destroy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/Shader.hx	/^	public function destroy() {$/;"	f
destroy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/BlendModeManager.hx	/^	public function destroy ():Void {$/;"	f
destroy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^	public function destroy ():Void {$/;"	f
destroy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterTexture.hx	/^	public function destroy ():Void {$/;"	f
destroy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GLMaskManager.hx	/^	public function destroy () {$/;"	f
destroy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GLMaskManager.hx	/^	public function destroy ():Void {$/;"	f
destroy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/ShaderManager.hx	/^	public function destroy ():Void {$/;"	f
destroy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	public function destroy() {$/;"	f
destroy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^	public function destroy ():Void {$/;"	f
destroy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexArray.hx	/^	public function destroy() {$/;"	f
destroyBody	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function destroyBody(b:B2Body) : Void{$/;"	f
destroyContext	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public function destroyContext (context:ALContext):Void {$/;"	f
destroyContext	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static function destroyContext (context:ALContext):Void {$/;"	f
destroyController	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function destroyController(controller:B2Controller):Void$/;"	f
destroyFcn	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactFactory.hx	/^		var destroyFcn:Dynamic = reg.destroyFcn;$/;"	v
destroyFcn	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactRegister.hx	/^	public var destroyFcn:Dynamic;\/\/ fcn pointer$/;"	v
destroyHardwareSurface	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function destroyHardwareSurface ():Void {$/;"	f
destroyJoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function destroyJoint(j:B2Joint) : Void{$/;"	f
destroyProxy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^	public function destroyProxy(proxy:B2DynamicTreeNode):Void$/;"	f
destroyProxy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^	public function destroyProxy(proxy:Dynamic):Void$/;"	f
destroyProxy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/IBroadPhase.hx	/^	function destroyProxy(proxy:Dynamic):Void;$/;"	f
destroyProxy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public function destroyProxy(broadPhase:IBroadPhase):Void {$/;"	f
det	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat22.hx	/^		var det:Float = a * d - b * c;$/;"	v
det	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat22.hx	/^		var det:Float = a11 * a22 - a12 * a21;$/;"	v
det	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat33.hx	/^		var det:Float = 	a11 * (a22 * a33 - a32 * a23) +$/;"	v
det	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat33.hx	/^		var det:Float = a11 * a22 - a12 * a21;$/;"	v
detachShader	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function detachShader (program:GLProgram, shader:GLShader):Void;$/;"	f
detachShader	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function detachShader (program:GLProgram, shader:GLShader):Void {$/;"	f
detachShader	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function detachShader (program:GLProgram, shader:GLShader):Void {$/;"	f
detachShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function detachShader(program:GLProgram, shader:GLShader):Void $/;"	f
detachShader	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function detachShader(program:GLProgram, shader:GLShader):Void;$/;"	f
details	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^			var details = Font.load (__fontPath);$/;"	v
details	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^		var details = loadBytes (bytes);$/;"	v
detect	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^	public static function detect() {$/;"	f
detectAll	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^	static function detectAll() : ProxySettings {$/;"	f
detectFF	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^	static function detectFF( basedir : String ) {$/;"	f
detectIE	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^	static function detectIE() {$/;"	f
detectOSX	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^	static function detectOSX() {$/;"	f
determinant	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public var determinant (get, never):Float;$/;"	v
determinant	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public var determinant (get, null):Float;$/;"	v
dev	/usr/lib/haxe/std/sys/FileStat.hx	/^	var dev : Int;$/;"	v
devServer	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var devServer = project.targetFlags.exists ("dev");$/;"	v
devUrlApp	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^			var devUrlApp = baseUrl + '\/developers\/app\/$appSlug\/';$/;"	v
dev_path	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^			var dev_path = project.environment.get("DEVELOPER_DIR") + "\/Platforms\/iPhoneOS.platform\/Developer\/SDKs";$/;"	v
developer_dir	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^				var developer_dir = proc.stdout.readLine();$/;"	v
device	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioManager.hx	/^						var device = alc.getContextsDevice (currentContext);$/;"	v
device	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioManager.hx	/^					var device = ALC.openDevice ();$/;"	v
device	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/BlackBerryPlatform.hx	/^		var device = (command == "rebuild" || !targetFlags.exists ("simulator"));$/;"	v
device	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/TizenPlatform.hx	/^		var device = (command == "rebuild" || !targetFlags.exists ("simulator"));$/;"	v
device	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/GameInputEvent.hx	/^	public var device (default, null):GameInputDevice;$/;"	v
device	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/JoystickEvent.hx	/^	public var device:Int;$/;"	v
device	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInput.hx	/^		var device = __devices.get (gamepad);$/;"	v
device	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInput.hx	/^		var device = new GameInputDevice (gamepad.guid, gamepad.name);$/;"	v
device	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInputControl.hx	/^	public var device (default, null):GameInputDevice;$/;"	v
deviceID	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^	private var deviceID:String;$/;"	v
deviceID	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/System.hx	/^	public static var deviceID (get, null):String;$/;"	v
deviceIDs	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^					var deviceIDs = StringTools.trim (ret.substr (start, ret.indexOf ("\\n", index) - start)).split (",");$/;"	v
deviceIDs	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^	var deviceIDs:Array<String>;$/;"	v
deviceIDs	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^					var deviceIDs = [];$/;"	v
deviceIP	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^		var deviceIP = project.environment.get ("BLACKBERRY_DEVICE_IP");$/;"	v
deviceLib	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/BlackBerryPlatform.hx	/^				var deviceLib = ndll.name + ".so";$/;"	v
devicePassword	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^		var devicePassword = project.environment.get ("BLACKBERRY_DEVICE_PASSWORD");$/;"	v
devices	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^			var devices = listDevices ();$/;"	v
devices	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^		var devices = listDevices ();$/;"	v
devices	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^		var devices = new Array <String> ();$/;"	v
devices	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Gamepad.hx	/^	public static var devices = new Map<Int, Gamepad> ();$/;"	v
df	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^			var df:B2Vec2 = m_K.solve(new B2Vec2(), -Cdot1, -Cdot2);$/;"	v
df	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^			var df:B2Vec3 = m_K.solve33(new B2Vec3(), -Cdot1X, -Cdot1Y, -Cdot2);$/;"	v
df2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^			var df2:Float;$/;"	v
df2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^			var df2:B2Vec2 = m_K.solve22(new B2Vec2(), -Cdot1X, -Cdot1Y);$/;"	v
dh	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^			var dh:Int = (bw < 0) ? sh + (height - sh - dy) : sh;$/;"	v
dh	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^			var dh:Int = (bw < 0) ? sh + (height - sh - dy) : sh;$/;"	v
dh	/usr/lib/haxe/std/sys/net/Address.hx	/^		var dh = a.host - host;$/;"	v
diff	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^			var diff = n2 - n1;$/;"	v
differenceX	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/PointTest.hx	/^		var differenceX = 100 - 20;$/;"	v
differenceY	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/PointTest.hx	/^		var differenceY = 20 - 10;$/;"	v
digestAuth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequest.hx	/^	public function digestAuth (user:String, password:String):Void {$/;"	f
dim	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Destination.hx	/^	public var dim:Int;$/;"	v
dim	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Sampler.hx	/^	public var dim:Float;$/;"	v
dimension	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		var dimension = 4;$/;"	v
dimensions	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DefaultShader.hx	/^	public var dimensions:GLUniformLocation;$/;"	v
dimensions	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/FastShader.hx	/^	public var dimensions:GLUniformLocation;$/;"	v
dir	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var dir:String;$/;"	v
dir	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var dir = at.subtract(pos);$/;"	v
dir	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^								var dir = Path.directory (path);$/;"	v
dir	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^			var dir = "stubs";$/;"	v
dir	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var dir = outputBase;$/;"	v
dir	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var dir = at.subtract(pos);$/;"	v
dir	/usr/lib/haxe/std/haxe/io/Path.hx	/^	public var dir : String;$/;"	v
dir	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^		var dir = Sys.getEnv("TMP");$/;"	v
dir2	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var dir2 = dir.clone ();$/;"	v
dir2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var dir2 = dir.clone ();$/;"	v
dirDist	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2EdgeAndCircleContact.hx	/^		var dirDist: Number = (cLocalX - v1.x) * edge.m_direction.x +$/;"	v
dirProj1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var dirProj1: Number = tX * (tVec1.x - v1LocalX) + tY * (tVec1.y - v1LocalY);$/;"	v
dirProj2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var dirProj2: Number;$/;"	v
dir_parts	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^			var dir_parts = parts.slice(0, parts.length - 1);$/;"	v
dir_parts	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var dir_parts = parts.slice(0,parts.length-1);$/;"	v
directRenderer	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DirectRendererTest.hx	/^		var directRenderer = new DirectRenderer ();$/;"	v
direction	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextLayout.hx	/^	public var direction (get, set):TextDirection;$/;"	v
directories	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^			var directories = 0;$/;"	v
directory	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URIParser.hx	/^	public var directory:String;$/;"	v
directory	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^		var directory = process.stdout.readLine ();$/;"	v
directory	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ZipHelper.hx	/^		var directory = PathHelper.combine (basePath, path);$/;"	v
directory	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^					var directory = platformsDirectory + "\/" + path;$/;"	v
directory	/usr/lib/haxe/std/haxe/io/Path.hx	/^	public static function directory( path ) {$/;"	f
directoryName	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CordovaHelper.hx	/^				var directoryName = "Release";$/;"	v
directoryName	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^						var directoryName = "";$/;"	v
dirs	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^					var dirs = ~\/[\\\/\\\\]\/g.split(fileName);$/;"	v
dirty	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public var dirty:Bool;$/;"	v
dirty	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var dirty = graphics.__dirty;$/;"	v
dirty	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var dirty:Bool = true;$/;"	v
dirty	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var dirty:Bool;$/;"	v
dirty	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	var dirty:Bool = true;$/;"	v
disable	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function disable (capability:Int):Void {$/;"	f
disable	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function disable (capability:Int):Void {$/;"	f
disable	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function disable (cap:Int):Void;$/;"	f
disable	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function disable (cap:Int):Void {$/;"	f
disable	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function disable (cap:Int):Void {$/;"	f
disable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function disable(cap:Int):Void $/;"	f
disable	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function disable(cap:Int):Void;$/;"	f
disableAVM1Loading	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Security.hx	/^	public static var disableAVM1Loading:Bool;$/;"	v
disableCFFI	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^		var disableCFFI = true;$/;"	v
disableCFFI	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	public static var disableCFFI:Bool;$/;"	v
disableInputMode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^	public static function disableInputMode (textField:TextField):Void {$/;"	f
disableVertexAttribArray	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function disableVertexAttribArray (index:Int):Void;$/;"	f
disableVertexAttribArray	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function disableVertexAttribArray (index:Int):Void {$/;"	f
disableVertexAttribArray	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function disableVertexAttribArray (index:Int):Void {$/;"	f
disableVertexAttribArray	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function disableVertexAttribArray(index:Int):Void $/;"	f
disableVertexAttribArray	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function disableVertexAttribArray(index:Int):Void;$/;"	f
disableVertexAttribute	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/Shader.hx	/^	public function disableVertexAttribute(attribute:VertexAttribute, setDefault:Bool = true) {$/;"	f
dispatch	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeRenderer.hx	/^	private function dispatch ():Void {$/;"	f
dispatchEvent	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function dispatchEvent (event:Dynamic \/*Event*\/):Bool { return false; };$/;"	f
dispatchEvent	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function dispatchEvent (event:Dynamic \/*Event*\/):Bool { return false; };$/;"	f
dispatchEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public static function dispatchEvent (event:Event):Bool {$/;"	f
dispatchEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public static function dispatchEvent (event:Event):Bool {$/;"	f
dispatchEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	override public function dispatchEvent (event:Event):Bool {$/;"	f
dispatchEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/EventDispatcher.hx	/^	public function dispatchEvent (event:Event):Bool {$/;"	f
dispatchEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/IEventDispatcher.hx	/^	public function dispatchEvent (event:Event):Bool;$/;"	f
dispatchEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	public override function dispatchEvent (event:Event):Bool {$/;"	f
dispatchEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/EventDispatcher.hx	/^	public function dispatchEvent (event:Event):Bool {$/;"	f
dispatchEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/IEventDispatcher.hx	/^	public function dispatchEvent (event:Event):Bool;$/;"	f
dispatchEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public function dispatchEvent (eventObj:Dynamic, ?target:Dynamic):Bool;$/;"	f
dispatchEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static function dispatchEvent (eventObj:Dynamic, ?target:Dynamic):Bool;$/;"	f
dispatchHTTPStatus	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	private function dispatchHTTPStatus (code:Int):Void {$/;"	f
dispatcher	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	private static var dispatcher = new EventDispatcher ();$/;"	v
dispatcher	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	private static var dispatcher = new EventDispatcher ();$/;"	v
dispatcher	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventDispatcherTest.hx	/^		var dispatcher = new EventDispatcher ();$/;"	v
dispatcher2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventDispatcherTest.hx	/^		var dispatcher2 = new EventDispatcher (dispatcher);$/;"	v
displacement	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^		var displacement:B2Vec2 = B2Math.subtractVV(transform2.position, transform1.position);$/;"	v
display	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^	public override function display ():Void {$/;"	f
display	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/BlackBerryPlatform.hx	/^	public override function display ():Void {$/;"	f
display	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/EmscriptenPlatform.hx	/^	public override function display ():Void {$/;"	f
display	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FlashPlatform.hx	/^	public override function display ():Void {$/;"	f
display	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/HTML5Platform.hx	/^	public override function display ():Void {$/;"	f
display	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^	public override function display ():Void {$/;"	f
display	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^	public override function display ():Void {$/;"	f
display	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/MacPlatform.hx	/^	public override function display ():Void {$/;"	f
display	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/TizenPlatform.hx	/^	public override function display ():Void {$/;"	f
display	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WebOSPlatform.hx	/^	public override function display ():Void {$/;"	f
display	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WindowsPlatform.hx	/^	public override function display ():Void {$/;"	f
display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextFormat.hx	/^	public var display:String;$/;"	v
display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Preloader.hx	/^	private var display:Sprite;$/;"	v
display	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/ApplicationMain.hx	/^		var display = ::if (PRELOADER_NAME != "")::new ::PRELOADER_NAME:: ()::else::new NMEPreloader ()::end::;$/;"	v
display	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^		var display = ::if (PRELOADER_NAME != "")::new ::PRELOADER_NAME:: ()::else::new NMEPreloader ()::end::;$/;"	v
displayAsPassword	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public var displayAsPassword (get, set):Bool;$/;"	v
displayAsPassword	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var displayAsPassword:Bool;$/;"	v
displayComplete	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Preloader.hx	/^	private var displayComplete:Bool;$/;"	v
displayHelp	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	private function displayHelp ():Void {$/;"	f
displayInfo	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	private function displayInfo (showHint:Bool = false):Void {$/;"	f
displayState	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public var displayState (get, set):StageDisplayState;$/;"	v
displayState	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public var displayState (get, set):StageDisplayState;$/;"	v
dispose	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioBuffer.hx	/^	public function dispose ():Void {$/;"	f
dispose	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^	public function dispose ():Void {$/;"	f
dispose	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function dispose ():Void {$/;"	f
dispose	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DirectRenderer.hx	/^	public function dispose ():Void {$/;"	f
dispose	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function dispose ():Void {$/;"	f
dispose	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function dispose ():Void {$/;"	f
dispose	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/IndexBuffer3D.hx	/^	public function dispose ():Void {$/;"	f
dispose	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Program3D.hx	/^	public function dispose ():Void {$/;"	f
dispose	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/VertexBuffer3D.hx	/^	public function dispose ():Void {$/;"	f
dispose	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/TextureBase.hx	/^	public function dispose ():Void {$/;"	f
disposed	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	private var disposed:Bool;$/;"	v
dist	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var dist:Float;$/;"	v
dist	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	var dist : Int;$/;"	v
distSqr	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var distSqr:Float = dX * dX + dY * dY;$/;"	v
distSqr	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2EdgeAndCircleContact.hx	/^			var distSqr: Number = dX * dX + dY * dY;$/;"	v
dist_code	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^				var dist_code = if( huffdist == null ) getRevBits(5) else applyHuffman(huffdist);$/;"	v
distance	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Distance.hx	/^public static function distance(output:B2DistanceOutput, cache:B2SimplexCache, input:B2DistanceInput):Void$/;"	f
distance	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public function distance(a:B2Vec2, b:B2Vec2) : Float{$/;"	f
distance	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector2.hx	/^	public static function distance (pt1:Vector2, pt2:Vector2):Float {$/;"	f
distance	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	inline public static function distance (pt1:Vector4, pt2:Vector4):Float {$/;"	f
distance	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/DropShadowFilter.hx	/^	public var distance:Float;$/;"	v
distance	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/GlowFilter.hx	/^	private var distance:Float;$/;"	v
distance	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Point.hx	/^	public static function distance (pt1:Point, pt2:Point):Float {$/;"	f
distance	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/DropShadowFilter.hx	/^	public var distance:Float;$/;"	v
distance	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Point.hx	/^	public static function distance (pt1:Point, pt2:Point):Float {$/;"	f
distance	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^	inline public static function distance (pt1:Vector3D, pt2:Vector3D):Float {$/;"	f
distance	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/PointTest.hx	/^		var distance = Math.sqrt ((differenceX * differenceX) + (differenceY * differenceY));$/;"	v
distance0	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var distance0:Float = normal.x * vIn0.x + normal.y * vIn0.y - offset;$/;"	v
distance1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var distance1:Float = normal.x * vIn1.x + normal.y * vIn1.y - offset;$/;"	v
distanceModel	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function distanceModel (distanceModel:Int):Void {$/;"	f
distanceModel	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function distanceModel (distanceModel:Int):Void {$/;"	f
distanceSqr1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Distance.hx	/^	var distanceSqr1:Float = closestPoint.lengthSquared();$/;"	v
distanceSqr2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Distance.hx	/^	var distanceSqr2:Float = distanceSqr1;$/;"	v
distanceSquared	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public function distanceSquared(a:B2Vec2, b:B2Vec2) : Float{$/;"	f
div	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^	public var div:DivElement;$/;"	v
div	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMTextField.hx	/^		var div:Element = textField.__div;$/;"	v
div	/usr/lib/haxe/std/haxe/Int64.hx	/^	public static function div( a : Int64, b : Int64 ) : Int64 {$/;"	f
divMod	/usr/lib/haxe/std/haxe/Int64.hx	/^	static function divMod( modulus : Int64, divisor : Int64 ) {$/;"	f
diveCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var diveCount:Int = 0;$/;"	v
djd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^		var djd:B2DistanceJointDef = new B2DistanceJointDef();$/;"	v
dm	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/OpLUT.hx	/^	public var dm:Bool;$/;"	v
do the same for other states ?	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		\/\/TODO do the same for other states ?$/;"	i
doCall	/usr/lib/haxe/std/haxe/remoting/ExternalConnection.hx	/^	static function doCall( name : String, path : String, params : String ) : String {$/;"	f
doCall	/usr/lib/haxe/std/haxe/remoting/FlashJsConnection.hx	/^	static function doCall( name : String, path : String, params : String ) : String {$/;"	f
doClientDisconnected	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	function doClientDisconnected(s,c) {$/;"	f
doClose	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^		var doClose = false;$/;"	v
doConnect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^		var doConnect = false;$/;"	v
doCopy	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^			var doCopy = true;$/;"	v
doCopy	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^		var doCopy = true;$/;"	v
doDelete	/usr/lib/haxe/std/sys/db/Manager.hx	/^	function doDelete( x : T ) {$/;"	f
doEncode	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^	function doEncode( m : Array<Int>, l : Int ) : Array<Int> {$/;"	f
doEncode	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^	function doEncode( x : Array<Int> ) : Array<Int> {$/;"	f
doEncode	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^	function doEncode( x : Array<Int> ) : Array<Int> {$/;"	f
doHash	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Hmac.hx	/^	inline function doHash( b : haxe.io.Bytes ) : haxe.io.Bytes {$/;"	f
doInsert	/usr/lib/haxe/std/sys/db/Manager.hx	/^	function doInsert( x : T ) {$/;"	f
doLock	/usr/lib/haxe/std/sys/db/Manager.hx	/^	function doLock( i : T ) {$/;"	f
doParse	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^	static function doParse(str:String, p:Int = 0, ?parent:Xml):Int$/;"	f
doSerialize	/usr/lib/haxe/std/sys/db/Manager.hx	/^	function doSerialize( field : String, v : Dynamic ) : haxe.io.Bytes {$/;"	f
doSleep	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^			var doSleep:Bool = true;$/;"	v
doUnserialize	/usr/lib/haxe/std/sys/db/Manager.hx	/^	function doUnserialize( field : String, b : haxe.io.Bytes ) : Dynamic {$/;"	f
doUpdate	/usr/lib/haxe/std/sys/db/Manager.hx	/^	function doUpdate( x : T ) {$/;"	f
doUpdateCache	/usr/lib/haxe/std/sys/db/Manager.hx	/^	function doUpdateCache( x : T, name : String, v : Dynamic ) {$/;"	f
do_override	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^				var do_override = "";$/;"	v
doc	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var doc : Null<String>;$/;"	v
doc	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	var doc : String;$/;"	v
doc	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		var doc = null, impl = null, athis = null;$/;"	v
doc	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		var doc = null;$/;"	v
doc	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^		var doc = Xml.createDocument();$/;"	v
document	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	private function document ():Void {$/;"	f
documentationPath	/usr/lib/haxe/lib/openfl/3,0,8/script/RunScript.hx	/^		var documentationPath = PathHelper.combine (openFLDirectory, "documentation");$/;"	v
documentsDirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	public static var documentsDirectory (get, null):String;$/;"	v
documentsDirectory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/File.hx	/^	public static var documentsDirectory (get, null):File;$/;"	v
documentsDirectory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/SystemPath.hx	/^	public static var documentsDirectory (get, null):String;$/;"	v
dollars	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private static inline var dollars = "___";$/;"	v
domain	/usr/lib/haxe/std/haxe/remoting/ExternalConnection.hx	/^			var domain, pageDomain;$/;"	v
domains	/usr/lib/haxe/std/neko/net/ThreadRemotingServer.hx	/^	var domains : Array<String>;$/;"	v
done	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^					var done = false;$/;"	v
done	/usr/lib/haxe/std/haxe/unit/TestStatus.hx	/^	public var done : Bool;$/;"	v
dopplerFactor	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function dopplerFactor (value:Float):Void {$/;"	f
dopplerFactor	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function dopplerFactor (value:Float):Void {$/;"	f
dopplerVelocity	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function dopplerVelocity (value:Float):Void {$/;"	f
dopplerVelocity	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function dopplerVelocity (value:Float):Void {$/;"	f
dot	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^			var dot:Float = (normal1X * tVec.x + normal1Y * tVec.y);$/;"	v
dot	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^			var dot:Float = (tVec.x * dLocal1X + tVec.y * dLocal1Y);$/;"	v
dot	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^			var dot:Float = tVec.x * normal1X + tVec.y * normal1Y;$/;"	v
dot	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var dot:Float = (tVec.x * tX + tVec.y * tY);$/;"	v
dot	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public function dot(a:B2Vec2, b:B2Vec2):Float$/;"	f
dot	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/LoaderInfo.hx	/^		var dot = __pendingURL.lastIndexOf (".");$/;"	v
dot00	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var dot00 = (v0x * v0x) + (v0y * v0y);$/;"	v
dot01	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var dot01 = (v0x * v1x) + (v0y * v1y);$/;"	v
dot02	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var dot02 = (v0x * v2x) + (v0y * v2y);$/;"	v
dot11	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var dot11 = (v1x * v1x) + (v1y * v1y);$/;"	v
dot12	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var dot12 = (v1x * v2x) + (v1y * v2y);$/;"	v
dotProduct	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	inline public function dotProduct (a:Vector4):Float {$/;"	f
dotProduct	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^	inline public function dotProduct (a:Vector3D):Float {$/;"	f
double	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var double = data.getFloat64 (this.position, littleEndian);$/;"	v
double	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^		var double = data.getFloat64 (this.position, littleEndian);$/;"	v
doubleClickEnabled	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var doubleClickEnabled:Bool;$/;"	v
doubleClickEnabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/InteractiveObject.hx	/^	public var doubleClickEnabled:Bool;$/;"	v
doubleClickEnabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/InteractiveObject.hx	/^	public var doubleClickEnabled:Bool;$/;"	v
downState	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/SimpleButton.hx	/^	public var downState (default, set):DisplayObject;$/;"	v
downState	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/SimpleButton.hx	/^	public var downState (default, set):DisplayObject;$/;"	v
downloadFile	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static function downloadFile (remotePath:String, localPath:String = "", followingLocation:Bool = false):Void {$/;"	f
downloadPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^				var downloadPath = "";$/;"	v
downloadPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var downloadPath = "";$/;"	v
dp	/usr/lib/haxe/std/sys/net/Address.hx	/^		var dp = a.port - port;$/;"	v
dpiScale	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public var dpiScale (get, null):Float;$/;"	v
dragForce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^			var dragForce:B2Vec2 = body.getLinearVelocityFromWorldPoint(areac);$/;"	v
draggable	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var draggable:Bool;$/;"	v
draw	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^	public override function draw(debugDraw:B2DebugDraw):Void$/;"	f
draw	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2Controller.hx	/^	public function draw(debugDraw:B2DebugDraw):Void { }$/;"	f
draw	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function draw (source:IBitmapDrawable, matrix:Matrix = null, colorTransform:ColorTransform = null, blendMode:BlendMode = null, clipRect:Rectangle = null, smoothing:Bool = false):Void {$/;"	f
draw	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function draw (source:IBitmapDrawable, matrix:Matrix = null, colorTransform:ColorTransform = null, blendMode:BlendMode = null, clipRect:Rectangle = null, smoothing:Bool = false):Void {$/;"	f
drawArrays	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function drawArrays (mode:Int, first:Int, count:Int):Void;$/;"	f
drawArrays	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function drawArrays (mode:Int, first:Int, count:Int):Void {$/;"	f
drawArrays	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function drawArrays (mode:Int, first:Int, count:Int):Void {$/;"	f
drawArrays	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function drawArrays(mode:Int, first:Int, count:Int):Void $/;"	f
drawArrays	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function drawArrays(mode:Int, first:Int, count:Int):Void;$/;"	f
drawCircle	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	public function drawCircle(center:B2Vec2, radius:Float, color:B2Color) : Void{$/;"	f
drawCircle	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public function drawCircle (x:Float, y:Float, radius:Float):Void {$/;"	f
drawCircle	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public function drawCircle (x:Float, y:Float, radius:Float):Void {$/;"	f
drawCount	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/RenderSession.hx	/^	public var drawCount:Int;$/;"	v
drawDebugData	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function drawDebugData() : Void{$/;"	f
drawElements	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function drawElements (mode:Int, count:Int, type:Int, offset:Int):Void;$/;"	f
drawElements	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function drawElements (mode:Int, count:Int, type:Int, offset:Int):Void {$/;"	f
drawElements	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function drawElements (mode:Int, count:Int, type:Int, offset:Int):Void {$/;"	f
drawElements	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function drawElements(mode:Int, count:Int, type:Int, offset:Int):Void $/;"	f
drawElements	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function drawElements(mode:Int, count:Int, type:Int, offset:Int):Void;$/;"	f
drawEllipse	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public function drawEllipse (x:Float, y:Float, width:Float, height:Float):Void {$/;"	f
drawEllipse	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public function drawEllipse (x:Float, y:Float, width:Float, height:Float):Void {$/;"	f
drawGraphicsData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public function drawGraphicsData (graphicsData:Array<IGraphicsData>):Void {$/;"	f
drawGraphicsData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public function drawGraphicsData (graphicsData:Vector<IGraphicsData>):Void {$/;"	f
drawGraphicsDatum	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public function drawGraphicsDatum (graphicsDatum:IGraphicsData):Void {$/;"	f
drawImage	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function drawImage (element:Dynamic \/*VideoElement*\/, sx:Float, sy:Float, ?sw:Float, ?sh:Float, ?dx:Float, ?dy:Float, ?dw:Float, ?dh:Float):Void {};$/;"	f
drawImageFromRect	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function drawImageFromRect (image:Dynamic \/*ImageElement*\/, ?sx:Float, ?sy:Float, ?sw:Float, ?sh:Float, ?dx:Float, ?dy:Float, ?dw:Float, ?dh:Float, ?compositeOperation:String):Void {};$/;"	f
drawJoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function drawJoint(joint:B2Joint) : Void{$/;"	f
drawMode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var drawMode:Int;$/;"	v
drawPath	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public function drawPath (commands:Array<Int>, data:Array<Float>, winding:GraphicsPathWinding = null):Void {$/;"	f
drawPath	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public function drawPath (commands:Vector<Int>, data:Vector<Float>, winding:GraphicsPathWinding = null):Void {$/;"	f
drawPoints	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public function drawPoints (xy:Array<Float>, pointRGBA:Array<Int> = null, defaultRGBA:Int = 0xffffffff, size:Float = -1.0):Void {$/;"	f
drawPolygon	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	public function drawPolygon(vertices:Array <B2Vec2>, vertexCount:Int, color:B2Color) : Void{$/;"	f
drawRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public function drawRect (x:Float, y:Float, width:Float, height:Float):Void {$/;"	f
drawRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public function drawRect (x:Float, y:Float, width:Float, height:Float):Void {$/;"	f
drawRoundRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^	private static function drawRoundRect (x:Float, y:Float, width:Float, height:Float, rx:Float, ry:Float):Void {$/;"	f
drawRoundRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^	private static function drawRoundRect (x:Float, y:Float, width:Float, height:Float, rx:Float, ry:Float):Void {$/;"	f
drawRoundRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public function drawRoundRect (x:Float, y:Float, width:Float, height:Float, radiusX:Float, radiusY:Null<Float> = null):Void {$/;"	f
drawRoundRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public function drawRoundRect (x:Float, y:Float, width:Float, height:Float, rx:Float, ry:Float = -1):Void {$/;"	f
drawRoundRectComplex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public function drawRoundRectComplex (x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void {$/;"	f
drawRoundRectComplex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public function drawRoundRectComplex (x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void {$/;"	f
drawSegment	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	public function drawSegment(p1:B2Vec2, p2:B2Vec2, color:B2Color) : Void{$/;"	f
drawShape	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function drawShape(shape:B2Shape, xf:B2Transform, color:B2Color) : Void{$/;"	f
drawSolidCircle	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	public function drawSolidCircle(center:B2Vec2, radius:Float, axis:B2Vec2, color:B2Color) : Void{$/;"	f
drawSolidPolygon	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	public function drawSolidPolygon(vertices:Array <B2Vec2>, vertexCount:Int, color:B2Color) : Void{$/;"	f
drawTiles	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public function drawTiles (sheet:Tilesheet, data:Array<Float>, smooth:Bool = false, flags:Int = 0, count:Int = -1):Void {$/;"	f
drawTiles	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Tilesheet.hx	/^	public function drawTiles (graphics:Graphics, tileData:Array<Float>, smooth:Bool = false, flags:Int = 0, count:Int = -1):Void {$/;"	f
drawTiles	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public function drawTiles (sheet:Tilesheet, tileData:Array<Float>, smooth:Bool = false, flags:Int = 0, count:Int = -1):Void {$/;"	f
drawTiles	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Tilesheet.hx	/^	public function drawTiles (graphics:Graphics, tileData:Array<Float>, smooth:Bool = false, flags:Int = 0, count:Int = -1):Void {$/;"	f
drawToBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function drawToBitmapData (destination:BitmapData):Void {$/;"	f
drawTransform	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	public function drawTransform(xf:B2Transform) : Void{$/;"	f
drawTriangles	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public function drawTriangles (vertices:Array<Float>, indices:Array<Int> = null, uvtData:Array<Float> = null, culling:TriangleCulling = null, colors:Array<Int> = null, blendMode:Int = 0):Void {$/;"	f
drawTriangles	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public function drawTriangles (vertices:Vector<Float>, ?indices:Vector<Int> = null, ?uvtData:Vector<Float> = null, ?culling:TriangleCulling = null, ?colors:Vector<Int>, blendMode:Int = 0):Void {$/;"	f
drawTriangles	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function drawTriangles (indexBuffer:IndexBuffer3D, firstIndex:Int = 0, numTriangles:Int = -1):Void {$/;"	f
drawTrianglesShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/ShaderManager.hx	/^	public var drawTrianglesShader:DrawTrianglesShader;$/;"	v
drawTrianglesVertexAttributes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public static var drawTrianglesVertexAttributes = [$/;"	v
drawing	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	public var drawing:Bool = false;$/;"	v
drawing	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	private var drawing:Bool; \/\/ to mimic Stage3d behavior of not allowing calls to drawTriangles between present and clear$/;"	v
drawingBufferHeight	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var drawingBufferHeight (default,null):Int;$/;"	v
drawingBufferHeight	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static var drawingBufferHeight(get_drawingBufferHeight, null):Int;$/;"	v
drawingBufferHeight	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static var drawingBufferHeight(get_drawingBufferHeight, null):Int;$/;"	v
drawingBufferWidth	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	var drawingBufferWidth (default,null):Int;$/;"	v
drawingBufferWidth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static var drawingBufferWidth(get_drawingBufferWidth, null):Int;$/;"	v
drawingBufferWidth	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static var drawingBufferWidth(get_drawingBufferWidth, null):Int;$/;"	v
drive	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/StorageVolume.hx	/^	public var drive (default, null):String;$/;"	v
driverInfo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Context3D.hx	/^	public static var driverInfo = "Call getter function instead";$/;"	v
driverInfo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public var driverInfo (default, null):String; \/\/ TODO$/;"	v
dropShadowFilter	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/DropShadowFilterTest.hx	/^		var dropShadowFilter = new DropShadowFilter ();$/;"	v
dropTarget	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var dropTarget (default, null):Dynamic \/*DisplayObject*\/;$/;"	v
dropzone	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var dropzone:String;$/;"	v
dryRun	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ProcessHelper.hx	/^	public static var dryRun:Bool = false;$/;"	v
dstChannel	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^				var dstChannel = switch (destChannel) { $/;"	v
dt	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2TimeStep.hx	/^	public var dt:Float = 0;			\/\/ time step$/;"	v
dt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^		var dt:Float = 0;$/;"	v
dt2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^		var dt2:Float = 0;$/;"	v
dt3	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^		var dt3:Float = 0;$/;"	v
dtRatio	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2TimeStep.hx	/^	public var dtRatio:Float = 0;		\/\/ dt * inv_dt0$/;"	v
dummy	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/ByteArrayTest.hx	/^		var dummy = { txt: "string of dummy text" };$/;"	v
dumpBits	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function dumpBits ():Void {$/;"	f
duphandle	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLEasy.hx	/^	public static function duphandle (handle:CURL):CURL {$/;"	f
duplicate	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Distance.hx	/^		var duplicate:Bool = false;$/;"	v
dv1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var dv1X:Float = vB.x - wB * cp1.rB.y - vA.x + wA * cp1.rA.y;$/;"	v
dv1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var dv1Y:Float = vB.y + wB * cp1.rB.x - vA.y - wA * cp1.rA.x;$/;"	v
dv2X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var dv2X:Float = vB.x - wB * cp2.rB.y - vA.x + wA * cp2.rA.y;$/;"	v
dv2Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var dv2Y:Float = vB.y + wB * cp2.rB.x - vA.y - wA * cp2.rA.x;$/;"	v
dvX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^		var dvX:Float;$/;"	v
dvY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^		var dvY:Float;$/;"	v
dw	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^			var dw:Int = (bw < 0) ? sw + (width - sw - dx) : sw;$/;"	v
dw	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^			var dw:Int = (bw < 0) ? sw + (width - sw - dx) : sw;$/;"	v
dwm	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLParser.hx	/^				var dwm:Int = 0xf;$/;"	v
dx	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2GravityController.hx	/^		var dx:Float = 0;$/;"	v
dx	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var dx = [ 0, -1, 1, 0 ];$/;"	v
dx	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector2.hx	/^		var dx = pt1.x - pt2.x;$/;"	v
dx	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var dx = 0;$/;"	v
dx	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^			var dx = Sys.getEnv("ANDROID_SDK") + "\/platforms\/" + extractedAndroidPaths[0] + "\/tools\/dx";$/;"	v
dx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var dx:Float, dy:Float;$/;"	v
dx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var dx:Float, dy:Float;$/;"	v
dx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^			var dx = Std.int (destPoint.x);$/;"	v
dx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Point.hx	/^		var dx = pt1.x - pt2.x;$/;"	v
dx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^		var dx = x - r.x;$/;"	v
dx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^			var dx = Std.int (destPoint.x);$/;"	v
dx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Point.hx	/^		var dx = pt1.x - pt2.x;$/;"	v
dy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2GravityController.hx	/^		var dy:Float = 0;$/;"	v
dy	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var dy = [ -1, 0, 0, 1 ];$/;"	v
dy	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector2.hx	/^		var dy = pt1.y - pt2.y;$/;"	v
dy	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var dy = 0;$/;"	v
dy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^			var dy = Std.int (destPoint.y);$/;"	v
dy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Point.hx	/^		var dy = pt1.y - pt2.y;$/;"	v
dy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^		var dy = y - r.y;$/;"	v
dy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^			var dy = Std.int (destPoint.y);$/;"	v
dy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Point.hx	/^		var dy = pt1.y - pt2.y;$/;"	v
dynamicSearch	/usr/lib/haxe/std/sys/db/Manager.hx	/^	public function dynamicSearch( x : {}, ?lock : Bool ) : List<T> {$/;"	f
e	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^			var e:Float = dB.x * dB.x + dB.y * dB.y;$/;"	v
e	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^			var e = readEntryHeader();$/;"	v
e	/usr/lib/haxe/std/haxe/Serializer.hx	/^			var e : flash.errors.Error = e;$/;"	v
e	/usr/lib/haxe/std/haxe/Template.hx	/^			var e : Void->Dynamic = makeExpr(l);$/;"	v
e	/usr/lib/haxe/std/haxe/Template.hx	/^			var e = makeExpr(l);$/;"	v
e	/usr/lib/haxe/std/haxe/Template.hx	/^			var e = parseExpr(p);$/;"	v
e	/usr/lib/haxe/std/haxe/Template.hx	/^		var e:Void->Dynamic;$/;"	v
e	/usr/lib/haxe/std/haxe/Unserializer.hx	/^			var e = unserializeEnum(edecl, tag);$/;"	v
e	/usr/lib/haxe/std/haxe/Unserializer.hx	/^			var e = unserializeEnum(edecl, unserialize());$/;"	v
e	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^		var e = 0xC3D2E1F0;$/;"	v
e	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^			var e = r.get();$/;"	v
e	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^		var e = f.expr();$/;"	v
e	/usr/lib/haxe/std/haxe/remoting/ExternalConnection.hx	/^		var e = new ExternalConnection(__data,__path.copy());$/;"	v
e	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^		var e = encodeMessageLength(msg.length + 3);$/;"	v
e	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		var e = x.elements;$/;"	v
e	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^			var e = readEntryHeader();$/;"	v
e	/usr/lib/haxe/std/haxe/zip/Writer.hx	/^		var e = new haxe.io.BytesOutput();$/;"	v
e	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^						function e(expr) return { expr : expr, pos : pos };$/;"	f
e	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^						var e = en.get();$/;"	v
e	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var e : Dynamic = Reflect.field(RecordType, c);$/;"	v
e	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var e = buildCond(e);$/;"	v
e	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var e = { expr : ECall( { expr : EField(em, "unsafeObjects"), pos : pos }, [sql,defaultTrue(elock)]), pos : pos };$/;"	v
e1	/usr/lib/haxe/std/haxe/Template.hx	/^			var e1:Dynamic = makeExpr(l);$/;"	v
e1	/usr/lib/haxe/std/haxe/macro/ExprTools.hx	/^				var e1:Dynamic = getValue(e1);$/;"	v
e1	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^		var e1 = decodeChar(c1);$/;"	v
e12	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^			var e12:B2Vec2 = B2Math.subtractVV(m_v2.w, m_v1.w);$/;"	v
e12	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^	var e12:B2Vec2 = B2Math.subtractVV(w2, w1);$/;"	v
e13	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^	var e13:B2Vec2 = B2Math.subtractVV(w3, w1);$/;"	v
e1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var e1X:Float = p2.x - p1X;$/;"	v
e1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var e1Y:Float = p2.y - p1Y;$/;"	v
e2	/usr/lib/haxe/std/haxe/Template.hx	/^			var e2:Dynamic = makeExpr(l);$/;"	v
e2	/usr/lib/haxe/std/haxe/macro/ExprTools.hx	/^				var e2:Dynamic = getValue(e2);$/;"	v
e2	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^		var e2 = decodeChar(c2);$/;"	v
e2	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^			var e2 = it.next();$/;"	v
e23	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^	var e23:B2Vec2 = B2Math.subtractVV(w3, w2);$/;"	v
e2X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var e2X:Float = p3.x - p1X;$/;"	v
e2Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var e2Y:Float = p3.y - p1Y;$/;"	v
e_aabbBit	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	static public var e_aabbBit:Int			= 0x0004;$/;"	v
e_above	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestOneSidedPlatform.hx	/^		static private var e_above:Int = 1;$/;"	v
e_activeFlag	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		static public var e_activeFlag:Int			= 0x0020;$/;"	v
e_allowSleepFlag	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		static public var e_allowSleepFlag:Int		= 0x0004;$/;"	v
e_awakeFlag	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		static public var e_awakeFlag:Int			= 0x0002;$/;"	v
e_below	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestOneSidedPlatform.hx	/^		static private var e_below:Int = 2;$/;"	v
e_bulletFlag	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		static public var e_bulletFlag:Int			= 0x0008;$/;"	v
e_centerOfMassBit	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	static public var e_centerOfMassBit:Int	= 0x0010;$/;"	v
e_continuousFlag	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	static public var e_continuousFlag:Int	= 0x0002;$/;"	v
e_controllerBit	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	static public var e_controllerBit:Int		= 0x0020;$/;"	v
e_enabledFlag	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	static public var e_enabledFlag:Int	= 0x0020;$/;"	v
e_filterFlag	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	static public var e_filterFlag:Int		= 0x0040;$/;"	v
e_fixedRotationFlag	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		static public var e_fixedRotationFlag:Int	= 0x0010;$/;"	v
e_hitCollide	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2Shape.hx	/^		static public var e_hitCollide:Int = 1;$/;"	v
e_islandFlag	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		static public var e_islandFlag:Int			= 0x0001;$/;"	v
e_islandFlag	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	static public var e_islandFlag:Int		= 0x0004;$/;"	v
e_jointBit	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	static public var e_jointBit:Int			= 0x0002;$/;"	v
e_locked	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public static var e_locked:Int = 0x0002;$/;"	v
e_missCollide	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2Shape.hx	/^		static public var e_missCollide:Int = 0;$/;"	v
e_newFixture	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public static var e_newFixture:Int = 0x0001;$/;"	v
e_pairBit	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	static public var e_pairBit:Int			= 0x0008;$/;"	v
e_sensorFlag	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	static public var e_sensorFlag:Int		= 0x0001;$/;"	v
e_shapeBit	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	static public var e_shapeBit:Int 			= 0x0001;$/;"	v
e_startsInsideCollide	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2Shape.hx	/^		static public var e_startsInsideCollide:Int = -1;$/;"	v
e_toiFlag	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	static public var e_toiFlag:Int		= 0x0008;$/;"	v
e_touchingFlag	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	static public var e_touchingFlag:Int	= 0x0010;$/;"	v
e_unknown	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestOneSidedPlatform.hx	/^		static private var e_unknown:Int = 0;$/;"	v
earFound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var earFound = false;$/;"	v
eargs	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^			var eargs = aname.iterator();$/;"	v
ebytes	/usr/lib/haxe/std/haxe/zip/Writer.hx	/^		var ebytes = e.getBytes();$/;"	v
ecache	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var ecache = { expr : EConst(CIdent(cache)), pos : pos };$/;"	v
edecl	/usr/lib/haxe/std/haxe/Unserializer.hx	/^			var edecl = resolver.resolveEnum(name);$/;"	v
edge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var edge:Int = 0;$/;"	v
edge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var edge:B2Vec2 = B2Math.subtractVV(m_vertices[i2], m_vertices[i1]);$/;"	v
edge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var edge:B2ContactEdge = m_contactList;$/;"	v
edge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^		var edge:B2ContactEdge = bodyB.getContactList();$/;"	v
edge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^		var edge:B2ContactEdge = m_body.getContactList();$/;"	v
edge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^				var edge: B2EdgeShape = cast (shape, B2EdgeShape);$/;"	v
edge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^			var edge:B2ContactEdge = bodyB.getContactList();$/;"	v
edge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2Controller.hx	/^		var edge:B2ControllerEdge = body.m_controllerList;$/;"	v
edge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2Controller.hx	/^		var edge:B2ControllerEdge = new B2ControllerEdge();$/;"	v
edge1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var edge1:Int;		\/\/ reference edge$/;"	v
edgeA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var edgeA:Int = 0;$/;"	v
edgeB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var edgeB:Int = 0;$/;"	v
edgeDef	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^			var edgeDef: B2EdgeChainDef = def as b2EdgeChainDef;$/;"	v
edgeSeparation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^	static public function edgeSeparation(	poly1:B2PolygonShape, xf1:B2Transform, edge1:Int, $/;"	f
eelse	/usr/lib/haxe/std/haxe/Template.hx	/^			var eelse;$/;"	v
efAltDown	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var efAltDown = 0x0008;$/;"	v
efAltDown	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	private static var efAltDown = 0x0008;$/;"	v
efCommandDown	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var efCommandDown = 0x0010;$/;"	v
efCommandDown	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	private static var efCommandDown = 0x0010;$/;"	v
efCtrlDown	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var efCtrlDown = 0x0004;$/;"	v
efCtrlDown	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	private static var efCtrlDown = 0x0004;$/;"	v
efLeftDown	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var efLeftDown = 0x0001;$/;"	v
efLeftDown	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	private static var efLeftDown = 0x0001;$/;"	v
efLocationRight	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var efLocationRight = 0x4000;$/;"	v
efMiddleDown	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var efMiddleDown = 0x0020;$/;"	v
efPrimaryTouch	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var efPrimaryTouch = 0x8000;$/;"	v
efRightDown	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var efRightDown = 0x0040;$/;"	v
efShiftDown	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var efShiftDown = 0x0002;$/;"	v
efShiftDown	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	private static var efShiftDown = 0x0002;$/;"	v
efield	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var efield = { expr : EConst(CIdent(f.name)), pos : pos };$/;"	v
efor	/usr/lib/haxe/std/haxe/Template.hx	/^			var efor = parseBlock(tokens);$/;"	v
eif	/usr/lib/haxe/std/haxe/Template.hx	/^			var eif = parseBlock(tokens);$/;"	v
element	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^	public var element:#if (haxe_ver >= "3.2") Element #else HtmlElement #end;$/;"	v
element	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^            var element = readNext();$/;"	v
element	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/RenderSession.hx	/^	public var element:DOMRenderContext;$/;"	v
element	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMRenderer.hx	/^	private var element:DOMRenderContext;$/;"	v
elements	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexAttribute.hx	/^	public var elements(get, never):Int;$/;"	v
elements	/usr/lib/haxe/std/Xml.hx	/^	function elements() : Iterator<Xml>;$/;"	f
elements	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^	public var elements(get,null) : Iterator<Fast>;$/;"	v
elementsNamed	/usr/lib/haxe/std/Xml.hx	/^	function elementsNamed( name : String ) : Iterator<Xml>;$/;"	f
elementsPerVertex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	var elementsPerVertex:Int;$/;"	v
elen	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var elen = i.readInt16();$/;"	v
elen	/usr/lib/haxe/std/StringTools.hx	/^		var elen = end.length;$/;"	v
elen	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var elen = i.readInt16();$/;"	v
elt	/usr/lib/haxe/std/haxe/ds/GenericStack.hx	/^	public var elt : T;$/;"	v
elts	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^			var elts = x.elements;$/;"	v
em	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^			var em:Dynamic = { num: Std.parseInt (indexed[2]) | 0, code: RegMap.map.get (indexed[1]).code, swizzle: this.stringToSwizzle (indexed[5]), select: Reflect.getProperty (selindex, indexed[3]), offset: Std.parseInt (indexed[4]) | 0 };$/;"	v
em	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^			var em:Dynamic = { num: Std.parseInt (reg[2]) | 0, code: RegMap.map.get (reg[1]).code, swizzle: this.stringToSwizzle (reg[3]) };$/;"	v
em	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^		var em = { num: reg[2] != null ? reg[2] : "0", code: RegMap.map.get (reg[1]).code, mask: this.stringToMask (reg[3]) };$/;"	v
em_size	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	var em_size:Int;$/;"	v
em_size	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	var em_size: Int;$/;"	v
embed	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Asset.hx	/^	public var embed:Null<Bool>;$/;"	v
embed	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Library.hx	/^	public var embed:Null<Bool>;$/;"	v
embed	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^							var embed:Null<Bool> = null;$/;"	v
embed	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^		var embed:Null<Bool> = null;$/;"	v
embed	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	public static function embed (element:Dynamic, width:Null<Int> = null, height:Null<Int> = null, background:String = null, assetsPrefix:String = null) {$/;"	f
embed	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^		var embed = "";$/;"	v
embed	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^		var embed = inAsset.embed;$/;"	v
embed	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Lib.hx	/^	public static function embed (elementName:String, width:Null<Int> = null, height:Null<Int> = null, background:String = null, assetsPrefix:String = null) {$/;"	f
embedAsset	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^	private static function embedAsset (inAsset:Asset, packageName:String, outTags:Array<SWFTag>) {$/;"	f
embedAssets	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^	public static function embedAssets (project:HXProject):Bool {$/;"	f
embedData	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	private static function embedData (metaName:String, encode:Bool = false):Array<Field> {$/;"	f
embedData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	private static function embedData (metaName:String, encode:Bool = false):Array<Field> {$/;"	f
embedData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	private static function embedData (metaName:String, encode:Bool = false):Array<Field> {$/;"	f
embedFonts	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public var embedFonts (get, set):Bool;$/;"	v
embedFonts	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var embedFonts:Bool;$/;"	v
embedded	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FlashPlatform.hx	/^	private var embedded:Bool;$/;"	v
embeddedAsset	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^				var embeddedAsset:Dynamic = { };$/;"	v
embeddedLibrary	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^			var embeddedLibrary:Dynamic = { };$/;"	v
emitDest	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^	public function emitDest (pr:Part, token:String, opdest:String):Bool {$/;"	f
emitHeader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^	public function emitHeader (pr:Part):Void {$/;"	f
emitOpcode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^	public function emitOpcode (pr:Part, opcode) {$/;"	f
emitSampler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^	public function emitSampler (pr:Part, token:String, opsrc:FS, opts:Array<String>):Bool {$/;"	f
emitSource	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^	public function emitSource (pr:Part, token:String, opsrc):Bool {$/;"	f
emitZeroDword	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^	public function emitZeroDword (pr:Part) {$/;"	f
emitZeroQword	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^	public function emitZeroQword (pr) {$/;"	f
emphases	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    static var emphases = [Emphasis.None, Emphasis.RedBook, null, Emphasis.J17];$/;"	v
emphasis	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/FrameHeader.hx	/^    public var emphasis(default, null):Emphasis;$/;"	v
emphasis	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var emphasis = emphases[emphasisIndex];$/;"	v
emphasisIndex	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var emphasisIndex = b & 0x3;$/;"	v
emscriptenSDKURL	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var emscriptenSDKURL = "https:\/\/github.com\/kripken\/emscripten\/wiki\/Emscripten-SDK";$/;"	v
emulatorName	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^	private static var emulatorName:String;$/;"	v
emulatorPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^	private static var emulatorPath:String;$/;"	v
en	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^			var en : Dynamic = Type.resolveEnum(e);$/;"	v
enable	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function enable (capability:Int):Void {$/;"	f
enable	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function enable (capability:Int):Void {$/;"	f
enable	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function enable (cap:Int):Void;$/;"	f
enable	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function enable (cap:Int):Void {$/;"	f
enable	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function enable (cap:Int):Void {$/;"	f
enable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function enable(cap:Int):Void $/;"	f
enable	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function enable(cap:Int):Void;$/;"	f
enableAttributes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	inline function enableAttributes(?color:Int = 0xFFFFFFFF) {$/;"	f
enableColor	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/LogHelper.hx	/^	public static var enableColor = true;$/;"	v
enableColor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	var enableColor:Bool = true;$/;"	v
enableErrorChecking	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Context3D.hx	/^	public static var enableErrorChecking = false;$/;"	v
enableErrorChecking	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public var enableErrorChecking:Bool; \/\/ TODO (use GL.getError() and GL.validateProgram(program))$/;"	v
enableInputMode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^	public static function enableInputMode (textField:TextField):Void {$/;"	f
enableLimit	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	public function enableLimit(flag:Bool) : Void$/;"	f
enableLimit	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJointDef.hx	/^	public var enableLimit:Bool;$/;"	v
enableLimit	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	public function enableLimit(flag:Bool) : Void$/;"	f
enableLimit	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJointDef.hx	/^	public var enableLimit:Bool;$/;"	v
enableLimit	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	public function enableLimit(flag:Bool) :Void{$/;"	f
enableLimit	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJointDef.hx	/^	public var enableLimit:Bool;$/;"	v
enableMotor	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	public function enableMotor(flag:Bool) : Void$/;"	f
enableMotor	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJointDef.hx	/^	public var enableMotor:Bool;$/;"	v
enableMotor	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	public function enableMotor(flag:Bool) : Void$/;"	f
enableMotor	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJointDef.hx	/^	public var enableMotor:Bool;$/;"	v
enableMotor	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	public function enableMotor(flag:Bool) :Void{$/;"	f
enableMotor	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJointDef.hx	/^	public var enableMotor:Bool;$/;"	v
enableTextEvents	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashWindow.hx	/^	private var enableTextEvents:Bool;$/;"	v
enableTextEvents	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^	private var enableTextEvents:Bool;$/;"	v
enableTextEvents	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var enableTextEvents (get, set):Bool;$/;"	v
enableVertexAttribArray	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function enableVertexAttribArray (index:Int):Void;$/;"	f
enableVertexAttribArray	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function enableVertexAttribArray (index:Int):Void {$/;"	f
enableVertexAttribArray	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function enableVertexAttribArray (index:Int):Void {$/;"	f
enableVertexAttribArray	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function enableVertexAttribArray(index:Int):Void $/;"	f
enableVertexAttribArray	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function enableVertexAttribArray(index:Int):Void;$/;"	f
enableVertexAttribute	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/Shader.hx	/^	public function enableVertexAttribute(attribute:VertexAttribute, stride:Int, offset:Int) {$/;"	f
enabled	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public var enabled:Bool = true;$/;"	v
enabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public var enabled (get, set):Bool;$/;"	v
enabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexAttribute.hx	/^	public var enabled:Bool = true;$/;"	v
enabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public var enabled (get, set):Bool;$/;"	v
enabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/MovieClip.hx	/^	public var enabled:Bool;$/;"	v
enabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3D.hx	/^	public static var enabled (get, set):Bool;$/;"	v
enabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/SimpleButton.hx	/^	public var enabled (get, set):Bool;$/;"	v
enabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/MovieClip.hx	/^	public var enabled:Bool;$/;"	v
enabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/SimpleButton.hx	/^	public var enabled:Bool;$/;"	v
enabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInputDevice.hx	/^	public var enabled:Bool;$/;"	v
encode	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^	public static function encode( s:String ) : String {$/;"	f
encode	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public function encode (format:String = "png", quality:Int = 90):ByteArray {$/;"	f
encode	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/format/BMP.hx	/^	public static function encode (image:Image, type:BMPType = null):ByteArray {$/;"	f
encode	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/format/JPEG.hx	/^	public static function encode (image:Image, quality:Int):ByteArray {$/;"	f
encode	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/format/PNG.hx	/^	public static function encode (image:Image):ByteArray {$/;"	f
encode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function encode (rectOrFormat:Dynamic, compressorOrQuality:Dynamic = 0.9, byteArray:ByteArray = null):ByteArray {$/;"	f
encode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function encode (rect:Rectangle, compressor:Dynamic, byteArray:ByteArray = null):ByteArray {$/;"	f
encode	/usr/lib/haxe/std/haxe/Utf8.hx	/^	public static function encode( s : String ) : String {$/;"	f
encode	/usr/lib/haxe/std/haxe/crypto/Base64.hx	/^	public static function encode( bytes : haxe.io.Bytes, complement = true ) : String {$/;"	f
encode	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^	public static function encode( s : String, base : String ) {$/;"	f
encode	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^	public static function encode( s : String ) : String {$/;"	f
encode	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^	public static function encode( s:String ) : String {$/;"	f
encodeBytes	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^	public function encodeBytes( b : haxe.io.Bytes ) : haxe.io.Bytes {$/;"	f
encodeChar	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^	function encodeChar(c) : Null<Int> {$/;"	f
encodeMessageLength	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^	public function encodeMessageLength( len : Int ) {$/;"	f
encodeString	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^	public function encodeString( s : String ) {$/;"	f
encodedData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^		var encodedData = Serializer.run (data);$/;"	v
encoderDelay	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var encoderDelay = 0;$/;"	v
encoderDelay	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudio.hx	/^    public var encoderDelay:Int;$/;"	v
encoderDelay	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var encoderDelay = ((b0 << 4) & 0xff0) | ((b1 >> 4) &0xf);$/;"	v
encoderDelay	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var encoderDelay:Int = 0;$/;"	v
encoding	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Asset.hx	/^	public var encoding:AssetEncoding;$/;"	v
encoding	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/ByteArrayTest.hx	/^		var encoding = "utf-8";$/;"	v
end	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^						var end = output.lastIndexOf ("'");$/;"	v
end	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var end:Int = inEnd == null ? length : inEnd;$/;"	v
end	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^            var end = false;$/;"	v
end	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    function end() {$/;"	f
end	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^				var end = type.indexOf(";");$/;"	v
end	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^				var end = glLength * 4 * stride;$/;"	v
end	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^						var end = closeFontIndex;$/;"	v
end	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var end:Int;$/;"	v
end	/usr/lib/haxe/std/haxe/Http.hx	/^		var end = chunk_size + 2;$/;"	v
end	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^				var end = i + 3 + getBits(2);$/;"	v
endContact	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactListener.hx	/^	public function endContact(contact:B2Contact):Void { }$/;"	f
endFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^	private static function endFill ():Void {$/;"	f
endFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^	private static function endFill ():Void {$/;"	f
endFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	private static function endFill ():Void {$/;"	f
endFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public function endFill ():Void {$/;"	f
endFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public function endFill ():Void {$/;"	f
endFill	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsEndFillTest.hx	/^		var endFill = new GraphicsEndFill ();$/;"	v
endIndex	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var endIndex = content.indexOf ("<\/section>", startIndex);$/;"	v
endPadding	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var endPadding = 0;$/;"	v
endPadding	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudio.hx	/^    public var endPadding:Int;$/;"	v
endPadding	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var endPadding = ((b1 << 8) & 0xf00) | (b2 & 0xff);$/;"	v
endPadding	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var endPadding:Int = 0;$/;"	v
endStroke	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^	private static function endStroke ():Void {$/;"	f
endStroke	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^	private static function endStroke ():Void {$/;"	f
endian	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public var endian (get, set):String;$/;"	v
endian	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/IDataInput.hx	/^	public var endian (get_endian, set_endian):String;$/;"	v
endian	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public var endian (get, set):String;$/;"	v
endian	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IDataInput.hx	/^	public var endian (get, set):String;$/;"	v
endian	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IDataOutput.hx	/^	public var endian (get, set):String;$/;"	v
endian	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^    public var endian(get, set): String;$/;"	v
endian	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public var endian (get, set):String;$/;"	v
endian	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataInput.hx	/^	var endian:Endian;$/;"	v
endian	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataOutput.hx	/^	var endian:Endian;$/;"	v
endx	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^							var endx = p3x + cp2x;$/;"	v
endy	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^							var endy = p3y + cp2y;$/;"	v
enew	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var enew = { expr : ENew( { pack : ["sys", "db"], name : "Manager", sub : null, params : [TPType(tinst)] }, [Context.parse(path, p)]), pos : p }$/;"	v
enqueueEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	static function enqueueEvent(loader : URLLoader, event : Event) {$/;"	f
enqueueLoad	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	public function enqueueLoad (loader : URLLoader, request : URLRequest) {$/;"	f
ensureElem	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	private function ensureElem (size:Int, updateLength:Bool) {$/;"	f
ensureElem	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	private function ensureElem (size:Int, updateLength:Bool):Void {$/;"	f
ensureType	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	function ensureType( e : Expr, rt : RecordType ) {$/;"	f
enterEndIndex	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var enterEndIndex: Int = -1; \/\/ the first poly vertex below the edge$/;"	v
enterSepN	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var enterSepN: Number = 0.0; \/\/ the depth of enterEndIndex under the edge (stored as a separation, so it's negative)$/;"	v
enterStartIndex	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var enterStartIndex: Int = -1; \/\/ the last poly vertex above the edge$/;"	v
entitlements	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^				var entitlements = targetDirectory + "\/" + project.app.file + "\/" + project.app.file + "-Entitlements.plist";$/;"	v
entries	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var entries = Reader.readZip (file);$/;"	v
entry	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ZipHelper.hx	/^			var entry:Entry = { fileName:name, fileSize:data.length, fileTime:date, compressed:false, dataSize:data.length, data:data, crc32:null };$/;"	v
entryPoint	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	private var entryPoint:String;$/;"	v
entryPoint	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/ApplicationMain.hx	/^		var entryPoint = Type.resolveClass ("::APP_MAIN::");$/;"	v
entryPoint	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^		var entryPoint = Type.resolveClass ("::APP_MAIN::");$/;"	v
enumConstructor	/usr/lib/haxe/std/Type.hx	/^	public static function enumConstructor( e : EnumValue ) : String;$/;"	f
enumIndex	/usr/lib/haxe/std/Type.hx	/^	public static function enumIndex( e : EnumValue ) : Int;$/;"	f
enumParameters	/usr/lib/haxe/std/Type.hx	/^	public static function enumParameters( e : EnumValue ) : Array<Dynamic>;$/;"	f
enumerateFonts	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	public static function enumerateFonts (enumerateDeviceFonts:Bool = false):Array<Font> {$/;"	f
enumerateFonts	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	public static function enumerateFonts (enumerateDeviceFonts:Bool = false):Array<Font> {$/;"	f
env	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ProcessHelper.hx	/^				var env = Sys.getEnv ("NUMBER_OF_PROCESSORS");$/;"	v
env	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var env = Sys.environment ();$/;"	v
environment	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public var environment:Map <String, String>;$/;"	v
environment	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^		var environment = Sys.environment ();$/;"	v
environment	/usr/lib/haxe/std/Sys.hx	/^	static function environment() : haxe.ds.StringMap<String>;$/;"	f
eof	/usr/lib/haxe/std/sys/io/FileInput.hx	/^	function eof() : Bool;$/;"	f
eofError	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/EOFErrorTest.hx	/^		var eofError = new EOFError ();$/;"	v
eq	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLVariables.hx	/^			var eq = f.indexOf ("=");$/;"	v
eq	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLVariables.hx	/^			var eq = f.indexOf ("=");$/;"	v
equalizedMass	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactConstraintPoint.hx	/^	public var equalizedMass:Float;$/;"	v
equals	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public function equals (Matrix3):Bool {$/;"	f
equals	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	public function equals (toCompare:Rectangle):Bool {$/;"	f
equals	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector2.hx	/^	public function equals (toCompare:Vector2):Bool {$/;"	f
equals	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	inline public function equals (toCompare:Vector4, ?allFour:Bool = false):Bool {$/;"	f
equals	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^			var equals = argument.indexOf ("=");$/;"	v
equals	/usr/lib/haxe/lib/lime/2,4,3/tools/RunScript.hx	/^				var equals = arg.indexOf ("=");$/;"	v
equals	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	public inline function equals(other:State) {$/;"	f
equals	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^	public function equals (matrix):Bool {$/;"	f
equals	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Point.hx	/^	public function equals (toCompare:Point):Bool {$/;"	f
equals	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	public function equals (toCompare:Rectangle):Bool {$/;"	f
equals	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^	public function equals (matrix):Bool {$/;"	f
equals	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Point.hx	/^	public function equals (toCompare:Point):Bool {$/;"	f
equals	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^	public function equals (toCompare:Rectangle):Bool {$/;"	f
equals	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^	inline public function equals (toCompare:Vector3D, allFour:Bool = false):Bool {$/;"	f
equals	/usr/lib/haxe/std/haxe/crypto/Adler32.hx	/^	public function equals( a : Adler32 ) {$/;"	f
err	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^			var err : flash.errors.Error = untyped flash.Boot.lastError;$/;"	v
err	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^			var err:Int;$/;"	v
err	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/_shaders/AGLSLShaderUtils.hx	/^				var err = GL.getShaderInfoLog (shader);$/;"	v
err	/usr/lib/haxe/std/haxe/CallStack.hx	/^			var err : flash.errors.Error = untyped flash.Boot.lastError;$/;"	v
err	/usr/lib/haxe/std/haxe/Http.hx	/^		var err = false;$/;"	v
error	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/LogHelper.hx	/^	public static function error (message:String, verboseMessage:String = "", e:Dynamic = null):Void {$/;"	f
error	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PlatformHelper.hx	/^					var error = process.stderr.readAll ().toString ();$/;"	v
error	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ProcessHelper.hx	/^						var error = process.stderr.readAll ().toString ();$/;"	v
error	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^			var error = process.stderr.readAll ().toString ();$/;"	v
error	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var error = function (r:Dynamic) {$/;"	v
error	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/AsyncErrorEvent.hx	/^	public var error:Error;$/;"	v
error	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/UncaughtErrorEvent.hx	/^	public var error:Dynamic;$/;"	v
error	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/ErrorTest.hx	/^		var error = new Error ();$/;"	v
error	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function error( msg : String, pos : Position ) : Dynamic {$/;"	f
error	/usr/lib/haxe/std/haxe/remoting/FlashJsConnection.hx	/^		var error = __data.error;$/;"	v
error	/usr/lib/haxe/std/haxe/remoting/HttpAsyncConnection.hx	/^		var error = __data.error;$/;"	v
error	/usr/lib/haxe/std/haxe/unit/TestStatus.hx	/^	public var error : String;$/;"	v
errorEvent	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/ErrorEventTest.hx	/^		var errorEvent = new ErrorEvent (ErrorEvent.ERROR);$/;"	v
errorID	/usr/lib/haxe/lib/openfl/3,0,8/openfl/errors/Error.hx	/^	public var errorID:Int;$/;"	v
errorID	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/ErrorEvent.hx	/^	public var errorID (default, null):Int;$/;"	v
errorMessage	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^				var errorMessage = URLLoadersManager.getInstance().getErrorMessage(__handle);$/;"	v
errorMsg	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^			var errorMsg = "Application failed server validation";$/;"	v
errorMsg	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^			var errorMsg = "The application cannot be published\\n";$/;"	v
errorOutput	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	public var errorOutput : haxe.io.Output;$/;"	v
errorPath	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^								var errorPath = "";$/;"	v
errors	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^			var errors:List<Dynamic> = Lambda.filter (response.validation.messages, function(m) return m.type == "error");$/;"	v
errors	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var errors:Array<String> = [];$/;"	v
es	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var es = { expr : EConst(CString(inf.str)), pos : e.pos };$/;"	v
escape	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLEasy.hx	/^	public static function escape (handle:CURL, url:String, length:Int):String {$/;"	f
escape	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^	public static function escape (path:String):String {$/;"	f
escape	/usr/lib/haxe/std/sys/db/Connection.hx	/^	function escape( s : String ) : String;$/;"	f
escapeString	/usr/lib/haxe/std/haxe/remoting/ExternalConnection.hx	/^	static function escapeString( s : String ) {$/;"	f
escapeString	/usr/lib/haxe/std/haxe/remoting/ExternalConnection.hx	/^	static inline function escapeString(s) {$/;"	f
escapeString	/usr/lib/haxe/std/haxe/remoting/FlashJsConnection.hx	/^	static function escapeString( s : String ) {$/;"	f
escapes	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^	static var escapes = {$/;"	v
estr	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^		var estr = try Std.string(e) catch( e2 : Dynamic ) "???" + try "["+Std.string(e2)+"]" catch( e : Dynamic ) "";$/;"	v
etActivate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etActivate = 20;$/;"	v
etChange	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etChange = 19;$/;"	v
etChar	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etChar = 2;$/;"	v
etDeactivate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etDeactivate = 21;$/;"	v
etDestroyHandler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etDestroyHandler = 13;$/;"	v
etFocus	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etFocus = 11;$/;"	v
etGotInputFocus	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etGotInputFocus = 22;$/;"	v
etJoyAxisMove	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etJoyAxisMove = 24;$/;"	v
etJoyBallMove	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etJoyBallMove = 25;$/;"	v
etJoyButtonDown	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etJoyButtonDown = 27;$/;"	v
etJoyButtonUp	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etJoyButtonUp = 28;$/;"	v
etJoyDeviceAdded	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etJoyDeviceAdded = 29;$/;"	v
etJoyDeviceRemoved	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etJoyDeviceRemoved = 30;$/;"	v
etJoyHatMove	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etJoyHatMove = 26;$/;"	v
etKeyDown	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etKeyDown = 1;$/;"	v
etKeyUp	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etKeyUp = 3;$/;"	v
etLostInputFocus	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etLostInputFocus = 23;$/;"	v
etMouseClick	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etMouseClick = 6;$/;"	v
etMouseDown	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etMouseDown = 5;$/;"	v
etMouseMove	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etMouseMove = 4;$/;"	v
etMouseUp	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etMouseUp = 7;$/;"	v
etPoll	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etPoll = 9;$/;"	v
etQuit	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etQuit = 10;$/;"	v
etRedraw	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etRedraw = 14;$/;"	v
etRenderContextLost	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etRenderContextLost = 32;$/;"	v
etRenderContextRestored	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etRenderContextRestored = 33;$/;"	v
etResize	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etResize = 8;$/;"	v
etShouldRotate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etShouldRotate = 12;$/;"	v
etSysWM	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etSysWM = 31;$/;"	v
etTouchBegin	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etTouchBegin = 15;$/;"	v
etTouchEnd	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etTouchEnd = 17;$/;"	v
etTouchMove	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etTouchMove = 16;$/;"	v
etTouchTap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etTouchTap = 18;$/;"	v
etUnknown	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public static inline var etUnknown = 0;$/;"	v
ev	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^			var ev:Dynamic;$/;"	v
eval	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Lib.hx	/^	public static function eval (path:String):Dynamic {$/;"	f
eval	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var eval = switch( t ) {$/;"	v
evaluate	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^	public function evaluate(transformA:B2Transform, transformB:B2Transform):Float$/;"	f
evaluate	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2CircleContact.hx	/^	public override function evaluate() : Void{$/;"	f
evaluate	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	public function evaluate() : Void{}$/;"	f
evaluate	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2EdgeAndCircleContact.hx	/^	public override function evaluate() : Void{$/;"	f
evaluate	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndCircleContact.hx	/^	public override function evaluate(): Void{$/;"	f
evaluate	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^	public override function evaluate(): Void{$/;"	f
evaluate	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolygonContact.hx	/^	public override function evaluate(): Void{$/;"	f
evalues	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^			var evalues = x.has.v ? x.att.v.split(":").iterator() : null;$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^		var event = new UncaughtErrorEvent (UncaughtErrorEvent.UNCAUGHT_ERROR, true, true, error);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^			var event = new Event (Event.ADDED, true, false);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^			var event = new Event (Event.ADDED_TO_STAGE, false, false);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^			var event = new Event (Event.REMOVED, true, false);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^			var event = new Event (Event.REMOVED_FROM_STAGE, false, false);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Loader.hx	/^			var event = new Event (Event.COMPLETE);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Loader.hx	/^			var event = new Event (Event.UNLOAD);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^			var event = new Event (active ? Event.ACTIVATE : Event.DEACTIVATE);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var event = new Event (!active ? OpenGLView.CONTEXT_LOST : OpenGLView.CONTEXT_RESTORED);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var event = new Event (Event.RESIZE);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var event = new SystemEvent (SystemEvent.SYSTEM, false, false, event.value);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^					var event = new IOErrorEvent (IOErrorEvent.IO_ERROR, true, false, data, code);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^				var event = new IOErrorEvent (IOErrorEvent.IO_ERROR, true, false, errorMessage, code);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^		var event = new HTTPStatusEvent (HTTPStatusEvent.HTTP_STATUS, false, false, code);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/sensors/Accelerometer.hx	/^		var event = new AccelerometerEvent (AccelerometerEvent.UPDATE);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^			var event = new Event (Event.ADDED, true);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Loader.hx	/^			var event = new Event (Event.UNLOAD);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Loader.hx	/^		var event = new Event (Event.COMPLETE);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Loader.hx	/^		var event = new IOErrorEvent (IOErrorEvent.IO_ERROR);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^				var event = new FocusEvent (FocusEvent.FOCUS_IN, true, false, __focus, false, 0);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^				var event = new FocusEvent (FocusEvent.FOCUS_OUT, true, false, value, false, 0);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^			var event = new KeyboardEvent (type, true, false, charCode, keyCode, null, modifier.ctrlKey, modifier.altKey, modifier.shiftKey, modifier.metaKey);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^		var event = new Event (Event.ACTIVATE);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^		var event = new Event (Event.DEACTIVATE);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^		var event = new Event (Event.RESIZE);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^		var event = new FocusEvent (FocusEvent.FOCUS_IN, true, false, null, false, 0);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^		var event = new FocusEvent (FocusEvent.FOCUS_OUT, true, false, null, false, 0);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^		var event = new TextEvent (TextEvent.TEXT_INPUT, true, false, text);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^		var event = new Event (type, bubbles, cancelable);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/FocusEvent.hx	/^		var event = new FocusEvent (type, bubbles, cancelable, relatedObject, shiftKey, keyCode);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^		var event = new MouseEvent (type, true, false, local.x, local.y, null, __ctrlKey, __altKey, __shiftKey, __buttonDown, delta, __commandKey);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/sensors/Accelerometer.hx	/^		var event = new AccelerometerEvent (AccelerometerEvent.UPDATE);$/;"	v
event	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventTest.hx	/^		var event = new Event (Event.ACTIVATE);$/;"	v
eventCallback	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public var eventCallback:Dynamic;$/;"	v
eventCallback	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public var eventCallback:Dynamic;$/;"	v
eventLoop	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^		var eventLoop = function () {$/;"	v
eventPhase	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public var eventPhase (get, never):EventPhase;$/;"	v
eventPhase	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public var eventPhase (default, null):EventPhase;$/;"	v
events	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashApplication.hx	/^		var events = [ "mouseDown", "mouseMove", "mouseUp", "mouseWheel", "middleMouseDown", "middleMouseMove", "middleMouseUp" #if ((!openfl && !disable_flash_right_click) || enable_flash_right_click) , "rightMouseDown", "rightMouseMove", "rightMouseUp" #end ];$/;"	v
events	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^			var events = [ "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseup", "wheel" ];$/;"	v
events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var events = (touchInfo == null ? __mouseChanges : __touchChanges);$/;"	v
events	/usr/lib/haxe/std/neko/net/Poll.hx	/^	public function events( ?t : Float ) {$/;"	f
evt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^				var evt = new ProgressEvent (ProgressEvent.PROGRESS, false, false, bytesLoaded, bytesTotal);$/;"	v
evt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^		var evt = eventsQueue.shift();$/;"	v
evt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TouchEvent.hx	/^		var evt = new TouchEvent (type, true, false, local.x, local.y, null, false, false, false\/*event.ctrlKey, event.altKey, event.shiftKey*\/, false \/* note: buttonDown not supported on w3c spec *\/, 0, 0);$/;"	v
evt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^			var evt = new Event (Event.COMPLETE);$/;"	v
evt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^			var evt = new ProgressEvent (ProgressEvent.PROGRESS);$/;"	v
evt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^		var evt = new Event (Event.COMPLETE);$/;"	v
evt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^		var evt = new Event (Event.OPEN);$/;"	v
evt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^		var evt = new HTTPStatusEvent (HTTPStatusEvent.HTTP_STATUS, false, false, status);$/;"	v
evt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^		var evt = new IOErrorEvent (IOErrorEvent.IO_ERROR);$/;"	v
evt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^		var evt = new ProgressEvent (ProgressEvent.PROGRESS);$/;"	v
evt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^		var evt = new SecurityErrorEvent (SecurityErrorEvent.SECURITY_ERROR);$/;"	v
ex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^			var ex = __currentPath.points[l - 2];$/;"	v
ex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var ex = points[l - 2];	var ey = points[l - 1];$/;"	v
ex1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var ex1:Float = e1X;$/;"	v
ex2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var ex2:Float = e2X;$/;"	v
exactSettings	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Security.hx	/^	public static var exactSettings:Bool;$/;"	v
exc	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^			var exc = python.lib.Sys.exc_info();$/;"	v
exc	/usr/lib/haxe/std/neko/vm/Ui.hx	/^		var exc = null;$/;"	v
exceptionStack	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^	public static function exceptionStack() : Array<StackItem> {$/;"	f
exceptionStack	/usr/lib/haxe/std/haxe/CallStack.hx	/^	public static function exceptionStack() : Array<StackItem> {$/;"	f
exclude	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^							var exclude = substitute (element.att.exclude);$/;"	v
exclude	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^				var exclude = ".*|cvs|thumbs.db|desktop.ini|*.hash";$/;"	v
exclude	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^	public static function exclude( pack : String, ?rec = true ) {$/;"	f
exclude	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	function exclude() : Void;$/;"	f
excludeFile	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^	public static function excludeFile( fileName : String ) {$/;"	f
exe	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^			var exe = binDirectory + "blackberry-nativepackager";$/;"	v
exe	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^			var exe = binDirectory + "blackberry-signer";$/;"	v
exe	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^		var exe = "bbwp.bat";$/;"	v
exe	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^		var exe = binDirectory + "blackberry-deploy";$/;"	v
exe	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^		var exe = binDirectory + "blackberry-nativepackager";$/;"	v
exec	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashApplication.hx	/^	public function exec ():Int {$/;"	f
exec	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Application.hx	/^	public function exec ():Int {$/;"	f
exec	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public function exec ():Int {$/;"	f
exec	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public function exec ():Int {$/;"	f
executable	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/NekoHelper.hx	/^		var executable = File.getBytes (executablePath);$/;"	v
executable	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/NekoHelper.hx	/^		var executable = File.getBytes (target);$/;"	v
executableDirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/MacPlatform.hx	/^	private var executableDirectory:String;$/;"	v
executablePath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/NekoHelper.hx	/^		var executablePath = PathHelper.findTemplate (templatePaths, "neko\/bin\/neko-" + platformName);$/;"	v
executablePath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/NekoHelper.hx	/^		var executablePath = PathHelper.findTemplate (templatePaths, "neko\/bin\/neko-windows");$/;"	v
executablePath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^	private var executablePath:String;$/;"	v
executablePath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/MacPlatform.hx	/^	private var executablePath:String;$/;"	v
executablePath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WindowsPlatform.hx	/^	private var executablePath:String;$/;"	v
executablePath	/usr/lib/haxe/std/Sys.hx	/^	static function executablePath() : String;$/;"	f
executables	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^					var executables = [];$/;"	v
execute	/usr/lib/haxe/lib/lime/2,4,3/lime/project/PlatformTarget.hx	/^	public function execute (additionalArguments:Array <String>):Void {$/;"	f
execute	/usr/lib/haxe/std/haxe/Template.hx	/^	public function execute( context : Dynamic, ?macros : Dynamic ):String {$/;"	f
execute	/usr/lib/haxe/std/haxe/zip/Compress.hx	/^	public function execute( src : haxe.io.Bytes, srcPos : Int, dst : haxe.io.Bytes, dstPos : Int ) : { done : Bool, read : Int, write : Int } {$/;"	f
execute	/usr/lib/haxe/std/haxe/zip/Uncompress.hx	/^	public function execute( src : haxe.io.Bytes, srcPos : Int, dst : haxe.io.Bytes, dstPos : Int ) : { done : Bool, read : Int, write : Int } {$/;"	f
execute	/usr/lib/haxe/std/neko/vm/Module.hx	/^	public function execute() : Dynamic {$/;"	f
exists	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public function exists (id:String, type:String):Bool {$/;"	f
exists	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public static function exists (id:String, type:AssetType = null):Bool {$/;"	f
exists	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^			var exists = Reflect.hasField (destination, field);$/;"	v
exists	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^		var exists = Reflect.hasField (bucket, node);$/;"	v
exists	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^	public function exists (id:String):Bool {$/;"	f
exists	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ArrayHelper.hx	/^		var exists = false;$/;"	v
exists	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^	public override function exists (id:String, type:AssetType):Bool {$/;"	f
exists	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^	public override function exists (id:String, type:String):Bool {$/;"	f
exists	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public static function exists (id:String, type:AssetType = null):Bool {$/;"	f
exists	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function exists (id:String, type:AssetType):Bool {$/;"	f
exists	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public static function exists (id:String, type:AssetType = null):Bool {$/;"	f
exists	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^	public override function exists (id:String, type:AssetType):Bool {$/;"	f
exists	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^	public override function exists (id:String, type:String):Bool {$/;"	f
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var exists = bitmapData.encode;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var exists = bitmapData.fillRect;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var exists = bitmapData.floodFill;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var exists = bitmapData.generateFilterRect;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var exists = bitmapData.getColorBoundsRect;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var exists = bitmapData.getPixel32;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var exists = bitmapData.getPixel;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var exists = bitmapData.getVector;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var exists = bitmapData.lock;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var exists = bitmapData.noise;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var exists = bitmapData.perlinNoise;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var exists = bitmapData.scroll;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var exists = bitmapData.setPixel32;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var exists = bitmapData.setPixel;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var exists = bitmapData.setPixels;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var exists = bitmapData.setVector;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var exists = bitmapData.threshold;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var exists = bitmapData.unlock;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DirectRendererTest.hx	/^		var exists = directRenderer.render;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DirectRendererTest.hx	/^		var exists = directRenderer;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectContainerTest.hx	/^		var exists = sprite.areInaccessibleObjectsUnderPoint;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectContainerTest.hx	/^		var exists = sprite.mouseChildren;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectContainerTest.hx	/^		var exists = sprite.tabChildren;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var exists = sprite.alpha;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var exists = sprite.blendMode;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var exists = sprite.cacheAsBitmap;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var exists = sprite.filters;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var exists = sprite.getBounds;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var exists = sprite.getRect;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var exists = sprite.globalToLocal;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var exists = sprite.height;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var exists = sprite.hitTestObject;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var exists = sprite.hitTestPoint;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var exists = sprite.loaderInfo;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var exists = sprite.localToGlobal;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var exists = sprite.mask;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var exists = sprite.mouseChildren;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var exists = sprite.mouseX;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var exists = sprite.mouseY;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var exists = sprite.name;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var exists = sprite.opaqueBackground;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var exists = sprite.parent;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var exists = sprite.root;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var exists = sprite.scale9Grid;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var exists = sprite.scaleX;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var exists = sprite.scaleY;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var exists = sprite.scrollRect;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var exists = sprite.stage;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var exists = sprite.transform;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var exists = sprite.visible;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var exists = sprite.width;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var exists = sprite.x;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var exists = sprite.y;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsBitmapFillTest.hx	/^		var exists = bitmapFill.bitmapData;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsBitmapFillTest.hx	/^		var exists = bitmapFill.matrix;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsBitmapFillTest.hx	/^		var exists = bitmapFill.repeat;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsBitmapFillTest.hx	/^		var exists = bitmapFill.smooth;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsBitmapFillTest.hx	/^		var exists = bitmapFill;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsGradientFillTest.hx	/^		var exists = gradientFill.alphas;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsGradientFillTest.hx	/^		var exists = gradientFill.colors;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsGradientFillTest.hx	/^		var exists = gradientFill.focalPointRatio;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsGradientFillTest.hx	/^		var exists = gradientFill.interpolationMethod;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsGradientFillTest.hx	/^		var exists = gradientFill.matrix;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsGradientFillTest.hx	/^		var exists = gradientFill.ratios;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsGradientFillTest.hx	/^		var exists = gradientFill.spreadMethod;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsGradientFillTest.hx	/^		var exists = gradientFill.type;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsPathTest.hx	/^		var exists = graphicsPath.commands;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsPathTest.hx	/^		var exists = graphicsPath.curveTo;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsPathTest.hx	/^		var exists = graphicsPath.data;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsPathTest.hx	/^		var exists = graphicsPath.lineTo;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsPathTest.hx	/^		var exists = graphicsPath.moveTo;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsPathTest.hx	/^		var exists = graphicsPath.wideLineTo;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsPathTest.hx	/^		var exists = graphicsPath.wideMoveTo;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsPathTest.hx	/^		var exists = graphicsPath.winding;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsSolidFillTest.hx	/^		var exists = solidFill.alpha;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsSolidFillTest.hx	/^		var exists = solidFill.color;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsStrokeTest.hx	/^		var exists = stroke.caps;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsStrokeTest.hx	/^		var exists = stroke.fill;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsStrokeTest.hx	/^		var exists = stroke.joints;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsStrokeTest.hx	/^		var exists = stroke.miterLimit;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsStrokeTest.hx	/^		var exists = stroke.pixelHinting;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsStrokeTest.hx	/^		var exists = stroke.scaleMode;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsStrokeTest.hx	/^		var exists = stroke.thickness;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var exists = graphics.beginBitmapFill;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var exists = graphics.beginFill;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var exists = graphics.beginGradientFill;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var exists = graphics.clear;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var exists = graphics.curveTo;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var exists = graphics.drawCircle;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var exists = graphics.drawEllipse;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var exists = graphics.drawGraphicsData;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var exists = graphics.drawPath;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var exists = graphics.drawRect;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var exists = graphics.drawRoundRect;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var exists = graphics.drawRoundRectComplex;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var exists = graphics.drawTriangles;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var exists = graphics.endFill;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var exists = graphics.lineBitmapStyle;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var exists = graphics.lineGradientStyle;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var exists = graphics.lineStyle;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var exists = graphics.lineTo;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var exists = graphics.moveTo;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/InteractiveObjectTest.hx	/^		var exists = sprite.doubleClickEnabled;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/InteractiveObjectTest.hx	/^		var exists = sprite.mouseEnabled;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/InteractiveObjectTest.hx	/^		var exists = sprite.needsSoftKeyboard;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/InteractiveObjectTest.hx	/^		var exists = sprite.requestSoftKeyboard;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/LoaderInfoTest.hx	/^		var exists = loader.contentLoaderInfo.applicationDomain;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/LoaderInfoTest.hx	/^		var exists = loader.contentLoaderInfo.bytes;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/LoaderInfoTest.hx	/^		var exists = loader.contentLoaderInfo.bytesLoaded;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/LoaderInfoTest.hx	/^		var exists = loader.contentLoaderInfo.bytesTotal;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/LoaderInfoTest.hx	/^		var exists = loader.contentLoaderInfo.content;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/LoaderInfoTest.hx	/^		var exists = loader.contentLoaderInfo.contentType;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/LoaderInfoTest.hx	/^		var exists = loader.contentLoaderInfo.frameRate;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/LoaderInfoTest.hx	/^		var exists = loader.contentLoaderInfo.height;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/LoaderInfoTest.hx	/^		var exists = loader.contentLoaderInfo.loader;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/LoaderInfoTest.hx	/^		var exists = loader.contentLoaderInfo.loaderURL;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/LoaderInfoTest.hx	/^		var exists = loader.contentLoaderInfo.parameters;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/LoaderInfoTest.hx	/^		var exists = loader.contentLoaderInfo.parentAllowsChild;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/LoaderInfoTest.hx	/^		var exists = loader.contentLoaderInfo.sameDomain;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/LoaderInfoTest.hx	/^		var exists = loader.contentLoaderInfo.sharedEvents;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/LoaderInfoTest.hx	/^		var exists = loader.contentLoaderInfo.url;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/LoaderInfoTest.hx	/^		var exists = loader.contentLoaderInfo.width;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/MovieClipTest.hx	/^		var exists = movieClip.currentFrame;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/MovieClipTest.hx	/^		var exists = movieClip.currentFrameLabel;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/MovieClipTest.hx	/^		var exists = movieClip.currentLabel;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/MovieClipTest.hx	/^		var exists = movieClip.currentLabels;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/MovieClipTest.hx	/^		var exists = movieClip.enabled;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/MovieClipTest.hx	/^		var exists = movieClip.framesLoaded;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/MovieClipTest.hx	/^		var exists = movieClip.gotoAndPlay;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/MovieClipTest.hx	/^		var exists = movieClip.gotoAndStop;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/MovieClipTest.hx	/^		var exists = movieClip.nextFrame;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/MovieClipTest.hx	/^		var exists = movieClip.play;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/MovieClipTest.hx	/^		var exists = movieClip.prevFrame;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/MovieClipTest.hx	/^		var exists = movieClip.stop;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/MovieClipTest.hx	/^		var exists = movieClip.totalFrames;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/ShapeTest.hx	/^		var exists = shape.graphics;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/SimpleButtonTest.hx	/^		var exists = simpleButton.downState;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/SimpleButtonTest.hx	/^		var exists = simpleButton.enabled;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/SimpleButtonTest.hx	/^		var exists = simpleButton.hitTestState;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/SimpleButtonTest.hx	/^		var exists = simpleButton.overState;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/SimpleButtonTest.hx	/^		var exists = simpleButton.soundTransform;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/SimpleButtonTest.hx	/^		var exists = simpleButton.trackAsMenu;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/SimpleButtonTest.hx	/^		var exists = simpleButton.upState;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/SimpleButtonTest.hx	/^		var exists = simpleButton.useHandCursor;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/SpriteTest.hx	/^		var exists = sprite.buttonMode;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/SpriteTest.hx	/^		var exists = sprite.graphics;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/SpriteTest.hx	/^		var exists = sprite.startDrag;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/SpriteTest.hx	/^		var exists = sprite.stopDrag;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/SpriteTest.hx	/^		var exists = sprite.useHandCursor;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/StageTest.hx	/^		var exists = Lib.current.stage.align;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/StageTest.hx	/^		var exists = Lib.current.stage.allowsFullScreen;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/StageTest.hx	/^		var exists = Lib.current.stage.color;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/StageTest.hx	/^		var exists = Lib.current.stage.displayState;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/StageTest.hx	/^		var exists = Lib.current.stage.focus;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/StageTest.hx	/^		var exists = Lib.current.stage.frameRate;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/StageTest.hx	/^		var exists = Lib.current.stage.invalidate;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/StageTest.hx	/^		var exists = Lib.current.stage.quality;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/StageTest.hx	/^		var exists = Lib.current.stage.scaleMode;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/StageTest.hx	/^		var exists = Lib.current.stage.stageFocusRect;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/StageTest.hx	/^		var exists = Lib.current.stage.stageHeight;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/StageTest.hx	/^		var exists = Lib.current.stage.stageWidth;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/TilesheetTest.hx	/^		var exists = tilesheet.addTileRect;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/TilesheetTest.hx	/^		var exists = tilesheet.drawTiles;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/ErrorTest.hx	/^		var exists = error.errorID;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/ErrorTest.hx	/^		var exists = error.getStackTrace;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/ErrorTest.hx	/^		var exists = error.message;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/ErrorTest.hx	/^		var exists = error.name;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/AccelerometerEventTest.hx	/^		var exists = accelerometerEvent.accelerationX;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/AccelerometerEventTest.hx	/^		var exists = accelerometerEvent.accelerationY;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/AccelerometerEventTest.hx	/^		var exists = accelerometerEvent.accelerationZ;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/AccelerometerEventTest.hx	/^		var exists = accelerometerEvent.timestamp;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/ErrorEventTest.hx	/^		var exists = errorEvent.errorID;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventTest.hx	/^		var exists = event.bubbles;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventTest.hx	/^		var exists = event.cancelable;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventTest.hx	/^		var exists = event.clone;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventTest.hx	/^		var exists = event.currentTarget;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventTest.hx	/^		var exists = event.eventPhase;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventTest.hx	/^		var exists = event.isDefaultPrevented;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventTest.hx	/^		var exists = event.stopImmediatePropagation;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventTest.hx	/^		var exists = event.stopPropagation;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventTest.hx	/^		var exists = event.target;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventTest.hx	/^		var exists = event.type;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/FocusEventTest.hx	/^		var exists = focusEvent.keyCode;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/FocusEventTest.hx	/^		var exists = focusEvent.relatedObject;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/FocusEventTest.hx	/^		var exists = focusEvent.shiftKey;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/HTTPStatusEventTest.hx	/^		var exists = httpStatusEvent.responseHeaders;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/HTTPStatusEventTest.hx	/^		var exists = httpStatusEvent.responseURL;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/HTTPStatusEventTest.hx	/^		var exists = httpStatusEvent.status;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/JoystickEventTest.hx	/^		var exists = joystickEvent.axis;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/JoystickEventTest.hx	/^		var exists = joystickEvent.device;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/JoystickEventTest.hx	/^		var exists = joystickEvent.id;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/JoystickEventTest.hx	/^		var exists = joystickEvent.x;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/JoystickEventTest.hx	/^		var exists = joystickEvent.y;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/JoystickEventTest.hx	/^		var exists = joystickEvent.z;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/KeyboardEventTest.hx	/^		var exists = keyboardEvent.altKey;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/KeyboardEventTest.hx	/^		var exists = keyboardEvent.charCode;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/KeyboardEventTest.hx	/^		var exists = keyboardEvent.ctrlKey;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/KeyboardEventTest.hx	/^		var exists = keyboardEvent.keyCode;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/KeyboardEventTest.hx	/^		var exists = keyboardEvent.shiftKey;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/MouseEventTest.hx	/^		var exists = mouseEvent.altKey;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/MouseEventTest.hx	/^		var exists = mouseEvent.buttonDown;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/MouseEventTest.hx	/^		var exists = mouseEvent.ctrlKey;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/MouseEventTest.hx	/^		var exists = mouseEvent.delta;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/MouseEventTest.hx	/^		var exists = mouseEvent.localX;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/MouseEventTest.hx	/^		var exists = mouseEvent.localY;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/MouseEventTest.hx	/^		var exists = mouseEvent.relatedObject;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/MouseEventTest.hx	/^		var exists = mouseEvent.shiftKey;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/MouseEventTest.hx	/^		var exists = mouseEvent.stageX;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/MouseEventTest.hx	/^		var exists = mouseEvent.stageY;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/MouseEventTest.hx	/^		var exists = mouseEvent.updateAfterEvent;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/ProgressEventTest.hx	/^		var exists = progressEvent.bytesLoaded;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/ProgressEventTest.hx	/^		var exists = progressEvent.bytesTotal;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/SampleDataEventTest.hx	/^		var exists = sampleDataEvent.data;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/SampleDataEventTest.hx	/^		var exists = sampleDataEvent.position;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/TextEventTest.hx	/^		var exists = textEvent.text;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/TimerEventTest.hx	/^		var exists = timerEvent.updateAfterEvent;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/TouchEventTest.hx	/^		var exists = touchEvent.altKey;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/TouchEventTest.hx	/^		var exists = touchEvent.ctrlKey;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/TouchEventTest.hx	/^		var exists = touchEvent.isPrimaryTouchPoint;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/TouchEventTest.hx	/^		var exists = touchEvent.localX;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/TouchEventTest.hx	/^		var exists = touchEvent.localY;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/TouchEventTest.hx	/^		var exists = touchEvent.pressure;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/TouchEventTest.hx	/^		var exists = touchEvent.relatedObject;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/TouchEventTest.hx	/^		var exists = touchEvent.shiftKey;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/TouchEventTest.hx	/^		var exists = touchEvent.sizeX;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/TouchEventTest.hx	/^		var exists = touchEvent.sizeY;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/TouchEventTest.hx	/^		var exists = touchEvent.stageX;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/TouchEventTest.hx	/^		var exists = touchEvent.stageY;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/TouchEventTest.hx	/^		var exists = touchEvent.touchPointID;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/TouchEventTest.hx	/^		var exists = touchEvent.updateAfterEvent;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/external/ExternalInterfaceTest.hx	/^		var exists = ExternalInterface.addCallback;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/external/ExternalInterfaceTest.hx	/^		var exists = ExternalInterface.available;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/external/ExternalInterfaceTest.hx	/^		var exists = ExternalInterface.call;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/external/ExternalInterfaceTest.hx	/^		var exists = ExternalInterface.marshallExceptions;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/external/ExternalInterfaceTest.hx	/^		var exists = ExternalInterface.objectID;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/BitmapFilterTest.hx	/^		var exists = bitmapFilter.clone;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/BlurFilterTest.hx	/^		var exists = blurFilter.blurX;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/BlurFilterTest.hx	/^		var exists = blurFilter.blurY;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/BlurFilterTest.hx	/^		var exists = blurFilter.quality;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/ColorMatrixFilterTest.hx	/^		var exists = colorMatrixFilter.clone;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/ColorMatrixFilterTest.hx	/^		var exists = colorMatrixFilter.matrix;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/DropShadowFilterTest.hx	/^		var exists = dropShadowFilter.alpha;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/DropShadowFilterTest.hx	/^		var exists = dropShadowFilter.angle;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/DropShadowFilterTest.hx	/^		var exists = dropShadowFilter.blurX;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/DropShadowFilterTest.hx	/^		var exists = dropShadowFilter.blurY;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/DropShadowFilterTest.hx	/^		var exists = dropShadowFilter.color;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/DropShadowFilterTest.hx	/^		var exists = dropShadowFilter.distance;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/DropShadowFilterTest.hx	/^		var exists = dropShadowFilter.hideObject;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/DropShadowFilterTest.hx	/^		var exists = dropShadowFilter.inner;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/DropShadowFilterTest.hx	/^		var exists = dropShadowFilter.knockout;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/DropShadowFilterTest.hx	/^		var exists = dropShadowFilter.quality;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/DropShadowFilterTest.hx	/^		var exists = dropShadowFilter.strength;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/GlowFilterTest.hx	/^		var exists = glowFilter.alpha;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/GlowFilterTest.hx	/^		var exists = glowFilter.blurX;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/GlowFilterTest.hx	/^		var exists = glowFilter.blurY;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/GlowFilterTest.hx	/^		var exists = glowFilter.color;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/GlowFilterTest.hx	/^		var exists = glowFilter.inner;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/GlowFilterTest.hx	/^		var exists = glowFilter.knockout;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/GlowFilterTest.hx	/^		var exists = glowFilter.quality;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/GlowFilterTest.hx	/^		var exists = glowFilter.strength;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/ColorTransformTest.hx	/^		var exists = colorTransform.alphaMultiplier;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/ColorTransformTest.hx	/^		var exists = colorTransform.alphaOffset;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/ColorTransformTest.hx	/^		var exists = colorTransform.blueMultiplier;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/ColorTransformTest.hx	/^		var exists = colorTransform.blueOffset;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/ColorTransformTest.hx	/^		var exists = colorTransform.color;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/ColorTransformTest.hx	/^		var exists = colorTransform.concat;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/ColorTransformTest.hx	/^		var exists = colorTransform.greenMultiplier;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/ColorTransformTest.hx	/^		var exists = colorTransform.greenOffset;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/ColorTransformTest.hx	/^		var exists = colorTransform.redMultiplier;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/ColorTransformTest.hx	/^		var exists = colorTransform.redOffset;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var exists = Matrix3D.interpolate;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var exists = matrix3D.appendRotation;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var exists = matrix3D.appendScale;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var exists = matrix3D.appendTranslation;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var exists = matrix3D.clone;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var exists = matrix3D.copyColumnFrom;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var exists = matrix3D.copyColumnTo;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var exists = matrix3D.copyFrom;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var exists = matrix3D.copyRowFrom;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var exists = matrix3D.copyRowTo;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var exists = matrix3D.copyToMatrix3D;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var exists = matrix3D.decompose;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var exists = matrix3D.deltaTransformVector;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var exists = matrix3D.determinant;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var exists = matrix3D.identity;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var exists = matrix3D.interpolateTo;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var exists = matrix3D.invert;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var exists = matrix3D.pointAt;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var exists = matrix3D.position;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var exists = matrix3D.prepend;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var exists = matrix3D.prependRotation;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var exists = matrix3D.prependScale;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var exists = matrix3D.prependTranslation;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var exists = matrix3D.rawData;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var exists = matrix3D.recompose;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var exists = matrix3D.transformVector;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var exists = matrix3D.transformVectors;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var exists = matrix3D.transpose;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/MatrixTest.hx	/^		var exists = matrix.a;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/MatrixTest.hx	/^		var exists = matrix.b;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/MatrixTest.hx	/^		var exists = matrix.c;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/MatrixTest.hx	/^		var exists = matrix.clone;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/MatrixTest.hx	/^		var exists = matrix.concat;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/MatrixTest.hx	/^		var exists = matrix.copyColumnFrom;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/MatrixTest.hx	/^		var exists = matrix.copyColumnTo;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/MatrixTest.hx	/^		var exists = matrix.copyFrom;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/MatrixTest.hx	/^		var exists = matrix.copyRowFrom;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/MatrixTest.hx	/^		var exists = matrix.copyRowTo;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/MatrixTest.hx	/^		var exists = matrix.createBox;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/MatrixTest.hx	/^		var exists = matrix.createGradientBox;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/MatrixTest.hx	/^		var exists = matrix.d;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/MatrixTest.hx	/^		var exists = matrix.deltaTransformPoint;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/MatrixTest.hx	/^		var exists = matrix.identity;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/MatrixTest.hx	/^		var exists = matrix.invert;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/MatrixTest.hx	/^		var exists = matrix.rotate;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/MatrixTest.hx	/^		var exists = matrix.scale;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/MatrixTest.hx	/^		var exists = matrix.setTo;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/MatrixTest.hx	/^		var exists = matrix.transformPoint;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/MatrixTest.hx	/^		var exists = matrix.translate;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/MatrixTest.hx	/^		var exists = matrix.tx;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/MatrixTest.hx	/^		var exists = matrix.ty;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/PointTest.hx	/^		var exists = point.setTo;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/RectangleTest.hx	/^		var exists = rectangle.copyFrom;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/RectangleTest.hx	/^		var exists = rectangle.setTo;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/TransformTest.hx	/^		var exists = transform.colorTransform;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/TransformTest.hx	/^		var exists = transform.concatenatedColorTransform;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/TransformTest.hx	/^		var exists = transform.concatenatedMatrix;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/TransformTest.hx	/^		var exists = transform.matrix;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/TransformTest.hx	/^		var exists = transform.pixelBounds;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Vector3DTest.hx	/^		var exists = Vector3D.angleBetween;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Vector3DTest.hx	/^		var exists = Vector3D.distance;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Vector3DTest.hx	/^		var exists = vector3D.add;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Vector3DTest.hx	/^		var exists = vector3D.clone;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Vector3DTest.hx	/^		var exists = vector3D.copyFrom;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Vector3DTest.hx	/^		var exists = vector3D.crossProduct;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Vector3DTest.hx	/^		var exists = vector3D.decrementBy;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Vector3DTest.hx	/^		var exists = vector3D.dotProduct;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Vector3DTest.hx	/^		var exists = vector3D.equals;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Vector3DTest.hx	/^		var exists = vector3D.incrementBy;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Vector3DTest.hx	/^		var exists = vector3D.length;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Vector3DTest.hx	/^		var exists = vector3D.lengthSquared;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Vector3DTest.hx	/^		var exists = vector3D.nearEquals;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Vector3DTest.hx	/^		var exists = vector3D.negate;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Vector3DTest.hx	/^		var exists = vector3D.normalize;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Vector3DTest.hx	/^		var exists = vector3D.project;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Vector3DTest.hx	/^		var exists = vector3D.scaleBy;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Vector3DTest.hx	/^		var exists = vector3D.setTo;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Vector3DTest.hx	/^		var exists = vector3D.subtract;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Vector3DTest.hx	/^		var exists = vector3D.w;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Vector3DTest.hx	/^		var exists = vector3D.x;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Vector3DTest.hx	/^		var exists = vector3D.y;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Vector3DTest.hx	/^		var exists = vector3D.z;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/ID3InfoTest.hx	/^		var exists = id3Info.album;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/ID3InfoTest.hx	/^		var exists = id3Info.artist;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/ID3InfoTest.hx	/^		var exists = id3Info.comment;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/ID3InfoTest.hx	/^		var exists = id3Info.genre;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/ID3InfoTest.hx	/^		var exists = id3Info.songName;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/ID3InfoTest.hx	/^		var exists = id3Info.track;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/ID3InfoTest.hx	/^		var exists = id3Info.year;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/SoundTest.hx	/^		var exists = sound.bytesLoaded;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/SoundTest.hx	/^		var exists = sound.bytesTotal;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/SoundTest.hx	/^		var exists = sound.close;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/SoundTest.hx	/^		var exists = sound.id3;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/SoundTest.hx	/^		var exists = sound.isBuffering;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/SoundTest.hx	/^		var exists = sound.length;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/SoundTest.hx	/^		var exists = sound.load;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/SoundTest.hx	/^		var exists = sound.loadCompressedDataFromByteArray;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/SoundTest.hx	/^		var exists = sound.loadPCMFromByteArray;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/SoundTest.hx	/^		var exists = sound.play;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/SoundTest.hx	/^		var exists = sound.url;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/SoundTransformTest.hx	/^		var exists = soundTransform.leftToLeft;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/SoundTransformTest.hx	/^		var exists = soundTransform.leftToRight;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/SoundTransformTest.hx	/^		var exists = soundTransform.pan;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/SoundTransformTest.hx	/^		var exists = soundTransform.rightToLeft;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/SoundTransformTest.hx	/^		var exists = soundTransform.rightToRight;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/SoundTransformTest.hx	/^		var exists = soundTransform.volume;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/SharedObjectTest.hx	/^		var exists = SharedObject.getLocal;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/SharedObjectTest.hx	/^		var exists = sharedObject.clear;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/SharedObjectTest.hx	/^		var exists = sharedObject.data;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/SharedObjectTest.hx	/^		var exists = sharedObject.flush;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/SharedObjectTest.hx	/^		var exists = sharedObject.setProperty;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/SharedObjectTest.hx	/^		var exists = sharedObject.size;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLLoaderTest.hx	/^		var exists = urlLoader.bytesLoaded;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLLoaderTest.hx	/^		var exists = urlLoader.bytesTotal;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLLoaderTest.hx	/^		var exists = urlLoader.close;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLLoaderTest.hx	/^		var exists = urlLoader.data;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLLoaderTest.hx	/^		var exists = urlLoader.dataFormat;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLLoaderTest.hx	/^		var exists = urlLoader.load;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLRequestHeaderTest.hx	/^		var exists = urlRequestHeader.name;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLRequestHeaderTest.hx	/^		var exists = urlRequestHeader.value;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLRequestTest.hx	/^		var exists = urlRequest.contentType;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLRequestTest.hx	/^		var exists = urlRequest.data;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLRequestTest.hx	/^		var exists = urlRequest.method;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLRequestTest.hx	/^		var exists = urlRequest.requestHeaders;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLRequestTest.hx	/^		var exists = urlRequest.url;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLRequestTest.hx	/^		var exists = urlRequest.userAgent;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLVariablesTest.hx	/^		var exists = urlVariables.decode;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/sensors/AccelerometerTest.hx	/^		var exists = Accelerometer.isSupported;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/sensors/AccelerometerTest.hx	/^		var exists = accelerometer.muted;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/sensors/AccelerometerTest.hx	/^		var exists = accelerometer.setRequestedUpdateInterval;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/ApplicationDomainTest.hx	/^		var exists = ApplicationDomain.currentDomain;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/ApplicationDomainTest.hx	/^		var exists = applicationDomain.getDefinition;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/ApplicationDomainTest.hx	/^		var exists = applicationDomain.hasDefinition;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/ApplicationDomainTest.hx	/^		var exists = applicationDomain.parentDomain;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/CapabilitiesTest.hx	/^		var exists = Capabilities.language;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/CapabilitiesTest.hx	/^		var exists = Capabilities.screenDPI;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/CapabilitiesTest.hx	/^		var exists = Capabilities.screenResolutionX;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/CapabilitiesTest.hx	/^		var exists = Capabilities.screenResolutionY;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/LoaderContextTest.hx	/^		var exists = loaderContext.allowCodeImport;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/LoaderContextTest.hx	/^		var exists = loaderContext.allowLoadBytesCodeExecution;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/LoaderContextTest.hx	/^		var exists = loaderContext.applicationDomain;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/LoaderContextTest.hx	/^		var exists = loaderContext.checkPolicyFile;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/LoaderContextTest.hx	/^		var exists = loaderContext.securityDomain;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/SecurityDomainTest.hx	/^		var exists = SecurityDomain.currentDomain;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/SystemTest.hx	/^		var exists = System.exit;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/SystemTest.hx	/^		var exists = System.gc;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/SystemTest.hx	/^		var exists = System.totalMemory;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/FontTest.hx	/^		var exists = Font.enumerateFonts;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/FontTest.hx	/^		var exists = Font.registerFont;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/FontTest.hx	/^		var exists = font.fontName;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/FontTest.hx	/^		var exists = font.fontStyle;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/FontTest.hx	/^		var exists = font.fontType;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFieldTest.hx	/^		var exists = textField.appendText;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFieldTest.hx	/^		var exists = textField.defaultTextFormat;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFieldTest.hx	/^		var exists = textField.displayAsPassword;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFieldTest.hx	/^		var exists = textField.embedFonts;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFieldTest.hx	/^		var exists = textField.getLineMetrics;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFieldTest.hx	/^		var exists = textField.getLineOffset;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFieldTest.hx	/^		var exists = textField.getLineText;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFieldTest.hx	/^		var exists = textField.getTextFormat;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFieldTest.hx	/^		var exists = textField.gridFitType;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFieldTest.hx	/^		var exists = textField.htmlText;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFieldTest.hx	/^		var exists = textField.maxChars;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFieldTest.hx	/^		var exists = textField.multiline;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFieldTest.hx	/^		var exists = textField.selectable;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFieldTest.hx	/^		var exists = textField.setSelection;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFieldTest.hx	/^		var exists = textField.setTextFormat;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFieldTest.hx	/^		var exists = textField.sharpness;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFieldTest.hx	/^		var exists = textField.text;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFieldTest.hx	/^		var exists = textField.textColor;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFieldTest.hx	/^		var exists = textField.textHeight;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFieldTest.hx	/^		var exists = textField.textWidth;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFieldTest.hx	/^		var exists = textField.type;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFieldTest.hx	/^		var exists = textField.wordWrap;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFormatTest.hx	/^		var exists = textFormat.align;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFormatTest.hx	/^		var exists = textFormat.blockIndent;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFormatTest.hx	/^		var exists = textFormat.bold;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFormatTest.hx	/^		var exists = textFormat.bullet;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFormatTest.hx	/^		var exists = textFormat.color;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFormatTest.hx	/^		var exists = textFormat.font;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFormatTest.hx	/^		var exists = textFormat.indent;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFormatTest.hx	/^		var exists = textFormat.italic;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFormatTest.hx	/^		var exists = textFormat.kerning;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFormatTest.hx	/^		var exists = textFormat.leading;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFormatTest.hx	/^		var exists = textFormat.leftMargin;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFormatTest.hx	/^		var exists = textFormat.letterSpacing;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFormatTest.hx	/^		var exists = textFormat.rightMargin;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFormatTest.hx	/^		var exists = textFormat.size;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFormatTest.hx	/^		var exists = textFormat.tabStops;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFormatTest.hx	/^		var exists = textFormat.target;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFormatTest.hx	/^		var exists = textFormat.underline;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFormatTest.hx	/^		var exists = textFormat.url;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextLineMetricsTest.hx	/^		var exists = textLineMetrics.ascent;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextLineMetricsTest.hx	/^		var exists = textLineMetrics.descent;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextLineMetricsTest.hx	/^		var exists = textLineMetrics.height;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextLineMetricsTest.hx	/^		var exists = textLineMetrics.leading;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextLineMetricsTest.hx	/^		var exists = textLineMetrics.width;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextLineMetricsTest.hx	/^		var exists = textLineMetrics.x;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/ui/KeyboardTest.hx	/^		var exists = Keyboard.A;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/ui/MouseTest.hx	/^		var exists = Mouse.hide;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/ui/MouseTest.hx	/^		var exists = Mouse.show;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/ui/MultitouchTest.hx	/^		var exists = Multitouch.inputMode;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/ui/MultitouchTest.hx	/^		var exists = Multitouch.supportedGestures;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/ui/MultitouchTest.hx	/^		var exists = Multitouch.supportsGestureEvents;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/ui/MultitouchTest.hx	/^		var exists = Multitouch.supportsTouchEvents;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/TimerTest.hx	/^		var exists = timer.currentCount;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/TimerTest.hx	/^		var exists = timer.delay;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/TimerTest.hx	/^		var exists = timer.repeatCount;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/TimerTest.hx	/^		var exists = timer.reset;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/TimerTest.hx	/^		var exists = timer.running;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/TimerTest.hx	/^		var exists = timer.start;$/;"	v
exists	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/TimerTest.hx	/^		var exists = timer.stop;$/;"	v
exists	/usr/lib/haxe/std/Map.hx	/^	public function exists(k:K):Bool;$/;"	f
exists	/usr/lib/haxe/std/Map.hx	/^	public inline function exists(key:K) return this.exists(key);$/;"	f
exists	/usr/lib/haxe/std/Xml.hx	/^	function exists( att : String ) : Bool;$/;"	f
exists	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^	public function exists(key:K) {$/;"	f
exists	/usr/lib/haxe/std/haxe/ds/HashMap.hx	/^	public inline function exists(k:K) {$/;"	f
exists	/usr/lib/haxe/std/haxe/ds/IntMap.hx	/^	public function exists( key : Int ) : Bool;$/;"	f
exists	/usr/lib/haxe/std/haxe/ds/ObjectMap.hx	/^	public function exists(key:K):Bool;$/;"	f
exists	/usr/lib/haxe/std/haxe/ds/StringMap.hx	/^	public function exists( key : String ) : Bool;$/;"	f
exists	/usr/lib/haxe/std/haxe/ds/WeakMap.hx	/^	public function exists(key:K):Bool {$/;"	f
exists	/usr/lib/haxe/std/sys/FileSystem.hx	/^	static function exists( path : String ) : Bool;$/;"	f
exists	/usr/lib/haxe/std/sys/db/TableCreate.hx	/^	public static function exists( manager : sys.db.Manager<Dynamic> ) : Bool {$/;"	f
existsDev	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var existsDev = defines.exists ("FIREFOX_MARKETPLACE_DEV_KEY") && defines.exists ("FIREFOX_MARKETPLACE_DEV_SECRET");$/;"	v
existsProd	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var existsProd = defines.exists ("FIREFOX_MARKETPLACE_KEY") && defines.exists ("FIREFOX_MARKETPLACE_SECRET");$/;"	v
exit	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	public static function exit (code:Int):Void {$/;"	f
exit	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	public static function exit ():Void {$/;"	f
exit	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/System.hx	/^	static public function exit (code:Int = 0) {$/;"	f
exit	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/System.hx	/^	public static function exit (code:Int):Void {$/;"	f
exit	/usr/lib/haxe/std/Sys.hx	/^	static function exit( code : Int ) : Void;$/;"	f
exitCode	/usr/lib/haxe/std/sys/io/Process.hx	/^	function exitCode() : Int;$/;"	f
exitEndIndex	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var exitEndIndex: Int = -1; \/\/ the first poly vertex above the edge$/;"	v
exitLoop	/usr/lib/haxe/std/neko/vm/Thread.hx	/^	public function exitLoop() {$/;"	f
exitSepN	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var exitSepN: Number = 0.0; \/\/ the depth of exitStartIndex under the edge (stored as a separation, so it's negative)$/;"	v
exitStartIndex	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var exitStartIndex: Int = -1; \/\/ the last poly vertex below the edge$/;"	v
exp	/usr/lib/haxe/std/Math.hx	/^	static function exp(v:Float):Float;$/;"	f
exp	/usr/lib/haxe/std/haxe/io/Input.hx	/^			var exp = (((bytes[0] << 1) & 0xFF) | (bytes[1] >> 7)) - 127;$/;"	v
exp	/usr/lib/haxe/std/haxe/io/Input.hx	/^		var exp = (((bytes[0] << 4) & 0x7FF) | (bytes[1] >> 4)) - 1023; \/\/ exponent = bits 1..11$/;"	v
exp	/usr/lib/haxe/std/haxe/io/Output.hx	/^		var exp = Math.floor(Math.log(Math.abs(x)) \/ LN2);$/;"	v
exp	/usr/lib/haxe/std/neko/vm/Loader.hx	/^		var exp = untyped l.loadmodule(modName.__s,if( loader == null ) l else loader.l);$/;"	v
exp	/usr/lib/haxe/std/neko/vm/Module.hx	/^		var exp = _module_exports(m);$/;"	v
expand	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^	public static function expand (path:String):String {$/;"	f
expect	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/FocusEventTest.hx	/^		var expect : Array<Dynamic> = [];$/;"	v
expected	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var expected = clone.rawData;$/;"	v
expected	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var expected = new Matrix3D([ -0.4, 0.5, 0, 0.1, 0.5, -1, 0.5, 0, 0, 0.5, -1, 0.5, 0.1, 0, 0.5, -0.4 ] );$/;"	v
expected	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var expected = new Matrix3D([ -24.418357849121094, 271.3417053222656, 3892.315185546875, 4, -43.601524353027344, 544.386474609375, 7804.5283203125, 8, -62.784690856933594, 817.4312744140625, 11716.7412109375, 12, -81.96785736083984, 1090.47607421875, 15628.9541015625, 16 ] );$/;"	v
expected	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var expected = new Matrix3D([ 64.28496551513672, 72.80441284179688, 81.32386779785156, 89.84331512451172, 2.8154678344726563, 3.088881254196167, 3.362294912338257, 3.635709047317505, -5.6544413566589355, -4.923484802246094, -4.19252872467041, -3.461571216583252, 9090.5439453125, 10123.5390625, 11156.533203125, 12189.5283203125 ] );$/;"	v
expected	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var expected = new Vector3D(59.280609130859375, 2.3881149291992188, 50.9227294921875, 0 );$/;"	v
expected	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var expected:Vector<Float> = [ -1.6585435612600001, 68.0145399603, 976.8979877785, 6.71389482185, 69.470946012, 995.6405996761, 15.086333204960003, 70.9273520637, 1014.3832115737 ];$/;"	v
expectedColor	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var expectedColor = color;$/;"	v
expectedRotatedMatrix3D	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var expectedRotatedMatrix3D = new Matrix3D([ -0.3636549711227417, -3.372683525085449, 5.835120677947998, 0, 0.21577900648117065, -0.3639894127845764, 0.28737783432006836, 0, 0.9405853152275085, 1.4176323413848877, 0.2845056653022766, 0, -126.25172424316406, -620.2042846679688, 740.5840454101563, 1 ] );$/;"	v
expectedRotatedMatrix3D	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var expectedRotatedMatrix3D = new Matrix3D([ 1.74116849899292, 0.3082742691040039, 3.5007357597351074, 0, -0.7260121703147888, -0.6244180798530579, -3.412437915802002, 0, 0.42952263355255127, -0.3345402479171753, -4.533524990081787, 0, -7.586604595184326, 67.77572631835938, 971.8057250976563, 1 ] );$/;"	v
expectedRotation	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var expectedRotation = v2[1];$/;"	v
expectedScale	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var expectedScale = v2[2];$/;"	v
expectedScaledMatrix3D	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var expectedScaledMatrix3D = new Matrix3D([ 3.5480880737304688, 2.196377754211426, 19.813880920410156, 0, 0.39492762088775635, -1.2332863807678223, 2.2054269313812256, 0, 10.703919410705566, 0, -5.587223052978516, 0, -7.586604595184326, 67.77572631835938, 971.8057250976563, 1 ] );$/;"	v
expectedScaledMatrix3D	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var expectedScaledMatrix3D = new Matrix3D([ 3.5480880737304688, 3.6606297492980957, 46.23238754272461, 0, 0.23695658147335052, -1.2332863807678223, 3.0875978469848633, 0, 4.587393760681152, 0, -5.587223052978516, 0, -22.75981330871582, 338.8786315917969, 6802.64013671875, 1 ] );$/;"	v
expectedSeq	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/FocusEventTest.hx	/^		var expectedSeq = [$/;"	v
expectedTranslatedMatrix3D	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var expectedTranslatedMatrix3D = new Matrix3D([ 1.182695984840393, 0.7321259379386902, 6.604626655578613, 0, 0.07898552715778351, -0.24665726721286774, 0.4410853981971741, 0, 1.529131293296814, 0, -0.7981747388839722, 0, 115.41339874267578, -388.2242736816406, 1760.8056640625, 1 ] );$/;"	v
expectedTranslatedMatrix3D	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var expectedTranslatedMatrix3D = new Matrix3D([ 1.182695984840393, 0.7321259379386902, 6.604626655578613, 0, 0.07898552715778351, -0.24665726721286774, 0.4410853981971741, 0, 1.529131293296814, 0, -0.7981747388839722, 0, 1308.352294921875, 270.30291748046875, 953.2799682617188, 1 ] );$/;"	v
expectedTranslation	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var expectedTranslation = v2[0];$/;"	v
expires	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthToken.hx	/^	public var expires(default, null):Int = -1;$/;"	v
explore	/usr/lib/haxe/std/neko/Web.hx	/^		var explore = function(data:String){$/;"	v
exportsTable	/usr/lib/haxe/std/neko/vm/Module.hx	/^	public function exportsTable() : Dynamic {$/;"	f
expose	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^			var expose = (access&ACC_PUBLIC)>0;$/;"	v
expose	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^			var expose = access == (ACC_PUBLIC|ACC_FINAL|ACC_STATIC);$/;"	v
expr	/usr/lib/haxe/std/haxe/Template.hx	/^		var expr = data;$/;"	v
expr	/usr/lib/haxe/std/haxe/Template.hx	/^	var expr : TemplateExpr;$/;"	v
expr	/usr/lib/haxe/std/haxe/macro/Expr.hx	/^	var expr : ExprDef;$/;"	v
expr	/usr/lib/haxe/std/haxe/macro/Expr.hx	/^	var expr : Null<Expr>;$/;"	v
expr	/usr/lib/haxe/std/haxe/macro/Expr.hx	/^	var expr: Null<Expr>;$/;"	v
expr	/usr/lib/haxe/std/haxe/macro/Format.hx	/^				var expr = str.substr(start, len);$/;"	v
expr	/usr/lib/haxe/std/haxe/macro/Format.hx	/^		var expr = null;$/;"	v
expr	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	function expr() : Null<TypedExpr>;$/;"	f
expr_float	/usr/lib/haxe/std/haxe/Template.hx	/^	static var expr_float = ~\/^([+-]?)(?=\\d|,\\d)\\d*(,\\d*)?([Ee]([+-]?\\d+))?$\/;$/;"	v
expr_int	/usr/lib/haxe/std/haxe/Template.hx	/^	static var expr_int = ~\/^[0-9]+$\/;$/;"	v
expr_splitter	/usr/lib/haxe/std/haxe/Template.hx	/^	static var expr_splitter = ~\/(\\(|\\)|[ \\r\\n\\t]*"[^"]*"[ \\r\\n\\t]*|[!+=\\\/><*.&|-]+)\/;$/;"	v
expr_trim	/usr/lib/haxe/std/haxe/Template.hx	/^	static var expr_trim = ~\/^[ ]*([^ ]+)[ ]*$\/;$/;"	v
ext	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^		var ext = inAsset.format;$/;"	v
ext	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/HTML5Platform.hx	/^					var ext = "." + Path.extension (asset.sourcePath);$/;"	v
ext	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^			var ext:Dynamic = GL.getExtension ("EXT_texture_filter_anisotropic");$/;"	v
ext	/usr/lib/haxe/std/haxe/io/Path.hx	/^	public var ext : String;$/;"	v
extend	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoPattern.hx	/^	public var extend (get, set):CairoExtend;$/;"	v
extendBounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	public function extendBounds (r:Rectangle) {$/;"	f
extendX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^		var extendX:Float = B2Settings.b2_aabbExtension + B2Settings.b2_aabbMultiplier * (displacement.x > 0?displacement.x: -displacement.x);$/;"	v
extendX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^		var extendX:Float = B2Settings.b2_aabbExtension;$/;"	v
extendY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^		var extendY:Float = B2Settings.b2_aabbExtension + B2Settings.b2_aabbMultiplier * (displacement.y > 0?displacement.y: -displacement.y);$/;"	v
extendY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^		var extendY:Float = B2Settings.b2_aabbExtension;$/;"	v
extension	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^		var extension = switch (bytes.length % 3) {$/;"	v
extension	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^			var extension = switch (bytes.length % 3) {$/;"	v
extension	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Asset.hx	/^			var extension = Path.extension (path);$/;"	v
extension	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AIRHelper.hx	/^		var extension = ".air";$/;"	v
extension	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^		var extension = Path.extension (source);$/;"	v
extension	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^		var extension = Path.extension (icon.path);$/;"	v
extension	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^			var extension = Path.extension (filename);$/;"	v
extension	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^		var extension = switch (bytes.length % 3) {$/;"	v
extension	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^					var extension = Path.extension (file);$/;"	v
extension	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^		var extension = StringTools.replace (file, "-", "_");$/;"	v
extension	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var extension = Path.extension (sourceZIP);$/;"	v
extension	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^		var extension = switch (bytes.length % 3) {$/;"	v
extension	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^		var extension = switch (bytes.length % 3) {$/;"	v
extension	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/LoaderInfo.hx	/^		var extension = dot > 0 ? __pendingURL.substr (dot + 1).toLowerCase () : "";$/;"	v
extension	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Loader.hx	/^		var extension = "";$/;"	v
extension	/usr/lib/haxe/std/haxe/io/Path.hx	/^	public static function extension( path ) {$/;"	f
extensionPath	/usr/lib/haxe/lib/lime/2,4,3/lime/project/NDLL.hx	/^	public var extensionPath:String;$/;"	v
extensionPath	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^		var extensionPath = "";$/;"	v
extensions	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^									var extensions = config.getArrayString ("android.extension");$/;"	v
extents	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2OBB.hx	/^	public var extents:B2Vec2;$/;"	v
externPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private var externPath:String;$/;"	v
extra	/usr/lib/haxe/std/haxe/Log.hx	/^				var extra:String = "";$/;"	v
extraBits	/usr/lib/haxe/lib/openfl/3,0,8/docs/haxe/Int32.hx	/^	static var extraBits : Int = untyped __php__("PHP_INT_SIZE") * 8 - 32;$/;"	v
extraBits	/usr/lib/haxe/std/haxe/Int32.hx	/^	static var extraBits : Int = untyped __php__("PHP_INT_SIZE") * 8 - 32;$/;"	v
extraFieldsLength	/usr/lib/haxe/std/haxe/zip/Writer.hx	/^			var extraFieldsLength = f.fields.length;$/;"	v
extra_bits	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^				var extra_bits = LEN_EXTRA_BITS_TBL[n];$/;"	v
extract	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/FlashAudioContext.hx	/^	public function extract (buffer:AudioBuffer, target:Dynamic \/*flash.utils.ByteArray*\/, length:Float, startPosition:Float = -1):Float {$/;"	f
extractAndroidClasses	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private function extractAndroidClasses()$/;"	f
extractBits	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^	private static function extractBits (data:ByteArray, offset:Int, len:Int):Bytes {$/;"	f
extractConfig	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^	static function extractConfig( obj : Dynamic ) : DispatchConfig {$/;"	f
extractFile	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static function extractFile (sourceZIP:String, targetPath:String, ignoreRootFolder:String = ""):Void {$/;"	f
extract_version	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^				var extract_version = ~\/^iPhoneOS(.*).sdk$\/;$/;"	v
extractedAndroidClasses	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private var extractedAndroidClasses:Bool;$/;"	v
extractedAndroidPaths	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private var extractedAndroidPaths:Array<String>;$/;"	v
ey	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^			var ey = __currentPath.points[l - 1];$/;"	v
ey1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var ey1:Float = e1Y;$/;"	v
ey2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var ey2:Float = e2Y;$/;"	v
eyeResolutionX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^	private static var eyeResolutionX:Float;$/;"	v
eyeResolutionY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^	private static var eyeResolutionY:Float;$/;"	v
eyeSeparation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3D.hx	/^	public static var eyeSeparation (get, set):Float;$/;"	v
f	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^			var f:Float = dB.x * r.x + dB.y * r.y;$/;"	v
f	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^					var f:Float = s_fcn.evaluate(s_xfA, s_xfB);$/;"	v
f	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var f:B2Fixture = body1.m_fixtureList;$/;"	v
f	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var f:B2Fixture = m_fixtureList;$/;"	v
f	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var f:B2Fixture;$/;"	v
f	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^			var f:B2Fixture = b.m_fixtureList;$/;"	v
f	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var f:B2Fixture = b.m_fixtureList;$/;"	v
f	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var f:B2Fixture;$/;"	v
f	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2GravityController.hx	/^		var f:B2Vec2 = null;$/;"	v
f	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRaycast.hx	/^			var f:B2Fixture = m_world.rayCastOne(p1, p2);$/;"	v
f	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^					var f = src.readDouble();$/;"	v
f	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^					var f = src.readFloat();$/;"	v
f	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^						var f = File.write (targetPath + "\/" + path, true);$/;"	v
f	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^						var f : Float = tileData[index + 2];$/;"	v
f	/usr/lib/haxe/std/haxe/Serializer.hx	/^			var f = vars[i].attribute("name").toString();$/;"	v
f	/usr/lib/haxe/std/haxe/Template.hx	/^			var f = Std.parseFloat(v);$/;"	v
f	/usr/lib/haxe/std/haxe/Template.hx	/^		var f = field.p;$/;"	v
f	/usr/lib/haxe/std/haxe/format/JsonParser.hx	/^		var f = Std.parseFloat(str.substr(start, pos - start));$/;"	v
f	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^			var f = fields[i];$/;"	v
f	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^		var f = sys.io.File.read(file, true);$/;"	v
f	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^		var f = sys.io.File.read(fileName,true);$/;"	v
f	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^		var f = try sys.io.File.getContent(Context.resolvePath(str)) catch( e : Dynamic ) Context.error(Std.string(e), fileName.pos);$/;"	v
f	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^			var f = field(c.name);$/;"	v
f	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^		var f = field(cf.name);$/;"	v
f	/usr/lib/haxe/std/haxe/remoting/ContextAll.hx	/^		var f = path2.pop();$/;"	v
f	/usr/lib/haxe/std/haxe/remoting/LocalConnection.hx	/^		var f = c.__data.results.get(id);$/;"	v
f	/usr/lib/haxe/std/haxe/remoting/SocketConnection.hx	/^		var f = __data.results.pop();$/;"	v
f	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^				var f = xclassfield(f,true);$/;"	v
f	/usr/lib/haxe/std/neko/Lib.hx	/^			var f = __dollar__objfields(v);$/;"	v
f	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^			var f = neko.vm.Thread.readMessage(true);$/;"	v
f	/usr/lib/haxe/std/sys/db/Manager.hx	/^			var f = Reflect.field(othis,hprop);$/;"	v
f	/usr/lib/haxe/std/sys/db/Manager.hx	/^			var f = Reflect.field(x,k);$/;"	v
f	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^						var f = g.functions.get(t.substr(1));$/;"	v
f	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^					var f = getField(tmp);$/;"	v
f	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^					var f = inf.hfields.get(n);$/;"	v
f	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var f = i.hfields.get(r.key);$/;"	v
f0	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^			var f0:B2Fixture = f;$/;"	v
f1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^				var f1:Float = separation;$/;"	v
f1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^			var f1:B2Vec2 = m_impulse.copy();$/;"	v
f1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^			var f1:B2Vec3 = m_impulse.copy();$/;"	v
f2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^				var f2:Float = s_fcn.evaluate(s_xfA, s_xfB);$/;"	v
f2r	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^			var f2r:Float;$/;"	v
f2r	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^			var f2r:B2Vec2 = m_K.solve22(new B2Vec2(), bX, bY);$/;"	v
fA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^				var fA:B2Fixture = edge.contact.getFixtureA();$/;"	v
fA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var fA:B2Fixture;$/;"	v
fB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^				var fB:B2Fixture = edge.contact.getFixtureB();$/;"	v
fB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var fB:B2Fixture;$/;"	v
fFreq	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var fFreq:Float, fPers:Float;$/;"	v
fPersMax	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private var fPersMax:Float;\/\/ 1 \/ max persistence$/;"	v
face	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^			var face = Font.fromFile (src);$/;"	v
faceCenterX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^			var faceCenterX:Float = 0.5 * (v1.x + v2.x);$/;"	v
faceCenterY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^			var faceCenterY:Float = 0.5 * (v1.y + v2.y);$/;"	v
faceIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^						var faceIndex = segment.indexOf ("face=");$/;"	v
factories	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/AbstractFont.hx	/^	private static var factories = new Map<String, FontFactory> ();$/;"	v
factory	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var factory = function (length:Int) { return new ByteArray (length); };$/;"	v
factory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var factory = function (length:Int) { return new ByteArray (length); };$/;"	v
failures	/usr/lib/haxe/std/haxe/unit/TestResult.hx	/^		var failures = 0;$/;"	v
family	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^			var family = "iphone";$/;"	v
family_name	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	var family_name:String;$/;"	v
family_name	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	var family_name: String;$/;"	v
fastCodeAt	/usr/lib/haxe/std/StringTools.hx	/^	public static inline function fastCodeAt( s : String, index : Int ) : Int untyped {$/;"	f
fastCompression	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/PNGEncoderOptions.hx	/^	public var fastCompression:Bool;$/;"	v
fastGet	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^	public inline static function fastGet( b : BytesData, pos : Int ) : Int {$/;"	f
fatAABB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^			var fatAABB:B2AABB = m_tree.getFatAABB(queryProxy);$/;"	v
fatalError	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function fatalError( msg : String, pos : Position ) : Dynamic {$/;"	f
fcc	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^		var fcc = String.fromCharCode;$/;"	v
fceil	/usr/lib/haxe/std/Math.hx	/^	static function fceil( v : Float ) : Float;$/;"	f
fceil	/usr/lib/haxe/std/Math.hx	/^	static inline function fceil( v : Float ) : Float {$/;"	f
fd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBuoyancy.hx	/^			var fd:B2FixtureDef;$/;"	v
fd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRaycast.hx	/^			var fd:B2FixtureDef = new B2FixtureDef();$/;"	v
fd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestStack.hx	/^			var fd:B2FixtureDef = new B2FixtureDef();$/;"	v
fd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^		var fd:B2FixtureDef;$/;"	v
fd1	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^		var fd1:B2FixtureDef = new B2FixtureDef();$/;"	v
fd2	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^		var fd2:B2FixtureDef = new B2FixtureDef();$/;"	v
fdict	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^			var fdict = flg & 32 != 0;$/;"	v
features	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ContactID.hx	/^	public var features:Features;$/;"	v
ff	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^	function ff(a, b, c, d, x, s, t){$/;"	f
ffdir	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^				var ffdir = Sys.getEnv("APPDATA")+"\/Mozilla\/Firefox\/Profiles";$/;"	v
ffdir	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^			var ffdir = Sys.getEnv("HOME")+"\/.mozilla\/firefox";$/;"	v
ffdir	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^			var ffdir = Sys.getEnv("HOME")+"\/Library\/Application Support\/Firefox\/Profiles";$/;"	v
ffloor	/usr/lib/haxe/std/Math.hx	/^	static function ffloor( v : Float ) : Float;$/;"	f
ffloor	/usr/lib/haxe/std/Math.hx	/^	static inline function ffloor( v : Float ) : Float {$/;"	f
fi	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^				var fi = getField(f);$/;"	v
fi	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var fi = inf.hfields.get(inf.key[0]);$/;"	v
fi	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var fi = {$/;"	v
fi	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var fi = inf.hfields.get(f.field);$/;"	v
field	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^			var field = tree.pop ();$/;"	v
field	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^		var field = tree.pop ();$/;"	v
field	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^					var field = argument.substr (2, equals - 2);$/;"	v
field	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^			var field = components.shift ().toLowerCase ();$/;"	v
field	/usr/lib/haxe/lib/lime/2,4,3/tools/RunScript.hx	/^					var field = arg.substr (2, equals - 2);$/;"	v
field	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^		var field = Reflect.field (object, method);$/;"	v
field	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	private var field:Dynamic;$/;"	v
field	/usr/lib/haxe/std/Reflect.hx	/^	public static function field( o : Dynamic, field : String ) : Dynamic;$/;"	f
field	/usr/lib/haxe/std/haxe/Template.hx	/^		var field = l.pop();$/;"	v
field	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^					var field = if( p.length > 1 && p[p.length-2].charAt(0) >= "a" ) null else p.pop();$/;"	v
field	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^					var field = p.pop();$/;"	v
field	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^		var field = field(f.name);$/;"	v
field	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^	function field(p) {$/;"	f
field	/usr/lib/haxe/std/haxe/macro/TypeTools.hx	/^		var field = (isStatic ? c.statics : c.fields).get().find(function(field) return field.name == name);$/;"	v
field	/usr/lib/haxe/std/haxe/unit/TestRunner.hx	/^			var field = Reflect.field(t, f);$/;"	v
fieldEq	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	public static function fieldEq( f1 : ClassField, f2 : ClassField ) {$/;"	f
fieldName	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^						var fieldName = split[0];$/;"	v
fieldOfView	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/PerspectiveProjection.hx	/^	public var fieldOfView (default, set_fieldOfView):Float;$/;"	v
fieldReference	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^						var fieldReference = Reflect.field (overrides, fieldName);$/;"	v
fieldValue	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^								var fieldValue = { pos: position, expr: EConst(CString(resourceType)) };$/;"	v
fieldValue	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^							var fieldValue = { pos: position, expr: EConst(CString(resourceName)) };$/;"	v
fieldValue	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^			var fieldValue = { pos: position, expr: EConst(CString(resourceName)) };$/;"	v
fieldValue	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^					var fieldValue = Reflect.field (project, field);$/;"	v
fieldValue	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^								var fieldValue = { pos: position, expr: EConst(CString(resourceType)) };$/;"	v
fieldValue	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^							var fieldValue = { pos: position, expr: EConst(CString(resourceName)) };$/;"	v
fieldValue	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^			var fieldValue = { pos: position, expr: EConst(CString(resourceName)) };$/;"	v
fieldValue	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^								var fieldValue = { pos: position, expr: EConst(CString(resourceType)) };$/;"	v
fieldValue	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^							var fieldValue = { pos: position, expr: EConst(CString(resourceName)) };$/;"	v
fieldValue	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^			var fieldValue = { pos: position, expr: EConst(CString(resourceName)) };$/;"	v
field_count	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var field_count = src.readUInt16();$/;"	v
fields	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^		var fields = Context.getBuildFields();$/;"	v
fields	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^		var fields = embedData (":file");$/;"	v
fields	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^		var fields = embedData (":image");$/;"	v
fields	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^		var fields = embedData (":image", true);$/;"	v
fields	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^		var fields = embedData (":sound");$/;"	v
fields	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^		var fields = null;$/;"	v
fields	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLVariables.hx	/^		var fields = Reflect.fields (this);$/;"	v
fields	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLVariables.hx	/^		var fields = inVars.split (";").join ("&").split ("&");$/;"	v
fields	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var fields : [];$/;"	v
fields	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var fields = new List();$/;"	v
fields	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var fields = readExtraFields(elen);$/;"	v
fields	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^		var fields = Context.getBuildFields();$/;"	v
fields	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^		var fields = embedData (":bitmap");$/;"	v
fields	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^		var fields = embedData (":bitmap", true);$/;"	v
fields	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^		var fields = embedData (":file");$/;"	v
fields	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^		var fields = embedData (":sound");$/;"	v
fields	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^		var fields = null;$/;"	v
fields	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^		var fields = Context.getBuildFields();$/;"	v
fields	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^		var fields = embedData (":bitmap");$/;"	v
fields	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^		var fields = embedData (":bitmap", true);$/;"	v
fields	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^		var fields = embedData (":file");$/;"	v
fields	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^		var fields = embedData (":sound");$/;"	v
fields	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^		var fields = null;$/;"	v
fields	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLVariables.hx	/^		var fields = Reflect.fields (this);$/;"	v
fields	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLVariables.hx	/^		var fields = inVars.split (";").join ("&").split ("&");$/;"	v
fields	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/ApplicationMain.hx	/^				var fields = Context.getBuildFields ();$/;"	v
fields	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^				var fields = Context.getBuildFields ();$/;"	v
fields	/usr/lib/haxe/std/Reflect.hx	/^	public static function fields( o : Dynamic ) : Array<String>;$/;"	f
fields	/usr/lib/haxe/std/haxe/macro/Expr.hx	/^	var fields : Array<Field>;$/;"	v
fields	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var fields : Array<ClassField>;$/;"	v
fields	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var fields : Ref<Array<ClassField>>;$/;"	v
fields	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	var fields : List<ClassField>;$/;"	v
fields	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^			var fields = new List();$/;"	v
fields	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		var fields = new List();$/;"	v
fields	/usr/lib/haxe/std/haxe/unit/TestRunner.hx	/^		var fields = Type.getInstanceFields(cl);$/;"	v
fields	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^				var fields = {};$/;"	v
fields	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^			var fields = [];$/;"	v
fields	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var fields = new List();$/;"	v
fields	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var fields = readExtraFields(elen);$/;"	v
fields	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var fields = new List();$/;"	v
fields	/usr/lib/haxe/std/sys/db/RecordInfos.hx	/^	var fields : Array<RecordField>;$/;"	v
fields	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^					var fields = switch( o.expr.expr ) {$/;"	v
fields	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var fields = new haxe.ds.StringMap();$/;"	v
fields	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var fields = Context.getBuildFields();$/;"	v
fields	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var fields = c.fields.get();$/;"	v
fieldsPos	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var fieldsPos = new haxe.ds.StringMap();$/;"	v
fieldsString	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^	function fieldsString( v : Dynamic, fields : Array<String> ) {$/;"	f
file	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^						var file = rie10.matched(2);$/;"	v
file	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URIParser.hx	/^	public var file:String;$/;"	v
file	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^		var file = "MyApplication";$/;"	v
file	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^			var file = File.write (targetPath, true);$/;"	v
file	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^				var file = StringTools.replace (title, " ", "");$/;"	v
file	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^		var file = StringTools.replace (title, " ", "");$/;"	v
file	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^						var file = dirs.pop ();$/;"	v
file	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^					var file = "";$/;"	v
file	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var file = File.read (sourceZIP, true);$/;"	v
file	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	static public var file (default, null):String;$/;"	v
file	/usr/lib/haxe/std/haxe/Http.hx	/^	var file : { param : String, filename : String, io : haxe.io.Input, size : Int, mimeType : String };$/;"	v
file	/usr/lib/haxe/std/haxe/io/Path.hx	/^	public var file : String;$/;"	v
file	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^		var file = Context.resolvePath(file);$/;"	v
file	/usr/lib/haxe/std/haxe/macro/Expr.hx	/^	var file : String;$/;"	v
file	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	var file : Null<String>;$/;"	v
fileContents	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^				var fileContents:String = File.getContent (source);$/;"	v
fileHeaderLength	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/format/BMP.hx	/^		var fileHeaderLength = 14;$/;"	v
fileID	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^				var fileID = "11C0000000000018" + StringHelper.getUniqueID ();$/;"	v
fileName	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^				var fileName = el.getFileName();$/;"	v
fileName	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^				var fileName = frame.GetFileName();$/;"	v
fileName	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^			var fileName = project.environment.get ("BLACKBERRY_NDK_ROOT");$/;"	v
fileName	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^					var fileName = Path.withoutDirectory (dependency.path);$/;"	v
fileName	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WindowsPlatform.hx	/^				var fileName = Path.withoutDirectory (dependency.path);$/;"	v
fileName	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^				var fileName = defines.get ("BLACKBERRY_NDK_ROOT");$/;"	v
fileName	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^				var fileName = entry.fileName;$/;"	v
fileName	/usr/lib/haxe/std/haxe/CallStack.hx	/^				var fileName = el.getFileName();$/;"	v
fileName	/usr/lib/haxe/std/haxe/CallStack.hx	/^				var fileName = frame.GetFileName();$/;"	v
fileName	/usr/lib/haxe/std/haxe/PosInfos.hx	/^	var fileName : String;$/;"	v
fileName	/usr/lib/haxe/std/haxe/zip/Entry.hx	/^	var fileName : String;$/;"	v
fileOutput	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^					var fileOutput:FileOutput = File.write (destination, true);$/;"	v
filePath	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^		var filePath = getFilePath (name, localPath);$/;"	v
fileSize	/usr/lib/haxe/std/haxe/zip/Entry.hx	/^	var fileSize : Int;$/;"	v
fileSystemType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/StorageVolume.hx	/^	public var fileSystemType (default, null):String;$/;"	v
fileTime	/usr/lib/haxe/std/haxe/zip/Entry.hx	/^	var fileTime : Date;$/;"	v
fileTransfer	/usr/lib/haxe/std/haxe/Http.hx	/^	public function fileTransfer( argname : String, filename : String, file : haxe.io.Input, size : Int, mimeType = "application\/octet-stream" ) {$/;"	f
fileTransfert	/usr/lib/haxe/std/haxe/Http.hx	/^	inline public function fileTransfert( argname : String, filename : String, file : haxe.io.Input, size : Int, mimeType = "application\/octet-stream" ) {$/;"	f
filename	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var filename = javaPath + inClass + ".class";$/;"	v
filename	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^			var filename = p.file + "." + p.ext;$/;"	v
files	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^		var files = FileSystem.readDirectory (path);$/;"	v
files	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^		var files = [ "include.lime", "include.nmml", "include.xml" ];$/;"	v
files	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^		var files = FileSystem.readDirectory (path);$/;"	v
files	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^		var files:Array <String> = null;$/;"	v
files	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^				var files = FileSystem.readDirectory (dev_path);$/;"	v
files	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^		var files = FileSystem.readDirectory (path);$/;"	v
files	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^			var files;$/;"	v
files	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ZipHelper.hx	/^			var files = new List <Entry> ();$/;"	v
files	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^			var files = FileSystem.readDirectory (path);$/;"	v
files	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var files = FileSystem.readDirectory(basePath + "\/" + source);$/;"	v
files	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^					var files:Array <String> = FileSystem.readDirectory (volumePath);$/;"	v
files	/usr/lib/haxe/std/haxe/zip/Writer.hx	/^	var files : List<{ name : String, compressed : Bool, clen : Int, size : Int, crc : Int, date : Date, fields : haxe.io.Bytes }>;$/;"	v
files	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^		var files = try sys.FileSystem.readDirectory(basedir) catch( e : Dynamic ) return null;$/;"	v
fill	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function fill ():Void {};$/;"	f
fill	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function fill ():Void {$/;"	f
fill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	public var fill:FillType;$/;"	v
fill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^			var fill = bucket.getData(Fill);$/;"	v
fill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var fill = bucket.getData(Fill);$/;"	v
fill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function fill (bitmap:BitmapData, _x:Float, _y:Float, _z:Float, ?_):Void {$/;"	f
fill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsStroke.hx	/^	public var fill:IGraphicsData;$/;"	v
fill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsStroke.hx	/^	public var fill:IGraphicsFill;$/;"	v
fill	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^	public function fill( pos : Int, len : Int, value : Int ) {$/;"	f
fillAscii	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		private function fillAscii():Void{$/;"	f
fillCommands	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^	private static var fillCommands:Array<DrawCommand>;$/;"	v
fillCommands	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^	private static var fillCommands:Array<DrawCommand>;$/;"	v
fillExtents	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function fillExtents (x1:Float, y1:Float, x2:Float, y2:Float):Void {$/;"	f
fillIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	public var fillIndex:Int = 0;$/;"	v
fillIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var fillIndex:Int = -1;$/;"	v
fillPattern	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^	private static var fillPattern:CairoPattern;$/;"	v
fillPatternMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^	private static var fillPatternMatrix:Matrix;$/;"	v
fillPer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^		var fillPer = textWidth \/ textField.__width;$/;"	v
fillPreserve	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function fillPreserve ():Void {$/;"	f
fillRect	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function fillRect (x:Float, y:Float, width:Float, height:Float):Void {};$/;"	f
fillRect	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public function fillRect (rect:Rectangle, color:Int, format:PixelFormat = null):Void {$/;"	f
fillRect	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageCanvasUtil.hx	/^	public static function fillRect (image:Image, rect:Rectangle, color:Int, format:PixelFormat):Void {$/;"	f
fillRect	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	public static function fillRect (image:Image, rect:Rectangle, color:Int, format:PixelFormat):Void {$/;"	f
fillRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function fillRect (rect:Rectangle, color:Int):Void {$/;"	f
fillRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function fillRect (rect:Rectangle, color:Int):Void {$/;"	f
fillRectEx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function fillRectEx (rect:Rectangle, color:Int, alpha:Int = 0xFF):Void {$/;"	f
fillRule	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public var fillRule (get, set):CairoFillRule;$/;"	v
fillShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/ShaderManager.hx	/^	public var fillShader:FillShader;$/;"	v
fillStyle	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public var fillStyle:Dynamic;$/;"	v
fillText	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function fillText (text:String, x:Float, y:Float, ?maxWidth:Float):Void {};$/;"	f
fillVertexAttributes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public static var fillVertexAttributes = [$/;"	v
fillVertices	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	inline function fillVertices(index:Int, width:Float, height:Float, matrix:Matrix, uvs:TextureUvs, ?pivot:Point,$/;"	f
fills	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var fills:Array<GLBucketData> = [];$/;"	v
filter	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2FixtureDef.hx	/^	public var filter:B2FilterData;$/;"	v
filter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoPattern.hx	/^	public var filter (get, set):CairoFilter;$/;"	v
filter	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	private function filter (text:String, include:Array <String> = null, exclude:Array <String> = null):Bool {$/;"	f
filter	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^			var filter = "*:E";$/;"	v
filter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Destination.hx	/^	public var filter:Int;$/;"	v
filter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Sampler.hx	/^	public var filter:Float;$/;"	v
filter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^		var filter = filterBlock.filterPasses[0];$/;"	v
filter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^		var filter = filterBlock.filterPasses[Std.int (filterBlock.filterPasses.length - 1)];$/;"	v
filter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public var filter:Context3DTextureFilter;$/;"	v
filter	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var filter = new GlowFilter (0xFFFF0000, 1, 10, 10, 100);$/;"	v
filter	/usr/lib/haxe/std/Array.hx	/^	function filter( f : T -> Bool ) : Array<T>;$/;"	f
filter	/usr/lib/haxe/std/List.hx	/^	public function filter( f : T -> Bool ) {$/;"	f
filter1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactFilter.hx	/^		var filter1:B2FilterData = fixtureA.getFilterData();$/;"	v
filter2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactFilter.hx	/^		var filter2:B2FilterData = fixtureB.getFilterData();$/;"	v
filterArea	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^		var filterArea:Rectangle = filterBlock._filterArea;$/;"	v
filterBlock	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^		var filterBlock = filterStack.pop();$/;"	v
filterManager	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/RenderSession.hx	/^	public var filterManager:FilterManager;$/;"	v
filterManager	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	public var filterManager:FilterManager;$/;"	v
filterMatch	/usr/lib/haxe/std/haxe/xml/Check.hx	/^	static function filterMatch( s : String, f : Filter ) {$/;"	f
filterPass	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^				var filterPass = filterBlock.filterPasses[i];$/;"	v
filterRect	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var filterRect = bitmapData2.generateFilterRect (bitmapData2.rect, filter);$/;"	v
filterStack	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^	public var filterStack:Array<Dynamic>;$/;"	v
filtered	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^					var filtered = false;$/;"	v
filters	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var filters:Array<Dynamic \/*flash.filters.BitmapFilter*\/>;$/;"	v
filters	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public var filters (get, set):Array<BitmapFilter>;$/;"	v
filters	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	public var filters (get, set):Array<BitmapFilter>;$/;"	v
fin	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^			var fin = File.read (fileName, false);$/;"	v
fin	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^				var fin = File.read (fileName, false);$/;"	v
final	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	var final : Bool;$/;"	v
finalizeVelocityConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^	public function finalizeVelocityConstraints() : Void$/;"	f
finalizeVelocityConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	public function finalizeVelocityConstraints() : Void{}$/;"	f
find a way to remove drawTiles calls	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		\/\/TODO find a way to remove drawTiles calls$/;"	i
findField	/usr/lib/haxe/std/haxe/macro/TypeTools.hx	/^	static public function findField(c:ClassType, name:String, isStatic:Bool = false):Null<ClassField> {$/;"	f
findFont	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^	private static function findFont (name:String):Font {$/;"	f
findHaxeLib	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	static private function findHaxeLib (library:String):String {$/;"	f
findHaxeLib	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	static private function findHaxeLib (library:String):String {$/;"	f
findIncidentEdge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^	static public function findIncidentEdge(c:Array <ClipVertex>, $/;"	f
findIncludeFile	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^	private function findIncludeFile (base:String):String {$/;"	f
findMatch	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^	public static function findMatch (icons:Array <Icon>, width:Int, height:Int):Icon {$/;"	f
findMaxSeparation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^	static public function findMaxSeparation(edgeIndex:Array <Int>, $/;"	f
findNearestMatch	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^	public static function findNearestMatch (icons:Array <Icon>, width:Int, height:Int):Icon {$/;"	f
findNewContacts	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^	public function findNewContacts():Void$/;"	f
findProjectFile	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	private function findProjectFile (path:String):String {$/;"	f
findStrings	/usr/lib/haxe/std/haxe/macro/ExprTools.hx	/^		function findStrings(e:Expr) {$/;"	f
findTemplate	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^	public static function findTemplate (templatePaths:Array <String>, path:String, warnIfNotFound:Bool = true):String {$/;"	f
findTemplates	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^	public static function findTemplates (templatePaths:Array <String>, path:String, warnIfNotFound:Bool = true):Array <String> {$/;"	f
finish	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function finish ():Void;$/;"	f
finish	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function finish ():Void {$/;"	f
finish	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function finish ():Void {$/;"	f
finish	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	public function finish() {$/;"	f
finish	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function finish():Void $/;"	f
finish	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function finish():Void;$/;"	f
first	/usr/lib/haxe/std/List.hx	/^		var first = true;$/;"	v
first	/usr/lib/haxe/std/List.hx	/^	public function first() : Null<T> {$/;"	f
first	/usr/lib/haxe/std/haxe/ds/GenericStack.hx	/^	public inline function first() : Null<T> {$/;"	f
first	/usr/lib/haxe/std/haxe/xml/Check.hx	/^		var first = true;$/;"	v
first	/usr/lib/haxe/std/sys/db/Manager.hx	/^			var first = true;$/;"	v
first	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var first = true;$/;"	v
first	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^						var first = true;$/;"	v
first	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^					var first = path.shift();$/;"	v
first	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var first = true;$/;"	v
firstChild	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var firstChild (default, null):Dynamic \/*Node*\/;$/;"	v
firstChild	/usr/lib/haxe/std/Xml.hx	/^	function firstChild() : Xml;$/;"	f
firstElement	/usr/lib/haxe/std/Xml.hx	/^	function firstElement() : Xml;$/;"	f
firstElementChild	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var firstElementChild (default, null):Dynamic \/*Element*\/;$/;"	v
firstIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^		var firstIndex = __getChildIndex (child);$/;"	v
firstLine	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^		var firstLine = output.split ("\\n").shift ();$/;"	v
firstPoint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var firstPoint = new Point (points[0], points[1]);$/;"	v
firstSlash	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^			var firstSlash = (firstPath.substr (-1) == "\/" || firstPath.substr (-1) == "\\\\");$/;"	v
first_char	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		var first_char = 0;$/;"	v
first_cut	/usr/lib/haxe/std/haxe/ds/ArraySort.hx	/^		var first_cut, second_cut, len11, len22, new_mid;$/;"	v
fix this, it should accept an ArrayBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexArray.hx	/^		\/\/ TODO fix this, it should accept an ArrayBuffer$/;"	i
fixed	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public var fixed (get, set):Bool;$/;"	v
fixed	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public var fixed:Bool;$/;"	v
fixedRotation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2BodyDef.hx	/^	public var fixedRotation:Bool;$/;"	v
fixture	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var fixture:B2Fixture = new B2Fixture();$/;"	v
fixture	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^			var fixture:B2Fixture = cast (broadPhase.getUserData(proxy), B2Fixture);$/;"	v
fixture	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^			var fixture:B2Fixture = cast (userData, B2Fixture);$/;"	v
fixture	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^			var fixture:B2Fixture = body.getFixtureList();$/;"	v
fixture	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^			var fixture:B2Fixture;$/;"	v
fixtureA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^			var fixtureA:B2Fixture = c.getFixtureA();$/;"	v
fixtureA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^			var fixtureA:B2Fixture = c.getFixtureA();$/;"	v
fixtureA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^		var fixtureA:B2Fixture = c.getFixtureA();$/;"	v
fixtureA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^		var fixtureA:B2Fixture = cast (proxyUserDataA, B2Fixture);$/;"	v
fixtureA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^			var fixtureA:B2Fixture = contact.getFixtureA();$/;"	v
fixtureA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^				var fixtureA:B2Fixture = contact.getFixtureA();$/;"	v
fixtureA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var fixtureA:B2Fixture = contact.m_fixtureA;$/;"	v
fixtureA	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/ContactListenerOneSidePlatform.hx	/^		var fixtureA:B2Fixture = contact.getFixtureA();$/;"	v
fixtureB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^			var fixtureB:B2Fixture = c.getFixtureB();$/;"	v
fixtureB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^			var fixtureB:B2Fixture = c.getFixtureB();$/;"	v
fixtureB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^		var fixtureB:B2Fixture = c.getFixtureB();$/;"	v
fixtureB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^		var fixtureB:B2Fixture = cast (proxyUserDataB, B2Fixture);$/;"	v
fixtureB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^			var fixtureB:B2Fixture = contact.getFixtureB();$/;"	v
fixtureB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^				var fixtureB:B2Fixture = contact.getFixtureB();$/;"	v
fixtureB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var fixtureB:B2Fixture = contact.m_fixtureB;$/;"	v
fixtureB	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/ContactListenerOneSidePlatform.hx	/^		var fixtureB:B2Fixture = contact.getFixtureB();$/;"	v
fixtureDef	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBridge.hx	/^			var fixtureDef:B2FixtureDef = new B2FixtureDef();$/;"	v
fixtureDef	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCCD.hx	/^			var fixtureDef:B2FixtureDef = new B2FixtureDef();$/;"	v
fixtureDef	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^			var fixtureDef:B2FixtureDef = new B2FixtureDef();$/;"	v
fixtureDef	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRagdoll.hx	/^			var fixtureDef:B2FixtureDef = new B2FixtureDef();$/;"	v
fixtureDefinition	Source/Crate.hx	/^        var fixtureDefinition = new B2FixtureDef ();$/;"	v
fixtureDefinition	Source/Ground.hx	/^        var fixtureDefinition = new B2FixtureDef ();$/;"	v
fjd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^				var fjd:B2FrictionJointDef = new B2FrictionJointDef();$/;"	v
flag	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^						var flag = substitute (element.att.name);$/;"	v
flagForFiltering	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	public function flagForFiltering():Void$/;"	f
flags	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var flags:Int = m_debugDraw.getFlags();$/;"	v
flags	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^		var flags = 0;$/;"	v
flags	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^			var flags = [ is64 ? "-DHXCPP_M64" : "" ];$/;"	v
flags	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/MacPlatform.hx	/^			var flags = [ "-DHXCPP_CLANG" ];$/;"	v
flags	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WindowsPlatform.hx	/^			var flags = [];$/;"	v
flags	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var flags = i.readUInt16();$/;"	v
flags	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/OpLUT.hx	/^	public var flags:Int;$/;"	v
flags	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Opcode.hx	/^	public var flags:Flags;$/;"	v
flags	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^			var flags = HARDWARE;$/;"	v
flags	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^		var flags = 0;$/;"	v
flags	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^		var flags = 0x00000080; \/\/ allow shaders$/;"	v
flags	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^		var flags = ManagedStage.efPrimaryTouch;$/;"	v
flags	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^		var flags = switch (button) {$/;"	v
flags	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^			var flags:Int = event.flags;$/;"	v
flags	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^		var flags:Int = event.flags;$/;"	v
flags	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/TouchEvent.hx	/^		var flags:Int = event.flags;$/;"	v
flags	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var flags = i.readUInt16();$/;"	v
flags	/usr/lib/haxe/std/haxe/zip/Writer.hx	/^		var flags = 0;$/;"	v
flashCall	/usr/lib/haxe/std/haxe/remoting/FlashJsConnection.hx	/^	static function flashCall( flashObj : String, name : String, path : String, params : String ) : String {$/;"	f
flashClass	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var flashClass = switch (asset.type) {$/;"	v
flashConnect	/usr/lib/haxe/std/haxe/remoting/ExternalConnection.hx	/^	public static function flashConnect( name : String, flashObjectID : String, ?ctx : Context ) {$/;"	f
flashRate	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^					var flashRate = switch (hdr.samplingRate) {$/;"	v
flashSamplingFrequency	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var flashSamplingFrequency = switch (samplingFrequency) {$/;"	v
flashVersion	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^		var flashVersion = 9;$/;"	v
flatName	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Asset.hx	/^	public var flatName:String;$/;"	v
flatName	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^		var flatName = inAsset.flatName;$/;"	v
flatName	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^		var flatName = "";$/;"	v
flg	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^			var flg = input.readByte();$/;"	v
flip	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var flip:Int;$/;"	v
flip	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/Features.hx	/^	public var flip (get, set):Int;$/;"	v
flip	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashRenderer.hx	/^	public function flip ():Void {$/;"	f
flip	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Renderer.hx	/^	public function flip ():Void {$/;"	f
flip	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeRenderer.hx	/^	public function flip ():Void {$/;"	f
flip	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Renderer.hx	/^	public function flip ():Void {$/;"	f
float	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var float = data.getFloat32 (this.position, littleEndian);$/;"	v
float	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^		var float = data.getFloat32 (this.position, littleEndian);$/;"	v
float	/usr/lib/haxe/std/neko/Random.hx	/^	public function float() : Float {$/;"	f
float32Array	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/VertexBuffer3D.hx	/^		var float32Array:Float32Array;$/;"	v
float32Array	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/Float32ArrayTest.hx	/^		var float32Array = new Float32Array (0);$/;"	v
floats	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Float32Array.hx	/^			var floats:Array<Float> = cast bufferOrArray;$/;"	v
floats	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Float32Array.hx	/^			var floats:Array<Float> = vector;$/;"	v
floats	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Float32Array.hx	/^			var floats:Float32Array = cast bufferOrArray;$/;"	v
floats	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Float32Array.hx	/^			var floats:Array<Float> = bufferOrArray;$/;"	v
floats	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Float32Array.hx	/^			var floats:Vector<Float> = bufferOrArray.data;$/;"	v
floodFill	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public function floodFill (x:Int, y:Int, color:Int, format:PixelFormat = null):Void {$/;"	f
floodFill	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageCanvasUtil.hx	/^	public static function floodFill (image:Image, x:Int, y:Int, color:Int, format:PixelFormat):Void {$/;"	f
floodFill	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	public static function floodFill (image:Image, x:Int, y:Int, color:Int, format:PixelFormat):Void {$/;"	f
floodFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function floodFill (x:Int, y:Int, color:Int):Void {$/;"	f
floodFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function floodFill (x:Int, y:Int, color:Int):Void {$/;"	f
floor	/usr/lib/haxe/std/Math.hx	/^	static function floor(v:Float):Int;$/;"	f
flush	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function flush ():Void;$/;"	f
flush	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function flush ():Void {$/;"	f
flush	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoSurface.hx	/^	public function flush ():Void {$/;"	f
flush	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function flush ():Void {$/;"	f
flush	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	function flush() {$/;"	f
flush	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function flush():Void $/;"	f
flush	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^	public function flush (minDiskSpace:Int = 0):SharedObjectFlushStatus {$/;"	f
flush	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/SharedObject.hx	/^	public function flush (minDiskSpace:Int = 0):SharedObjectFlushStatus {$/;"	f
flush	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^	public function flush() {$/;"	f
flush	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function flush():Void;$/;"	f
flush	/usr/lib/haxe/std/haxe/io/Output.hx	/^	public function flush() {$/;"	f
flush	/usr/lib/haxe/std/neko/Web.hx	/^	public static function flush() : Void {$/;"	f
fmatch	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private static var fmatch = ~\/^\\((.*)\\)(.*)\/;$/;"	v
fname	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var fname = i.readString(fnamelen);$/;"	v
fname	/usr/lib/haxe/std/haxe/unit/TestRunner.hx	/^			var fname = f;$/;"	v
fname	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var fname = i.readString(fnamelen);$/;"	v
fname	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var fname = { expr : EConst(CString(f.name)), pos : pos };$/;"	v
fnamelen	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var fnamelen = i.readInt16();$/;"	v
fnamelen	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var fnamelen = i.readInt16();$/;"	v
fobj	/usr/lib/haxe/std/haxe/remoting/ExternalConnection.hx	/^			var fobj : Dynamic = (untyped js.Browser.document)[cast __data.flash]; \/\/ FIXME(bruno): Why is this necessary?$/;"	v
fobj	/usr/lib/haxe/std/haxe/remoting/FlashJsConnection.hx	/^			var fobj : Dynamic = untyped (untyped js.Browser.document)[__data.flash]; \/\/ FIXME(bruno): Why is this necessary?$/;"	v
focalLength	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3D.hx	/^	public static var focalLength (get, set):Float;$/;"	v
focalLength	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^	public static var focalLength:Float = 1.0;$/;"	v
focalLength	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/PerspectiveProjection.hx	/^	public var focalLength:Float;$/;"	v
focalPointRatio	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsGradientFill.hx	/^	public var focalPointRatio:Float;$/;"	v
focalPointRatio	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsGradientFill.hx	/^	public var focalPointRatio:Float;$/;"	v
focus	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function focus ():Void {};$/;"	f
focus	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^				var focus = get_focus ();$/;"	v
focus	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public var focus (get, set):InteractiveObject;$/;"	v
focus	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public var focus (get, set):InteractiveObject;$/;"	v
focusEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^			var focusEvent = new FocusEvent (event.value == 1 ? FocusEvent.MOUSE_FOCUS_CHANGE : FocusEvent.KEY_FOCUS_CHANGE, true, true, __focusOverObjects.length == 0 ? null : __focusOverObjects[0], event.flags > 0, event.code);$/;"	v
focusEvent	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/FocusEventTest.hx	/^		var focusEvent = new FocusEvent (FocusEvent.FOCUS_IN);$/;"	v
focusIn	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^				var focusIn = new FocusEvent (FocusEvent.FOCUS_IN, true, false, oldObject, event.flags > 0, event.code);$/;"	v
focusOut	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^				var focusOut = new FocusEvent (FocusEvent.FOCUS_OUT, true, false, newObject, event.flags > 0, event.code);$/;"	v
focusRect	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var focusRect:Dynamic;$/;"	v
focusRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/InteractiveObject.hx	/^	public var focusRect:Dynamic;$/;"	v
folder	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^				var folder = name;$/;"	v
folderPath	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^		var folderPath = Path.directory (filePath);$/;"	v
follow	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function follow( t : Type, ?once : Bool ) : Type {$/;"	f
follow	/usr/lib/haxe/std/haxe/macro/TypeTools.hx	/^	static public inline function follow( t : Type, ?once : Bool ) : Type$/;"	f
followRedirects	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequest.hx	/^	public var followRedirects:Bool;$/;"	v
font	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^					var font = library.getFont (symbolName);$/;"	v
font	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public var font:Map<String, Dynamic \/*Font*\/>;$/;"	v
font	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public var font:String;$/;"	v
font	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFont.hx	/^	public var font(default,null):Font;$/;"	v
font	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^						var font = Font.fromFile (asset.sourcePath);$/;"	v
font	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^		var font = new Font ();$/;"	v
font	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextLayout.hx	/^	public var font (default, set):Font;$/;"	v
font	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^			var font = face.decompose ();$/;"	v
font	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^		var font = new Font (src.fontName);$/;"	v
font	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^					var font = Font.__fromLimeFont (limeFont);$/;"	v
font	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^					var font = limeFont.src;$/;"	v
font	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^			var font = Font.__fromLimeFont (limeFont);$/;"	v
font	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^			var font = limeFont.src;$/;"	v
font	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^		var font = CairoTextField.getFontInstance (format);$/;"	v
font	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^				var font = getFontInstance (range.format);$/;"	v
font	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^			var font = getFontInstance (range.format);$/;"	v
font	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		var font = Font.fromFile (name);$/;"	v
font	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		var font = getFontInstance (format);$/;"	v
font	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		var font = getFontInstance (textField.__textFormat);$/;"	v
font	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMTextField.hx	/^		var font = format.italic ? "italic " : "normal ";$/;"	v
font	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^					var font = library.getFont (symbolName);$/;"	v
font	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public var font:Map<String, Font>;$/;"	v
font	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^		var font = new Font ();$/;"	v
font	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextFormat.hx	/^	public var font:String;$/;"	v
font	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^		var font = new Font ();$/;"	v
font	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextFormat.hx	/^	public var font:String;$/;"	v
font	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^		var font = new Font (src.fontName);$/;"	v
font	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/FontTest.hx	/^		var font = new Font ();$/;"	v
fontBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^			var fontBitmapData = bitmapData.get (font);$/;"	v
fontClass	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^			var fontClass = className.get(id);$/;"	v
fontClass	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^			var fontClass = className.get (id);$/;"	v
fontClass	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^			var fontClass = Type.getClass (this);$/;"	v
fontClass	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^			var fontClass = className.get (id);$/;"	v
fontClass	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^			var fontClass = className.get(id);$/;"	v
fontGlyphs	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^			var fontGlyphs = glyphs.get (font);$/;"	v
fontList	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		var fontList = null;$/;"	v
fontName	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	public var fontName (default, null):String;$/;"	v
fontName	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	public var fontName (default, set_fontName):String;$/;"	v
fontName	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	public var fontName (get, set):String;$/;"	v
fontStyle	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	public var fontStyle (default, null):FontStyle;$/;"	v
fontStyle	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	public var fontStyle (default, null):FontStyle;$/;"	v
fontStyle	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	public var fontStyle:FontStyle;$/;"	v
fontType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	public var fontType (default, null):FontType;$/;"	v
fontType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	public var fontType (default, null):FontType;$/;"	v
fontType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	public var fontType:FontType;$/;"	v
font_name	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^			var font_name = font.family_name;$/;"	v
fontsDirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	public static var fontsDirectory (get, null):String;$/;"	v
for	/usr/lib/haxe/std/haxe/EnumFlags.hx	/^	interface for an actual Int. Each flag can be tested\/set with the$/;"	i
for flash < 11.6 : patch the AGAL (using specific opcodes) and rebuild the program?	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		\/\/TODO for flash < 11.6 : patch the AGAL (using specific opcodes) and rebuild the program? $/;"	i
forbidden	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^	var forbidden : haxe.ds.StringMap<Bool>;$/;"	v
forceClose	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	public static function forceClose ():Void {$/;"	f
forceHeight	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^	private static var forceHeight:Int;$/;"	v
forceUpdate	/usr/lib/haxe/std/sys/db/Manager.hx	/^	public function forceUpdate( o : T, field : String ) {$/;"	f
forceUpload	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var forceUpload = project.targetFlags.exists ("force");$/;"	v
forceWidth	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^	private static var forceWidth:Int;$/;"	v
format	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^					var format = 0;$/;"	v
format	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public var format (get, set):PixelFormat;$/;"	v
format	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ImageBuffer.hx	/^	public var format:PixelFormat;$/;"	v
format	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Asset.hx	/^	public var format:String;$/;"	v
format	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/FS.hx	/^	public var format:String;$/;"	v
format	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		var format = textField.getTextFormat ();$/;"	v
format	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DefaultShader.hx	/^			var format = (data.luminance != #if !neko 0 #else null #end) ? gl.LUMINANCE : gl.RGBA;$/;"	v
format	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^			var format:String = cast rectOrFormat;$/;"	v
format	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/ScreenMode.hx	/^	public var format:PixelFormat;$/;"	v
format	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^			var format = (__image.buffer.bitsPerPixel == 1 ? gl.ALPHA : gl.RGBA);$/;"	v
format	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^						var format = __textFormat.clone ();$/;"	v
format	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var format:TextFormat;$/;"	v
format	/usr/lib/haxe/std/DateTools.hx	/^	public static function format( d : Date, f : String ) : String {$/;"	f
format	/usr/lib/haxe/std/haxe/macro/Format.hx	/^	public static function format( estr : Expr ) {$/;"	f
formatArray	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^	public static function formatArray (array:Array <Dynamic>):String {$/;"	f
formatAttributeName	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^	private function formatAttributeName (name:String):String {$/;"	f
formatEnum	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^	public static function formatEnum (value:Dynamic):String {$/;"	f
formatRequestHeaders	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLRequest.hx	/^	public function formatRequestHeaders ():Array<URLRequestHeader> {$/;"	f
formatRequestHeaders	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLRequest.hx	/^	public function formatRequestHeaders ():Array<URLRequestHeader> {$/;"	f
formatString	/usr/lib/haxe/std/haxe/macro/MacroStringTools.hx	/^	static public function formatString(s:String, pos:Position) {$/;"	f
formatUppercaseVariable	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^	public static function formatUppercaseVariable (name:String):String {$/;"	f
formattedLocale	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^			var formattedLocale = "";$/;"	v
forward	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextDirection.hx	/^	public var forward (get, never):Bool;$/;"	v
found	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var found:Bool = false;$/;"	v
found	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Preloader.hx	/^			var found = false;$/;"	v
found	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ImageHelper.hx	/^				var found = false;$/;"	v
found	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^		var found;$/;"	v
found	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^			var found:Bool = false;$/;"	v
found	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^		var found:Bool = false;$/;"	v
found	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^			var found = false;$/;"	v
found	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^			var found = null;$/;"	v
found	/usr/lib/haxe/std/haxe/xml/Check.hx	/^				var found = false;$/;"	v
found	/usr/lib/haxe/std/haxe/xml/Check.hx	/^			var found = false;$/;"	v
foundFile	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^			var foundFile = false;$/;"	v
foundName	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^							var foundName = substitute (element.att.name);$/;"	v
foundNull	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^		var foundNull = false;$/;"	v
foundNull	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^			var foundNull = false;$/;"	v
foundNull	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^		var foundNull = false;$/;"	v
foundOptions	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CPPHelper.hx	/^			var foundOptions = false;$/;"	v
fpos	/usr/lib/haxe/std/haxe/Unserializer.hx	/^ 		var fpos = pos;$/;"	v
fps	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/FPSTest.hx	/^		var fps = new FPS ();$/;"	v
fps	Source/Main.hx	/^                var fps:FPS = new FPS(10, 10, 0xffffff);$/;"	v
fraction	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2RayCastOutput.hx	/^	public var fraction:Float;$/;"	v
fraction	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^				var fraction:Float = output.fraction;$/;"	v
fragmentShader	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/GLUtils.hx	/^		var fragmentShader = compileShader (fragmentSource, GL.FRAGMENT_SHADER);$/;"	v
fragmentShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/AbstractShader.hx	/^		var fragmentShader = AbstractShader.CompileFragmentShader (gl, fragmentSrc);$/;"	v
fragmentShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/Shader.hx	/^		var fragmentShader = Shader.compileShader(gl, fragmentSrc, gl.FRAGMENT_SHADER);$/;"	v
fragmentShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^		var fragmentShader = GL.createShader (GL.FRAGMENT_SHADER);$/;"	v
fragmentShaderSource	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^		var fragmentShaderSource = "$/;"	v
fragmentSrc	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/AbstractShader.hx	/^	public var fragmentSrc:Array<String>;$/;"	v
fragmentSrc	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/Shader.hx	/^	public var fragmentSrc:Array<String>;$/;"	v
fragonly	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Flags.hx	/^	public var fragonly:Bool;$/;"	v
frame	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^				var frame = s.GetFrame(i);$/;"	v
frame	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var frame = new Frame(header, frameData);$/;"	v
frame	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    function frame() {$/;"	f
frame	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/FrameLabel.hx	/^	public var frame (get, null):Int;$/;"	v
frame	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^	public static var frame:wx.Frame;$/;"	v
frame	/usr/lib/haxe/std/haxe/CallStack.hx	/^				var frame = s.GetFrame(i);$/;"	v
frameBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterTexture.hx	/^	public var frameBuffer:GLFramebuffer;$/;"	v
frameBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^	private static var frameBuffer:GLFramebuffer;$/;"	v
frameBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/TextureBase.hx	/^	public var frameBuffer:GLFramebuffer;$/;"	v
frameData	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var frameData = frameDataWriter.getBytes();$/;"	v
frameData	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/Frame.hx	/^    public var frameData(default, null):Bytes;$/;"	v
frameData	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/Info.hx	/^    public var frameData(default, null):Bytes;$/;"	v
frameData	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var frameData:Bytes;$/;"	v
frameDataWriter	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var frameDataWriter = new haxe.io.BytesOutput();$/;"	v
frameIsStereo	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^						var frameIsStereo = frame.header.mode != mpeg.audio.Mode.SingleChannel;$/;"	v
frameLengthBytes	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^            var frameLengthBytes = frameLengthSlots * slotSizeByLayerIndex[layerIndex];$/;"	v
frameLengthBytes	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^            var frameLengthBytes = if (end) bufferCursor else bufferCursor - 2;$/;"	v
frameLengthSlots	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^            var frameLengthSlots = Math.floor(frameLengthBytes \/ slotSizeByLayerIndex[layerIndex]);$/;"	v
frameLengthSlots	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^            var frameLengthSlots = Math.floor(slotsPerBitPerSampleByLayerIndexByVersionIndex[versionIndex][layerIndex]$/;"	v
framePeriod	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Application.hx	/^	private var framePeriod:Float;$/;"	v
frameRate	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private var frameRate:Float;$/;"	v
frameRate	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public var frameRate (get, set):Float;$/;"	v
frameRate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/LoaderInfo.hx	/^	public var frameRate (default, null):Float;$/;"	v
frameRate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public var frameRate (default, set): Float;$/;"	v
frameRate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/LoaderInfo.hx	/^	public var frameRate (default, null):Float;$/;"	v
frameRate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public var frameRate (get, set):Float;$/;"	v
frameSamplingFrequency	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^						var frameSamplingFrequency = frame.header.samplingFrequency;$/;"	v
framebuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	private var framebuffer:GLFramebuffer;$/;"	v
framebufferRenderbuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function framebufferRenderbuffer (target:Int, attachment:Int, renderbuffertarget:Int, renderbuffer:GLRenderbuffer):Void;$/;"	f
framebufferRenderbuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function framebufferRenderbuffer (target:Int, attachment:Int, renderbuffertarget:Int, renderbuffer:GLRenderbuffer):Void {$/;"	f
framebufferRenderbuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function framebufferRenderbuffer (target:Int, attachment:Int, renderbuffertarget:Int, renderbuffer:GLRenderbuffer):Void {$/;"	f
framebufferRenderbuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function framebufferRenderbuffer(target:Int, attachment:Int, renderbuffertarget:Int, renderbuffer:GLRenderbuffer):Void $/;"	f
framebufferRenderbuffer	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function framebufferRenderbuffer(target:Int, attachment:Int, renderbuffertarget:Int, renderbuffer:GLRenderbuffer):Void;$/;"	f
framebufferTexture2D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function framebufferTexture2D (target:Int, attachment:Int, textarget:Int, texture:GLTexture, level:Int):Void;$/;"	f
framebufferTexture2D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function framebufferTexture2D (target:Int, attachment:Int, textarget:Int, texture:GLTexture, level:Int):Void {$/;"	f
framebufferTexture2D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function framebufferTexture2D (target:Int, attachment:Int, textarget:Int, texture:GLTexture, level:Int):Void {$/;"	f
framebufferTexture2D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function framebufferTexture2D(target:Int, attachment:Int, textarget:Int, texture:GLTexture, level:Int):Void $/;"	f
framebufferTexture2D	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function framebufferTexture2D(target:Int, attachment:Int, textarget:Int, texture:GLTexture, level:Int):Void;$/;"	f
frames	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudio.hx	/^    public var frames(default, null):Iterable<Frame>;$/;"	v
frames	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var frames:Array<Frame> = [];$/;"	v
framesLoaded	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/MovieClip.hx	/^	public var framesLoaded (get, null):Int;$/;"	v
framesLoaded	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/MovieClip.hx	/^	public var framesLoaded (get, null):Int;$/;"	v
frameworkID	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^				var frameworkID = "11C0000000000018" + StringHelper.getUniqueID ();$/;"	v
freeNode	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^	private function freeNode(node:B2DynamicTreeNode):Void$/;"	f
freetype_import_font	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	private static var freetype_import_font = Lib.load ("lime-legacy", "freetype_import_font", 4);$/;"	v
frequencyHz	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJointDef.hx	/^	public var frequencyHz:Float;$/;"	v
frequencyHz	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJointDef.hx	/^	public var frequencyHz:Float;$/;"	v
friction	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ContactPoint.hx	/^	public var friction:Float;$/;"	v
friction	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2FixtureDef.hx	/^	public var friction:Float;$/;"	v
friction	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactConstraint.hx	/^	public var friction:Float = 0;$/;"	v
friction	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var friction:Float = B2Settings.b2MixFriction(fixtureA.getFriction(), fixtureB.getFriction());$/;"	v
friction	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var friction:Float = c.friction;$/;"	v
from	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var from : Array<{t:Type, field:Null<ClassField>}>;$/;"	v
from	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	var from : Array<{t:CType, field:Null<String>}>;$/;"	v
fromAngle	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat22.hx	/^	public static function fromAngle(angle:Float):B2Mat22$/;"	f
fromAudioBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^	public static function fromAudioBuffer (buffer:AudioBuffer):Sound {$/;"	f
fromAudioBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static function fromAudioBuffer (buffer:AudioBuffer):Sound {$/;"	f
fromBase64	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public static function fromBase64 (base64:String, type:String, onload:Image -> Void):Image {$/;"	f
fromBase64	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public static function fromBase64 (base64:String, type:String, onload:BitmapData -> Void = null):BitmapData {$/;"	f
fromBitmapData	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public static function fromBitmapData (bitmapData:#if flash BitmapData #else Dynamic #end):Image {$/;"	f
fromBytes	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioBuffer.hx	/^	public static function fromBytes (bytes:ByteArray):AudioBuffer {$/;"	f
fromBytes	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public static function fromBytes (bytes:ByteArray, onload:Image -> Void = null):Image {$/;"	f
fromBytes	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	public static function fromBytes (bytes:ByteArray):Font {$/;"	f
fromBytes	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public static function fromBytes (bytes:Bytes):ByteArray {$/;"	f
fromBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	public static function fromBytes (bytes:ByteArray):Font {$/;"	f
fromBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	static public function fromBytes (bytes:Bytes):ByteArray {$/;"	f
fromBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public static function fromBytes (bytes:ByteArray, rawAlpha:ByteArray = null, onload:BitmapData -> Void = null):BitmapData {$/;"	f
fromBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	public static function fromBytes (bytes:ByteArray):Font {$/;"	f
fromBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	static public function fromBytes (inBytes:Bytes) {$/;"	f
fromCanvas	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public static function fromCanvas (canvas:#if (js && html5) CanvasElement #else Dynamic #end):Image {$/;"	f
fromCanvas	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public static function fromCanvas (canvas:CanvasElement, transparent:Bool = true):BitmapData {$/;"	f
fromCharCode	/usr/lib/haxe/std/String.hx	/^	static function fromCharCode( code : Int ) : String;$/;"	f
fromFile	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioBuffer.hx	/^	public static function fromFile (path:String):AudioBuffer {$/;"	f
fromFile	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public static function fromFile (path:String, onload:Image -> Void = null, onerror:Void -> Void = null):Image {$/;"	f
fromFile	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public static function fromFile (projectFile:String, userDefines:Map <String, Dynamic> = null, includePaths:Array <String> = null):HXProject {$/;"	f
fromFile	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	public static function fromFile (path:String):Font {$/;"	f
fromFile	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	public static function fromFile (path:String):Font {$/;"	f
fromFile	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public static function fromFile (path:String, onload:BitmapData -> Void = null, onerror:Void -> Void = null):BitmapData {$/;"	f
fromFile	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static function fromFile (path:String):Sound {$/;"	f
fromFile	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	public static function fromFile (path:String):Font {$/;"	f
fromHaxelib	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public static function fromHaxelib (haxelib:Haxelib, userDefines:Map <String, Dynamic> = null, clearCache:Bool = false):HXProject {$/;"	f
fromImage	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoSurface.hx	/^	public static function fromImage (image:Image):CairoSurface {$/;"	f
fromImage	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public static function fromImage (image:Image):BitmapData {$/;"	f
fromImage	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public static function fromImage (image:Image, transparent:Bool = true):BitmapData {$/;"	f
fromImageElement	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public static function fromImageElement (image:#if (js && html5) ImageElement #else Dynamic #end):Image {$/;"	f
fromMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Float32Array.hx	/^	public static function fromMatrix (matrix:Matrix3D):Float32Array {$/;"	f
fromPath	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public static function fromPath (path:String, userDefines:Map <String, Dynamic> = null):HXProject {$/;"	f
fromString	/usr/lib/haxe/std/Date.hx	/^	static function fromString( s : String ) : Date;$/;"	f
fromTime	/usr/lib/haxe/std/Date.hx	/^	static function fromTime( t : Float ) : Date;$/;"	f
fromURL	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioBuffer.hx	/^	public static function fromURL (url:String, handler:AudioBuffer->Void):Void {$/;"	f
fromVV	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat22.hx	/^	public static function fromVV(c1:B2Vec2, c2:B2Vec2):B2Mat22$/;"	f
fromX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^		var fromX = points[points.length-2];$/;"	v
fromX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var fromX = points[points.length-2];$/;"	v
fromY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^		var fromY = points[points.length-1];$/;"	v
fromY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var fromY = points[points.length-1];$/;"	v
frontFace	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function frontFace (mode:Int):Void;$/;"	f
frontFace	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function frontFace (mode:Int):Void {$/;"	f
frontFace	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function frontFace (mode:Int):Void {$/;"	f
frontFace	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function frontFace(mode:Int):Void $/;"	f
frontFace	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function frontFace(mode:Int):Void;$/;"	f
frontOffset	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var frontOffset:Float = normal.x * v11.x + normal.y * v11.y;$/;"	v
fround	/usr/lib/haxe/std/Math.hx	/^	static function fround( v : Float ) : Float;$/;"	f
fround	/usr/lib/haxe/std/Math.hx	/^	static inline function fround( v : Float ) : Float {$/;"	f
fscommand	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Lib.hx	/^	public static function fscommand (cmd:String, ?param:String) {$/;"	f
fstr	/usr/lib/haxe/std/haxe/macro/Printer.hx	/^						var fstr = printField(f);$/;"	v
ft	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^	function ft( t : Int, b : Int, c : Int, d : Int ) : Int {$/;"	f
ft	/usr/lib/haxe/std/haxe/macro/TypeTools.hx	/^				var ft = ft();$/;"	v
ft2	/usr/lib/haxe/std/haxe/macro/TypeTools.hx	/^				var ft2 = f(ft);$/;"	v
full	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/EventDispatcher.hx	/^		var full = Type.getClassName (Type.getClass (this));$/;"	v
full	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/EventDispatcher.hx	/^		var full = Type.getClassName (Type.getClass (this));$/;"	v
full	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^		var full = null;$/;"	v
fullName	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^				var fullName :String = site.getFunctionName();$/;"	v
fullName	/usr/lib/haxe/std/haxe/CallStack.hx	/^					var fullName :String = site.getFunctionName();$/;"	v
fullPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ZipHelper.hx	/^			var fullPath = PathHelper.combine (basePath, path);$/;"	v
fullPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ZipHelper.hx	/^			var fullPath = PathHelper.combine (directory, file);$/;"	v
fullPath	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^				var fullPath = classPath + path.split(".").join("\/");$/;"	v
fullPath	/usr/lib/haxe/std/sys/FileSystem.hx	/^	static function fullPath( relPath : String ) : String;$/;"	f
fullscreen	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var fullscreen (get, set):Bool;$/;"	v
func	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^		var func = stencilMask == 1 ? gl.NEVER : gl.EQUAL;$/;"	v
func	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DirectRendererTest.hx	/^		var func = function (_) {};$/;"	v
func_key	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^				var func_key = func_name + " " + mConstants[desc_ref];$/;"	v
func_name	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^			var func_name = mConstants[name_ref];$/;"	v
functions	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var functions : haxe.ds.StringMap<SqlFunction>;$/;"	v
functions	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var functions = new haxe.ds.StringMap();$/;"	v
g	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Color.hx	/^	public var g (null, set):Float;$/;"	v
g	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^						var g = data[i * 4 + 1];$/;"	v
g	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var g = (color >> 16) & 0xFF;$/;"	v
g	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ImageHelper.hx	/^			var g:Int = (( backgroundColor >> 8) & 0xFF);$/;"	v
g	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^			var g = ((format.color >> 8) & 0xFF) \/ 0xFF;$/;"	v
g	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^							var g = ((color & 0x00FF00) >>> 8) \/ 0xFF;$/;"	v
g	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^			var g = ((rgb & 0x00FF00) >>> 8) \/ 0xFF;$/;"	v
g	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^			var g = ((color & 0x00FF00) >>> 8) \/ 0xFF;$/;"	v
g	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var g = (color & 0x00FF00) >>> 8;$/;"	v
g	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var g = (rgb & 0x00FF00) >>> 8;$/;"	v
g	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^			var g = (rgb & 0x00FF00) >>> 8;$/;"	v
g	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var g = color[1];$/;"	v
g	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^		var g = (value & 0x00FF00) >>> 8;$/;"	v
g	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/NMEPreloader.hx	/^		var g = backgroundColor >> 8  & 0xFF;$/;"	v
g	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/NMEPreloader.hx	/^		var g = backgroundColor >> 8  & 0xFF;$/;"	v
g	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	var g : {$/;"	v
g1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^		var g1:B2Body = m_ground1;$/;"	v
g2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^		var g2:B2Body = m_ground2;$/;"	v
gain	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^	public var gain (get, set):Float;$/;"	v
gainNode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public var gainNode:Dynamic;$/;"	v
game_height	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Global.hx	/^	public static var game_height:UInt = 0;$/;"	v
game_width	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Global.hx	/^	public static var game_width:UInt = 0;$/;"	v
gamepad	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^					var gamepad = Gamepad.devices.get (gamepadEventInfo.id);$/;"	v
gamepad	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^					var gamepad = new Gamepad (gamepadEventInfo.id);$/;"	v
gamepadEventInfo	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private var gamepadEventInfo = new GamepadEventInfo ();$/;"	v
gc	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/System.hx	/^	static public function gc ():Void {$/;"	f
gc	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/System.hx	/^	public static function gc ():Void {$/;"	f
gcRef	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Memory.hx	/^	private static var gcRef:ByteArray;$/;"	v
gcRef	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Memory.hx	/^	private static var gcRef:ByteArray;$/;"	v
gcd	/usr/lib/haxe/std/haxe/ds/ArraySort.hx	/^	static function gcd(m, n) {$/;"	f
genBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function genBuffer ():Int {$/;"	f
genBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function genBuffer ():Int {$/;"	f
genBuffers	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function genBuffers (n:Int):Array<Int> {$/;"	f
genBuffers	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function genBuffers (n:Int):Array<Int> {$/;"	f
genClass	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^	function genClass( c : ClassType ) {$/;"	f
genClassField	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^	function genClassField( c : ClassType, p : String, f : ClassField ) {$/;"	f
genEnum	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^	function genEnum( e : EnumType ) {$/;"	f
genExpr	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^	inline function genExpr(e) {$/;"	f
genPackage	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^	function genPackage( p : Array<String> ) {$/;"	f
genSource	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function genSource ():Int {$/;"	f
genSource	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function genSource ():Int {$/;"	f
genSources	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function genSources (n:Int):Array<Int> {$/;"	f
genSources	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function genSources (n:Int):Array<Int> {$/;"	f
genStaticField	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^	function genStaticField( c : ClassType, p : String, f : ClassField ) {$/;"	f
genStaticValue	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^	function genStaticValue( c : ClassType, cf : ClassField ) {$/;"	f
genType	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^	function genType( t : Type ) {$/;"	f
generate	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Library.hx	/^	public var generate:Bool;$/;"	v
generate	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^							var generate = false;$/;"	v
generate	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	private function generate ():Void {$/;"	f
generate	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private function generate(inClass:String, inMembers:Map<String, String>)$/;"	f
generate	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^	public function generate() {$/;"	f
generateContext	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FlashPlatform.hx	/^	private function generateContext ():Dynamic {$/;"	f
generateContext	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^	private function generateContext ():Dynamic {$/;"	f
generateContext	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^	private function generateContext ():Dynamic {$/;"	f
generateContext	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/MacPlatform.hx	/^	private function generateContext ():Dynamic {$/;"	f
generateContext	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WindowsPlatform.hx	/^	private function generateContext ():Dynamic {$/;"	f
generateFilterRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function generateFilterRect (sourceRect:Rectangle, filter:BitmapFilter):Rectangle {$/;"	f
generateFilterRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function generateFilterRect (sourceRect:Rectangle, filter:BitmapFilter):Rectangle {$/;"	f
generateFontData	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/HTML5Helper.hx	/^	public static function generateFontData (project:HXProject, font:Asset):String {$/;"	f
generateHashCode	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^	public static function generateHashCode (value:String):Int {$/;"	f
generateMipmap	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function generateMipmap (target:Int):Void;$/;"	f
generateMipmap	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function generateMipmap (target:Int):Void {$/;"	f
generateMipmap	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function generateMipmap (target:Int):Void {$/;"	f
generateMipmap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function generateMipmap(target:Int):Void $/;"	f
generateMipmap	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function generateMipmap(target:Int):Void;$/;"	f
generateNonce	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthClient.hx	/^	public function generateNonce ():String {$/;"	f
generateStatement	/usr/lib/haxe/std/haxe/macro/JSGenApi.hx	/^	function generateStatement( e : TypedExpr ) : String;$/;"	f
generateUUID	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^	public static function generateUUID (length:Int, radix:Null<Int> = null, seed:Null<Int> = null):String {$/;"	f
generateValue	/usr/lib/haxe/std/haxe/macro/JSGenApi.hx	/^	function generateValue( e : TypedExpr ) : String;$/;"	f
generateWebfonts	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/HTML5Helper.hx	/^	public static function generateWebfonts (project:HXProject, font:Asset):Void {$/;"	f
genre	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/ID3Info.hx	/^	public var genre:String;$/;"	v
get	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^	public function get (id:String):ConfigData {$/;"	f
get	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Accelerometer.hx	/^	public static function get ():Acceleration {$/;"	f
get	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	public function get ():Dynamic {$/;"	f
get	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	public function get (jobject:Dynamic):Dynamic {$/;"	f
get	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/WeakRef.hx	/^	public function get ():T {$/;"	f
get	/usr/lib/haxe/std/Map.hx	/^	public function get(k:K):Null<V>;$/;"	f
get	/usr/lib/haxe/std/Xml.hx	/^	function get( att : String ) : String; \/\/ check case insensitivy$/;"	f
get	/usr/lib/haxe/std/haxe/Unserializer.hx	/^	inline function get(p) : Int {$/;"	f
get	/usr/lib/haxe/std/haxe/crypto/Adler32.hx	/^	public function get() {$/;"	f
get	/usr/lib/haxe/std/haxe/crypto/Crc32.hx	/^	public function get() {$/;"	f
get	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^	public function get(key:K):Null<V> {$/;"	f
get	/usr/lib/haxe/std/haxe/ds/HashMap.hx	/^	public inline function get(k:K) {$/;"	f
get	/usr/lib/haxe/std/haxe/ds/IntMap.hx	/^	public function get( key : Int ) : Null<T>;$/;"	f
get	/usr/lib/haxe/std/haxe/ds/ObjectMap.hx	/^	public function get(key:K):Null<V>;$/;"	f
get	/usr/lib/haxe/std/haxe/ds/StringMap.hx	/^	public function get( key : String ) : Null<T>;$/;"	f
get	/usr/lib/haxe/std/haxe/ds/WeakMap.hx	/^	public function get(key:K):Null<V> {$/;"	f
get	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^	public inline function get( pos : Int ) : Int {$/;"	f
get	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	function get() : Expr.Metadata;$/;"	f
get	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	public function get() : T;$/;"	f
get	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	var get : Rights;$/;"	v
get	/usr/lib/haxe/std/haxe/web/Request.hx	/^		var get : String = js.Browser.location.search.substr(1);$/;"	v
get	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^						var get = {$/;"	v
get	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var get = {$/;"	v
getAABB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public function getAABB():B2AABB {$/;"	f
getActiveAttrib	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function getActiveAttrib (program:GLProgram, index:Int):GLActiveInfo;$/;"	f
getActiveAttrib	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function getActiveAttrib (program:GLProgram, index:Int):GLActiveInfo {$/;"	f
getActiveAttrib	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function getActiveAttrib (program:GLProgram, index:Int):GLActiveInfo {$/;"	f
getActiveAttrib	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function getActiveAttrib(program:GLProgram, index:Int):GLActiveInfo $/;"	f
getActiveAttrib	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function getActiveAttrib(program:GLProgram, index:Int):GLActiveInfo;$/;"	f
getActiveLoaders	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	public function getActiveLoaders () : List<URLLoader> {$/;"	f
getActiveUniform	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function getActiveUniform (program:GLProgram, index:Int):GLActiveInfo;$/;"	f
getActiveUniform	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function getActiveUniform (program:GLProgram, index:Int):GLActiveInfo {$/;"	f
getActiveUniform	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function getActiveUniform (program:GLProgram, index:Int):GLActiveInfo {$/;"	f
getActiveUniform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function getActiveUniform(program:GLProgram, index:Int):GLActiveInfo $/;"	f
getActiveUniform	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function getActiveUniform(program:GLProgram, index:Int):GLActiveInfo;$/;"	f
getAlpha	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	public function getAlpha() : Float {$/;"	f
getAnchorA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^	public override function getAnchorA():B2Vec2{$/;"	f
getAnchorA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^	public override function getAnchorA():B2Vec2{$/;"	f
getAnchorA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^	public override function getAnchorA():B2Vec2{$/;"	f
getAnchorA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	public function getAnchorA():B2Vec2 { return null; }$/;"	f
getAnchorA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	public override function getAnchorA():B2Vec2{$/;"	f
getAnchorA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^	public override function getAnchorA():B2Vec2{$/;"	f
getAnchorA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	public override function getAnchorA():B2Vec2{$/;"	f
getAnchorA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	public override function getAnchorA():B2Vec2{$/;"	f
getAnchorA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	public override function getAnchorA() :B2Vec2{$/;"	f
getAnchorA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^	public override function getAnchorA():B2Vec2{$/;"	f
getAnchorB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^	public override function getAnchorB():B2Vec2{$/;"	f
getAnchorB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^	public override function getAnchorB():B2Vec2{$/;"	f
getAnchorB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^	public override function getAnchorB():B2Vec2{$/;"	f
getAnchorB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	public function getAnchorB():B2Vec2 { return null; }$/;"	f
getAnchorB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	public override function getAnchorB():B2Vec2{$/;"	f
getAnchorB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^	public override function getAnchorB():B2Vec2{$/;"	f
getAnchorB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	public override function getAnchorB():B2Vec2{$/;"	f
getAnchorB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	public override function getAnchorB():B2Vec2{$/;"	f
getAnchorB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	public override function getAnchorB() :B2Vec2{$/;"	f
getAnchorB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^	public override function getAnchorB():B2Vec2{$/;"	f
getAngle	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat22.hx	/^	public function getAngle() :Float$/;"	f
getAngle	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Transform.hx	/^	public function getAngle():Float$/;"	f
getAngle	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function getAngle() : Float{$/;"	f
getAngularDamping	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function getAngularDamping():Float$/;"	f
getAngularVelocity	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function getAngularVelocity() : Float{$/;"	f
getArray	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^	public function getArray (id:String, defaultValue:Array<Dynamic> = null):Array<Dynamic> {$/;"	f
getArrayString	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^	public function getArrayString (id:String, childField:String = null, defaultValue:Array<String> = null):Array<String> {$/;"	f
getAttachedShaders	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function getAttachedShaders (program:GLProgram):Array<GLShader>;$/;"	f
getAttachedShaders	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function getAttachedShaders (program:GLProgram):Array<GLShader> {$/;"	f
getAttachedShaders	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function getAttachedShaders (program:GLProgram):Array<GLShader> {$/;"	f
getAttachedShaders	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function getAttachedShaders(program:GLProgram):Array<GLShader> $/;"	f
getAttachedShaders	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function getAttachedShaders(program:GLProgram):Array<GLShader>;$/;"	f
getAttribLocation	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function getAttribLocation (program:GLProgram, name:String):Int;$/;"	f
getAttribLocation	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function getAttribLocation (program:GLProgram, name:String):Int {$/;"	f
getAttribLocation	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function getAttribLocation (program:GLProgram, name:String):Int {$/;"	f
getAttribLocation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/Shader.hx	/^	public function getAttribLocation(attribute:String):Int {$/;"	f
getAttribLocation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function getAttribLocation(program:GLProgram, name:String):Int $/;"	f
getAttribLocation	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function getAttribLocation(program:GLProgram, name:String):Int;$/;"	f
getAttribute	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function getAttribute (name:String):String { return null; };$/;"	f
getAttributeNS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function getAttributeNS (?namespaceURI:String, localName:String):String { return null; };$/;"	f
getAttributeNode	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function getAttributeNode (name:String):Dynamic \/*Attr*\/ { return null; };$/;"	f
getAttributeNodeNS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function getAttributeNodeNS (?namespaceURI:String, localName:String):Dynamic \/*Attr*\/ { return null; };$/;"	f
getAudioBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public function getAudioBuffer (id:String):AudioBuffer {$/;"	f
getAudioBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public static function getAudioBuffer (id:String, useCache:Bool = true):AudioBuffer {$/;"	f
getAudioBuffer	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^	public override function getAudioBuffer (id:String):AudioBuffer {$/;"	f
getAudioBuffer	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^	public override function getAudioBuffer (id:String):AudioBuffer {$/;"	f
getAudioDecodedByteCount	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function getAudioDecodedByteCount (buffer:AudioBuffer):Int {$/;"	f
getAuthorization	/usr/lib/haxe/std/neko/Web.hx	/^	public static function getAuthorization() : { user : String, pass : String } {$/;"	f
getAutoplay	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function getAutoplay (buffer:AudioBuffer):Bool {$/;"	f
getAxisRotation	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	private static function getAxisRotation( x:Float, y:Float, z:Float, degrees:Float ):Matrix4 {$/;"	f
getAxisRotation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	private static function getAxisRotation( x:Float, y:Float, z:Float, degrees:Float ):Matrix3D {$/;"	f
getBackgroundColor	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/NMEPreloader.hx	/^	public function getBackgroundColor ():Int {$/;"	f
getBackgroundColor	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/NMEPreloader.hx	/^	public function getBackgroundColor():Int$/;"	f
getBit	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	function getBit() {$/;"	f
getBitmapData	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^	public override function getBitmapData (id:String):BitmapData {$/;"	f
getBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function getBitmapData (id:String):BitmapData {$/;"	f
getBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function getBitmapData (id:String):BitmapData;$/;"	f
getBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public static function getBitmapData (id:String, useCache:Bool = true):BitmapData {$/;"	f
getBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function getBitmapData (id:String):BitmapData {$/;"	f
getBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function getBitmapData (id:String):BitmapData;$/;"	f
getBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public static function getBitmapData (id:String, useCache:Bool = true):BitmapData {$/;"	f
getBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^	public override function getBitmapData (id:String):BitmapData {$/;"	f
getBits	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	function getBits(n) {$/;"	f
getBody	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public function getBody():B2Body$/;"	f
getBodyA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	public function getBodyA():B2Body$/;"	f
getBodyB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	public function getBodyB():B2Body$/;"	f
getBodyCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function getBodyCount() : Int$/;"	f
getBodyList	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function getBodyList() : B2Body{$/;"	f
getBodyList	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2Controller.hx	/^	public function getBodyList() : B2ControllerEdge$/;"	f
getBool	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^	public function getBool (id:String, defaultValue:Bool = true):Bool {$/;"	f
getBoolean	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function getBoolean (param:Int):Bool {$/;"	f
getBoolean	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function getBoolean (param:Int):Bool {$/;"	f
getBooleanv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function getBooleanv (param:Int, count:Int = 1 ):Array<Bool> {$/;"	f
getBooleanv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function getBooleanv (param:Int, count:Int = 1 ):Array<Bool> {$/;"	f
getBoundingClientRect	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function getBoundingClientRect ():Dynamic \/*ClientRect*\/ { return null; };$/;"	f
getBounds	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function getBounds (targetCoordinateSpace:Dynamic \/*DisplayObject*\/):Dynamic \/*flash.geom.Rectangle*\/ { return null; };$/;"	f
getBounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public function getBounds (targetCoordinateSpace:DisplayObject):Rectangle {$/;"	f
getBounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	public function getBounds (targetCoordinateSpace:DisplayObject):Rectangle {$/;"	f
getBucket	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	private static function getBucket(glStack:GLStack, mode:BucketMode):GLBucket {$/;"	f
getBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function getBuffer (gl:GLRenderContext):GLBuffer {$/;"	f
getBuffer3f	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function getBuffer3f (buffer:Int, param:Int):Array<Float> {$/;"	f
getBuffer3f	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function getBuffer3f (buffer:Int, param:Int):Array<Float> {$/;"	f
getBuffer3i	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function getBuffer3i (buffer:Int, param:Int):Array<Int> {$/;"	f
getBuffer3i	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function getBuffer3i (buffer:Int, param:Int):Array<Int> {$/;"	f
getBufferParameter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function getBufferParameter (target:Int, pname:Int):Dynamic;$/;"	f
getBufferParameter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function getBufferParameter (target:Int, pname:Int):Int \/*Dynamic*\/ {$/;"	f
getBufferParameter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function getBufferParameter (target:Int, pname:Int):Int \/*Dynamic*\/ {$/;"	f
getBufferParameter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function getBufferParameter(target:Int, pname:Int):Dynamic $/;"	f
getBufferParameter	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function getBufferParameter(target:Int, pname:Int):Dynamic;$/;"	f
getBuffered	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function getBuffered (buffer:AudioBuffer):Dynamic \/*TimeRanges*\/ {$/;"	f
getBufferf	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function getBufferf (buffer:Int, param:Int):Float {$/;"	f
getBufferf	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function getBufferf (buffer:Int, param:Int):Float {$/;"	f
getBufferfv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function getBufferfv (buffer:Int, param:Int, count:Int = 1):Array<Float> {$/;"	f
getBufferfv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function getBufferfv (buffer:Int, param:Int, count:Int = 1):Array<Float> {$/;"	f
getBufferi	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function getBufferi (buffer:Int, param:Int):Int {$/;"	f
getBufferi	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function getBufferi (buffer:Int, param:Int):Int {$/;"	f
getBufferiv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function getBufferiv (buffer:Int, param:Int, count:Int = 1):Array<Int> {$/;"	f
getBufferiv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function getBufferiv (buffer:Int, param:Int, count:Int = 1):Array<Int> {$/;"	f
getBuildFields	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function getBuildFields() : Array<Field> {$/;"	f
getBuildNumber	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	private function getBuildNumber (project:HXProject, increment:Bool = true):Void {$/;"	f
getByte	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Memory.hx	/^	static inline public function getByte (addr:Int):Int {$/;"	f
getByteBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ArrayBufferView.hx	/^	public function getByteBuffer ():ByteArray {$/;"	f
getByteBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function getByteBuffer ():ByteArray { return this; }$/;"	f
getByteBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/IMemoryRange.hx	/^	public function getByteBuffer ():ByteArray;$/;"	f
getByteBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ArrayBufferView.hx	/^	public function getByteBuffer ():ByteArray {$/;"	f
getByteBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function getByteBuffer ():ByteArray {$/;"	f
getByteBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IMemoryRange.hx	/^	public function getByteBuffer ():ByteArray;$/;"	f
getByteBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IMemoryRange.hx	/^	public function getByteBuffer ():ByteArray;$/;"	f
getBytes	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public function getBytes (id:String):ByteArray {$/;"	f
getBytes	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public static function getBytes (id:String):ByteArray {$/;"	f
getBytes	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^	public override function getBytes (id:String):ByteArray {$/;"	f
getBytes	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^	public override function getBytes (id:String):ByteArray {$/;"	f
getBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public static function getBytes (id:String):ByteArray {$/;"	f
getBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function getBytes (id:String):ByteArray {$/;"	f
getBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public static function getBytes (id:String):ByteArray {$/;"	f
getBytes	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^	public override function getBytes (id:String):ByteArray {$/;"	f
getBytes	/usr/lib/haxe/std/haxe/Resource.hx	/^	public static function getBytes( name : String ) : haxe.io.Bytes {$/;"	f
getBytes	/usr/lib/haxe/std/haxe/io/BytesBuffer.hx	/^	public function getBytes() : Bytes untyped {$/;"	f
getBytes	/usr/lib/haxe/std/haxe/io/BytesOutput.hx	/^	public function getBytes() : Bytes {$/;"	f
getBytes	/usr/lib/haxe/std/sys/io/File.hx	/^	static function getBytes( path : String ) : haxe.io.Bytes;$/;"	f
getBytesLoaded	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/FlashAudioContext.hx	/^	public function getBytesLoaded (buffer:AudioBuffer):UInt {$/;"	f
getBytesTotal	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/FlashAudioContext.hx	/^	public function getBytesTotal (buffer:AudioBuffer):Int {$/;"	f
getCache	/usr/lib/haxe/std/neko/vm/Loader.hx	/^	public function getCache() : haxe.ds.StringMap<Module> {$/;"	f
getCachedSamples	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInputDevice.hx	/^	public function getCachedSamples (data:ByteArray, append:Bool = false):Int {$/;"	f
getCapabilities	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static function getCapabilities ():Dynamic;$/;"	f
getCapability	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static function getCapability (key:String):Dynamic;$/;"	f
getCenter	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^	public function getCenter():B2Vec2$/;"	f
getChar	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CLIHelper.hx	/^	public static inline function getChar ():Int {$/;"	f
getChar	/usr/lib/haxe/std/Sys.hx	/^	static function getChar( echo : Bool ) : Int;$/;"	f
getCharBoundaries	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public function getCharBoundaries (a:Int):Rectangle {$/;"	f
getCharIndexAtPoint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public function getCharIndexAtPoint (x:Float, y:Float):Int {$/;"	f
getChildAt	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function getChildAt (index:Int):Dynamic \/*DisplayObject*\/ { return null; };$/;"	f
getChildAt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^	public function getChildAt (index:Int):DisplayObject {$/;"	f
getChildAt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^	public function getChildAt (index:Int):DisplayObject {$/;"	f
getChildByName	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function getChildByName (name:String):Dynamic \/*DisplayObject*\/ { return null; };$/;"	f
getChildByName	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^	public function getChildByName (name:String):DisplayObject {$/;"	f
getChildByName	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^	public function getChildByName (name:String):DisplayObject {$/;"	f
getChildIndex	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function getChildIndex (child:Dynamic \/*DisplayObject*\/):Int { return 0; };$/;"	f
getChildIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^	public function getChildIndex (child:DisplayObject):Int {$/;"	f
getChildIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^	public function getChildIndex (child:DisplayObject):Int {$/;"	f
getClass	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^	static function getClass(o:Dynamic) : Dynamic {$/;"	f
getClass	/usr/lib/haxe/std/haxe/macro/TypeTools.hx	/^	static public function getClass( t : Type ) return t == null ? null : switch(follow(t)) {$/;"	f
getClassFields	/usr/lib/haxe/std/Type.hx	/^	public static function getClassFields( c : Class<Dynamic> ) : Array<String>;$/;"	f
getClassName	/usr/lib/haxe/std/Type.hx	/^	public static function getClassName( c : Class<Dynamic> ) : String;$/;"	f
getClassPath	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function getClassPath() : Array<String> {$/;"	f
getClasses	/usr/lib/haxe/std/neko/Lib.hx	/^	public static function getClasses() : Dynamic {$/;"	f
getClientHeader	/usr/lib/haxe/std/neko/Web.hx	/^	public static function getClientHeader( k : String ) {$/;"	f
getClientHeaders	/usr/lib/haxe/std/neko/Web.hx	/^	public static function getClientHeaders() {$/;"	f
getClientIP	/usr/lib/haxe/std/neko/Web.hx	/^	public static function getClientIP() {$/;"	f
getClientRects	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function getClientRects ():Dynamic \/*ClientRectList*\/ { return null; };$/;"	f
getClosestPoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^public function getClosestPoint():B2Vec2$/;"	f
getCnx	/usr/lib/haxe/std/sys/db/Manager.hx	/^	function getCnx() {$/;"	f
getCode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	public function getCode (handle : Dynamic) : Int {$/;"	f
getColorBoundsRect	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public function getColorBoundsRect (mask:Int, color:Int, findColor:Bool = true, format:PixelFormat = null):Rectangle {$/;"	f
getColorBoundsRect	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	public static function getColorBoundsRect (image:Image, mask:Int, color:Int, findColor:Bool = true, format:PixelFormat):Rectangle {$/;"	f
getColorBoundsRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function getColorBoundsRect (mask:Int, color:Int, findColor:Bool = true):Rectangle {$/;"	f
getColorBoundsRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function getColorBoundsRect (mask:Int, color:Int, findColor:Bool = true):Rectangle {$/;"	f
getContactCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function getContactCount() : Int$/;"	f
getContactList	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function getContactList():B2ContactEdge {$/;"	f
getContactList	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function getContactList():B2Contact$/;"	f
getContent	/usr/lib/haxe/std/sys/io/File.hx	/^	static function getContent( path : String ) : String;$/;"	f
getContextAttributes	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function getContextAttributes ():GLContextAttributes;$/;"	f
getContextAttributes	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function getContextAttributes ():GLContextAttributes {$/;"	f
getContextAttributes	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function getContextAttributes ():GLContextAttributes {$/;"	f
getContextAttributes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function getContextAttributes():GLContextAttributes $/;"	f
getContextAttributes	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function getContextAttributes():GLContextAttributes;$/;"	f
getContextsDevice	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public function getContextsDevice (context:ALContext):ALDevice {$/;"	f
getContextsDevice	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static function getContextsDevice (context:ALContext):ALDevice {$/;"	f
getControlAt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInputDevice.hx	/^	public function getControlAt (i:Int):GameInputControl {$/;"	f
getController	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function getController (buffer:AudioBuffer):Dynamic \/*MediaController*\/ {$/;"	f
getControllerList	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function getControllerList() : B2ControllerEdge {$/;"	f
getCookies	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	public function getCookies ():Array<String> {$/;"	f
getCookies	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	public function getCookies (handle : Dynamic) : Array<String> {$/;"	f
getCookies	/usr/lib/haxe/std/neko/Web.hx	/^	public static function getCookies():haxe.ds.StringMap<String> {$/;"	f
getCoreVertex1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public function getCoreVertex1(): B2Vec2$/;"	f
getCoreVertex2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public function getCoreVertex2(): B2Vec2$/;"	f
getCorner1Vector	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public function getCorner1Vector(): B2Vec2$/;"	f
getCorner2Vector	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public function getCorner2Vector(): B2Vec2$/;"	f
getCurrentContext	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public function getCurrentContext ():ALContext {$/;"	f
getCurrentContext	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static function getCurrentContext ():ALContext {$/;"	f
getCurrentSrc	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function getCurrentSrc (buffer:AudioBuffer):String {$/;"	f
getCurrentTime	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function getCurrentTime (buffer:AudioBuffer):Float {$/;"	f
getCwd	/usr/lib/haxe/std/Sys.hx	/^	static function getCwd() : String;$/;"	f
getCwd	/usr/lib/haxe/std/neko/Web.hx	/^	public static function getCwd() {$/;"	f
getDampingRatio	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^	public function getDampingRatio():Float$/;"	f
getDampingRatio	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^	public function getDampingRatio():Float$/;"	f
getData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public function getData(type:BucketDataType):GLBucketData {$/;"	f
getData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	public function getData (handle : Dynamic) : ByteArray {$/;"	f
getData	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^	public inline function getData() : BytesData {$/;"	f
getDate	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURL.hx	/^	public static function getDate (date:String, now:Int):Int {$/;"	f
getDate	/usr/lib/haxe/std/Date.hx	/^	function getDate() : Int;$/;"	f
getDay	/usr/lib/haxe/std/Date.hx	/^	function getDay() : Int;$/;"	f
getDefaultPlaybackRate	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function getDefaultPlaybackRate (buffer:AudioBuffer):Float {$/;"	f
getDefines	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	public static function getDefines (names:Array <String> = null, descriptions:Array <String> = null, ignored:Array <String> = null):Map <String, String> {$/;"	f
getDefinition	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function getDefinition() : B2BodyDef$/;"	f
getDefinition	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/ApplicationDomain.hx	/^	public function getDefinition (name:String):Dynamic {$/;"	f
getDensity	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public function getDensity():Float {$/;"	f
getDeviceAt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInput.hx	/^	public static function getDeviceAt (index:Int):GameInputDevice {$/;"	f
getDeviceSDKVersion	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^	public static function getDeviceSDKVersion (deviceID:String):Int {$/;"	f
getDirectionVector	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public function getDirectionVector(): B2Vec2$/;"	f
getDisplayPos	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^	public static function getDisplayPos() : Null<{ file : String, pos : Int }> {$/;"	f
getDouble	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function getDouble (param:Int):Float {$/;"	f
getDouble	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function getDouble (param:Int):Float {$/;"	f
getDouble	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Memory.hx	/^	static inline public function getDouble (addr:Int):Float {$/;"	f
getDouble	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^	public function getDouble( pos : Int ) : Float {$/;"	f
getDoubleSig	/usr/lib/haxe/std/haxe/io/Input.hx	/^	function getDoubleSig(bytes:Array<Int>)$/;"	f
getDoublev	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function getDoublev (param:Int, count:Int = 1 ):Array<Float> {$/;"	f
getDoublev	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function getDoublev (param:Int, count:Int = 1 ):Array<Float> {$/;"	f
getDrawScale	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	public function getDrawScale() : Float {$/;"	f
getDuration	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function getDuration (buffer:AudioBuffer):Float {$/;"	f
getDuration	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public function getDuration ():Int;$/;"	f
getDynamicImageData	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function getDynamicImageData (sx:Float, sy:Float, sw:Float, sh:Float):Dynamic \/*ImageData*\/ { return null; };$/;"	f
getDynamicImageDataHD	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function getDynamicImageDataHD (sx:Float, sy:Float, sw:Float, sh:Float):Dynamic \/*ImageData*\/ { return null; };$/;"	f
getElementsByClassName	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function getElementsByClassName (name:String):Dynamic \/*NodeList*\/ { return null; };$/;"	f
getElementsByTagName	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function getElementsByTagName (name:String):Dynamic \/*NodeList*\/ { return null; };$/;"	f
getElementsByTagNameNS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function getElementsByTagNameNS (?namespaceURI:String, localName:String):Dynamic \/*NodeList*\/ { return null; };$/;"	f
getElementsBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexAttribute.hx	/^	private inline function getElementsBytes() {$/;"	f
getElementsPerVertex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	inline function getElementsPerVertex() {$/;"	f
getEnableTextEvents	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashWindow.hx	/^	public function getEnableTextEvents ():Bool {$/;"	f
getEnableTextEvents	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^	public function getEnableTextEvents ():Bool {$/;"	f
getEnableTextEvents	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	public function getEnableTextEvents ():Bool {$/;"	f
getEnded	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function getEnded (buffer:AudioBuffer):Bool {$/;"	f
getEnum	/usr/lib/haxe/std/Type.hx	/^	public static function getEnum( o : EnumValue ) : Enum<Dynamic>;$/;"	f
getEnum	/usr/lib/haxe/std/haxe/macro/TypeTools.hx	/^	static public function getEnum( t : Type ) return t == null ? null : switch(follow(t)) {$/;"	f
getEnumConstructs	/usr/lib/haxe/std/Type.hx	/^	public static function getEnumConstructs( e : Enum<Dynamic> ) : Array<String>;$/;"	f
getEnumName	/usr/lib/haxe/std/Type.hx	/^	public static function getEnumName( e : Enum<Dynamic> ) : String;$/;"	f
getEnumValue	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function getEnumValue (ename:String):Int {$/;"	f
getEnumValue	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function getEnumValue (ename:String):Int {$/;"	f
getEnv	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/JNI.hx	/^	public static function getEnv ():Dynamic {$/;"	f
getEnv	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	public static function getEnv ():Dynamic {$/;"	f
getEnv	/usr/lib/haxe/std/Sys.hx	/^	static function getEnv( s : String ) : String;$/;"	f
getError	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function getError ():Int {$/;"	f
getError	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public function getError (device:ALDevice):Int {$/;"	f
getError	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function getError (buffer:AudioBuffer):Dynamic \/*MediaError*\/ {$/;"	f
getError	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function getError ():Int {$/;"	f
getError	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static function getError (device:ALDevice):Int {$/;"	f
getError	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function getError ():Int;$/;"	f
getError	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function getError ():Int {$/;"	f
getError	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function getError ():Int {$/;"	f
getError	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function getError():Int $/;"	f
getError	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function getError():Int;$/;"	f
getErrorMessage	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	public function getErrorMessage (handle : Dynamic) : String {$/;"	f
getErrorString	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function getErrorString ():String {$/;"	f
getErrorString	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public function getErrorString (device:ALDevice):String {$/;"	f
getErrorString	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function getErrorString ():String {$/;"	f
getErrorString	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static function getErrorString (device:ALDevice):String {$/;"	f
getExpectedType	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function getExpectedType():Null<Type> {$/;"	f
getExports	/usr/lib/haxe/std/neko/vm/Module.hx	/^	public function getExports() : haxe.ds.StringMap<Dynamic> {$/;"	f
getExtension	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function getExtension (name:String):Dynamic;$/;"	f
getExtension	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function getExtension (name:String):Dynamic {$/;"	f
getExtension	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function getExtension (name:String):Dynamic {$/;"	f
getExtension	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function getExtension(name:String):Dynamic $/;"	f
getExtension	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function getExtension(name:String):Dynamic;$/;"	f
getExtents	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^	public function getExtents():B2Vec2$/;"	f
getEyeViewMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^	public static function getEyeViewMatrix(m:Matrix3D, eye:Eye) {$/;"	f
getFatAABB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^	public function getFatAABB(proxy:B2DynamicTreeNode):B2AABB$/;"	f
getFatAABB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^	public function getFatAABB(proxy:Dynamic):B2AABB$/;"	f
getFatAABB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/IBroadPhase.hx	/^	function getFatAABB(proxy:Dynamic):B2AABB;$/;"	f
getField	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	function getField( f : { field : String, expr : Expr } ) {$/;"	f
getFields	/usr/lib/haxe/std/haxe/rtti/Meta.hx	/^	public static function getFields( t : Dynamic ) : Dynamic<Dynamic<Array<Dynamic>>> {$/;"	f
getFieldsNames	/usr/lib/haxe/std/sys/db/ResultSet.hx	/^	function getFieldsNames() : Null<Array<String>>;$/;"	f
getFilePath	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^	private static function getFilePath (name:String, localPath:String):String {$/;"	f
getFillAlpha	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	public function getFillAlpha() : Float {$/;"	f
getFilterData	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public function getFilterData(): B2FilterData$/;"	f
getFirstVertex	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public function getFirstVertex(xf: B2Transform): B2Vec2$/;"	f
getFixtureA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	public function getFixtureA():B2Fixture$/;"	f
getFixtureB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	public function getFixtureB():B2Fixture$/;"	f
getFixtureList	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function getFixtureList() : B2Fixture{$/;"	f
getFlags	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	public function getFlags() : Int{$/;"	f
getFlags	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	function getFlags( t : haxe.macro.Type ) {$/;"	f
getFlatName	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^	public static function getFlatName (name:String):String {$/;"	f
getFloat	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function getFloat (param:Int):Float {$/;"	f
getFloat	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function getFloat (param:Int):Float {$/;"	f
getFloat	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^	public function getFloat (id:String, defaultValue:Float = 0):Float {$/;"	f
getFloat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Memory.hx	/^	static inline public function getFloat (addr:Int):Float {$/;"	f
getFloat	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^	public function getFloat( pos : Int ) : Float {$/;"	f
getFloat32	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ArrayBufferView.hx	/^	public inline function getFloat32 (position:Int):Float {$/;"	f
getFloat32	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ArrayBufferView.hx	/^	inline public function getFloat32 (position:Int):Float {$/;"	f
getFloatResult	/usr/lib/haxe/std/sys/db/ResultSet.hx	/^	function getFloatResult( n : Int ) : Float;$/;"	f
getFloatv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function getFloatv (param:Int, count:Int = 1):Array<Float> {$/;"	f
getFloatv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function getFloatv (param:Int, count:Int = 1):Array<Float> {$/;"	f
getFont	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public function getFont (id:String):Font {$/;"	f
getFont	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public static function getFont (id:String, useCache:Bool = true):Font {$/;"	f
getFont	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^	public override function getFont (id:String):Font {$/;"	f
getFont	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^	public override function getFont (id:String):Font {$/;"	f
getFont	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function getFont (id:String):Font {$/;"	f
getFont	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function getFont (id:String):Font;$/;"	f
getFont	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public static function getFont (id:String, useCache:Bool = true):Font {$/;"	f
getFont	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMTextField.hx	/^	public static function getFont (format:TextFormat):String {$/;"	f
getFont	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function getFont (id:String):Font {$/;"	f
getFont	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function getFont (id:String):Font;$/;"	f
getFont	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public static function getFont (id:String, useCache:Bool = true):Font {$/;"	f
getFont	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^	public override function getFont (id:String):Font {$/;"	f
getFontInstance	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^	public static function getFontInstance (format:TextFormat):Font {$/;"	f
getFontOptions	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function getFontOptions ():CairoFontOptions {$/;"	f
getFrameRate	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashApplication.hx	/^	public function getFrameRate ():Float {$/;"	f
getFrameRate	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Application.hx	/^	public function getFrameRate ():Float {$/;"	f
getFrameRate	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public function getFrameRate ():Float {$/;"	f
getFramebufferAttachmentParameter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function getFramebufferAttachmentParameter (target:Int, attachment:Int, pname:Int):Dynamic;$/;"	f
getFramebufferAttachmentParameter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function getFramebufferAttachmentParameter (target:Int, attachment:Int, pname:Int):Int \/*Dynamic*\/ {$/;"	f
getFramebufferAttachmentParameter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function getFramebufferAttachmentParameter (target:Int, attachment:Int, pname:Int):Int \/*Dynamic*\/ {$/;"	f
getFramebufferAttachmentParameter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function getFramebufferAttachmentParameter(target:Int, attachment:Int, pname:Int):Dynamic $/;"	f
getFramebufferAttachmentParameter	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function getFramebufferAttachmentParameter(target:Int, attachment:Int, pname:Int):Dynamic;$/;"	f
getFrequency	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^	public function getFrequency():Float$/;"	f
getFrequency	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^	public function getFrequency():Float$/;"	f
getFriction	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public function getFriction():Float$/;"	f
getFromCache	/usr/lib/haxe/std/sys/db/Manager.hx	/^	function getFromCache( x : T, lock : Bool ) : T {$/;"	f
getFromCacheKey	/usr/lib/haxe/std/sys/db/Manager.hx	/^	function getFromCacheKey( key : String ) : T {$/;"	f
getFullYear	/usr/lib/haxe/std/Date.hx	/^	function getFullYear() : Int;$/;"	f
getGlobal	/usr/lib/haxe/std/neko/vm/Module.hx	/^	public function getGlobal( n : Int ) : Dynamic {$/;"	f
getGlyph	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	public function getGlyph (character:String):Glyph {$/;"	f
getGlyphInfo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/AbstractFont.hx	/^	public function getGlyphInfo (char:Int):GlyphInfo {$/;"	f
getGlyphMetrics	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	public function getGlyphMetrics (glyph:Glyph):GlyphMetrics {$/;"	f
getGlyphs	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	public function getGlyphs (characters:String = #if (display && haxe_ver < "3.2") "" #else "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^`'\\"\/\\\\&*()[]{}<>|:;_-+=?,. " #end):Array<Glyph> {$/;"	f
getGravity	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function getGravity():B2Vec2{$/;"	f
getGroundAnchorA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	public function getGroundAnchorA() :B2Vec2$/;"	f
getGroundAnchorB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	public function getGroundAnchorB() :B2Vec2$/;"	f
getGroundBody	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function getGroundBody() : B2Body{$/;"	f
getGroupMatches	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^	public function getGroupMatches (ereg:EReg, text:String, groupCount:UInt = 0):Array<String> {$/;"	f
getHXCPPConfig	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	public static function getHXCPPConfig ():HXProject {$/;"	f
getHaxelib	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^	public static function getHaxelib (haxelib:Haxelib, validate:Bool = false, clearCache:Bool = false):String {$/;"	f
getHaxelib	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	public static function getHaxelib(library:String):String$/;"	f
getHaxelibVersion	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	private function getHaxelibVersion (haxelib:Haxelib):String {$/;"	f
getHeader	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthRequest.hx	/^	public function getHeader ():URLRequestHeader {$/;"	f
getHeaders	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	public function getHeaders (handle : Dynamic) : Array<String> {$/;"	f
getHeight	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/NMEPreloader.hx	/^	public function getHeight ():Float {$/;"	f
getHeight	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/NMEPreloader.hx	/^	public function getHeight():Float$/;"	f
getHigh	/usr/lib/haxe/std/haxe/Int64.hx	/^	public static function getHigh( x : Int64 ) : Int {$/;"	f
getHost	/usr/lib/haxe/std/sys/net/Address.hx	/^	public function getHost() {$/;"	f
getHostName	/usr/lib/haxe/std/haxe/web/Request.hx	/^	public static function getHostName() : String {$/;"	f
getHostName	/usr/lib/haxe/std/neko/Web.hx	/^	public static function getHostName() {$/;"	f
getHours	/usr/lib/haxe/std/Date.hx	/^	function getHours() : Int;$/;"	f
getI32	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Memory.hx	/^	static public function getI32 (addr:Int):Int {$/;"	f
getID3	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/FlashAudioContext.hx	/^	public function getID3 (buffer:AudioBuffer):Dynamic \/*ID3Info*\/ {$/;"	f
getIOSVersion	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^	private static function getIOSVersion (project:HXProject):Void {$/;"	f
getIconImage	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^	private static function getIconImage (icons:Array <Icon>, width:Int, height:Int, backgroundColor:Int = null):Image {$/;"	f
getImage	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public function getImage (id:String):Image {$/;"	f
getImage	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public static function getImage (id:String, useCache:Bool = true):Image {$/;"	f
getImage	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^	public override function getImage (id:String):Image {$/;"	f
getImage	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^	public override function getImage (id:String):Image {$/;"	f
getIndex	/usr/lib/haxe/std/haxe/EnumTools.hx	/^	static public inline function getIndex(e:EnumValue):Int {$/;"	f
getInertia	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function getInertia() : Float{$/;"	f
getInfos	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	public static function getInfos( t : haxe.macro.Type ) {$/;"	f
getInitialTime	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function getInitialTime (buffer:AudioBuffer):Float {$/;"	f
getInstance	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/StorageVolumeInfo.hx	/^	public static function getInstance ():StorageVolumeInfo {$/;"	f
getInstance	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	public static function getInstance () : URLLoadersManager {$/;"	f
getInstanceFields	/usr/lib/haxe/std/Type.hx	/^	public static function getInstanceFields( c : Class<Dynamic> ) : Array<String>;$/;"	f
getInt	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^	public function getInt (id:String, defaultValue:Int = 0):Int {$/;"	f
getInt16	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ArrayBufferView.hx	/^	public inline function getInt16 (position:Int):Int {$/;"	f
getInt16	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ArrayBufferView.hx	/^	inline public function getInt16 (position:Int):Int {$/;"	f
getInt32	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ArrayBufferView.hx	/^	public inline function getInt32 (position:Int):Int {$/;"	f
getInt32	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ArrayBufferView.hx	/^	inline public function getInt32 (position:Int):Int {$/;"	f
getInt8	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ArrayBufferView.hx	/^	public inline function getInt8 (position:Int):Int {$/;"	f
getIntResult	/usr/lib/haxe/std/sys/db/ResultSet.hx	/^	function getIntResult( n : Int ) : Int;$/;"	f
getInteger	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function getInteger (param:Int):Int {$/;"	f
getInteger	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function getInteger (param:Int):Int {$/;"	f
getIntegerv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function getIntegerv (param:Int, count:Int = 1):Array<Int> {$/;"	f
getIntegerv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public function getIntegerv (device:ALDevice, param:Int, count:Int = 1):Array<Int> {$/;"	f
getIntegerv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function getIntegerv (param:Int, count:Int = 1):Array<Int> {$/;"	f
getIntegerv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static function getIntegerv (device:ALDevice, param:Int, size:Int):Array<Int> {$/;"	f
getInverse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat22.hx	/^	public function getInverse(out:B2Mat22):B2Mat22$/;"	f
getIsBuffering	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/FlashAudioContext.hx	/^	public function getIsBuffering (buffer:AudioBuffer):Bool {$/;"	f
getIsURLInaccessible	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/FlashAudioContext.hx	/^	public function getIsURLInaccessible (buffer:AudioBuffer):Bool {$/;"	f
getJointAngle	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	public function getJointAngle() :Float{$/;"	f
getJointCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function getJointCount() : Int$/;"	f
getJointList	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function getJointList() : B2JointEdge{$/;"	f
getJointList	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function getJointList() : B2Joint{$/;"	f
getJointSpeed	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	public function getJointSpeed():Float{$/;"	f
getJointSpeed	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	public function getJointSpeed():Float{$/;"	f
getJointSpeed	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	public function getJointSpeed() :Float{$/;"	f
getJointTranslation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	public function getJointTranslation():Float{$/;"	f
getJointTranslation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	public function getJointTranslation():Float{$/;"	f
getKeyHold	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		public function getKeyHold(k:Int):Int$/;"	f
getKeyString	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		static public function getKeyString(k:UInt):String{$/;"	f
getLastChar	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	public function getLastChar() {$/;"	f
getLastModified	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^	public static function getLastModified (source:String):Float {$/;"	f
getLength	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public function getLength(): Float$/;"	f
getLength	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^	public function getLength():Float$/;"	f
getLength	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/FlashAudioContext.hx	/^	public function getLength (buffer:AudioBuffer):Float {$/;"	f
getLength	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ArrayBufferView.hx	/^	public function getLength ():Int {$/;"	f
getLength	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function getLength ():Int { return length; }$/;"	f
getLength	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/IMemoryRange.hx	/^	public function getLength ():Int;$/;"	f
getLength	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ArrayBufferView.hx	/^	public function getLength ():Int {$/;"	f
getLength	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function getLength ():Int {$/;"	f
getLength	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IMemoryRange.hx	/^	public function getLength ():Int;$/;"	f
getLength	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IMemoryRange.hx	/^	public function getLength ():Int;$/;"	f
getLength1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	public function getLength1() :Float$/;"	f
getLength2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	public function getLength2() :Float$/;"	f
getLibrary	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	private static function getLibrary (name:String):AssetLibrary {$/;"	f
getLibrary	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	private static function getLibrary (name:String):lime.Assets.AssetLibrary {$/;"	f
getLibrary	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	private static function getLibrary (name:String):AssetLibrary {$/;"	f
getLibraryPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^	public static function getLibraryPath (ndll:NDLL, directoryName:String, namePrefix:String = "", nameSuffix:String = ".ndll", allowDebug:Bool = false):String {$/;"	f
getLineBreakIndices	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^	private static function getLineBreakIndices (textField:TextField):Array<Int> {$/;"	f
getLineBreakIndices	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^	private static function getLineBreakIndices (textField:TextField):Array<Int> {$/;"	f
getLineBreaks	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^	private static function getLineBreaks (textField:TextField):Int {$/;"	f
getLineBreaksInRange	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^	private static function getLineBreaksInRange (textField:TextField, i:Int):Int {$/;"	f
getLineDash	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function getLineDash ():Array<Float> { return null; };$/;"	f
getLineIndexAtPoint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public function getLineIndexAtPoint (x:Float, y:Float):Int {$/;"	f
getLineIndices	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^	private static function getLineIndices (textField:TextField, line:Int):Array<Int> {$/;"	f
getLineMetric	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^	public static function getLineMetric (textField:TextField, line:Int, metric:TextFieldLineMetric):Float {$/;"	f
getLineMetricSubRangesNotNull	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^	private static function getLineMetricSubRangesNotNull (textField:TextField, specificLine:Int, metric:TextFieldLineMetric):Float {$/;"	f
getLineMetricSubRangesNull	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^	private static function getLineMetricSubRangesNull (textField:TextField, singleLine:Bool = false, metric:TextFieldLineMetric):Float {$/;"	f
getLineMetrics	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public function getLineMetrics (lineIndex:Int):TextLineMetrics {$/;"	f
getLineMetrics	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public function getLineMetrics (lineIndex:Int):TextLineMetrics {$/;"	f
getLineOffset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public function getLineOffset (lineIndex:Int):Int {$/;"	f
getLineOffset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public function getLineOffset (lineIndex:Int):Int {$/;"	f
getLineText	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public function getLineText (lineIndex:Int):String {$/;"	f
getLineText	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public function getLineText (lineIndex:Int):String {$/;"	f
getLineThickness	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	public function getLineThickness() : Float {$/;"	f
getLineWidth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^	public static function getLineWidth (textField:TextField, line:Int):Float {$/;"	f
getLineWidth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^	public static function getLineWidth (textField:TextField, line:Int):Float {$/;"	f
getLinearDamping	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function getLinearDamping():Float$/;"	f
getLinearVelocity	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function getLinearVelocity() : B2Vec2{$/;"	f
getLinearVelocityFromLocalPoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function getLinearVelocityFromLocalPoint(localPoint:B2Vec2) : B2Vec2$/;"	f
getLinearVelocityFromWorldPoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function getLinearVelocityFromWorldPoint(worldPoint:B2Vec2) : B2Vec2$/;"	f
getListener3f	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function getListener3f (param:Int):Array<Float> {$/;"	f
getListener3f	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function getListener3f (param:Int):Array<Float> {$/;"	f
getListener3i	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function getListener3i (param:Int):Array<Int> {$/;"	f
getListener3i	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function getListener3i (param:Int):Array<Int> {$/;"	f
getListenerf	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function getListenerf (param:Int):Float {$/;"	f
getListenerf	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function getListenerf (param:Int):Float {$/;"	f
getListenerfv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function getListenerfv (param:Int, count:Int = 1):Array<Float> {$/;"	f
getListenerfv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function getListenerfv (param:Int, count:Int = 1):Array<Float> {$/;"	f
getListeneri	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function getListeneri (param:Int):Int {$/;"	f
getListeneri	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function getListeneri (param:Int):Int {$/;"	f
getListeneriv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function getListeneriv (param:Int, count:Int = 1):Array<Int> {$/;"	f
getListeneriv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function getListeneriv (param:Int, count:Int = 1):Array<Int> {$/;"	f
getLocal	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^	public static function getLocal (name:String, localPath:String = null, secure:Bool = false):SharedObject {$/;"	f
getLocal	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/SharedObject.hx	/^	public static function getLocal (name:String, localPath:String = null, secure:Bool = false \/* note: unsupported *\/) {$/;"	f
getLocalCenter	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function getLocalCenter() : B2Vec2{$/;"	f
getLocalClass	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function getLocalClass() : Null<Type.Ref<Type.ClassType>> {$/;"	f
getLocalMethod	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function getLocalMethod() : Null<String> {$/;"	f
getLocalModule	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function getLocalModule() : String {$/;"	f
getLocalPoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function getLocalPoint(worldPoint:B2Vec2) : B2Vec2{$/;"	f
getLocalPosition	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^	public function getLocalPosition() : B2Vec2{$/;"	f
getLocalType	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function getLocalType() : Null<Type> {$/;"	f
getLocalUsing	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function getLocalUsing() :  Array<Type.Ref<Type.ClassType>> {$/;"	f
getLocalVars	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function getLocalVars() : haxe.ds.StringMap<Type> {$/;"	f
getLocalVector	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function getLocalVector(worldVector:B2Vec2) : B2Vec2{$/;"	f
getLockMode	/usr/lib/haxe/std/sys/db/Manager.hx	/^	function getLockMode() {$/;"	f
getLoop	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function getLoop (buffer:AudioBuffer):Bool {$/;"	f
getLow	/usr/lib/haxe/std/haxe/Int64.hx	/^	public static function getLow( x : Int64 ) : Int {$/;"	f
getLowerLimit	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	public function getLowerLimit() : Float$/;"	f
getLowerLimit	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	public function getLowerLimit() : Float$/;"	f
getLowerLimit	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	public function getLowerLimit() :Float{$/;"	f
getMS	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^	private static function getMS ():Float {$/;"	f
getMS	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^	private static function getMS ():Float {$/;"	f
getManagerInfos	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	static function getManagerInfos( t : haxe.macro.Type, pos ) {$/;"	f
getManifold	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	public function getManifold():B2Manifold$/;"	f
getMass	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function getMass() : Float{$/;"	f
getMassData	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function getMassData(data:B2MassData):Void$/;"	f
getMassData	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public function getMassData(massData:B2MassData = null):B2MassData$/;"	f
getMatches	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^	public function getMatches (ereg:EReg, text:String):Array<String> {$/;"	f
getMaxForce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^	public function getMaxForce():Float$/;"	f
getMaxForce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^	public function getMaxForce():Float$/;"	f
getMaxMotorForce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	public function getMaxMotorForce():Float$/;"	f
getMaxTorque	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^	public function getMaxTorque():Float$/;"	f
getMediaGroup	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function getMediaGroup (buffer:AudioBuffer):String {$/;"	f
getMemberMethod	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	public function getMemberMethod (useArray:Bool):Dynamic {$/;"	f
getMethod	/usr/lib/haxe/std/neko/Web.hx	/^	public static function getMethod() : String {$/;"	f
getMetric	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^public function getMetric():Float$/;"	f
getMinutes	/usr/lib/haxe/std/Date.hx	/^	function getMinutes() : Int;$/;"	f
getModule	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function getModule( name : String ) : Array<Type> {$/;"	f
getMonth	/usr/lib/haxe/std/Date.hx	/^	function getMonth() : Int;$/;"	f
getMonthDays	/usr/lib/haxe/std/DateTools.hx	/^	public static function getMonthDays( d : Date ) : Int {$/;"	f
getMotorForce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	public function getMotorForce() : Float$/;"	f
getMotorForce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	public function getMotorForce() : Float$/;"	f
getMotorSpeed	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	public function getMotorSpeed() :Float$/;"	f
getMotorSpeed	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	public function getMotorSpeed() :Float$/;"	f
getMotorSpeed	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	public function getMotorSpeed() :Float{$/;"	f
getMotorTorque	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	public function getMotorTorque() :Float{$/;"	f
getMovieClip	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function getMovieClip (id:String):MovieClip {$/;"	f
getMovieClip	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public static function getMovieClip (id:String):MovieClip {$/;"	f
getMovieClip	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function getMovieClip (id:String):MovieClip {$/;"	f
getMovieClip	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public static function getMovieClip (id:String):MovieClip {$/;"	f
getMultipart	/usr/lib/haxe/std/neko/Web.hx	/^	public static function getMultipart( maxSize : Int ) : haxe.ds.StringMap<String> {$/;"	f
getMusic	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^	public override function getMusic (id:String):Sound {$/;"	f
getMusic	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function getMusic (id:String):Sound {$/;"	f
getMusic	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public static function getMusic (id:String, useCache:Bool = true):Sound {$/;"	f
getMusic	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function getMusic (id:String):Sound {$/;"	f
getMusic	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public static function getMusic (id:String, useCache:Bool = true):Sound {$/;"	f
getMusic	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^	public override function getMusic (id:String):Sound {$/;"	f
getMute	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public function getMute ():Bool;$/;"	f
getMute	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static function getMute ():Bool;$/;"	f
getMuted	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function getMuted (buffer:AudioBuffer):Bool {$/;"	f
getName	/usr/lib/haxe/std/haxe/EnumTools.hx	/^	static public inline function getName(e:EnumValue):String {$/;"	f
getNativePointer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ArrayBufferView.hx	/^	public function getNativePointer ():Dynamic {$/;"	f
getNativePointer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function getNativePointer ():Dynamic {$/;"	f
getNegative	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec2.hx	/^	public function getNegative():B2Vec2 { return new B2Vec2(-x, -y); }$/;"	f
getNegative	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec3.hx	/^	public function getNegative():B2Vec3 { return new B2Vec3( -x, -y, -z); }$/;"	f
getNetworkState	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function getNetworkState (buffer:AudioBuffer):Int {$/;"	f
getNext	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function getNext() : B2Body{$/;"	f
getNext	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public function getNext():B2Fixture$/;"	f
getNext	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	public function getNext():B2Contact{$/;"	f
getNext	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2Controller.hx	/^	public function getNext():B2Controller{return m_next;}$/;"	f
getNext	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	public function getNext():B2Joint{$/;"	f
getNextEdge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public function getNextEdge(): B2EdgeShape$/;"	f
getNormalVector	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public function getNormalVector(): B2Vec2$/;"	f
getNormals	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	public function getNormals() : Array <B2Vec2>$/;"	f
getOSXVersion	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^	private static function getOSXVersion ():String {$/;"	f
getObjectsUnderPoint	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function getObjectsUnderPoint (point:Dynamic \/*flash.geom.Point*\/):Array<Dynamic \/*DisplayObject*\/> { return null; };$/;"	f
getObjectsUnderPoint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^	public function getObjectsUnderPoint (point:Point):Array<DisplayObject> {$/;"	f
getObjectsUnderPoint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^	public function getObjectsUnderPoint (point:Point):Array<DisplayObject> {$/;"	f
getOutput	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^	public static function getOutput() : String {$/;"	f
getPan	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public function getPan ():Float;$/;"	f
getParamValues	/usr/lib/haxe/std/neko/Web.hx	/^	public static function getParamValues( param : String ) : Array<String> {$/;"	f
getParameter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function getParameter (pname:Int):Dynamic;$/;"	f
getParameter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function getParameter (pname:Int):Dynamic {$/;"	f
getParameter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function getParameter (pname:Int):Dynamic {$/;"	f
getParameter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function getParameter(pname:Int):Dynamic $/;"	f
getParameter	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function getParameter(pname:Int):Dynamic;$/;"	f
getParameters	/usr/lib/haxe/std/haxe/EnumTools.hx	/^	static public inline function getParameters(e:EnumValue):Array<Dynamic> {$/;"	f
getParams	/usr/lib/haxe/std/haxe/web/Request.hx	/^	public static function getParams() : haxe.ds.StringMap<String> {$/;"	f
getParams	/usr/lib/haxe/std/neko/Web.hx	/^	public static function getParams() {$/;"	f
getParamsString	/usr/lib/haxe/std/neko/Web.hx	/^	public static function getParamsString() {$/;"	f
getPath	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public function getPath (id:String):String {$/;"	f
getPath	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public static function getPath (id:String):String {$/;"	f
getPath	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^	public override function getPath (id:String):String {$/;"	f
getPath	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^	public override function getPath (id:String):String {$/;"	f
getPath	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public static function getPath (id:String):String {$/;"	f
getPath	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function getPath (id:String):String {$/;"	f
getPath	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public static function getPath (id:String):String {$/;"	f
getPath	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^	public override function getPath (id:String):String {$/;"	f
getPath	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^	function getPath( t : BaseType ) {$/;"	f
getPath	/usr/lib/haxe/std/neko/vm/Loader.hx	/^	public function getPath() {$/;"	f
getPaths	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private function getPaths(basePath:String, source:String, paths:Array <String>)$/;"	f
getPaused	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function getPaused (buffer:AudioBuffer):Bool {$/;"	f
getPid	/usr/lib/haxe/std/sys/io/Process.hx	/^	function getPid() : Int;$/;"	f
getPixel	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public function getPixel (x:Int, y:Int, format:PixelFormat = null):Int {$/;"	f
getPixel	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageCanvasUtil.hx	/^	public static function getPixel (image:Image, x:Int, y:Int, format:PixelFormat):Int {$/;"	f
getPixel	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	public static function getPixel (image:Image, x:Int, y:Int, format:PixelFormat):Int {$/;"	f
getPixel	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function getPixel (x:Int, y:Int):Int {$/;"	f
getPixel	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function getPixel (x:Int, y:Int):Int {$/;"	f
getPixel32	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public function getPixel32 (x:Int, y:Int, format:PixelFormat = null):Int {$/;"	f
getPixel32	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageCanvasUtil.hx	/^	public static function getPixel32 (image:Image, x:Int, y:Int, format:PixelFormat):Int {$/;"	f
getPixel32	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	public static function getPixel32 (image:Image, x:Int, y:Int, format:PixelFormat):Int {$/;"	f
getPixel32	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function getPixel32 (x:Int, y:Int):Int {$/;"	f
getPixel32	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function getPixel32 (x:Int, y:Int):Int {$/;"	f
getPixels	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public function getPixels (rect:Rectangle, format:PixelFormat = null):ByteArray {$/;"	f
getPixels	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageCanvasUtil.hx	/^	public static function getPixels (image:Image, rect:Rectangle, format:PixelFormat):ByteArray {$/;"	f
getPixels	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	public static function getPixels (image:Image, rect:Rectangle, format:PixelFormat):ByteArray {$/;"	f
getPixels	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function getPixels (rect:Rectangle):ByteArray {$/;"	f
getPixels	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function getPixels (rect:Rectangle):ByteArray {$/;"	f
getPlaybackRate	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function getPlaybackRate (buffer:AudioBuffer):Float {$/;"	f
getPlayed	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function getPlayed (buffer:AudioBuffer):Dynamic \/*TimeRanges*\/ {$/;"	f
getPosInfos	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function getPosInfos( p : Position ) : { min : Int, max : Int, file : String } {$/;"	f
getPosition	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function getPosition() : B2Vec2{$/;"	f
getPosition	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public function getPosition ():Int;$/;"	f
getPostData	/usr/lib/haxe/std/neko/Web.hx	/^	public static function getPostData() {$/;"	f
getPreload	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function getPreload (buffer:AudioBuffer):String {$/;"	f
getPrevEdge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public function getPrevEdge(): B2EdgeShape$/;"	f
getProcAddress	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function getProcAddress (fname:String):Dynamic {$/;"	f
getProcAddress	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function getProcAddress (fname:String):Dynamic {$/;"	f
getProgramInfoLog	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function getProgramInfoLog (program:GLProgram):String;$/;"	f
getProgramInfoLog	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function getProgramInfoLog (program:GLProgram):String {$/;"	f
getProgramInfoLog	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function getProgramInfoLog (program:GLProgram):String {$/;"	f
getProgramInfoLog	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function getProgramInfoLog(program:GLProgram):String $/;"	f
getProgramInfoLog	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function getProgramInfoLog(program:GLProgram):String;$/;"	f
getProgramParameter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function getProgramParameter (program:GLProgram, pname:Int):Dynamic;$/;"	f
getProgramParameter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function getProgramParameter (program:GLProgram, pname:Int):Int {$/;"	f
getProgramParameter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function getProgramParameter (program:GLProgram, pname:Int):Int {$/;"	f
getProgramParameter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function getProgramParameter(program:GLProgram, pname:Int):Int $/;"	f
getProgramParameter	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function getProgramParameter(program:GLProgram, pname:Int):Int;$/;"	f
getProperty	/usr/lib/haxe/std/Reflect.hx	/^	public static function getProperty( o : Dynamic, field : String ) : Dynamic;$/;"	f
getProtocol	/usr/lib/haxe/std/haxe/remoting/SocketConnection.hx	/^	public function getProtocol() : SocketProtocol {$/;"	f
getProtocol	/usr/lib/haxe/std/haxe/remoting/SyncSocketConnection.hx	/^	public function getProtocol() : SocketProtocol {$/;"	f
getProvisioningFile	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^	public static function getProvisioningFile ():String {$/;"	f
getProxyCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^	public function getProxyCount():Int$/;"	f
getProxyCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/IBroadPhase.hx	/^	function getProxyCount():Int;$/;"	f
getProxyCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function getProxyCount() : Int$/;"	f
getPt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var getPt = function (n1:Float , n2:Float, perc:Float):Float {$/;"	v
getRGBAPixels	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public inline static function getRGBAPixels (bitmapData:BitmapData):ByteArray {$/;"	f
getRadius	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^	public function getRadius():Float$/;"	f
getRatio	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^	public function getRatio():Float{$/;"	f
getRatio	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	public function getRatio():Float{$/;"	f
getReactionForce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^	public override function getReactionForce(inv_dt:Float):B2Vec2$/;"	f
getReactionForce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^	public override function getReactionForce(inv_dt:Float):B2Vec2$/;"	f
getReactionForce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^	public override function getReactionForce(inv_dt:Float):B2Vec2{$/;"	f
getReactionForce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	public function getReactionForce(inv_dt:Float):B2Vec2 { return null; }$/;"	f
getReactionForce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	public override function getReactionForce(inv_dt:Float) : B2Vec2$/;"	f
getReactionForce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^	public override function getReactionForce(inv_dt:Float):B2Vec2$/;"	f
getReactionForce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	public override function getReactionForce(inv_dt:Float) : B2Vec2$/;"	f
getReactionForce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	public override function getReactionForce(inv_dt:Float) :B2Vec2$/;"	f
getReactionForce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	public override function getReactionForce(inv_dt:Float) :B2Vec2{$/;"	f
getReactionForce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^	public override function getReactionForce(inv_dt:Float):B2Vec2$/;"	f
getReactionTorque	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^	public override function getReactionTorque(inv_dt:Float):Float$/;"	f
getReactionTorque	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^	public override function getReactionTorque(inv_dt:Float):Float$/;"	f
getReactionTorque	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^	public override function getReactionTorque(inv_dt:Float):Float{$/;"	f
getReactionTorque	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	public function getReactionTorque(inv_dt:Float):Float { return 0.0; }$/;"	f
getReactionTorque	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	public override function getReactionTorque(inv_dt:Float) : Float$/;"	f
getReactionTorque	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^	public override function getReactionTorque(inv_dt:Float):Float$/;"	f
getReactionTorque	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	public override function getReactionTorque(inv_dt:Float) : Float$/;"	f
getReactionTorque	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	public override function getReactionTorque(inv_dt:Float) :Float$/;"	f
getReactionTorque	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	public override function getReactionTorque(inv_dt:Float) :Float{$/;"	f
getReactionTorque	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^	public override function getReactionTorque(inv_dt:Float):Float$/;"	f
getReadyState	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function getReadyState (buffer:AudioBuffer):Int {$/;"	f
getRecordInfos	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	function getRecordInfos( c : haxe.macro.Type.Ref<haxe.macro.Type.ClassType> ) : RecordInfos {$/;"	f
getRect	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function getRect (targetCoordinateSpace:Dynamic \/*DisplayObject*\/):Dynamic \/*flash.geom.Rectangle*\/ { return null; };$/;"	f
getRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public function getRect (targetCoordinateSpace:DisplayObject):Rectangle {$/;"	f
getRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	public function getRect (targetCoordinateSpace:DisplayObject):Rectangle {$/;"	f
getRenderbufferParameter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function getRenderbufferParameter (target:Int, pname:Int):Dynamic;$/;"	f
getRenderbufferParameter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function getRenderbufferParameter (target:Int, pname:Int):Int \/*Dynamic*\/ {$/;"	f
getRenderbufferParameter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function getRenderbufferParameter (target:Int, pname:Int):Int \/*Dynamic*\/ {$/;"	f
getRenderbufferParameter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function getRenderbufferParameter(target:Int, pname:Int):Dynamic $/;"	f
getRenderbufferParameter	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function getRenderbufferParameter(target:Int, pname:Int):Dynamic;$/;"	f
getResolver	/usr/lib/haxe/std/haxe/Unserializer.hx	/^ 	public function getResolver() {$/;"	f
getResources	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function getResources():haxe.ds.StringMap<haxe.io.Bytes> {$/;"	f
getRestitution	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public function getRestitution():Float$/;"	f
getResult	/usr/lib/haxe/std/sys/db/ResultSet.hx	/^	function getResult( n : Int ) : String;$/;"	f
getRevBits	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	function getRevBits(n) {$/;"	f
getRunParam	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^	public static function getRunParam(i:Int) {$/;"	f
getSDKDirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^	public static function getSDKDirectory (project:HXProject):String {$/;"	f
getSearchDirection	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^public function getSearchDirection():B2Vec2$/;"	f
getSeconds	/usr/lib/haxe/std/Date.hx	/^	function getSeconds() : Int;$/;"	f
getSeekable	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function getSeekable (buffer:AudioBuffer):Dynamic \/*TimeRanges*\/ {$/;"	f
getSeeking	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function getSeeking (buffer:AudioBuffer):Bool {$/;"	f
getShaderInfoLog	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function getShaderInfoLog (shader:GLShader):String;$/;"	f
getShaderInfoLog	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function getShaderInfoLog (shader:GLShader):String {$/;"	f
getShaderInfoLog	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function getShaderInfoLog (shader:GLShader):String {$/;"	f
getShaderInfoLog	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function getShaderInfoLog(shader:GLShader):String $/;"	f
getShaderInfoLog	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function getShaderInfoLog(shader:GLShader):String;$/;"	f
getShaderParameter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function getShaderParameter (shader:GLShader, pname:Int):Dynamic;$/;"	f
getShaderParameter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function getShaderParameter (shader:GLShader, pname:Int):Int {$/;"	f
getShaderParameter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function getShaderParameter (shader:GLShader, pname:Int):Int {$/;"	f
getShaderParameter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function getShaderParameter(shader:GLShader, pname:Int):Int $/;"	f
getShaderParameter	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function getShaderParameter(shader:GLShader, pname:Int):Int;$/;"	f
getShaderPrecisionFormat	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function getShaderPrecisionFormat (shadertype:Int, precisiontype:Int):GLShaderPrecisionFormat;$/;"	f
getShaderPrecisionFormat	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function getShaderPrecisionFormat (shadertype:Int, precisiontype:Int):GLShaderPrecisionFormat {$/;"	f
getShaderPrecisionFormat	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function getShaderPrecisionFormat (shadertype:Int, precisiontype:Int):GLShaderPrecisionFormat {$/;"	f
getShaderPrecisionFormat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function getShaderPrecisionFormat(shadertype:Int, precisiontype:Int):ShaderPrecisionFormat $/;"	f
getShaderPrecisionFormat	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function getShaderPrecisionFormat(shadertype:Int, precisiontype:Int):ShaderPrecisionFormat;$/;"	f
getShaderSource	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function getShaderSource (shader:GLShader):String;$/;"	f
getShaderSource	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function getShaderSource (shader:GLShader):String {$/;"	f
getShaderSource	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function getShaderSource (shader:GLShader):String {$/;"	f
getShaderSource	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function getShaderSource(shader:GLShader):String $/;"	f
getShaderSource	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function getShaderSource(shader:GLShader):String;$/;"	f
getShaders	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLProgram.hx	/^	public function getShaders ():Array<GLShader> {$/;"	f
getShaders	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLProgram.hx	/^	public function getShaders ():Array<GLShader> {$/;"	f
getShape	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public function getShape():B2Shape$/;"	f
getSound	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^	public override function getSound (id:String):Sound {$/;"	f
getSound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function getSound (id:String):Sound {$/;"	f
getSound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function getSound (id:String):Sound;$/;"	f
getSound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public static function getSound (id:String, useCache:Bool = true):Sound {$/;"	f
getSound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function getSound (id:String):Sound {$/;"	f
getSound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function getSound (id:String):Sound;$/;"	f
getSound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public static function getSound (id:String, useCache:Bool = true):Sound {$/;"	f
getSound	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^	public override function getSound (id:String):Sound {$/;"	f
getSource3f	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function getSource3f (source:Int, param:Int):Array<Float> {$/;"	f
getSource3f	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function getSource3f (source:Int, param:Int):Array<Float> {$/;"	f
getSource3i	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function getSource3i (source:Int, param:Int):Array<Int> {$/;"	f
getSource3i	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function getSource3i (source:Int, param:Int):Array<Int> {$/;"	f
getSourcef	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function getSourcef (source:Int, param:Int):Float {$/;"	f
getSourcef	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function getSourcef (source:Int, param:Int):Float {$/;"	f
getSourcefv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function getSourcefv (source:Int, param:Int):Array<Float> {$/;"	f
getSourcefv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function getSourcefv (source:Int, param:Int):Array<Float> {$/;"	f
getSourcei	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function getSourcei (source:Int, param:Int):Int {$/;"	f
getSourcei	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function getSourcei (source:Int, param:Int):Int {$/;"	f
getSourceiv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function getSourceiv (source:Int, param:Int, count:Int = 1):Array<Int> {$/;"	f
getSourceiv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function getSourceiv (source:Int, param:Int, count:Int = 1):Array<Int> {$/;"	f
getSprite	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	public function getSprite() : Sprite {$/;"	f
getSrc	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function getSrc (buffer:AudioBuffer):String {$/;"	f
getStack	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^	static function getStack(e:js.Error):Array<StackItem> {$/;"	f
getStack	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	public static function getStack(graphics:Graphics, gl:GLRenderContext):GLStack {$/;"	f
getStackTrace	/usr/lib/haxe/lib/openfl/3,0,8/openfl/errors/Error.hx	/^	public function getStackTrace ():String {$/;"	f
getStart	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ArrayBufferView.hx	/^	public function getStart ():Int {$/;"	f
getStart	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function getStart ():Int { return 0; }$/;"	f
getStart	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/IMemoryRange.hx	/^	public function getStart ():Int;$/;"	f
getStart	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ArrayBufferView.hx	/^	public function getStart ():Int {$/;"	f
getStart	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function getStart ():Int {$/;"	f
getStart	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IMemoryRange.hx	/^	public function getStart ():Int;$/;"	f
getStart	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IMemoryRange.hx	/^	public function getStart ():Int;$/;"	f
getStartTime	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function getStartTime (buffer:AudioBuffer):Float {$/;"	f
getStaticMethod	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	public function getStaticMethod (useArray:Bool):Dynamic {$/;"	f
getStatics	/usr/lib/haxe/std/haxe/rtti/Meta.hx	/^	public static function getStatics( t : Dynamic ) : Dynamic<Dynamic<Array<Dynamic>>> {$/;"	f
getStorageVolumes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/StorageVolumeInfo.hx	/^	public function getStorageVolumes ():Array<StorageVolume> {$/;"	f
getString	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function getString (param:Int):String {$/;"	f
getString	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public function getString (device:ALDevice, param:Int):String {$/;"	f
getString	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function getString (param:Int):String {$/;"	f
getString	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static function getString (device:ALDevice, param:Int):String {$/;"	f
getString	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^	public function getString (id:String, defaultValue:String = ""):String {$/;"	f
getString	/usr/lib/haxe/std/haxe/Resource.hx	/^	public static function getString( name : String ) : String {$/;"	f
getString	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^	public function getString( pos : Int, len : Int ) : String {$/;"	f
getSuperClass	/usr/lib/haxe/std/Type.hx	/^	public static function getSuperClass( c : Class<Dynamic> ) : Class<Dynamic>;$/;"	f
getSupport	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DistanceProxy.hx	/^	public function getSupport(d:B2Vec2):Float$/;"	f
getSupport	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	public function getSupport(d:B2Vec2):Int$/;"	f
getSupportVertex	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DistanceProxy.hx	/^	public function getSupportVertex(d:B2Vec2):B2Vec2$/;"	f
getSupportVertex	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	public function getSupportVertex(d:B2Vec2):B2Vec2$/;"	f
getSupportedExtensions	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function getSupportedExtensions ():Array<String>;$/;"	f
getSupportedExtensions	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function getSupportedExtensions ():Array<String> {$/;"	f
getSupportedExtensions	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function getSupportedExtensions ():Array<String> {$/;"	f
getSupportedExtensions	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function getSupportedExtensions():Array<String> $/;"	f
getSupportedExtensions	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function getSupportedExtensions():Array<String>;$/;"	f
getSurface	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function getSurface (clone:Bool = true):CairoSurface {$/;"	f
getTarget	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^	public function getTarget():B2Vec2$/;"	f
getTemporaryDirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^	public static function getTemporaryDirectory ():String {$/;"	f
getTemporaryFile	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^	public static function getTemporaryFile (extension:String = ""):String {$/;"	f
getTexParameter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function getTexParameter (target:Int, pname:Int):Dynamic;$/;"	f
getTexParameter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function getTexParameter (target:Int, pname:Int):Int \/*Dynamic*\/ {$/;"	f
getTexParameter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function getTexParameter (target:Int, pname:Int):Int \/*Dynamic*\/ {$/;"	f
getTexParameter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function getTexParameter(target:Int, pname:Int):Dynamic $/;"	f
getTexParameter	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function getTexParameter(target:Int, pname:Int):Dynamic;$/;"	f
getText	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public function getText (id:String):String {$/;"	f
getText	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public static function getText (id:String):String {$/;"	f
getText	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^	public override function getText (id:String):String {$/;"	f
getText	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^	public override function getText (id:String):String {$/;"	f
getText	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public static function getText (id:String):String {$/;"	f
getText	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function getText (id:String):String {$/;"	f
getText	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public static function getText (id:String):String {$/;"	f
getText	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^	public override function getText (id:String):String {$/;"	f
getTextFormat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public function getTextFormat (beginIndex:Int = -1, endIndex:Int = -1):TextFormat {$/;"	f
getTextFormat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public function getTextFormat (beginIndex:Int = 0, endIndex:Int = 0):TextFormat {$/;"	f
getTextHeight	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^	public static function getTextHeight (textField:TextField):Float {$/;"	f
getTextWidth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^	public static function getTextWidth (textField:TextField, text:String):Float {$/;"	f
getTextWidth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^	public static function getTextWidth (textField:TextField, text:String):Float {$/;"	f
getTexture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function getTexture (gl:GLRenderContext):GLTexture {$/;"	f
getTileCenter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Tilesheet.hx	/^	public inline function getTileCenter(index:Int):Point {$/;"	f
getTileCenter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Tilesheet.hx	/^	public inline function getTileCenter (index:Int):Point {$/;"	f
getTileRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Tilesheet.hx	/^	public inline function getTileRect(index:Int):Rectangle {$/;"	f
getTileRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Tilesheet.hx	/^	public inline function getTileRect (index:Int):Rectangle {$/;"	f
getTileUVs	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Tilesheet.hx	/^	public inline function getTileUVs(index:Int):Rectangle {$/;"	f
getTileUVs	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Tilesheet.hx	/^	public inline function getTileUVs (index:Int):Rectangle {$/;"	f
getTime	/usr/lib/haxe/std/Date.hx	/^	function getTime() : Float;$/;"	f
getTimer	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	public static function getTimer ():Int {$/;"	f
getTimer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Lib.hx	/^	public static function getTimer ():Int {$/;"	f
getTimer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	static public function getTimer ():Int {$/;"	f
getTransform	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Sweep.hx	/^	public function getTransform(xf:B2Transform, alpha:Float):Void$/;"	f
getTransform	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function getTransform() : B2Transform{$/;"	f
getType	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2Shape.hx	/^	public function getType() : B2ShapeType$/;"	f
getType	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function getType():B2BodyType$/;"	f
getType	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public function getType():B2ShapeType$/;"	f
getType	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	public function getType():B2JointType{$/;"	f
getType	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLBuffer.hx	/^	private override function getType ():String {$/;"	f
getType	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLFramebuffer.hx	/^	private override function getType ():String {$/;"	f
getType	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLObject.hx	/^    function getType() : String {$/;"	f
getType	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLProgram.hx	/^	private override function getType ():String {$/;"	f
getType	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLRenderbuffer.hx	/^	private override function getType ():String {$/;"	f
getType	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLShader.hx	/^	private override function getType ():String {$/;"	f
getType	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLTexture.hx	/^	private override function getType ():String {$/;"	f
getType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLBuffer.hx	/^	override function getType ():String {$/;"	f
getType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLFramebuffer.hx	/^	override function getType ():String {$/;"	f
getType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLObject.hx	/^	private function getType ():String {$/;"	f
getType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLProgram.hx	/^	override private function getType ():String {$/;"	f
getType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLRenderbuffer.hx	/^	override private function getType ():String {$/;"	f
getType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLShader.hx	/^	override private function getType ():String {$/;"	f
getType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLTexture.hx	/^	override private function getType ():String {$/;"	f
getType	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function getType( name : String ) : Type {$/;"	f
getType	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^	function getType( t : Type ) {$/;"	f
getType	/usr/lib/haxe/std/haxe/rtti/Meta.hx	/^	public static function getType( t : Dynamic ) : Dynamic<Array<Dynamic>> {$/;"	f
getType	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^	static function getType(t,p) {$/;"	f
getTypeSQL	/usr/lib/haxe/std/sys/db/TableCreate.hx	/^	public static function getTypeSQL( t : RecordType, dbName : String ) {$/;"	f
getTypedExpr	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function getTypedExpr( t : Type.TypedExpr ) : Expr {$/;"	f
getUI16	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Memory.hx	/^	static inline public function getUI16 (addr:Int):Int {$/;"	f
getUInt16	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ArrayBufferView.hx	/^	public inline function getUInt16 (position:Int):Int {$/;"	f
getUInt32	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ArrayBufferView.hx	/^	public inline function getUInt32 (position:Int):Int {$/;"	f
getUInt8	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ArrayBufferView.hx	/^	public inline function getUInt8 (position:Int):Int {$/;"	f
getUInt8	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ArrayBufferView.hx	/^	inline public function getUInt8 (position:Int):Int {$/;"	f
getURI	/usr/lib/haxe/std/haxe/web/Request.hx	/^	public static function getURI() : String {$/;"	f
getURI	/usr/lib/haxe/std/neko/Web.hx	/^	public static function getURI() {$/;"	f
getURL	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/FlashAudioContext.hx	/^	public function getURL (buffer:AudioBuffer):String {$/;"	f
getURL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Lib.hx	/^	public static function getURL (request:URLRequest, target:String = null) {$/;"	f
getURL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	public static function getURL (url:URLRequest, target:String = null):Void {$/;"	f
getUUID	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/TizenHelper.hx	/^	public static function getUUID (project:HXProject):String {$/;"	f
getUniform	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function getUniform (program:GLProgram, location:GLUniformLocation):Dynamic;$/;"	f
getUniform	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function getUniform (program:GLProgram, location:GLUniformLocation):Dynamic {$/;"	f
getUniform	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function getUniform (program:GLProgram, location:GLUniformLocation):Dynamic {$/;"	f
getUniform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function getUniform(program:GLProgram, location:GLUniformLocation):Dynamic $/;"	f
getUniform	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function getUniform(program:GLProgram, location:GLUniformLocation):Dynamic;$/;"	f
getUniformLocation	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function getUniformLocation (program:GLProgram, name:String):GLUniformLocation;$/;"	f
getUniformLocation	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function getUniformLocation (program:GLProgram, name:String):GLUniformLocation {$/;"	f
getUniformLocation	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function getUniformLocation (program:GLProgram, name:String):GLUniformLocation {$/;"	f
getUniformLocation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/Shader.hx	/^	public function getUniformLocation(uniform:String):GLUniformLocation {$/;"	f
getUniformLocation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function getUniformLocation(program:GLProgram, name:String):Dynamic $/;"	f
getUniformLocation	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function getUniformLocation(program:GLProgram, name:String):GLUniformLocation;$/;"	f
getUniqueID	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^	public static function getUniqueID ():String {$/;"	f
getUpperLimit	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	public function getUpperLimit() : Float$/;"	f
getUpperLimit	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	public function getUpperLimit() : Float$/;"	f
getUpperLimit	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	public function getUpperLimit() :Float{$/;"	f
getUserAccount	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	public function getUserAccount():Dynamic {$/;"	f
getUserApps	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	public function getUserApps ():Array<Dynamic> {$/;"	f
getUserData	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^	public function getUserData(proxy:B2DynamicTreeNode):Dynamic$/;"	f
getUserData	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^	public function getUserData(proxy:Dynamic):Dynamic$/;"	f
getUserData	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/IBroadPhase.hx	/^	function getUserData(proxy:Dynamic):Dynamic;$/;"	f
getUserData	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function getUserData() : Dynamic{$/;"	f
getUserData	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public function getUserData():Dynamic$/;"	f
getUserData	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	public function getUserData():Dynamic{$/;"	f
getValue	/usr/lib/haxe/std/haxe/macro/ExprTools.hx	/^	static public function getValue(e:Expr):Dynamic {$/;"	f
getVector	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function getVector (rect:Rectangle):Array<Int> {$/;"	f
getVector	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function getVector (rect:Rectangle) {$/;"	f
getVersion	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	private function getVersion (haxelib:Haxelib = null):String {$/;"	f
getVertex	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DistanceProxy.hx	/^	public function getVertex(index:Int):B2Vec2$/;"	f
getVertex1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public function getVertex1(): B2Vec2$/;"	f
getVertex2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public function getVertex2(): B2Vec2$/;"	f
getVertexAttrib	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function getVertexAttrib (index:Int, pname:Int):Dynamic;$/;"	f
getVertexAttrib	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function getVertexAttrib (index:Int, pname:Int):Int \/*Dynamic*\/ {$/;"	f
getVertexAttrib	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function getVertexAttrib (index:Int, pname:Int):Int \/*Dynamic*\/ {$/;"	f
getVertexAttrib	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function getVertexAttrib(index:Int, pname:Int):Dynamic $/;"	f
getVertexAttrib	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function getVertexAttrib(index:Int, pname:Int):Dynamic;$/;"	f
getVertexAttribOffset	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function getVertexAttribOffset (index:Int, pname:Int):Int;$/;"	f
getVertexAttribOffset	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function getVertexAttribOffset (index:Int, pname:Int):Int {$/;"	f
getVertexAttribOffset	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function getVertexAttribOffset (index:Int, pname:Int):Int {$/;"	f
getVertexAttribOffset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function getVertexAttribOffset(index:Int, pname:Int):Int $/;"	f
getVertexAttribOffset	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function getVertexAttribOffset(index:Int, pname:Int):Int;$/;"	f
getVertexCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DistanceProxy.hx	/^	public function getVertexCount():Int$/;"	f
getVertexCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	public function getVertexCount() : Int{$/;"	f
getVertices	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	public function getVertices() : Array <B2Vec2>{$/;"	f
getVolume	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function getVolume (buffer:AudioBuffer):Float {$/;"	f
getVolume	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public function getVolume ():Float;$/;"	f
getVolume	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static function getVolume ():Float;$/;"	f
getWidth	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/NMEPreloader.hx	/^	public function getWidth ():Float {$/;"	f
getWidth	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/NMEPreloader.hx	/^	public function getWidth():Float$/;"	f
getWitnessPoints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^public function getWitnessPoints(pA:B2Vec2, pB:B2Vec2):Void$/;"	f
getWorld	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function getWorld(): B2World$/;"	f
getWorld	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2Controller.hx	/^	public function getWorld():B2World { return m_world; }$/;"	f
getWorldCenter	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function getWorldCenter() : B2Vec2{$/;"	f
getWorldManifold	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	public function getWorldManifold(worldManifold:B2WorldManifold):Void$/;"	f
getWorldPoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function getWorldPoint(localPoint:B2Vec2) : B2Vec2{$/;"	f
getWorldVector	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function getWorldVector(localVector:B2Vec2) : B2Vec2{$/;"	f
getXFormScale	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	public function getXFormScale() : Float {$/;"	f
getXcodeVersion	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^	private static function getXcodeVersion ():String {$/;"	f
get_MAX_VALUE	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	private static inline function get_MAX_VALUE ():Float {$/;"	f
get_MIN_VALUE	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	private static inline function get_MIN_VALUE ():Float {$/;"	f
get_X_AXIS	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	inline private static function get_X_AXIS ():Vector4 {$/;"	f
get_Y_AXIS	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	inline private static function get_Y_AXIS ():Vector4 {$/;"	f
get_Z_AXIS	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	inline private static function get_Z_AXIS ():Vector4 {$/;"	f
get___stageHeight	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^	private function get___stageHeight ():Int {$/;"	f
get___stageWidth	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^	private function get___stageWidth():Int {$/;"	f
get_agal2glsllut	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Mapping.hx	/^	private static function get_agal2glsllut ():Array<OpLUT> {$/;"	f
get_align	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private function get_align ():StageAlign {$/;"	f
get_alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function get_alpha ():Float { return lime_display_object_get_alpha (__handle); }$/;"	f
get_alphaMultiplier	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	private inline function get_alphaMultiplier ():Float {$/;"	f
get_alphaOffset	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	private inline function get_alphaOffset ():Float {$/;"	f
get_altKey	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	private function get_altKey ():Bool {$/;"	f
get_applicationDirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	private static function get_applicationDirectory ():String {$/;"	f
get_applicationDirectory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/File.hx	/^	private static function get_applicationDirectory ():File { return new File (lime_filesystem_get_special_dir (APP)); }$/;"	f
get_applicationDirectory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/SystemPath.hx	/^	private static function get_applicationDirectory ():String { return lime_filesystem_get_special_dir (APP); }$/;"	f
get_applicationStorageDirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	private static function get_applicationStorageDirectory ():String {$/;"	f
get_applicationStorageDirectory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/File.hx	/^	private static function get_applicationStorageDirectory ():File { return new File (lime_filesystem_get_special_dir (STORAGE)); }$/;"	f
get_applicationStorageDirectory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/SystemPath.hx	/^	private static function get_applicationStorageDirectory ():String { return lime_filesystem_get_special_dir (STORAGE); }$/;"	f
get_ascender	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	private function get_ascender ():Int {$/;"	f
get_autoSize	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function get_autoSize ():TextFieldAutoSize { return Type.createEnumIndex (TextFieldAutoSize, lime_text_field_get_auto_size (__handle)); }$/;"	f
get_autos3d	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private function get_autos3d ():Bool { return lime_stage_get_autos3d (__handle); }$/;"	f
get_available	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/external/ExternalInterface.hx	/^	private static function get_available ():Bool {$/;"	f
get_background	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function get_background ():Bool { return lime_text_field_get_background (__handle); }$/;"	f
get_backgroundColor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function get_backgroundColor ():Int { return lime_text_field_get_background_color (__handle); }$/;"	f
get_backward	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextDirection.hx	/^	private inline function get_backward ():Bool {$/;"	f
get_bigEndian	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	private inline function get_bigEndian ():Bool { return !littleEndian; }$/;"	f
get_blendMode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function get_blendMode ():BlendMode {$/;"	f
get_blueMultiplier	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	private inline function get_blueMultiplier ():Float {$/;"	f
get_blueOffset	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	private inline function get_blueOffset ():Float {$/;"	f
get_border	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function get_border ():Bool { return lime_text_field_get_border (__handle); }$/;"	f
get_borderColor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function get_borderColor ():Int { return lime_text_field_get_border_color (__handle); }$/;"	f
get_bottom	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	private function get_bottom ():Float { return y + height; }$/;"	f
get_bottom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	private function get_bottom () { return y + height; }$/;"	f
get_bottomRight	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	private function get_bottomRight ():Vector2 { return new Vector2 (x + width, y + height); }$/;"	f
get_bottomRight	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	private function get_bottomRight () { return new Point (x + width, y + height); }$/;"	f
get_bottomScrollV	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function get_bottomScrollV ():Int { return lime_text_field_get_bottom_scroll_v (__handle); }$/;"	f
get_bubbles	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	private function get_bubbles ():Bool { return __bubbles; }$/;"	f
get_byteLength	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	private function get_byteLength ():Int {$/;"	f
get_byteLength	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	private function get_byteLength ():Int { return length; }$/;"	f
get_bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/LoaderInfo.hx	/^	private function get_bytes ():ByteArray {$/;"	f
get_bytesAvailable	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	private inline function get_bytesAvailable ():Int {$/;"	f
get_bytesAvailable	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/IDataInput.hx	/^	private function get_bytesAvailable ():Int;$/;"	f
get_bytesAvailable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	private function get_bytesAvailable ():Int { return length - position; }$/;"	f
get_bytesAvailable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	inline private function get_bytesAvailable ():Int { return length - position; }$/;"	f
get_cacheAsBitmap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function get_cacheAsBitmap ():Bool { return lime_display_object_get_cache_as_bitmap (__handle); }$/;"	f
get_cancelable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	private function get_cancelable ():Bool { return __cancelable; }$/;"	f
get_capsLock	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	private function get_capsLock ():Bool {$/;"	f
get_color	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Color.hx	/^	private function get_color() : Int{$/;"	f
get_color	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	private function get_color ():Int {$/;"	f
get_color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private function get_color ():Int {$/;"	f
get_color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/ColorTransform.hx	/^	private function get_color ():Int {$/;"	f
get_colorTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Transform.hx	/^	private function get_colorTransform ():ColorTransform { return __parent.__getColorTransform (); }$/;"	f
get_commands	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsPath.hx	/^	private function get_commands ():Array<Int> {$/;"	f
get_concatenatedColorTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Transform.hx	/^	private function get_concatenatedColorTransform ():ColorTransform { return __parent.__getConcatenatedColorTransform (); }$/;"	f
get_concatenatedMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Transform.hx	/^	private function get_concatenatedMatrix ():Matrix { return __parent.__getConcatenatedMatrix (); }$/;"	f
get_connection	/usr/lib/haxe/std/haxe/remoting/DelayedConnection.hx	/^	function get_connection() {$/;"	f
get_ctrlKey	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	private function get_ctrlKey ():Bool {$/;"	f
get_current	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	static function get_current ():MovieClip {$/;"	f
get_currentFrame	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/MovieClip.hx	/^	private function get_currentFrame ():Int { return __currentFrame; }$/;"	f
get_currentFrameLabel	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/MovieClip.hx	/^	private function get_currentFrameLabel ():String { return __currentFrameLabel; }$/;"	f
get_currentLabel	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/MovieClip.hx	/^	private function get_currentLabel ():String { return __currentLabel; }$/;"	f
get_currentLabels	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/MovieClip.hx	/^	private function get_currentLabels ():Array<FrameLabel> { return __currentLabels; }$/;"	f
get_currentTarget	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	private function get_currentTarget ():Dynamic { return __currentTarget; }$/;"	f
get_currentTime	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^	private function get_currentTime ():Int {$/;"	f
get_cursor	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashMouse.hx	/^	public static function get_cursor ():MouseCursor {$/;"	f
get_cursor	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Mouse.hx	/^	public static function get_cursor ():MouseCursor {$/;"	f
get_cursor	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeMouse.hx	/^	public static function get_cursor ():MouseCursor {$/;"	f
get_cursor	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Mouse.hx	/^	private static function get_cursor ():MouseCursor {$/;"	f
get_data	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	private function get_data ():UInt8Array {$/;"	f
get_data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsPath.hx	/^	private function get_data ():Array<Float> {$/;"	f
get_defaultTextFormat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function get_defaultTextFormat ():TextFormat { $/;"	f
get_delay	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Timer.hx	/^	private function get_delay ():Float {$/;"	f
get_descender	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	private function get_descender ():Int {$/;"	f
get_desktopDirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	private static function get_desktopDirectory ():String {$/;"	f
get_desktopDirectory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/File.hx	/^	private static function get_desktopDirectory ():File { return new File (lime_filesystem_get_special_dir (DESKTOP)); }$/;"	f
get_desktopDirectory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/SystemPath.hx	/^	private static function get_desktopDirectory ():String { return lime_filesystem_get_special_dir (DESKTOP); }$/;"	f
get_determinant	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	private function get_determinant ():Float {$/;"	f
get_deviceID	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/System.hx	/^	private static function get_deviceID ():String { return lime_get_unique_device_identifier (); }$/;"	f
get_displayAsPassword	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function get_displayAsPassword ():Bool { return lime_text_field_get_display_as_password (__handle); }$/;"	f
get_displayState	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private function get_displayState ():StageDisplayState {$/;"	f
get_documentsDirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	private static function get_documentsDirectory ():String {$/;"	f
get_documentsDirectory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/File.hx	/^	private static function get_documentsDirectory ():File { return new File (lime_filesystem_get_special_dir (DOCS)); }$/;"	f
get_documentsDirectory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/SystemPath.hx	/^	private static function get_documentsDirectory ():String { return lime_filesystem_get_special_dir (DOCS); }$/;"	f
get_dpiScale	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private function get_dpiScale ():Float {$/;"	f
get_drawingBufferHeight	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static function get_drawingBufferHeight() { return Lib.current.stage.stageHeight; }$/;"	f
get_drawingBufferWidth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static function get_drawingBufferWidth() { return Lib.current.stage.stageWidth; }$/;"	f
get_elements	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexAttribute.hx	/^	private inline function get_elements():Int {$/;"	f
get_elements	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^	function get_elements() {$/;"	f
get_embedFonts	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function get_embedFonts ():Bool { return lime_text_field_get_embed_fonts (__handle); }$/;"	f
get_enabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	private function get_enabled ():Bool {$/;"	f
get_enabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	private function get_enabled ():Bool {$/;"	f
get_enabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3D.hx	/^	public static function get_enabled () {$/;"	f
get_enabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/SimpleButton.hx	/^	private function get_enabled ():Bool { return lime_simple_button_get_enabled (__handle); }$/;"	f
get_endian	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	private inline function get_endian ():String {$/;"	f
get_endian	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/IDataInput.hx	/^	private function get_endian ():String;$/;"	f
get_endian	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	private function get_endian ():String { return bigEndian ? Endian.BIG_ENDIAN : Endian.LITTLE_ENDIAN; }$/;"	f
get_endian	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	inline function get_endian ():String {$/;"	f
get_env	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^			var get_env = cpp.Lib.load ("std", "get_env", 1);$/;"	v
get_env	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^		var get_env = cpp.Lib.load ("std", "get_env", 1);$/;"	v
get_env	/usr/lib/haxe/std/neko/Web.hx	/^		var get_env = Lib.load("std","get_env",1);$/;"	v
get_eventPhase	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	private function get_eventPhase ():EventPhase { return __eventPhase; }$/;"	f
get_eyeSeparation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3D.hx	/^	public static function get_eyeSeparation ():Float {$/;"	f
get_filters	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function get_filters ():Array<BitmapFilter> {$/;"	f
get_flip	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/Features.hx	/^	private function get_flip():Int{$/;"	f
get_focalLength	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3D.hx	/^	public static function get_focalLength ():Float {$/;"	f
get_focus	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private function get_focus ():InteractiveObject {$/;"	f
get_fontName	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	private inline function get_fontName ():String {$/;"	f
get_fontsDirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	private static function get_fontsDirectory ():String {$/;"	f
get_format	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	private function get_format ():PixelFormat {$/;"	f
get_forward	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextDirection.hx	/^	private inline function get_forward ():Bool {$/;"	f
get_framesLoaded	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/MovieClip.hx	/^	private function get_framesLoaded ():Int { return __totalFrames; }$/;"	f
get_gain	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^	private function get_gain ():Float {$/;"	f
get_graphics	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function get_graphics ():Graphics {$/;"	f
get_greenMultiplier	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	private inline function get_greenMultiplier ():Float {$/;"	f
get_greenOffset	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	private inline function get_greenOffset ():Float {$/;"	f
get_height	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	private function get_height ():Int {$/;"	f
get_height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private function get_height ():Int { return lime_bitmap_data_height (__handle); }$/;"	f
get_height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function get_height ():Float { return lime_display_object_get_height (__handle); }$/;"	f
get_horizontal	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextDirection.hx	/^	private inline function get_horizontal ():Bool {$/;"	f
get_host	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	private function get_host ():Platform {$/;"	f
get_hostArchitecture	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PlatformHelper.hx	/^	private static function get_hostArchitecture ():Architecture {$/;"	f
get_hostPlatform	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PlatformHelper.hx	/^	private static function get_hostPlatform ():Platform {$/;"	f
get_htmlText	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function get_htmlText ():String { return StringTools.replace (lime_text_field_get_html_text (__handle), "\\n", "<br\/>"); }$/;"	f
get_id3	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^	private function get_id3 ():ID3Info {$/;"	f
get_incidentEdge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/Features.hx	/^	private function get_incidentEdge():Int{$/;"	f
get_incidentVertex	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/Features.hx	/^	private function get_incidentVertex():Int{$/;"	f
get_innerData	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^	function get_innerData() {$/;"	f
get_innerHTML	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^	function get_innerHTML() {$/;"	f
get_inputMode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Multitouch.hx	/^	private static function get_inputMode ():MultitouchInputMode {$/;"	f
get_invalidated	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLObject.hx	/^    function get_invalidated() : Bool {$/;"	f
get_invalidated	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLObject.hx	/^	private function get_invalidated ():Bool {$/;"	f
get_isBuffering	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^	private function get_isBuffering ():Bool {$/;"	f
get_isOpenGL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private function get_isOpenGL ():Bool {$/;"	f
get_isSupported	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/OpenGLView.hx	/^	private static inline function get_isSupported ():Bool {$/;"	f
get_isSupported	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/sensors/Accelerometer.hx	/^	private static function get_isSupported ():Bool { return lime_input_get_acceleration () != null; }$/;"	f
get_key	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ContactID.hx	/^	private function get_key():Int {$/;"	f
get_language	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	private static function get_language ():String {$/;"	f
get_left	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	private function get_left ():Float { return x; }$/;"	f
get_left	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	private function get_left () { return x; }$/;"	f
get_leftPeak	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	private function get_leftPeak ():Float { return lime_sound_channel_get_left (__handle); }$/;"	f
get_length	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^	private function get_length ():Int {$/;"	f
get_length	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector2.hx	/^	private function get_length ():Float {$/;"	f
get_length	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	inline private function get_length ():Float {$/;"	f
get_length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Point.hx	/^	private function get_length ():Float {$/;"	f
get_length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^	private function get_length ():Float {$/;"	f
get_length	/usr/lib/haxe/std/StringBuf.hx	/^	inline function get_length() : Int {$/;"	f
get_length	/usr/lib/haxe/std/haxe/ds/Vector.hx	/^	inline function get_length():Int {$/;"	f
get_length	/usr/lib/haxe/std/haxe/io/BytesBuffer.hx	/^	inline function get_length() : Int {$/;"	f
get_length	/usr/lib/haxe/std/haxe/io/BytesInput.hx	/^	inline function get_length() : Int {$/;"	f
get_length	/usr/lib/haxe/std/haxe/io/BytesOutput.hx	/^	inline function get_length() : Int {$/;"	f
get_lengthSquared	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	inline private function get_lengthSquared ():Float {$/;"	f
get_lock	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashMouse.hx	/^	public static function get_lock ():Bool {$/;"	f
get_lock	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Mouse.hx	/^	public static function get_lock ():Bool {$/;"	f
get_lock	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeMouse.hx	/^	public static function get_lock ():Bool {$/;"	f
get_lock	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Mouse.hx	/^	private static function get_lock ():Bool {$/;"	f
get_map	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/OpcodeMap.hx	/^	private static function get_map ():Map<String, Opcode> {$/;"	f
get_map	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/RegMap.hx	/^	private static function get_map ():StringMap<Reg> {$/;"	f
get_map	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/SamplerMap.hx	/^	private static function get_map ():StringMap<Sampler> {$/;"	f
get_maxChars	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function get_maxChars ():Int { return lime_text_field_get_max_chars (__handle); }$/;"	f
get_maxScrollH	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function get_maxScrollH ():Int { return lime_text_field_get_max_scroll_h (__handle); }$/;"	f
get_maxScrollV	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function get_maxScrollV ():Int { return lime_text_field_get_max_scroll_v (__handle); }$/;"	f
get_metaKey	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	private function get_metaKey ():Bool {$/;"	f
get_mouseChildren	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^	private function get_mouseChildren ():Bool { return lime_doc_get_mouse_children (__handle); }$/;"	f
get_mouseEnabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/InteractiveObject.hx	/^	private function get_mouseEnabled ():Bool { return __mouseEnabled; }$/;"	f
get_mouseX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function get_mouseX ():Float { return lime_display_object_get_mouse_x (__handle); }$/;"	f
get_mouseY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function get_mouseY ():Float { return lime_display_object_get_mouse_y (__handle); }$/;"	f
get_moveForSoftKeyboard	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/InteractiveObject.hx	/^	private function get_moveForSoftKeyboard ():Bool {$/;"	f
get_multiline	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function get_multiline ():Bool { return lime_text_field_get_multiline (__handle); }$/;"	f
get_name	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function get_name ():String { return lime_display_object_get_name (__handle); }$/;"	f
get_name	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	private function get_name ():String { return fontName; }$/;"	f
get_name	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^	function get_name() {$/;"	f
get_name	/usr/lib/haxe/std/neko/vm/Module.hx	/^	function get_name() {$/;"	f
get_needsSoftKeyboard	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/InteractiveObject.hx	/^	private function get_needsSoftKeyboard ():Bool {$/;"	f
get_numChildren	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^	private function get_numChildren ():Int { return __children.length; }$/;"	f
get_numControls	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInputDevice.hx	/^	private function get_numControls ():Int {$/;"	f
get_numGlyphs	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	private function get_numGlyphs ():Int {$/;"	f
get_numLines	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function get_numLines ():Int { return lime_text_field_get_num_lines (__handle); }$/;"	f
get_numLock	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	private function get_numLock ():Bool {$/;"	f
get_opaqueBackground	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function get_opaqueBackground ():Null<Int> {$/;"	f
get_os	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	private static inline function get_os ():String {$/;"	f
get_parent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function get_parent ():DisplayObjectContainer { return __parent; }$/;"	f
get_pedanticBitmapCaching	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function get_pedanticBitmapCaching ():Bool { return lime_display_object_get_pedantic_bitmap_caching (__handle); }$/;"	f
get_pitch	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	private function get_pitch ():Float { return __pitch; }$/;"	f
get_pixelAspectRatio	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	private static function get_pixelAspectRatio ():Float { return lime_capabilities_get_pixel_aspect_ratio (); }$/;"	f
get_pixelBounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Transform.hx	/^	private function get_pixelBounds ():Rectangle { return __parent.__getPixelBounds (); }$/;"	f
get_pixelSnapping	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Bitmap.hx	/^	private function get_pixelSnapping ():PixelSnapping {$/;"	f
get_position	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	private function get_position ():Vector4 {$/;"	f
get_position	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	private function get_position ():Float { return lime_sound_channel_get_position (__handle); }$/;"	f
get_position	/usr/lib/haxe/std/haxe/io/BytesInput.hx	/^	inline function get_position() : Int {$/;"	f
get_powerOfTwo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	private function get_powerOfTwo ():Bool {$/;"	f
get_premultiplied	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	private function get_premultiplied ():Bool {$/;"	f
get_premultipliedAlpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private function get_premultipliedAlpha ():Bool { return lime_bitmap_data_get_prem_alpha (__handle); }$/;"	f
get_processorCores	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ProcessHelper.hx	/^	public static function get_processorCores ():Int {$/;"	f
get_quality	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private function get_quality ():StageQuality {$/;"	f
get_rawData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	private inline function get_rawData ():Vector<Float> {$/;"	f
get_rect	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	private function get_rect ():Rectangle {$/;"	f
get_rect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private function get_rect ():Rectangle { return new Rectangle (0, 0, width, height); }$/;"	f
get_redMultiplier	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	private inline function get_redMultiplier ():Float {$/;"	f
get_redOffset	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	private inline function get_redOffset ():Float {$/;"	f
get_referenceEdge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/Features.hx	/^	private function get_referenceEdge():Int{$/;"	f
get_right	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	private function get_right ():Float { return x + width; }$/;"	f
get_right	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	private function get_right () { return x + width; }$/;"	f
get_rightPeak	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	private function get_rightPeak ():Float { return lime_sound_channel_get_right (__handle); }$/;"	f
get_rightToLeft	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	private inline function get_rightToLeft ():Bool {$/;"	f
get_root	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function get_root ():DisplayObject {$/;"	f
get_rotation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function get_rotation ():Float { return lime_display_object_get_rotation (__handle); }$/;"	f
get_scale9Grid	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function get_scale9Grid ():Rectangle { return (__scale9Grid == null) ? null : __scale9Grid.clone (); }$/;"	f
get_scaleMode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private function get_scaleMode ():StageScaleMode {$/;"	f
get_scaleX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function get_scaleX ():Float { return lime_display_object_get_scale_x (__handle); }$/;"	f
get_scaleY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function get_scaleY ():Float { return lime_display_object_get_scale_y (__handle); }$/;"	f
get_screenDPI	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	private static function get_screenDPI ():Float { return lime_capabilities_get_screen_dpi (); }$/;"	f
get_screenModes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	private static function get_screenModes ():Array<ScreenMode> {$/;"	f
get_screenResolutionX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	private static function get_screenResolutionX ():Float { return lime_capabilities_get_screen_resolution_x (); }$/;"	f
get_screenResolutionY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	private static function get_screenResolutionY ():Float { return lime_capabilities_get_screen_resolution_y (); }$/;"	f
get_screenResolutions	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	private static function get_screenResolutions ():Array<Array<Int>> {$/;"	f
get_scrollH	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function get_scrollH ():Int { return lime_text_field_get_scroll_h (__handle); }$/;"	f
get_scrollRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function get_scrollRect ():Rectangle { return (__scrollRect == null) ? null : __scrollRect.clone (); }$/;"	f
get_scrollV	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function get_scrollV ():Int { return lime_text_field_get_scroll_v (__handle); }$/;"	f
get_selectable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function get_selectable ():Bool { return lime_text_field_get_selectable (__handle); }$/;"	f
get_shiftKey	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	private function get_shiftKey ():Bool {$/;"	f
get_size	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	private function get_size ():Vector2 { return new Vector2 (width, height); }$/;"	f
get_size	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	private function get_size () { return new Point (width, height); }$/;"	f
get_size	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^	private function get_size ():Int {$/;"	f
get_softKeyboardRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private function get_softKeyboardRect ():Rectangle {$/;"	f
get_soundTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/SimpleButton.hx	/^	private function get_soundTransform ():SoundTransform {$/;"	f
get_soundTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	private function get_soundTransform ():SoundTransform {$/;"	f
get_src	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	private function get_src ():Dynamic {$/;"	f
get_src	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ImageBuffer.hx	/^	private function get_src ():Dynamic {$/;"	f
get_stage	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	private static function get_stage ():Stage {$/;"	f
get_stage	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function get_stage ():Stage {$/;"	f
get_stage	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private override function get_stage ():Stage {$/;"	f
get_stageFocusRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private function get_stageFocusRect ():Bool { return lime_stage_get_focus_rect (__handle); }$/;"	f
get_stageHeight	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private function get_stageHeight ():Int {$/;"	f
get_stageHeight	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^	private override function get_stageHeight ():Int {$/;"	f
get_stageWidth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private function get_stageWidth ():Int {$/;"	f
get_stageWidth	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^	private override function get_stageWidth ():Int {$/;"	f
get_storageVolumeInfo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/StorageVolumeInfo.hx	/^	private static function get_storageVolumeInfo ():StorageVolumeInfo { return getInstance (); }$/;"	f
get_stride	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ImageBuffer.hx	/^	private function get_stride ():Int {$/;"	f
get_stride	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexArray.hx	/^	private function get_stride() {$/;"	f
get_supported	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3D.hx	/^	public static function get_supported () {$/;"	f
get_supportsTouchEvents	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Multitouch.hx	/^	private static function get_supportsTouchEvents ():Bool { return lime_stage_get_multitouch_supported (Lib.current.stage.__handle); }$/;"	f
get_tabChildren	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^	private function get_tabChildren () { return false; }$/;"	f
get_target	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	private function get_target ():Dynamic { return __target; }$/;"	f
get_templateContext	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	private function get_templateContext ():Dynamic {$/;"	f
get_text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function get_text ():String { return lime_text_field_get_text (__handle); }$/;"	f
get_textColor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function get_textColor ():Int { return lime_text_field_get_text_color (__handle); }$/;"	f
get_textHeight	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function get_textHeight ():Float { return lime_text_field_get_text_height (__handle); }$/;"	f
get_textWidth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function get_textWidth ():Float { return lime_text_field_get_text_width (__handle); }$/;"	f
get_top	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	private function get_top ():Float { return y; }$/;"	f
get_top	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	private function get_top () { return y; }$/;"	f
get_topLeft	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	private function get_topLeft ():Vector2 { return new Vector2 (x, y); }$/;"	f
get_topLeft	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	private function get_topLeft () { return new Point (x, y); }$/;"	f
get_totalFrames	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/MovieClip.hx	/^	private function get_totalFrames ():Int { return __totalFrames; }$/;"	f
get_totalMemory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/System.hx	/^	private static function get_totalMemory ():Int {$/;"	f
get_transform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function get_transform ():Transform { return new Transform (this); }$/;"	f
get_transparent	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	private function get_transparent ():Bool {$/;"	f
get_transparent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private function get_transparent ():Bool { return __transparent; }$/;"	f
get_type	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	private function get_type ():String { return __type; }$/;"	f
get_type	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function get_type ():TextFieldType { return lime_text_field_get_type (__handle) ? TextFieldType.INPUT : TextFieldType.DYNAMIC; }$/;"	f
get_underlinePosition	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	private function get_underlinePosition ():Int {$/;"	f
get_underlineThickness	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	private function get_underlineThickness ():Int {$/;"	f
get_unitsPerEM	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	private function get_unitsPerEM ():Int {$/;"	f
get_useHandCursor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/SimpleButton.hx	/^	private function get_useHandCursor ():Bool { return lime_simple_button_get_hand_cursor (__handle); }$/;"	f
get_userDirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	private static function get_userDirectory ():String {$/;"	f
get_userDirectory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/File.hx	/^	private static function get_userDirectory ():File { return new File (lime_filesystem_get_special_dir (USER)); }$/;"	f
get_userDirectory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/SystemPath.hx	/^	private static function get_userDirectory ():String { return lime_filesystem_get_special_dir (USER); }$/;"	f
get_valid	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLObject.hx	/^    function get_valid() : Bool {$/;"	f
get_valid	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLObject.hx	/^	private function get_valid ():Bool {$/;"	f
get_value	/usr/lib/haxe/std/neko/vm/Tls.hx	/^	function get_value() : T {$/;"	f
get_version	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	private function get_version ():Int { return 2; }$/;"	f
get_version	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static function get_version ():Int {$/;"	f
get_version	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static function get_version ():Int { return 2; }$/;"	f
get_version	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static function get_version():Int { return lime_gl_version(); }$/;"	f
get_version	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	private static function get_version () {$/;"	f
get_versionString	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static function get_versionString ():String {$/;"	f
get_vertical	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextDirection.hx	/^	private inline function get_vertical ():Bool {$/;"	f
get_visible	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function get_visible ():Bool { return lime_display_object_get_visible (__handle);	}$/;"	f
get_width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private function get_width ():Int { return lime_bitmap_data_width (__handle); }$/;"	f
get_width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function get_width ():Float { return lime_display_object_get_width (__handle); }$/;"	f
get_width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	override private function get_width ():Float {$/;"	f
get_window	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	private function get_window ():WindowData {$/;"	f
get_wordWrap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function get_wordWrap ():Bool { return lime_text_field_get_word_wrap (__handle); }$/;"	f
get_x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function get_x ():Float { return lime_display_object_get_x (__handle); }$/;"	f
get_y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function get_y ():Float { return lime_display_object_get_y (__handle); }$/;"	f
get_z	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function get_z ():Float { return lime_display_object_get_z (__handle); }$/;"	f
getid	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^					var getid = { expr : ECall( { expr : EField(mpath, "unsafeGetId"), pos : p }, [f.expr]), pos : p };$/;"	v
getinfo	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLEasy.hx	/^	public static function getinfo (handle:CURL, info:CURLInfo):Dynamic {$/;"	f
gfx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Bitmap.hx	/^			var gfx = graphics;$/;"	v
gg	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^	function gg(a, b, c, d, x, s, t){$/;"	f
gid	/usr/lib/haxe/std/sys/FileStat.hx	/^	var gid : Int;$/;"	v
git	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var git = PathHelper.combine (lib, ".git");$/;"	v
gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/RenderSession.hx	/^	public var gl:GLRenderContext;$/;"	v
gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^			var gl = glContexts[i];$/;"	v
gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^		var gl = this.gl;$/;"	v
gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	public var gl:GLRenderContext;$/;"	v
gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/AbstractShader.hx	/^		var gl = this.gl;$/;"	v
gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/AbstractShader.hx	/^	public var gl:GLRenderContext;$/;"	v
gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/ComplexPrimitiveShader.hx	/^		var gl = this.gl;$/;"	v
gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DefaultShader.hx	/^		var gl = this.gl;$/;"	v
gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/FastShader.hx	/^		var gl = this.gl;$/;"	v
gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/PrimitiveShader.hx	/^		var gl = this.gl;$/;"	v
gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/StripShader.hx	/^		var gl = this.gl;$/;"	v
gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/Shader.hx	/^	public var gl:GLRenderContext;$/;"	v
gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/BlendModeManager.hx	/^	public var gl:GLRenderContext;$/;"	v
gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^		var gl = this.gl;$/;"	v
gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^	public var gl:GLRenderContext;$/;"	v
gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterTexture.hx	/^	public var gl:GLRenderContext;$/;"	v
gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GLMaskManager.hx	/^		var gl = renderSession.gl;$/;"	v
gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GLMaskManager.hx	/^		var gl = this.gl;$/;"	v
gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GLMaskManager.hx	/^	public var gl:GLRenderContext;$/;"	v
gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^				var gl = renderSession.gl;$/;"	v
gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var gl = renderSession.gl;$/;"	v
gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var gl:GLRenderContext;$/;"	v
gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/ShaderManager.hx	/^	public var gl:GLRenderContext;$/;"	v
gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	public var gl:GLRenderContext;$/;"	v
gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^	public var gl:GLRenderContext;$/;"	v
gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexArray.hx	/^	public var gl:GLRenderContext;$/;"	v
gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^				var gl = renderSession.gl;$/;"	v
gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var gl:GLRenderContext = renderSession.gl;$/;"	v
glBlend	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/BlendModeManager.hx	/^		var glBlend:GLBlendMode = glBlendModes[currentBlendMode];$/;"	v
glBlendModes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/BlendModeManager.hx	/^	public static var glBlendModes:Map<BlendMode, GLBlendMode> = null;$/;"	v
glBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexArray.hx	/^	public var glBuffer:GLBuffer;$/;"	v
glBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/IndexBuffer3D.hx	/^	public var glBuffer:GLBuffer;$/;"	v
glBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/VertexBuffer3D.hx	/^	public var glBuffer:GLBuffer;$/;"	v
glColors	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var glColors = new UInt32Array(verts.buffer);$/;"	v
glContextId	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	public static var glContextId:Int = 0;$/;"	v
glContexts	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	public static var glContexts = [];$/;"	v
glData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var glData:Float32Array;$/;"	v
glIndices	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var glIndices:UInt16Array;$/;"	v
glLength	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var glLength:Int = 0;$/;"	v
glProgram	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		var glProgram:GLProgram = null;$/;"	v
glProgram	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Program3D.hx	/^	public var glProgram:GLProgram;$/;"	v
glStack	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^		var glStack:GLStack = null;$/;"	v
glStack	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var glStack = graphics.__glStack[GLRenderer.glContextId];$/;"	v
glStack	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var glStack:GLStack = null;$/;"	v
glStack	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^		var glStack = maskGraphics.__glStack[GLRenderer.glContextId];$/;"	v
glStart	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var glStart:Int = 0;$/;"	v
glTexture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^			var glTexture = texture._glTextures[i];$/;"	v
glTexture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/TextureBase.hx	/^	public var glTexture:GLTexture;$/;"	v
glTextureAt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/CubeTexture.hx	/^	public function glTextureAt (index:Int):GLTexture {$/;"	f
glTile	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var glTile:Int16Array;$/;"	v
glType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/_shaders/AGLSLShaderUtils.hx	/^			var glType:Int;$/;"	v
glVerts	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var glVerts:Float32Array;$/;"	v
globalAlpha	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public var globalAlpha:Float;$/;"	v
globalCleanup	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURL.hx	/^	public static function globalCleanup ():Void {$/;"	f
globalCompositeOperation	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public var globalCompositeOperation:String;$/;"	v
globalInit	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURL.hx	/^	public static function globalInit (flags:Int):CURLCode {$/;"	f
globalPoint	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var globalPoint = sprite.localToGlobal (new Point ());$/;"	v
globalToLocal	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function globalToLocal (point:Dynamic \/*flash.geom.Point*\/):Dynamic \/*flash.geom.Point*\/ { return null; };$/;"	f
globalToLocal	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public function globalToLocal (point:Point):Point {$/;"	f
globalToLocal	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	public function globalToLocal (pos:Point):Point {$/;"	f
globalToLocal	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public override function globalToLocal (pos:Point):Point {$/;"	f
globalToLocal3D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function globalToLocal3D (point:Dynamic \/*flash.geom.Point*\/):Dynamic \/*flash.geom.Vector3D*\/ { return null; };$/;"	f
globals	/usr/lib/haxe/std/haxe/Template.hx	/^	public static var globals : Dynamic = {};$/;"	v
globalsCount	/usr/lib/haxe/std/neko/vm/Module.hx	/^	public function globalsCount() : Int {$/;"	f
glowFilter	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/GlowFilterTest.hx	/^		var glowFilter = new GlowFilter ();$/;"	v
glsl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLCompiler.hx	/^	public var glsl:String;$/;"	v
glyph	/usr/lib/haxe/lib/lime/2,4,3/lime/text/GlyphPosition.hx	/^	public var glyph:Glyph;$/;"	v
glyph	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^			var glyph = __glyphData.get (inGlyph);$/;"	v
glyph	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^		var glyph = __glyphData.get (inChar);$/;"	v
glyphList	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^		var glyphList = [];$/;"	v
glyph_layout	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^			var glyph_layout = new Array <FontLayoutGlyphData> ();$/;"	v
glyphs	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^		var glyphs = "32-255";$/;"	v
glyphs	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Asset.hx	/^	public var glyphs:String;$/;"	v
glyphs	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^		var glyphs = null;$/;"	v
glyphs	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	var glyphs:Array<NativeGlyphData>;$/;"	v
glyphs	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextLayout.hx	/^		var glyphs = [];$/;"	v
glyphs	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextLayout.hx	/^	public var glyphs (get, null):Array<Glyph>;$/;"	v
glyphs	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^			var glyphs = new Array <Font2GlyphData> ();$/;"	v
glyphs	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^			var glyphs = "32-255";$/;"	v
glyphs	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^		var glyphs = "32-255";$/;"	v
glyphs	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^	private static var glyphs = new Map<Font, Map<Int, Map<Glyph, Image>>> ();$/;"	v
glyphs	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^		var glyphs = "32-255";$/;"	v
glyphs	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	var glyphs: Array<NativeGlyphData>;$/;"	v
gotoAndPlay	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/MovieClip.hx	/^	public function gotoAndPlay (frame:Dynamic, scene:String = null):Void {$/;"	f
gotoAndPlay	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/MovieClip.hx	/^	public function gotoAndPlay (frame:Dynamic, scene:String = null):Void {$/;"	f
gotoAndStop	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/MovieClip.hx	/^	public function gotoAndStop (frame:Dynamic, scene:String = null):Void {$/;"	f
gotoAndStop	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/MovieClip.hx	/^	public function gotoAndStop (frame:Dynamic, scene:String = null):Void {$/;"	f
gradientFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^		var gradientFill = null;$/;"	v
gradientFill	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsGradientFillTest.hx	/^		var gradientFill = new GraphicsGradientFill ();$/;"	v
graphicDataPop	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	private inline static function graphicDataPop ():Void {$/;"	f
graphicType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var graphicType:GraphicType;$/;"	v
graphics	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var graphics (default, null):Dynamic \/*Graphics*\/;$/;"	v
graphics	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^		var graphics = textField.__graphics;$/;"	v
graphics	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^	private static var graphics:Graphics;	$/;"	v
graphics	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoShape.hx	/^		var graphics = shape.__graphics;$/;"	v
graphics	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^			var graphics = textField.__graphics;$/;"	v
graphics	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		var graphics = textField.__graphics;$/;"	v
graphics	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^	private static var graphics:Graphics;$/;"	v
graphics	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasShape.hx	/^		var graphics = shape.__graphics;$/;"	v
graphics	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^				var graphics = textField.__graphics;$/;"	v
graphics	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMShape.hx	/^		var graphics = shape.__graphics;$/;"	v
graphics	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var graphics = object.__graphics;$/;"	v
graphics	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public var graphics (get, null):Graphics;$/;"	v
graphics	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Shape.hx	/^	public var graphics (get, null):Graphics;$/;"	v
graphics	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Sprite.hx	/^	public var graphics (get, null):Graphics;$/;"	v
graphics	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var graphics = shape.graphics;$/;"	v
graphicsDataPool	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public static var graphicsDataPool:Array<GLGraphicsData> = [];$/;"	v
graphicsPath	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsPathTest.hx	/^		var graphicsPath = new GraphicsPath ();$/;"	v
graphicsPath	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsPathTest.hx	/^		var graphicsPath = new GraphicsPath (commands);$/;"	v
graphicsPath	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsPathTest.hx	/^		var graphicsPath = new GraphicsPath (null, data);$/;"	v
grassBitmapData	Source/Main.hx	/^	private static var grassBitmapData:BitmapData;$/;"	v
gravity	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^	public var gravity:B2Vec2;$/;"	v
gravity	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^			var gravity:B2Vec2 = new B2Vec2(0.0, 10.0);$/;"	v
greenMultiplier	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	public var greenMultiplier (get, set):Float;$/;"	v
greenMultiplier	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/ColorTransform.hx	/^	public var greenMultiplier:Float;$/;"	v
greenMultiplier	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/ColorTransform.hx	/^	public var greenMultiplier:Float;$/;"	v
greenOffset	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	public var greenOffset (get, set):Float;$/;"	v
greenOffset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/ColorTransform.hx	/^	public var greenOffset:Float;$/;"	v
greenOffset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/ColorTransform.hx	/^	public var greenOffset:Float;$/;"	v
gridFitType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public var gridFitType:GridFitType;$/;"	v
gridFitType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var gridFitType:GridFitType;$/;"	v
ground	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBreakable.hx	/^			var ground:B2Body = m_world.getGroundBody();$/;"	v
ground	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBridge.hx	/^			var ground:B2Body = m_world.getGroundBody();$/;"	v
ground	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBuoyancy.hx	/^			var ground:B2Body = m_world.getGroundBody();$/;"	v
ground	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^			var ground:B2Body = m_world.getGroundBody();$/;"	v
ground	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRaycast.hx	/^			var ground:B2Body = m_world.getGroundBody();$/;"	v
groundAnchor1	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^				var groundAnchor1:B2Vec2 = new B2Vec2(335 \/ m_physScale, 50 \/ m_physScale);$/;"	v
groundAnchor2	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^				var groundAnchor2:B2Vec2 = new B2Vec2(480 \/ m_physScale, 50 \/ m_physScale);$/;"	v
groundAnchorA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJointDef.hx	/^	public var groundAnchorA:B2Vec2;$/;"	v
groundAnchorB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJointDef.hx	/^	public var groundAnchorB:B2Vec2;$/;"	v
groupIndex	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2FilterData.hx	/^	public var groupIndex: Int;$/;"	v
groupTarget	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public var groupTarget (get, never):CairoSurface;$/;"	v
guid	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Gamepad.hx	/^	public var guid (get, never):String;$/;"	v
h	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^			var h:B2Vec2 = node.aabb.getExtents();$/;"	v
h	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^		var h = new Sha256().doEncode(bytes2blks(b), b.length*8);$/;"	v
h	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^		var h = sh.doEncode(str2blks(s), s.length*8);$/;"	v
h	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^		var h = bottom - top;$/;"	v
h	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var h = i.readInt32();$/;"	v
h	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var h = new Http (remotePath);$/;"	v
h	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^				var h = Math.floor(bounds.height+ 0.5);$/;"	v
h	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^		var h : Host = null;$/;"	v
h	/usr/lib/haxe/std/Date.hx	/^			var h = date.getHours();$/;"	v
h	/usr/lib/haxe/std/DateTools.hx	/^		var h = m \/ 60;$/;"	v
h	/usr/lib/haxe/std/List.hx	/^		var h = h;$/;"	v
h	/usr/lib/haxe/std/List.hx	/^	private var h : Array<Dynamic>;$/;"	v
h	/usr/lib/haxe/std/haxe/Http.hx	/^		var h = new Http(url);$/;"	v
h	/usr/lib/haxe/std/haxe/Unserializer.hx	/^			var h = new haxe.ds.IntMap();$/;"	v
h	/usr/lib/haxe/std/haxe/Unserializer.hx	/^			var h = new haxe.ds.ObjectMap();$/;"	v
h	/usr/lib/haxe/std/haxe/Unserializer.hx	/^			var h = new haxe.ds.StringMap();$/;"	v
h	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^			var h = m.doEncode(str2blks(s));$/;"	v
h	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^			var h = new Md5().doEncode(bytes2blks(b));$/;"	v
h	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^		var h = new Sha1().doEncode(bytes2blks(b));$/;"	v
h	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^		var h = sh.doEncode(str2blks(s));$/;"	v
h	/usr/lib/haxe/std/haxe/remoting/HttpAsyncConnection.hx	/^		var h = new haxe.Http(__data.url);$/;"	v
h	/usr/lib/haxe/std/haxe/remoting/HttpConnection.hx	/^		var h = new haxe.Http(__url);$/;"	v
h	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^		var h = new haxe.ds.StringMap();$/;"	v
h	/usr/lib/haxe/std/haxe/xml/Proxy.hx	/^	var h = new haxe.ds.StringMap<MyStructure>();$/;"	v
h	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var h = i.readInt32();$/;"	v
h	/usr/lib/haxe/std/neko/Web.hx	/^		var h = getClientHeader("Authorization");$/;"	v
h	/usr/lib/haxe/std/neko/Web.hx	/^		var h = new haxe.ds.StringMap();$/;"	v
h	/usr/lib/haxe/std/neko/Web.hx	/^		var h = new haxe.ds.StringMap<String>();$/;"	v
h	/usr/lib/haxe/std/neko/vm/Loader.hx	/^		var h = new haxe.ds.StringMap<Module>();$/;"	v
h	/usr/lib/haxe/std/neko/vm/Module.hx	/^		var h = new haxe.ds.StringMap();$/;"	v
h	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var h = new haxe.ds.StringMap();$/;"	v
h	/usr/lib/haxe/std/sys/net/Address.hx	/^		var h = new Host("127.0.0.1");$/;"	v
handle	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public var handle:Dynamic;$/;"	v
handle	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeRenderer.hx	/^	public var handle:Dynamic;$/;"	v
handle	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	public var handle:Dynamic;$/;"	v
handle	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^		var handle:Float = lime_alc_create_context (device, attrlist);$/;"	v
handle	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^		var handle:Float = lime_alc_get_contexts_device (context);$/;"	v
handle	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^		var handle:Float = lime_alc_get_current_context ();$/;"	v
handle	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^		var handle:Float = lime_alc_open_device (deviceName);$/;"	v
handle	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^		var handle = lime_jni_create_method (className, memberName, signature, false, quietFail);$/;"	v
handle	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^		var handle = lime_jni_create_method (className, memberName, signature, true, quietFail);$/;"	v
handle	/usr/lib/haxe/std/neko/vm/Thread.hx	/^	var handle : ThreadHandle;$/;"	v
handle byte length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^		\/\/ TODO: handle byte length$/;"	i
handle pan	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^		\/\/ TODO: handle pan$/;"	i
handle pre-decoded data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^		\/\/ TODO: handle pre-decoded data$/;"	i
handleContextLost	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	private function handleContextLost (event:Dynamic):Void {$/;"	f
handleContextRestored	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	private function handleContextRestored ():Void {$/;"	f
handleEvent	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Renderer.hx	/^	private function handleEvent (event:js.html.Event):Void {$/;"	f
handleGamepadEvent	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private function handleGamepadEvent ():Void {$/;"	f
handleKeyEvent	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashApplication.hx	/^	private function handleKeyEvent (event:KeyboardEvent):Void {$/;"	f
handleKeyEvent	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Application.hx	/^	private function handleKeyEvent (event:KeyboardEvent):Void {$/;"	f
handleKeyEvent	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private function handleKeyEvent ():Void {$/;"	f
handleMouseEvent	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashApplication.hx	/^	private function handleMouseEvent (event:MouseEvent):Void {$/;"	f
handleMouseEvent	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^	private function handleMouseEvent (event:MouseEvent):Void {$/;"	f
handleMouseEvent	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private function handleMouseEvent ():Void {$/;"	f
handleRenderEvent	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private function handleRenderEvent ():Void {$/;"	f
handleRequest	/usr/lib/haxe/std/haxe/remoting/HttpConnection.hx	/^	public static function handleRequest( ctx : Context ) {$/;"	f
handleResize	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^	private function handleResize ():Void {$/;"	f
handleTextEvent	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private function handleTextEvent ():Void {$/;"	f
handleTouchEvent	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashApplication.hx	/^	private function handleTouchEvent (event:TouchEvent):Void {$/;"	f
handleTouchEvent	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^	private function handleTouchEvent (event:TouchEvent):Void {$/;"	f
handleTouchEvent	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private function handleTouchEvent ():Void {$/;"	f
handleUpdateEvent	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashApplication.hx	/^	private function handleUpdateEvent (event:Event):Void {$/;"	f
handleUpdateEvent	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Application.hx	/^	private function handleUpdateEvent (?__):Void {$/;"	f
handleUpdateEvent	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private function handleUpdateEvent ():Void {$/;"	f
handleWindowEvent	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashApplication.hx	/^	private function handleWindowEvent (event:Event):Void {$/;"	f
handleWindowEvent	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Application.hx	/^	private function handleWindowEvent (event:js.html.Event):Void {$/;"	f
handleWindowEvent	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private function handleWindowEvent ():Void {$/;"	f
handler	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AssetHelper.hx	/^				var handler = project.libraryHandlers.get (type);$/;"	v
handler	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^			var handler = project.targetHandlers.get (Std.string (project.target));$/;"	v
handler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/external/ExternalInterface.hx	/^			var handler = callbacks.get (functionName);$/;"	v
handler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/external/ExternalInterface.hx	/^	private static function handler (functionName:String, params:Array<String>):String {$/;"	f
handler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/NetStream.hx	/^				var handler = client.onPlayStatus;$/;"	v
handlers	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AssetHelper.hx	/^		var handlers = new Array <String> ();$/;"	v
handles	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^		var handles = new Array<Dynamic> ();$/;"	v
hardRef	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/WeakRef.hx	/^	private var hardRef:T;$/;"	v
has	/usr/lib/haxe/std/haxe/EnumFlags.hx	/^	public inline function has( v : T ) : Bool {$/;"	f
has	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	function has( name : String ) : Bool;$/;"	f
has	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^	public var has(default,null) : HasAttribAccess;$/;"	v
hasARMV5	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^		var hasARMV5 = (ArrayHelper.containsValue (project.architectures, Architecture.ARMV5) || ArrayHelper.containsValue (project.architectures, Architecture.ARMV6));$/;"	v
hasARMV7	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^		var hasARMV7 = ArrayHelper.containsValue (project.architectures, Architecture.ARMV7);$/;"	v
hasAccessibility	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var hasAccessibility (default, null) = false;$/;"	v
hasAccessibility	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var hasAccessibility (default, null) = false;$/;"	v
hasActive	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	public static function hasActive ():Bool {$/;"	f
hasApt	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var hasApt = whichAptGet != null && whichAptGet != "";$/;"	v
hasAttribute	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function hasAttribute (name:String):Bool { return false; };$/;"	f
hasAttributeNS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function hasAttributeNS (?namespaceURI:String, localName:String):Bool { return false; };$/;"	f
hasAttributes	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function hasAttributes ():Bool { return false; };$/;"	f
hasAttributes	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^				var hasAttributes = child.x.attributes ().hasNext ();$/;"	v
hasAudio	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var hasAudio (default, null) = true;$/;"	v
hasAudio	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var hasAudio (default, null) = true;$/;"	v
hasAudioEncoder	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var hasAudioEncoder (default, null) = false;$/;"	v
hasAudioEncoder	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var hasAudioEncoder (default, null) = false;$/;"	v
hasBinaryChanged	/usr/lib/haxe/std/sys/db/Manager.hx	/^	inline function hasBinaryChanged( a : haxe.io.Bytes, b : haxe.io.Bytes ) {$/;"	f
hasBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function hasBitmapData (id:String):Bool {$/;"	f
hasBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function hasBitmapData (id:String):Bool;$/;"	f
hasBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function hasBitmapData (id:String):Bool {$/;"	f
hasBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function hasBitmapData (id:String):Bool;$/;"	f
hasChildNodes	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function hasChildNodes ():Bool { return false; };$/;"	f
hasChildren	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^				var hasChildren = child.x.elements ().hasNext ();$/;"	v
hasChildren	/usr/lib/haxe/std/haxe/xml/Printer.hx	/^	function hasChildren(value:Xml):Bool {$/;"	f
hasColors	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var hasColors = colors != null && colors.length > 0;$/;"	v
hasCrc	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/FrameHeader.hx	/^    public var hasCrc(default, null):Bool;$/;"	v
hasCrc	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var hasCrc = b & 1 == 0;$/;"	v
hasCurrentPoint	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public var hasCurrentPoint (get, never):Bool;$/;"	v
hasDefinition	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/ApplicationDomain.hx	/^	public function hasDefinition (name:String):Bool {$/;"	f
hasEmbeddedVideo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var hasEmbeddedVideo (default, null) = false;$/;"	v
hasEmbeddedVideo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var hasEmbeddedVideo (default, null) = false;$/;"	v
hasEventListener	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function hasEventListener (type:String):Bool { return false; };$/;"	f
hasEventListener	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public static function hasEventListener (type:String):Bool {$/;"	f
hasEventListener	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public static function hasEventListener (type:String):Bool {$/;"	f
hasEventListener	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/EventDispatcher.hx	/^	public function hasEventListener (type:String):Bool {$/;"	f
hasEventListener	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/IEventDispatcher.hx	/^	public function hasEventListener (type:String):Bool;$/;"	f
hasEventListener	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/EventDispatcher.hx	/^	public function hasEventListener (type:String):Bool {$/;"	f
hasEventListener	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/IEventDispatcher.hx	/^	public function hasEventListener (type:String):Bool;$/;"	f
hasEventListener	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public function hasEventListener (type:String):Bool;$/;"	f
hasEventListener	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static function hasEventListener (type:String):Bool;$/;"	f
hasField	/usr/lib/haxe/std/Reflect.hx	/^	public static function hasField( o : Dynamic, field : String ) : Bool;$/;"	f
hasFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^	private static var hasFill:Bool;$/;"	v
hasFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^	private static var hasFill:Bool;$/;"	v
hasFont	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function hasFont (id:String):Bool {$/;"	f
hasFont	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function hasFont (id:String):Bool;$/;"	f
hasFont	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function hasFont (id:String):Bool {$/;"	f
hasFont	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function hasFont (id:String):Bool;$/;"	f
hasGlyph	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	public function hasGlyph (str:String) {$/;"	f
hasID	/usr/lib/haxe/std/sys/db/TableCreate.hx	/^		var hasID = false;$/;"	v
hasIME	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var hasIME (default, null) = false;$/;"	v
hasIME	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var hasIME (default, null) = false;$/;"	v
hasMP3	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var hasMP3 (default, null) = false;$/;"	v
hasMP3	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var hasMP3 (default, null) = false;$/;"	v
hasMain	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/ApplicationMain.hx	/^		var hasMain = false;$/;"	v
hasMain	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^				var hasMain = false;$/;"	v
hasMain	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^			var hasMain = false;$/;"	v
hasMain	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^		var hasMain = false;$/;"	v
hasManager	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var hasManager = false;$/;"	v
hasMultiChannelAudio	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static function hasMultiChannelAudio (type:String):Bool {$/;"	f
hasMultiChannelAudio	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static function hasMultiChannelAudio (type:String):Bool {$/;"	f
hasNext	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public function hasNext ():Bool {$/;"	f
hasNext	/usr/lib/haxe/std/IntIterator.hx	/^	public function hasNext() {$/;"	f
hasNext	/usr/lib/haxe/std/StdTypes.hx	/^	function hasNext() : Bool;$/;"	f
hasNext	/usr/lib/haxe/std/haxe/ds/GenericStack.hx	/^	override public function hasNext():Bool { return current!=null; }$/;"	f
hasNext	/usr/lib/haxe/std/sys/db/ResultSet.hx	/^	function hasNext() : Bool;$/;"	f
hasNode	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^	public var hasNode(default,null) : HasNodeAccess;$/;"	v
hasPacman	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var hasPacman = whichPacman != null && whichPacman != "";$/;"	v
hasPadding	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/FrameHeader.hx	/^    public var hasPadding(default, null):Bool;$/;"	v
hasPadding	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var hasPadding = (b >> 1) & 1 == 1;$/;"	v
hasPath	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^		var hasPath:Bool = false;$/;"	v
hasPrinting	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var hasPrinting (default, null) = false;$/;"	v
hasPrinting	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var hasPrinting (default, null) = false;$/;"	v
hasScreenBroadcast	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var hasScreenBroadcast (default, null) = false;$/;"	v
hasScreenBroadcast	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var hasScreenBroadcast (default, null) = false;$/;"	v
hasScreenPlayback	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var hasScreenPlayback (default, null) = false;$/;"	v
hasScreenPlayback	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var hasScreenPlayback (default, null) = false;$/;"	v
hasSound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function hasSound (id:String):Bool {$/;"	f
hasSound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function hasSound (id:String):Bool;$/;"	f
hasSound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function hasSound (id:String):Bool {$/;"	f
hasSound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function hasSound (id:String):Bool;$/;"	f
hasStreamingAudio	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var hasStreamingAudio (default, null) = false;$/;"	v
hasStreamingAudio	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var hasStreamingAudio (default, null) = false;$/;"	v
hasStreamingVideo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var hasStreamingVideo (default, null) = false;$/;"	v
hasStreamingVideo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var hasStreamingVideo (default, null) = false;$/;"	v
hasStroke	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^	private static var hasStroke:Bool;$/;"	v
hasStroke	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^	private static var hasStroke:Bool;$/;"	v
hasTLS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var hasTLS (default, null) = true;$/;"	v
hasTLS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var hasTLS (default, null) = true;$/;"	v
hasValue	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ArrayHelper.hx	/^			var hasValue = false;$/;"	v
hasVideoEncoder	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var hasVideoEncoder (default, null) = false;$/;"	v
hasVideoEncoder	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var hasVideoEncoder (default, null) = false;$/;"	v
hasX86	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^		var hasX86 = ArrayHelper.containsValue (project.architectures, Architecture.X86);$/;"	v
hasYum	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var hasYum = whichYum != null && whichYum != "";$/;"	v
has_glyph_names	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	var has_glyph_names:Bool;$/;"	v
has_glyph_names	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	var has_glyph_names: Bool;$/;"	v
has_kerning	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	var has_kerning:Bool;$/;"	v
has_kerning	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	var has_kerning: Bool;$/;"	v
has_launch_image	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^		var has_launch_image = false;$/;"	v
hash	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthRequest.hx	/^		var hash = new Hmac (SHA1);$/;"	v
hash	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^		var hash = 5381;$/;"	v
hashCode	/usr/lib/haxe/std/Map.hx	/^	function hashCode():Int;$/;"	f
hasindirect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Description.hx	/^	public var hasindirect:Bool;$/;"	v
hasmatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Description.hx	/^	public var hasmatrix:Bool;$/;"	v
hasp	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^				var hasp = (o.hasOwnProperty != null);$/;"	v
havePayments	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^			var havePayments = project.config.getString ("firefox-marketplace.premium-type", "free") != cast PremiumType.FREE;$/;"	v
haxe	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^package haxe;$/;"	p
haxe	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^package haxe;$/;"	p
haxe	/usr/lib/haxe/lib/openfl/3,0,8/docs/haxe/Int32.hx	/^ package haxe;$/;"	p
haxe	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^package haxe;$/;"	p
haxe	/usr/lib/haxe/std/haxe/CallStack.hx	/^package haxe;$/;"	p
haxe	/usr/lib/haxe/std/haxe/Constraints.hx	/^package haxe;$/;"	p
haxe	/usr/lib/haxe/std/haxe/EnumFlags.hx	/^package haxe;$/;"	p
haxe	/usr/lib/haxe/std/haxe/EnumTools.hx	/^package haxe;$/;"	p
haxe	/usr/lib/haxe/std/haxe/Http.hx	/^package haxe;$/;"	p
haxe	/usr/lib/haxe/std/haxe/Int32.hx	/^ package haxe;$/;"	p
haxe	/usr/lib/haxe/std/haxe/Int64.hx	/^package haxe;$/;"	p
haxe	/usr/lib/haxe/std/haxe/Json.hx	/^package haxe;$/;"	p
haxe	/usr/lib/haxe/std/haxe/Log.hx	/^package haxe;$/;"	p
haxe	/usr/lib/haxe/std/haxe/PosInfos.hx	/^package haxe;$/;"	p
haxe	/usr/lib/haxe/std/haxe/Resource.hx	/^package haxe;$/;"	p
haxe	/usr/lib/haxe/std/haxe/Serializer.hx	/^package haxe;$/;"	p
haxe	/usr/lib/haxe/std/haxe/Template.hx	/^package haxe;$/;"	p
haxe	/usr/lib/haxe/std/haxe/Timer.hx	/^package haxe;$/;"	p
haxe	/usr/lib/haxe/std/haxe/Ucs2.hx	/^package haxe;$/;"	p
haxe	/usr/lib/haxe/std/haxe/Unserializer.hx	/^package haxe;$/;"	p
haxe	/usr/lib/haxe/std/haxe/Utf8.hx	/^package haxe;$/;"	p
haxe.crypto	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Hmac.hx	/^package haxe.crypto;$/;"	p
haxe.crypto	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^package haxe.crypto;$/;"	p
haxe.crypto	/usr/lib/haxe/std/haxe/crypto/Adler32.hx	/^package haxe.crypto;$/;"	p
haxe.crypto	/usr/lib/haxe/std/haxe/crypto/Base64.hx	/^package haxe.crypto;$/;"	p
haxe.crypto	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^package haxe.crypto;$/;"	p
haxe.crypto	/usr/lib/haxe/std/haxe/crypto/Crc32.hx	/^package haxe.crypto;$/;"	p
haxe.crypto	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^package haxe.crypto;$/;"	p
haxe.crypto	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^package haxe.crypto;$/;"	p
haxe.ds	/usr/lib/haxe/std/haxe/ds/ArraySort.hx	/^package haxe.ds;$/;"	p
haxe.ds	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^package haxe.ds;$/;"	p
haxe.ds	/usr/lib/haxe/std/haxe/ds/EnumValueMap.hx	/^package haxe.ds;$/;"	p
haxe.ds	/usr/lib/haxe/std/haxe/ds/GenericStack.hx	/^package haxe.ds;$/;"	p
haxe.ds	/usr/lib/haxe/std/haxe/ds/HashMap.hx	/^package haxe.ds;$/;"	p
haxe.ds	/usr/lib/haxe/std/haxe/ds/IntMap.hx	/^package haxe.ds;$/;"	p
haxe.ds	/usr/lib/haxe/std/haxe/ds/ListSort.hx	/^package haxe.ds;$/;"	p
haxe.ds	/usr/lib/haxe/std/haxe/ds/ObjectMap.hx	/^package haxe.ds;$/;"	p
haxe.ds	/usr/lib/haxe/std/haxe/ds/Option.hx	/^package haxe.ds;$/;"	p
haxe.ds	/usr/lib/haxe/std/haxe/ds/StringMap.hx	/^package haxe.ds;$/;"	p
haxe.ds	/usr/lib/haxe/std/haxe/ds/Vector.hx	/^package haxe.ds;$/;"	p
haxe.ds	/usr/lib/haxe/std/haxe/ds/WeakMap.hx	/^package haxe.ds;$/;"	p
haxe.format	/usr/lib/haxe/std/haxe/format/JsonParser.hx	/^package haxe.format;$/;"	p
haxe.format	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^package haxe.format;$/;"	p
haxe.io	/usr/lib/haxe/std/haxe/io/BufferInput.hx	/^package haxe.io;$/;"	p
haxe.io	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^package haxe.io;$/;"	p
haxe.io	/usr/lib/haxe/std/haxe/io/BytesBuffer.hx	/^package haxe.io;$/;"	p
haxe.io	/usr/lib/haxe/std/haxe/io/BytesData.hx	/^package haxe.io;$/;"	p
haxe.io	/usr/lib/haxe/std/haxe/io/BytesInput.hx	/^package haxe.io;$/;"	p
haxe.io	/usr/lib/haxe/std/haxe/io/BytesOutput.hx	/^package haxe.io;$/;"	p
haxe.io	/usr/lib/haxe/std/haxe/io/Eof.hx	/^package haxe.io;$/;"	p
haxe.io	/usr/lib/haxe/std/haxe/io/Error.hx	/^package haxe.io;$/;"	p
haxe.io	/usr/lib/haxe/std/haxe/io/Input.hx	/^package haxe.io;$/;"	p
haxe.io	/usr/lib/haxe/std/haxe/io/Output.hx	/^package haxe.io;$/;"	p
haxe.io	/usr/lib/haxe/std/haxe/io/Path.hx	/^package haxe.io;$/;"	p
haxe.io	/usr/lib/haxe/std/haxe/io/StringInput.hx	/^package haxe.io;$/;"	p
haxe.macro	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^package haxe.macro;$/;"	p
haxe.macro	/usr/lib/haxe/std/haxe/macro/ComplexTypeTools.hx	/^package haxe.macro;$/;"	p
haxe.macro	/usr/lib/haxe/std/haxe/macro/Context.hx	/^package haxe.macro;$/;"	p
haxe.macro	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^package haxe.macro;$/;"	p
haxe.macro	/usr/lib/haxe/std/haxe/macro/Expr.hx	/^package haxe.macro;$/;"	p
haxe.macro	/usr/lib/haxe/std/haxe/macro/ExprTools.hx	/^package haxe.macro;$/;"	p
haxe.macro	/usr/lib/haxe/std/haxe/macro/Format.hx	/^package haxe.macro;$/;"	p
haxe.macro	/usr/lib/haxe/std/haxe/macro/JSGenApi.hx	/^package haxe.macro;$/;"	p
haxe.macro	/usr/lib/haxe/std/haxe/macro/MacroStringTools.hx	/^package haxe.macro;$/;"	p
haxe.macro	/usr/lib/haxe/std/haxe/macro/MacroType.hx	/^package haxe.macro;$/;"	p
haxe.macro	/usr/lib/haxe/std/haxe/macro/Printer.hx	/^package haxe.macro;$/;"	p
haxe.macro	/usr/lib/haxe/std/haxe/macro/Tools.hx	/^package haxe.macro;$/;"	p
haxe.macro	/usr/lib/haxe/std/haxe/macro/Type.hx	/^package haxe.macro;$/;"	p
haxe.macro	/usr/lib/haxe/std/haxe/macro/TypeTools.hx	/^package haxe.macro;$/;"	p
haxe.macro	/usr/lib/haxe/std/haxe/macro/TypedExprTools.hx	/^package haxe.macro;$/;"	p
haxe.remoting	/usr/lib/haxe/std/haxe/remoting/AMFConnection.hx	/^package haxe.remoting;$/;"	p
haxe.remoting	/usr/lib/haxe/std/haxe/remoting/AsyncAdapter.hx	/^package haxe.remoting;$/;"	p
haxe.remoting	/usr/lib/haxe/std/haxe/remoting/AsyncConnection.hx	/^package haxe.remoting;$/;"	p
haxe.remoting	/usr/lib/haxe/std/haxe/remoting/AsyncDebugConnection.hx	/^package haxe.remoting;$/;"	p
haxe.remoting	/usr/lib/haxe/std/haxe/remoting/AsyncProxy.hx	/^package haxe.remoting;$/;"	p
haxe.remoting	/usr/lib/haxe/std/haxe/remoting/Connection.hx	/^package haxe.remoting;$/;"	p
haxe.remoting	/usr/lib/haxe/std/haxe/remoting/Context.hx	/^package haxe.remoting;$/;"	p
haxe.remoting	/usr/lib/haxe/std/haxe/remoting/ContextAll.hx	/^package haxe.remoting;$/;"	p
haxe.remoting	/usr/lib/haxe/std/haxe/remoting/DelayedConnection.hx	/^package haxe.remoting;$/;"	p
haxe.remoting	/usr/lib/haxe/std/haxe/remoting/ExternalConnection.hx	/^package haxe.remoting;$/;"	p
haxe.remoting	/usr/lib/haxe/std/haxe/remoting/FlashJsConnection.hx	/^package haxe.remoting;$/;"	p
haxe.remoting	/usr/lib/haxe/std/haxe/remoting/HttpAsyncConnection.hx	/^package haxe.remoting;$/;"	p
haxe.remoting	/usr/lib/haxe/std/haxe/remoting/HttpConnection.hx	/^package haxe.remoting;$/;"	p
haxe.remoting	/usr/lib/haxe/std/haxe/remoting/LocalConnection.hx	/^package haxe.remoting;$/;"	p
haxe.remoting	/usr/lib/haxe/std/haxe/remoting/Proxy.hx	/^package haxe.remoting;$/;"	p
haxe.remoting	/usr/lib/haxe/std/haxe/remoting/SocketConnection.hx	/^package haxe.remoting;$/;"	p
haxe.remoting	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^package haxe.remoting;$/;"	p
haxe.remoting	/usr/lib/haxe/std/haxe/remoting/SocketWrapper.hx	/^package haxe.remoting;$/;"	p
haxe.remoting	/usr/lib/haxe/std/haxe/remoting/SyncSocketConnection.hx	/^package haxe.remoting;$/;"	p
haxe.rtti	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^package haxe.rtti;$/;"	p
haxe.rtti	/usr/lib/haxe/std/haxe/rtti/Meta.hx	/^package haxe.rtti;$/;"	p
haxe.rtti	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^package haxe.rtti;$/;"	p
haxe.unit	/usr/lib/haxe/std/haxe/unit/TestCase.hx	/^package haxe.unit;$/;"	p
haxe.unit	/usr/lib/haxe/std/haxe/unit/TestResult.hx	/^ package haxe.unit;$/;"	p
haxe.unit	/usr/lib/haxe/std/haxe/unit/TestRunner.hx	/^package haxe.unit;$/;"	p
haxe.unit	/usr/lib/haxe/std/haxe/unit/TestStatus.hx	/^package haxe.unit;$/;"	p
haxe.web	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^package haxe.web;$/;"	p
haxe.web	/usr/lib/haxe/std/haxe/web/Request.hx	/^package haxe.web;$/;"	p
haxe.xml	/usr/lib/haxe/std/haxe/xml/Check.hx	/^package haxe.xml;$/;"	p
haxe.xml	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^package haxe.xml;$/;"	p
haxe.xml	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^package haxe.xml;$/;"	p
haxe.xml	/usr/lib/haxe/std/haxe/xml/Printer.hx	/^package haxe.xml;$/;"	p
haxe.xml	/usr/lib/haxe/std/haxe/xml/Proxy.hx	/^package haxe.xml;$/;"	p
haxe.zip	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^package haxe.zip;$/;"	p
haxe.zip	/usr/lib/haxe/std/haxe/zip/Compress.hx	/^package haxe.zip;$/;"	p
haxe.zip	/usr/lib/haxe/std/haxe/zip/Entry.hx	/^package haxe.zip;$/;"	p
haxe.zip	/usr/lib/haxe/std/haxe/zip/FlushMode.hx	/^package haxe.zip;$/;"	p
haxe.zip	/usr/lib/haxe/std/haxe/zip/Huffman.hx	/^package haxe.zip;$/;"	p
haxe.zip	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^package haxe.zip;$/;"	p
haxe.zip	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^package haxe.zip;$/;"	p
haxe.zip	/usr/lib/haxe/std/haxe/zip/Tools.hx	/^package haxe.zip;$/;"	p
haxe.zip	/usr/lib/haxe/std/haxe/zip/Uncompress.hx	/^package haxe.zip;$/;"	p
haxe.zip	/usr/lib/haxe/std/haxe/zip/Writer.hx	/^package haxe.zip;$/;"	p
haxeArgs	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^			var haxeArgs = [ hxml ];$/;"	v
haxeArgs	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/MacPlatform.hx	/^			var haxeArgs = [ hxml, "-D", "HXCPP_CLANG" ];$/;"	v
haxeArgs	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WindowsPlatform.hx	/^			var haxeArgs = [ hxml ];$/;"	v
haxeParams	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^			var haxeParams = [ hxml, "-D", "android", "-D", "android-9" ];$/;"	v
haxePath	/usr/lib/haxe/lib/lime/2,4,3/tools/SVGExport.hx	/^		var haxePath = Sys.getEnv ("HAXEPATH");$/;"	v
haxePath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var haxePath = Sys.getEnv ("HAXEPATH");$/;"	v
haxeToNeko	/usr/lib/haxe/std/neko/Lib.hx	/^	public static function haxeToNeko( v : Dynamic ) : Dynamic untyped {$/;"	f
haxedefs	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public var haxedefs:Map <String, Dynamic>;$/;"	v
haxeflags	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public var haxeflags:Array <String>;$/;"	v
haxelib	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Haxelib.hx	/^		var haxelib = new Haxelib (name, version);$/;"	v
haxelib	/usr/lib/haxe/lib/lime/2,4,3/lime/project/NDLL.hx	/^	public var haxelib:Haxelib;$/;"	v
haxelib	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^						var haxelib = new Haxelib (name, version);$/;"	v
haxelib	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^						var haxelib = null;$/;"	v
haxelib	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^				var haxelib = findHaxeLib ("lime");$/;"	v
haxelib	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/BlackBerryPlatform.hx	/^			var haxelib = new Haxelib ("lime");$/;"	v
haxelib	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^				var haxelib = null;$/;"	v
haxelib	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^		var haxelib = new Haxelib (name);$/;"	v
haxelib	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^			var haxelib = findHaxeLib ("lime");$/;"	v
haxelibName	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^			var haxelibName = null;$/;"	v
haxelibOverrides	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^	public static var haxelibOverrides = new Map<String, String> ();$/;"	v
haxelibPath	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^			var haxelibPath = PathHelper.getHaxelib (haxelib);$/;"	v
haxelibPath	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^								var haxelibPath = PathHelper.getHaxelib (new Haxelib (substitute (element.att.haxelib)), true);$/;"	v
haxelibPath	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^					var haxelibPath = PathHelper.getHaxelib (new Haxelib (words[0]));$/;"	v
haxelibPaths	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^	private static var haxelibPaths = new Map<String, String> ();$/;"	v
haxelibProject	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CPPHelper.hx	/^				var haxelibProject = HXProject.fromHaxelib (haxelib, defines);$/;"	v
haxelibs	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^		var haxelibs = project.haxelibs.copy ();$/;"	v
haxelibs	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public var haxelibs:Array <Haxelib>;$/;"	v
hclen	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^				var hclen = getBits(4) + 4;$/;"	v
hdist	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^				var hdist = getBits(5) + 1;$/;"	v
hdr	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^					var hdr = wav.header;$/;"	v
head	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRagdoll.hx	/^				var head = m_world.createBody(bd);$/;"	v
head	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRagdoll.hx	/^				var head:B2Body = m_world.createBody(bd);$/;"	v
head	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRagdoll.hx	/^			var head = m_world.createBody(bd);$/;"	v
head	/usr/lib/haxe/std/haxe/ds/GenericStack.hx	/^	public var head : GenericCell<T>;$/;"	v
header	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^					var header = Tools.getHeader (png);$/;"	v
header	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var header = input.readString (4);$/;"	v
header	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^			var header = args.push ("-swf-header");$/;"	v
header	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^		var header:SWFHeader =$/;"	v
header	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/Frame.hx	/^    public var header(default, null):FrameHeader;$/;"	v
header	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/Info.hx	/^    public var header(default, null):FrameHeader;$/;"	v
header	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var header = new FrameHeader(version, layer, hasCrc, bitrate, samplingFrequency, hasPadding,$/;"	v
header	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGALTokenizer.hx	/^		var header = new Header ();$/;"	v
header	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLParser.hx	/^		var header:String = "";$/;"	v
header	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Description.hx	/^	public var header:Header;$/;"	v
header	/usr/lib/haxe/std/haxe/remoting/SocketConnection.hx	/^		var header = "Error in call to "+path.join(".")+"("+astr+") : ";$/;"	v
headerFunction	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^	private function headerFunction (output:String, size:Int, nmemb:Int):Int {$/;"	f
headerFunction	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^	private function headerFunction (output:String, size:Int, nmemb:Int):Int {$/;"	f
headers	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^		var headers:Array<String> = [];$/;"	v
headers	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^		var headers = URLLoadersManager.getInstance().getHeaders(__handle);$/;"	v
headers	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^		var headers:Array<String> = [];$/;"	v
headers	/usr/lib/haxe/std/haxe/Http.hx	/^		var headers = b.getBytes().toString().split("\\r\\n");$/;"	v
headers	/usr/lib/haxe/std/haxe/Http.hx	/^		var headers = neko.Lib.stringReference(b.getBytes()).split("\\r\\n");$/;"	v
headers	/usr/lib/haxe/std/haxe/Http.hx	/^	var headers : List<{ header:String, value:String }>;$/;"	v
height	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public var height:Int;$/;"	v
height	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var height:Float;$/;"	v
height	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public var height:Int;$/;"	v
height	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ImageBuffer.hx	/^	public var height:Int;$/;"	v
height	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoSurface.hx	/^	public var height (get, never):Int;$/;"	v
height	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	public var height:Float;$/;"	v
height	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Icon.hx	/^	public var height:Int;$/;"	v
height	/usr/lib/haxe/lib/lime/2,4,3/lime/project/SplashScreen.hx	/^	public var height:Int;$/;"	v
height	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^			var height = bytes.readUnsignedInt ();$/;"	v
height	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	public var height (get, null):Int;$/;"	v
height	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	var height:Int;$/;"	v
height	/usr/lib/haxe/lib/lime/2,4,3/lime/text/GlyphMetrics.hx	/^	public var height:Int;$/;"	v
height	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var height (get, set):Int;$/;"	v
height	/usr/lib/haxe/lib/lime/2,4,3/tools/SVGExport.hx	/^				var height = Std.parseInt (words[3]);$/;"	v
height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/AbstractRenderer.hx	/^	public var height:Int;$/;"	v
height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var height = 0;$/;"	v
height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DefaultShader.hx	/^				var height = (data.height != #if !neko 0 #else null #end) ? data.height : 2;$/;"	v
height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^	public var height:Int;$/;"	v
height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterTexture.hx	/^	public var height:Int;$/;"	v
height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var height = (rectData.length == 3) ? width : rectData[3];$/;"	v
height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var height = points[3];$/;"	v
height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var height = rectData[3];$/;"	v
height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var height:Int = bitmap.height;$/;"	v
height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public var height (get, null):Int;$/;"	v
height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public var height (get, set):Float;$/;"	v
height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/LoaderInfo.hx	/^	public var height (default, null):Int;$/;"	v
height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var height = #if android #if lime_legacy lime_get_softkeyboardheight (); #else 0; #end #else lime_stage_get_keyboard_height (__handle); #end$/;"	v
height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	public var height:Float;$/;"	v
height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/ScreenMode.hx	/^	public var height:Int;$/;"	v
height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/AbstractFont.hx	/^	private var height:Int;$/;"	v
height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	var height: Int;$/;"	v
height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextLineMetrics.hx	/^	public var height:Float;$/;"	v
height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public var height (default, null):Int;$/;"	v
height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	public var height (get, set):Float;$/;"	v
height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/LoaderInfo.hx	/^	public var height (default, null):Int;$/;"	v
height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/TextureBase.hx	/^	public var height:Int;$/;"	v
height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^	public var height:Float;$/;"	v
height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^   var height:Int;$/;"	v
height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextLineMetrics.hx	/^	public var height:Float;$/;"	v
height	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/NMEPreloader.hx	/^		var height = 7;$/;"	v
height	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/NMEPreloader.hx	/^		var height = ::WIN_HEIGHT::;$/;"	v
height	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/NMEPreloader.hx	/^		var height = 9;$/;"	v
height	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/NMEPreloader.hx	/^		var height = ::WIN_HEIGHT::;$/;"	v
height	Source/Env.hx	/^    public static var height:Float;$/;"	v
helper	/usr/lib/haxe/std/haxe/io/Input.hx	/^			var helper = helper;$/;"	v
helper	/usr/lib/haxe/std/haxe/io/Input.hx	/^		var helper = helper;$/;"	v
helper	/usr/lib/haxe/std/haxe/io/Input.hx	/^	private var helper:BytesData;$/;"	v
helper	/usr/lib/haxe/std/haxe/io/Input.hx	/^	private var helper:java.nio.ByteBuffer;$/;"	v
helper	/usr/lib/haxe/std/haxe/io/Output.hx	/^		var helper = helper;$/;"	v
helper	/usr/lib/haxe/std/haxe/io/Output.hx	/^	private var helper:java.nio.ByteBuffer;$/;"	v
hex	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^	function hex( a : Array<Int> ){$/;"	f
hex	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^	private function hex (value:Int):String {$/;"	f
hex	/usr/lib/haxe/std/StringTools.hx	/^	public static function hex( n : Int, ?digits : Int ) {$/;"	f
hex	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^	function hex( a : Array<Int> ){$/;"	f
hex	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^	function hex( a : Array<Int> ){$/;"	f
hex2rgb	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public static inline function hex2rgb (hex:Null<Int>):Array<Float> {$/;"	f
hex2rgba	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public static inline function hex2rgba (hex:Null<Int>):Array<Float> {$/;"	f
hexChars	/usr/lib/haxe/std/StringTools.hx	/^			var hexChars = "0123456789ABCDEF";$/;"	v
hex_chr	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^		var hex_chr = "0123456789abcdef";$/;"	v
hex_chr	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^		var hex_chr = "0123456789abcdef";$/;"	v
hfields	/usr/lib/haxe/std/sys/db/RecordInfos.hx	/^	var hfields : haxe.ds.StringMap<RecordField>;$/;"	v
hh	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^	function hh(a, b, c, d, x, s, t){$/;"	f
hi	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^					var hi = src.readInt32();$/;"	v
hidden	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var hidden:Bool;$/;"	v
hiddenInput	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^			var hiddenInput = textField.__hiddenInput;$/;"	v
hide	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashMouse.hx	/^	public static function hide ():Void {$/;"	f
hide	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Mouse.hx	/^	public static function hide ():Void {$/;"	f
hide	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeMouse.hx	/^	public static function hide ():Void {$/;"	f
hide	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Mouse.hx	/^	public static function hide ():Void {$/;"	f
hide	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Mouse.hx	/^	public static function hide ():Void {$/;"	f
hide	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Mouse.hx	/^	public static function hide ():Void {$/;"	f
hideObject	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/DropShadowFilter.hx	/^	public var hideObject:Bool;$/;"	v
hideObject	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/GlowFilter.hx	/^	public var hideObject:Bool;$/;"	v
hideObject	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/DropShadowFilter.hx	/^	public var hideObject:Bool;$/;"	v
high	/usr/lib/haxe/std/haxe/Int64.hx	/^		var high = i32(a.high + b.high);$/;"	v
high	/usr/lib/haxe/std/haxe/Int64.hx	/^		var high = i32(a.high - b.high); \/\/ i32() call required to match add$/;"	v
high	/usr/lib/haxe/std/haxe/Int64.hx	/^		var high = i32(p11 + ushr32(p01 , 16) + ushr32(p10 , 16));$/;"	v
high	/usr/lib/haxe/std/haxe/Int64.hx	/^		var high = i32(~a.high);$/;"	v
high	/usr/lib/haxe/std/haxe/Int64.hx	/^	var high : Int;$/;"	v
highPos	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^						var highPos = Std.int (Math.max (textField.__selectionStart, textField.__cursorPosition));$/;"	v
hint	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function hint (target:Int, mode:Int):Void;$/;"	f
hint	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function hint (target:Int, mode:Int):Void {$/;"	f
hint	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function hint (target:Int, mode:Int):Void {$/;"	f
hint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function hint(target:Int, mode:Int):Void $/;"	f
hint	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function hint(target:Int, mode:Int):Void;$/;"	f
hintMetrics	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFontOptions.hx	/^	public var hintMetrics (get, set):CairoHintMetrics;$/;"	v
hintStyle	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFontOptions.hx	/^	public var hintStyle (get, set):CairoHintStyle;$/;"	v
histogram	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function histogram (hRect:Rectangle = null) {$/;"	f
hit	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^			var hit:Bool = fixture.rayCast(output, input);$/;"	v
hit	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var hit = false;$/;"	v
hitArea	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var hitArea:Dynamic \/*Sprite*\/;$/;"	v
hitColorA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var hitColorA = image.transparent ? data[offset + 3] : 0xFF;$/;"	v
hitColorB	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var hitColorB = data[offset + 2];$/;"	v
hitColorG	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var hitColorG = data[offset + 1];$/;"	v
hitColorR	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var hitColorR = data[offset + 0];$/;"	v
hitTest	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function hitTest (firstPoint:Point, firstAlphaThreshold:Int, secondObject:Dynamic, secondBitmapDataPoint:Point = null, secondAlphaThreshold:Int = 1):Bool {$/;"	f
hitTest	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^				var hitTest = false;$/;"	v
hitTestObject	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function hitTestObject (obj:Dynamic \/*DisplayObject*\/):Bool { return false; };$/;"	f
hitTestObject	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public function hitTestObject (obj:DisplayObject):Bool {$/;"	f
hitTestObject	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	public function hitTestObject (obj:DisplayObject):Bool {$/;"	f
hitTestPoint	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function hitTestPoint (x:Float, y:Float, shapeFlag:Bool = false):Bool { return false; };$/;"	f
hitTestPoint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public function hitTestPoint (x:Float, y:Float, shapeFlag:Bool = false):Bool {$/;"	f
hitTestPoint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	public function hitTestPoint (x:Float, y:Float, shapeFlag:Bool = false):Bool {$/;"	f
hitTestState	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/SimpleButton.hx	/^	public var hitTestState (default, set):DisplayObject;$/;"	v
hitTestState	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/SimpleButton.hx	/^	public var hitTestState (default, set):DisplayObject;$/;"	v
hits	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^			var hits = 0;$/;"	v
hits	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^			var hits = 0;$/;"	v
hkey	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var hkey = r.key;$/;"	v
hl	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^		var hl = l.get_height();$/;"	v
hlit	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^				var hlit = getBits(5) + 257;$/;"	v
hname	/usr/lib/haxe/std/haxe/Http.hx	/^			var hname = a.shift();$/;"	v
home	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^			var home = "";$/;"	v
home	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var home = "";$/;"	v
horizontal	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextDirection.hx	/^	public var horizontal (get, never):Bool;$/;"	v
horizontal	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Flags.hx	/^	public var horizontal:Bool;$/;"	v
horizontalBearing	/usr/lib/haxe/lib/lime/2,4,3/lime/text/GlyphMetrics.hx	/^	public var horizontalBearing:Vector2;$/;"	v
host	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URIParser.hx	/^	public var host:String;$/;"	v
host	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public var host (get_host, null):Platform;$/;"	v
host	/usr/lib/haxe/std/haxe/Http.hx	/^		var host = url_regexp.matched(2);$/;"	v
host	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^		var host = r.matched(1);$/;"	v
host	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^	var host : String;$/;"	v
host	/usr/lib/haxe/std/sys/net/Address.hx	/^	public var host : Int;$/;"	v
host	/usr/lib/haxe/std/sys/net/Socket.hx	/^	function host() : { host : Host, port : Int };$/;"	f
hostArchitecture	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PlatformHelper.hx	/^	public static var hostArchitecture (get_hostArchitecture, null):Architecture;$/;"	v
hostPlatform	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PlatformHelper.hx	/^	public static var hostPlatform (get_hostPlatform, null):Platform;$/;"	v
hour	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var hour = (t >> 11) & 31;$/;"	v
hour	/usr/lib/haxe/std/DateTools.hx	/^				var hour = d.getHours()%12;$/;"	v
hour	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var hour = (t >> 11) & 31;$/;"	v
hour	/usr/lib/haxe/std/haxe/zip/Writer.hx	/^		var hour = date.getHours();$/;"	v
hours	/usr/lib/haxe/std/DateTools.hx	/^	public static inline function hours( n : Float ) : Float {$/;"	f
hprop	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var hprop = "__"+r.prop;$/;"	v
hr	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^		var hr = r.get_height();$/;"	v
htmlElement	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^		var htmlElement:#if (haxe_ver >= "3.2") Element #else HtmlElement #end = null;$/;"	v
htmlEscape	/usr/lib/haxe/std/StringTools.hx	/^	public static function htmlEscape( s : String, ?quotes : Bool ) : String {$/;"	f
htmlText	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public var htmlText (get, set):String;$/;"	v
htmlText	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var htmlText (get, set):String;$/;"	v
htmlUnescape	/usr/lib/haxe/std/StringTools.hx	/^	public static function htmlUnescape( s : String ) : String {$/;"	f
htools	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	var htools : HuffTools;$/;"	v
httpStatusEvent	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/HTTPStatusEventTest.hx	/^		var httpStatusEvent = new HTTPStatusEvent (HTTPStatusEvent.HTTP_STATUS);$/;"	v
huffdist	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	var huffdist : Null<Huffman>;$/;"	v
huffman	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	var huffman : Huffman;$/;"	v
hval	/usr/lib/haxe/std/haxe/Http.hx	/^			var hval = if( a.length == 1 ) a[0] else a.join(": ");$/;"	v
hxml	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^		var hxml = Std.string (target).toLowerCase () + "\/hxml\/" + type + ".hxml";$/;"	v
hxml	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^		var hxml = PathHelper.findTemplate (project.templatePaths, "android\/hxml\/" + (project.debug ? "debug" : "release") + ".hxml");$/;"	v
hxml	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^		var hxml = targetDirectory + "\/haxe\/" + type + ".hxml";$/;"	v
hxml	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/BlackBerryPlatform.hx	/^			var hxml = targetDirectory + "\/haxe\/" + type + ".hxml";$/;"	v
hxml	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/BlackBerryPlatform.hx	/^		var hxml = "";$/;"	v
hxml	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/EmscriptenPlatform.hx	/^		var hxml = PathHelper.findTemplate (project.templatePaths, "emscripten\/hxml\/" + type + ".hxml");$/;"	v
hxml	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/EmscriptenPlatform.hx	/^		var hxml = targetDirectory + "\/haxe\/" + type + ".hxml";$/;"	v
hxml	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FlashPlatform.hx	/^			var hxml = File.getContent (targetDirectory + "\/haxe\/" + type + ".hxml");$/;"	v
hxml	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FlashPlatform.hx	/^			var hxml = targetDirectory + "\/haxe\/" + type + ".hxml";$/;"	v
hxml	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FlashPlatform.hx	/^		var hxml = PathHelper.findTemplate (project.templatePaths, "flash\/hxml\/" + type + ".hxml");$/;"	v
hxml	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/HTML5Platform.hx	/^			var hxml = targetDirectory + "\/haxe\/" + type + ".hxml";$/;"	v
hxml	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/HTML5Platform.hx	/^		var hxml = PathHelper.findTemplate (project.templatePaths, "html5\/hxml\/" + type + ".hxml");$/;"	v
hxml	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^		var hxml = PathHelper.findTemplate (project.templatePaths, "iphone\/PROJ\/haxe\/Build.hxml");$/;"	v
hxml	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^		var hxml = PathHelper.findTemplate (project.templatePaths, targetType + "\/hxml\/" + type + ".hxml");$/;"	v
hxml	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^		var hxml = targetDirectory + "\/haxe\/" + type + ".hxml";$/;"	v
hxml	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/MacPlatform.hx	/^		var hxml = PathHelper.findTemplate (project.templatePaths, targetType + "\/hxml\/" + type + ".hxml");$/;"	v
hxml	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/MacPlatform.hx	/^		var hxml = targetDirectory + "\/haxe\/" + type + ".hxml";$/;"	v
hxml	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/TizenPlatform.hx	/^		var hxml = PathHelper.findTemplate (project.templatePaths, "tizen\/hxml\/" + type + ".hxml");$/;"	v
hxml	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/TizenPlatform.hx	/^		var hxml = targetDirectory + "\/haxe\/" + type + ".hxml";$/;"	v
hxml	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WebOSPlatform.hx	/^		var hxml = PathHelper.findTemplate (project.templatePaths, "webos\/hxml\/" + type + ".hxml");$/;"	v
hxml	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WebOSPlatform.hx	/^		var hxml = targetDirectory + "\/haxe\/" + type + ".hxml";$/;"	v
hxml	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WindowsPlatform.hx	/^		var hxml = PathHelper.findTemplate (project.templatePaths, targetType + "\/hxml\/" + type + ".hxml");$/;"	v
hxml	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WindowsPlatform.hx	/^		var hxml = targetDirectory + "\/haxe\/" + type + ".hxml";$/;"	v
i	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Distance.hx	/^	var i:Int;$/;"	v
i	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^		var i = 0;$/;"	v
i	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2WorldManifold.hx	/^		var i:Int;$/;"	v
i	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var i:Int;$/;"	v
i	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^			var i: Int;$/;"	v
i	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^		var i:Int;$/;"	v
i	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^				var i:Int;$/;"	v
i	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^			var i:Int;$/;"	v
i	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var i:Int;$/;"	v
i	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^		var i:Int;$/;"	v
i	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PositionSolverManifold.hx	/^		var i:Int;$/;"	v
i	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^		var i:B2ControllerEdge = m_bodyList;$/;"	v
i	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2ConstantAccelController.hx	/^		var i:B2ControllerEdge=m_bodyList;$/;"	v
i	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2ConstantForceController.hx	/^		var i:B2ControllerEdge=m_bodyList;$/;"	v
i	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2GravityController.hx	/^		var i:B2ControllerEdge = null;$/;"	v
i	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^				var i:Int = bufferSize-1;$/;"	v
i	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBridge.hx	/^			var i:Int;$/;"	v
i	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBuoyancy.hx	/^			var i:Int;$/;"	v
i	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCompound.hx	/^			var i:Int;$/;"	v
i	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestStack.hx	/^			var i:Int;$/;"	v
i	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^			var i = 0;$/;"	v
i	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^			var i = c.length - 1;$/;"	v
i	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^		var i : Int = 0;$/;"	v
i	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^		var i = b.length;$/;"	v
i	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^		var i = s.length;$/;"	v
i	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^					var i;$/;"	v
i	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^				var i : Dynamic = intf[i];$/;"	v
i	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Event.hx	/^			var i = 0;$/;"	v
i	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var i = 0;$/;"	v
i	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^						var i = dependencies.length;$/;"	v
i	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^			var i = 0;$/;"	v
i	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var i:Int = 0;$/;"	v
i	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^						var i = 0;$/;"	v
i	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var i = this.i;$/;"	v
i	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^	var i : haxe.io.Input;$/;"	v
i	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^					var i = src.readInt32();$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^		var i = this.length - 1;$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLParser.hx	/^		var i:Int = 0;$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^							var i = Std.int( tileData[index +2] );$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^						var i = 0;$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var i = 0;$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		var i = 0;$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var i = 0;$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^		var i = texture._glTextures.length - 1;$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^			var i = 0;$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var i = 0;$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var i = 0, j = 0;$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Bitmap.hx	/^		var i:Int = lime_display_object_get_pixel_snapping (__handle);$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^			var i = length - 1;$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^		var i:Int = lime_display_object_get_bg (__handle);$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^		var i:Int = lime_display_object_get_blend_mode (__handle);$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^			var i = firstIndex;$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^		var i = 0;$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^		var i = __getChildIndex (child);$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^			var i = newLength - 1;$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^			var i = oldLength - 1;$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var i:Int = lime_stage_get_align (__handle);$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var i:Int = lime_stage_get_display_state (__handle);$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var i:Int = lime_stage_get_quality (__handle);$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var i:Int = lime_stage_get_scale_mode (__handle);$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^		var i = __incompleteList.length;$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^				var i = list.length;$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^		var i = __children.length;$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^				var i = length - 2;$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/IndexBuffer3D.hx	/^		var i:Int = 0;$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/VertexBuffer3D.hx	/^		var i:Int = 0;$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/RectangleTexture.hx	/^			var i:Int = 0;$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/Texture.hx	/^		var i:Int = 0;$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var i = 0;$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^		var i:UInt;$/;"	v
i	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var i : Int;$/;"	v
i	/usr/lib/haxe/std/Lambda.hx	/^		var i = 0;$/;"	v
i	/usr/lib/haxe/std/haxe/CallStack.hx	/^			var i = 0;$/;"	v
i	/usr/lib/haxe/std/haxe/CallStack.hx	/^			var i = c.length - 1;$/;"	v
i	/usr/lib/haxe/std/haxe/Int64.hx	/^		var i = this;$/;"	v
i	/usr/lib/haxe/std/haxe/Serializer.hx	/^				var i : Int = v.index;$/;"	v
i	/usr/lib/haxe/std/haxe/Serializer.hx	/^				var i = 0;$/;"	v
i	/usr/lib/haxe/std/haxe/Template.hx	/^			var i = Std.parseInt(v);$/;"	v
i	/usr/lib/haxe/std/haxe/Unserializer.hx	/^				var i = readDigits();$/;"	v
i	/usr/lib/haxe/std/haxe/Unserializer.hx	/^			var i = pos;$/;"	v
i	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^				var i = tbl[b.get(pin++)];$/;"	v
i	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^		var i = 0;$/;"	v
i	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^		var i = 0;$/;"	v
i	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^		var i = b.length;$/;"	v
i	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^		var i = s.length;$/;"	v
i	/usr/lib/haxe/std/haxe/format/JsonParser.hx	/^		var i = Std.int(f);$/;"	v
i	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^			var i : Dynamic = Type.enumIndex(v);$/;"	v
i	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^		var i = 0;$/;"	v
i	/usr/lib/haxe/std/haxe/io/BufferInput.hx	/^	public var i : haxe.io.Input;$/;"	v
i	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^			var i = len;$/;"	v
i	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^		var i = 0;$/;"	v
i	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^		var i = pos;$/;"	v
i	/usr/lib/haxe/std/haxe/macro/Context.hx	/^		var i = load("get_pos_infos",1)(p);$/;"	v
i	/usr/lib/haxe/std/haxe/macro/Format.hx	/^		var i = 0, start = 0;$/;"	v
i	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^		var i = socket.input;$/;"	v
i	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^			var i = i.get();$/;"	v
i	/usr/lib/haxe/std/haxe/xml/Check.hx	/^								var i;$/;"	v
i	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^							var i = s.fastCodeAt(1) == 'x'.code$/;"	v
i	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^		var i = 0;$/;"	v
i	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var i = this.i;$/;"	v
i	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^	var i : haxe.io.Input;$/;"	v
i	/usr/lib/haxe/std/neko/Boot.hx	/^				var i = intf[i];$/;"	v
i	/usr/lib/haxe/std/neko/Boot.hx	/^		var i = 0;$/;"	v
i	/usr/lib/haxe/std/neko/Lib.hx	/^			var i = 0;$/;"	v
i	/usr/lib/haxe/std/neko/net/Poll.hx	/^			var i = 0;$/;"	v
i	/usr/lib/haxe/std/neko/vm/Module.hx	/^		var i = path.length;$/;"	v
i	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var i = g.cache.get(cname);$/;"	v
i0	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^			var i0 = avl[(i + 0) % al];$/;"	v
i0	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var i0 = 0; var i1 = 0; var i2 = 0;$/;"	v
i1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var i1:Int = index;$/;"	v
i1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var i1:Int = i;$/;"	v
i1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^			var i1:Float = m_invIA;$/;"	v
i1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var i1:Float;$/;"	v
i1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^			var i1:Float = m_invIA;$/;"	v
i1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var i1:Float;$/;"	v
i1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^		var i1:Float = bA.m_invI;$/;"	v
i1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^			var i1 = avl[(i + 1) % al];$/;"	v
i2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var i2:Int = i1 + 1 < count2 ? i1 + 1 : 0;$/;"	v
i2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var i2:Int = i + 1 < m_vertexCount ? i + 1 : 0;$/;"	v
i2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^			var i2:Float = m_invIB;$/;"	v
i2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var i2:Float;$/;"	v
i2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^			var i2:Float = m_invIB;$/;"	v
i2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var i2:Float;$/;"	v
i2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^		var i2:Float = bB.m_invI;$/;"	v
i2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^			var i2 = avl[(i + 2) % al];$/;"	v
i32php	/usr/lib/haxe/std/haxe/Int64.hx	/^	private static function i32php(value:Int):Int {$/;"	f
i386	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^		var i386 = (command == "rebuild" || project.targetFlags.exists ("simulator"));$/;"	v
iA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^		var iA:Float = bA.m_invI;$/;"	v
iA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^		var iA:Float = bA.m_invI;$/;"	v
iB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^		var iB:Float = bB.m_invI;$/;"	v
iB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^		var iB:Float = bB.m_invI;$/;"	v
iIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var iIndex = 0;$/;"	v
iT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^		var iT = 1 - t;$/;"	v
iXoffset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private var iXoffset:Float;$/;"	v
iYoffset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private var iYoffset:Float;$/;"	v
iZoffset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private var iZoffset:Float;$/;"	v
i_ref	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^			var i_ref = src.readUInt16();$/;"	v
iax	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var iax:Int, iay:Int, ibx:Int, iby:Int, icx:Int, icy:Int;$/;"	v
iax	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var iax:Int, iay:Int, ibx:Int, iby:Int, icx:Int, icy:Int;$/;"	v
icon	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Icon.hx	/^		var icon = new Icon (path);$/;"	v
icon	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^						var icon = new Icon (path);$/;"	v
icon	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^		var icon = findMatch (icons, width, height);$/;"	v
icon	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^		var icon = new ByteArray ();$/;"	v
icon	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FlashPlatform.hx	/^		var icon = icons.findIcon (size, size);$/;"	v
iconCount	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CordovaHelper.hx	/^		var iconCount = 0;$/;"	v
iconPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^		var iconPath = PathHelper.combine (projectDirectory, "Images.xcassets\/AppIcon.appiconset");$/;"	v
iconPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WindowsPlatform.hx	/^			var iconPath = PathHelper.combine (applicationDirectory, "icon.ico");$/;"	v
iconSizes	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^		var iconSizes = [ 36, 48, 72, 96, 144, 192 ];$/;"	v
iconSizes	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^		var iconSizes:Array<IconSize> = [$/;"	v
iconTypes	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^		var iconTypes = [ "ldpi", "mdpi", "hdpi", "xhdpi", "xxhdpi", "xxxhdpi" ];$/;"	v
icon_name	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CordovaHelper.hx	/^			var icon_name = icons.findIcon (sizes[i], sizes[i]);$/;"	v
icons	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public var icons:Array <Icon>;$/;"	v
id	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ContactID.hx	/^		var id:B2ContactID = new B2ContactID();$/;"	v
id	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ContactPoint.hx	/^	public var id:B2ContactID;$/;"	v
id	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeNode.hx	/^	public var id:Int;$/;"	v
id	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/ClipVertex.hx	/^	public var id:B2ContactID;$/;"	v
id	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^		private var id : Null<Int>;$/;"	v
id	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashApplication.hx	/^			var id = 0;$/;"	v
id	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Application.hx	/^					var id = window.setTimeout(function() { callback(currTime + timeToCall); }, $/;"	v
id	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^		var id = touch.identifier;$/;"	v
id	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public var id:Int;$/;"	v
id	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioBuffer.hx	/^	public var id:UInt;$/;"	v
id	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^	private var id:UInt;$/;"	v
id	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var id:String;$/;"	v
id	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLObject.hx	/^    public var id (default, null) : Dynamic;$/;"	v
id	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Asset.hx	/^	public var id:String;$/;"	v
id	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^					var id = "";$/;"	v
id	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^		var id = 0;$/;"	v
id	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^		var id = 0;$/;"	v
id	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Gamepad.hx	/^	public var id (default, null):Int;$/;"	v
id	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^				var id = [ "com", "sample", file.toLowerCase () ];$/;"	v
id	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^		private var id : Null<Int>;$/;"	v
id	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public var id:String;$/;"	v
id	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var id = lime_stage_get_focus_id (__handle);$/;"	v
id	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLObject.hx	/^	public var id (default, null):Dynamic;$/;"	v
id	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/JoystickEvent.hx	/^	public var id:Int;$/;"	v
id	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInputControl.hx	/^	public var id (default, null):String;$/;"	v
id	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInputDevice.hx	/^	public var id (default, null):String;$/;"	v
id	/usr/lib/haxe/std/haxe/Serializer.hx	/^					var id = Reflect.field(k, "__id__");$/;"	v
id	/usr/lib/haxe/std/haxe/Timer.hx	/^		private var id : Null<Int>;$/;"	v
id	/usr/lib/haxe/std/haxe/remoting/LocalConnection.hx	/^			var id = ID++;$/;"	v
id	/usr/lib/haxe/std/haxe/remoting/SocketWrapper.hx	/^		var id = prefix + "WrappedSocket"+(ID++);$/;"	v
id	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	var id : Int;$/;"	v
id	/usr/lib/haxe/std/sys/db/Manager.hx	/^			var id = Reflect.field(othis, hkey);$/;"	v
id	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^							var id = makeIdent(pl[0]);$/;"	v
id	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^					var id = makeIdent(p);$/;"	v
id2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^					var id2:B2ContactID = mp2.m_id;$/;"	v
id3	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^		var id3 = new ID3Info ();$/;"	v
id3	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^	public var id3 (get, null):ID3Info;$/;"	v
id3	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public var id3 (get, null):ID3Info;$/;"	v
id3Info	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/ID3InfoTest.hx	/^		var id3Info = new Sound ().id3;$/;"	v
ident	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^	static var ident = ~\/^[A-Za-z_][A-Za-z0-9_]*$\/;$/;"	v
ident	/usr/lib/haxe/std/haxe/macro/Format.hx	/^				var ident = str.substr(start, len);$/;"	v
identity	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	public function identity () {$/;"	f
identity	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public function identity ():Void {$/;"	f
identity	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public function identity () {$/;"	f
identity	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Keystore.hx	/^	public var identity:String;$/;"	v
identity	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^		var identity = "iPhone Developer";$/;"	v
identity	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^	public function identity ():Void {$/;"	f
identity	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^	public function identity ():Void {$/;"	f
identity	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public function identity() {$/;"	f
identityMatrix	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function identityMatrix ():Void {$/;"	f
ids	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^			var ids = sheet.adjustIDs (sheet.__ids, itemCount);$/;"	v
idx	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^					var idx = fullName.lastIndexOf(".");$/;"	v
idx	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^		var idx = 0;$/;"	v
idx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^						var idx = 0;$/;"	v
idx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^				var idx:Int = 0;$/;"	v
idx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var idx = 0;$/;"	v
idx	/usr/lib/haxe/std/haxe/CallStack.hx	/^						var idx = fullName.lastIndexOf(".");$/;"	v
idx	/usr/lib/haxe/std/haxe/zip/Huffman.hx	/^		var idx = (v << 5) | len;$/;"	v
idx	/usr/lib/haxe/std/neko/Web.hx	/^					var idx = reg.matched(2);$/;"	v
idx	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^							var idx = Lambda.indexOf(vals,id);$/;"	v
idx	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^					var idx = fields.join(",");$/;"	v
idx	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^				var idx = [];$/;"	v
ignore	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var ignore = "";$/;"	v
ignoreAsset	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var ignoreAsset = false;$/;"	v
ignoreRootFolder	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var ignoreRootFolder = "android-ndk-r8b";$/;"	v
ignoreRootFolder	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var ignoreRootFolder = "android-sdk";$/;"	v
ignoreRootFolder	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var ignoreRootFolder = "apache-ant-1.9.2";$/;"	v
ignoreValues	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var ignoreValues = new Array <String> ();$/;"	v
ii	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^				var ii:Int = 0;$/;"	v
ii	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^	function ii(a, b, c, d, x, s, t){$/;"	f
illegalOperationError	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/IllegalOperationErrorTest.hx	/^		var illegalOperationError = new IllegalOperationError ();$/;"	v
image	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^					var image = library.getImage (symbolName);$/;"	v
image	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^			var image = cache.image.get (id);$/;"	v
image	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public var image:Map<String, Image>;$/;"	v
image	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Preloader.hx	/^						var image = new Image ();$/;"	v
image	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^			var image = new JSImage ();$/;"	v
image	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^		var image = new Image ();$/;"	v
image	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^		var image = new Image (buffer.clone (), offsetX, offsetY, width, height, null, type);$/;"	v
image	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^		var image = new JSImage ();$/;"	v
image	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^			var image = new Image (buffer, 0, 0, width, height);$/;"	v
image	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^			var image = getIconImage (icons, s, s);$/;"	v
image	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^			var image = getIconImage (icons, size, size);$/;"	v
image	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^			var image = getIconImage (icons, width, height);$/;"	v
image	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^		var image = null;$/;"	v
image	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ImageHelper.hx	/^				var image = Image.fromFile (temp);$/;"	v
image	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ImageHelper.hx	/^			var image = Image.fromFile (temp);$/;"	v
image	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^					var image = new Image (null, 0, 0, size.w, size.h, (0xFF << 24) | (project.window.background & 0xFFFFFF));$/;"	v
image	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^		var image = LimeAssets.getImage (id, false);$/;"	v
image	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^				var image, index;$/;"	v
image	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^			var image;$/;"	v
image	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/Texture.hx	/^		var image = @:privateAccess (bitmapData.__image);$/;"	v
imageData	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^		var imageData = new Array <ByteArray> ();$/;"	v
imageHeight	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var imageHeight = image.height;$/;"	v
imagePath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^				var imagePath = PathHelper.combine (splashScreenPath, size.name);$/;"	v
imageSmoothingEnabled	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public var imageSmoothingEnabled:Bool;$/;"	v
imageWidth	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var imageWidth = image.width;$/;"	v
image_onLoad	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Preloader.hx	/^	private function image_onLoad (_):Void {$/;"	f
image_onLoaded	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^		var image_onLoaded = function (event) {$/;"	v
images	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Preloader.hx	/^	public static var images = new Map<String, Image> ();$/;"	v
images	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^		var images = new Array <Image> ();$/;"	v
images	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^			var images = fontGlyphs.get (size);$/;"	v
img	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^			var img = Image.fromFile (path);$/;"	v
impl	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var impl : Null<Ref<ClassType>>;$/;"	v
impl	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	var impl : Classdef;$/;"	v
impl_name	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^			var impl_name = "Haxe" + parts[parts.length - 1].split("$").join("");$/;"	v
impulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var impulse:Float = -ccp.equalizedMass * C;$/;"	v
impulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^		var impulse:Float = -m_mass * (Cdot + m_bias + m_gamma * m_impulse);$/;"	v
impulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^		var impulse:Float = -m_mass * C;$/;"	v
impulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^			var impulse:Float = -m_angularMass * Cdot;$/;"	v
impulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^		var impulse:Float = - m_mass * Cdot;$/;"	v
impulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^		var impulse:Float = -m_mass * C;$/;"	v
impulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^			var impulse:Float = m_motorMass * (m_motorSpeed - Cdot);$/;"	v
impulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var impulse:B2Vec2 = new B2Vec2();$/;"	v
impulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^			var impulse:Float = m_motorMass * (m_motorSpeed - Cdot);$/;"	v
impulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var impulse:B2Vec3 = new B2Vec3();$/;"	v
impulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var impulse:Float;$/;"	v
impulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^			var impulse:Float = m_motorMass * ( -Cdot);$/;"	v
impulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^		var impulse:B2Vec3 = new B2Vec3();$/;"	v
impulse1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^			var impulse1:Float;$/;"	v
impulse1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^			var impulse1:B2Vec2 = m_K.solve22(new B2Vec2(), -C1X, -C1Y);$/;"	v
impulse2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	private var impulse2:B2Vec2;$/;"	v
impulse3	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	private var impulse3:B2Vec3;$/;"	v
impulseV	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^			var impulseV:B2Vec2 = B2Math.mulMV(m_linearMass, new B2Vec2(-CdotX, -CdotY));$/;"	v
impulseX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^		var impulseX:Float = -(tMat.col1.x * tX + tMat.col2.x * tY);$/;"	v
impulseX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^		var impulseX:Float;$/;"	v
impulseY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^		var impulseY:Float = -(tMat.col1.y * tX + tMat.col2.y * tY);$/;"	v
impulseY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^		var impulseY:Float;$/;"	v
in	/usr/lib/haxe/std/Reflect.hx	/^	abstract interface in an untyped manner. Use with care.$/;"	i
inClip	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function inClip (x:Float, y:Float):Bool {$/;"	f
inFill	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function inFill (x:Float, y:Float):Bool {$/;"	f
inStroke	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function inStroke (x:Float, y:Float):Bool {$/;"	f
incidentEdge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var incidentEdge:Array <ClipVertex> = s_incidentEdge; $/;"	v
incidentEdge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/Features.hx	/^	public var incidentEdge (get, set):Int;$/;"	v
incidentVertex	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/Features.hx	/^	public var incidentVertex (get, set):Int;$/;"	v
include	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public function include (path:String):Void {$/;"	f
include	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^				var include = "";$/;"	v
include	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^	public static function include( pack : String, ?rec = true, ?ignore : Array<String>, ?classPaths : Array<String> ) {$/;"	f
includeAssets	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public function includeAssets (path:String, rename:String = null, include:Array <String> = null, exclude:Array <String> = null):Void {$/;"	f
includeBackend	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Lib.hx	/^	public static function includeBackend (type:String) {$/;"	f
includePath	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^				var includePath = path + "\/" + base;$/;"	v
includePath	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^			var includePath = findIncludeFile (path);$/;"	v
includePaths	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^	public var includePaths:Array <String>;$/;"	v
includePaths	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	private var includePaths:Array <String>;$/;"	v
includeProject	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^			var includeProject = HXProject.fromHaxelib (haxelib, userDefines);$/;"	v
includeProject	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^							var includeProject = new ProjectXMLParser (path, defines);$/;"	v
includeProject	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^						var includeProject = HXProject.fromHaxelib (haxelib, defines);$/;"	v
includeProject	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^				var includeProject = new ProjectXMLParser (includePath, defines);$/;"	v
includeProject	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^						var includeProject = HXProject.fromHaxelib (haxelib, project.defines);$/;"	v
includeTags	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^			var includeTags = [ "lime", "Main", "GameActivity", "GLThread", "trace" ];$/;"	v
increment	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var increment:Int;$/;"	v
incrementBy	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	inline public function incrementBy (a:Vector4):Void {$/;"	f
incrementBy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^	inline public function incrementBy (a:Vector3D):Void {$/;"	f
ind	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var ind = indices;$/;"	v
ind	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var ind = indices;$/;"	v
indent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextFormat.hx	/^	public var indent:Null<Float>;$/;"	v
indent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextFormat.hx	/^	public var indent:Null<Float>;$/;"	v
indent	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^	var indent:String;$/;"	v
index	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var index:Int = 0;$/;"	v
index	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var index:Int = -1;$/;"	v
index	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^				var index:uint = bp.m_pairManager.m_hashTable[i];$/;"	v
index	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Event.hx	/^		var index = listeners.indexOf (listener);$/;"	v
index	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var index, a, unmultiply;$/;"	v
index	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var index, a16;$/;"	v
index	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^			var index = bytes.readUnsignedInt ();$/;"	v
index	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^			var index, x, y, image;$/;"	v
index	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextLayout.hx	/^				var index, advanceX, advanceY, offsetX, offsetY;$/;"	v
index	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^				var index = ret.indexOf (search);$/;"	v
index	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^		var index = 1;$/;"	v
index	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	private var index:Int;$/;"	v
index	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var index = 0;$/;"	v
index	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var index = 0;$/;"	v
index	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var index = batchedSprites * 4 * elementsPerVertex;$/;"	v
index	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^		var index = __getChildIndex (child);$/;"	v
index	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/EventDispatcher.hx	/^		var index = 0;$/;"	v
index	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^			var index = header.indexOf(": ");$/;"	v
index	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^			var index = 0;$/;"	v
index	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/EventDispatcher.hx	/^		var index = 0;$/;"	v
index	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^		var index = 0;$/;"	v
index	/usr/lib/haxe/std/haxe/Unserializer.hx	/^			var index = readDigits();$/;"	v
index	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var index : Int;$/;"	v
index	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^		var index = PARAMS.length;$/;"	v
index1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^		var index1 = __getChildIndex (child1);$/;"	v
index1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^			var index1 = -1;$/;"	v
index1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^			var index1 = __children.indexOf (child1);$/;"	v
index2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^		var index2 = __getChildIndex (child2);$/;"	v
index2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^			var index2 = -1;$/;"	v
index2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^			var index2 = __children.indexOf (child2);$/;"	v
indexA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SimplexCache.hx	/^	public var indexA:Array <Int>;	$/;"	v
indexA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SimplexVertex.hx	/^	public var indexA:Int = 0;	\/\/ wA index$/;"	v
indexArraySize	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	var indexArraySize:Int;$/;"	v
indexB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SimplexCache.hx	/^	public var indexB:Array <Int>;	$/;"	v
indexB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SimplexVertex.hx	/^	public var indexB:Int = 0;	\/\/ wB index$/;"	v
indexBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^	public var indexBuffer:GLBuffer;$/;"	v
indexBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var indexBuffer:GLBuffer;$/;"	v
indexBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	var indexBuffer:GLBuffer;$/;"	v
indexBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		var indexBuffer = new IndexBuffer3D (GL.createBuffer (), numIndices);$/;"	v
indexBuffersCreated	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	private var indexBuffersCreated:Array<IndexBuffer3D>; \/\/ to keep track of stuff to dispose when calling dispose$/;"	v
indexCount	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var indexCount = points.length;$/;"	v
indexOf	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public function indexOf (x:T, ?from:Int = 0):Int {$/;"	f
indexOf	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public inline function indexOf (x:T, ?from:Int = 0):Int {$/;"	f
indexOf	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public inline function indexOf (x:T, from:Int = 0):Int {$/;"	f
indexOf	/usr/lib/haxe/std/Array.hx	/^	function indexOf( x : T, ?fromIndex:Int ) : Int;$/;"	f
indexOf	/usr/lib/haxe/std/String.hx	/^	function indexOf( str : String, ?startIndex : Int ) : Int;$/;"	f
indexOfPeriod	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^		var indexOfPeriod = main.lastIndexOf (".");$/;"	v
indexStart	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var indexStart = Std.int (verts.length \/ 6);$/;"	v
indexed	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^		var indexed = getGroupMatches (~\/vc\\[(v[tcai])(\\d+)\\.([xyzw])([\\+\\-]\\d+)?\\](\\.[xyzw]{1,4})?\/i, token, 5); \/\/ g1: indexregname, g2:indexregnum, g3:select, [g4:offset], [g5:swizzle]$/;"	v
indexes	/usr/lib/haxe/std/sys/db/RecordInfos.hx	/^	var indexes : Array<{ keys : Array<String>, unique : Bool }>;$/;"	v
indexoffset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Destination.hx	/^	public var indexoffset:Int;$/;"	v
indexregtype	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Destination.hx	/^	public var indexregtype:Int;$/;"	v
indexselect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Destination.hx	/^	public var indexselect:Int;$/;"	v
indices	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^			var indices = fill.indices;$/;"	v
indices	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var indices = fill.indices;$/;"	v
indices	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var indices = line.indices;$/;"	v
indices	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var indices:Vector<Int> = cast args[1];$/;"	v
indices	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var indices:Array<Int> = [];$/;"	v
indices	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var indices:Array<Int>;$/;"	v
indices	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	var indices:UInt16Array;$/;"	v
indices	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^			var indices = sheet.adjustIndices (sheet.__indices, itemCount * 6); $/;"	v
indices	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/IndexBuffer3D.hx	/^		var indices:Int16Array;$/;"	v
indirectflag	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Destination.hx	/^	public var indirectflag:Int;$/;"	v
inertiaScale	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2BodyDef.hx	/^	public var inertiaScale:Float;$/;"	v
inf	/usr/lib/haxe/std/haxe/remoting/Context.hx	/^		var inf = objects.get(path[0]);$/;"	v
inf	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^		var inf : TypeInfos;$/;"	v
inf	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		var inf = TypeApi.typeInfos(t);$/;"	v
inf	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var inf = { e : null, str : null };$/;"	v
inf	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	var inf : RecordInfos;$/;"	v
inflate	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	public function inflate (dx:Float, dy:Float):Void {$/;"	f
inflate	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function inflate () {$/;"	f
inflate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	public function inflate (dx:Float, dy:Float):Void {$/;"	f
inflate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function inflate ():Void {$/;"	f
inflate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^	public function inflate (dx:Float, dy:Float):Void {$/;"	f
inflate	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^		var inflate = new InflateImpl(i);$/;"	v
inflateLengths	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	function inflateLengths(a,max) {$/;"	f
inflateLoop	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	function inflateLoop() {$/;"	f
inflatePoint	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	public function inflatePoint (point:Vector2):Void {$/;"	f
inflatePoint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	public function inflatePoint (point:Point):Void {$/;"	f
inflatePoint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^	public function inflatePoint (point:Point):Void {$/;"	f
info	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^			var info = Json.parse (data);$/;"	v
info	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/LogHelper.hx	/^	public static function info (message:String, verboseMessage:String = ""):Void {$/;"	f
info	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^                var info = readInfo(header, frameData);$/;"	v
info	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^			var info = Json.parse (data);$/;"	v
info	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/NetStatusEvent.hx	/^	public var info:Dynamic;$/;"	v
infoHeaderLength	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/format/BMP.hx	/^		var infoHeaderLength = 40;$/;"	v
infoStartIndex	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/Info.hx	/^    public var infoStartIndex(default, null):Int;$/;"	v
infoStartIndex	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var infoStartIndex = sideInformationStartIndex + sideInformationSize;$/;"	v
infoTagGaplessInfo	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    function infoTagGaplessInfo(info:Info) {$/;"	f
infoTagSignature	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    static var infoTagSignature = Bytes.ofString("Info");$/;"	v
infos	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^				var infos = python.lib.Traceback.extract_tb(exc._3);$/;"	v
infos	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^			var infos = python.lib.Traceback.extract_stack();$/;"	v
infos	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^				var infos : ClientInfos<Client> = m.s.custom;$/;"	v
infos	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^				var infos : ClientInfos<Client> = s.custom;$/;"	v
infos	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^				var infos : ClientInfos<Client> = {$/;"	v
infos	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^		var infos : ClientInfos<Client> = s.custom;$/;"	v
infos	/usr/lib/haxe/std/sys/db/TableCreate.hx	/^		var infos = manager.dbInfos();$/;"	v
init	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Main.hx	/^	function init() $/;"	f
init	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function init (context:RenderContext):Void {$/;"	f
init	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function init (context:RenderContext):Void;$/;"	f
init	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function init (context:RenderContext):Void { }$/;"	f
init	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioManager.hx	/^	public static function init (context:AudioContext = null) {$/;"	f
init	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^	private function init ():Void {$/;"	f
init	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLEasy.hx	/^	public static function init ():CURL {$/;"	f
init	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^			var init = load ("lime", "neko_init", 5, lazy);$/;"	v
init	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^			var init = load ("lime-legacy", "neko_init", 5);$/;"	v
init	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var init = System.load ("lime", "lime_byte_array_init", 4);$/;"	v
init	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var init = System.load ("lime-legacy", "lime_legacy_byte_array_init", 4);$/;"	v
init	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/AbstractShader.hx	/^	public function init ():Void {$/;"	f
init	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/ComplexPrimitiveShader.hx	/^	public override function init ():Void {$/;"	f
init	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DefaultShader.hx	/^	public override function init ():Void {$/;"	f
init	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DrawTrianglesShader.hx	/^	public override function init ():Void {$/;"	f
init	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/FastShader.hx	/^	public override function init ():Void {$/;"	f
init	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/FillShader.hx	/^	public override function init ():Void {$/;"	f
init	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/PatternFillShader.hx	/^	public override function init ():Void {$/;"	f
init	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/PrimitiveShader.hx	/^	public override function init ():Void {$/;"	f
init	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/StripShader.hx	/^	public override function init ():Void {$/;"	f
init	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/DefaultShader.hx	/^	override private function init() {$/;"	f
init	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/DrawTrianglesShader.hx	/^	override function init() {$/;"	f
init	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/FillShader.hx	/^	override function init() {$/;"	f
init	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/PatternFillShader.hx	/^	override function init() $/;"	f
init	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/PrimitiveShader.hx	/^	override function init() $/;"	f
init	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/Shader.hx	/^	private function init() {$/;"	f
init	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^			var init = load ("lime-legacy", "neko_init", 5);$/;"	v
init	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function init (context:RenderContext):Void {$/;"	f
init	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var init = Lib.load ("lime-legacy", "lime_legacy_byte_array_init", 4);$/;"	v
init	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	private static function init ():Void {$/;"	f
init	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function init (context:RenderContext):Void {$/;"	f
init	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/ApplicationMain.hx	/^	public static function init ():Void {$/;"	f
init	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^	public static function init ():Void {$/;"	f
init	/usr/lib/haxe/std/haxe/crypto/Crc32.hx	/^		var init = 0xFFFFFFFF;$/;"	v
init	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var init : Null<TypedExpr>;$/;"	v
init	/usr/lib/haxe/std/haxe/remoting/SocketWrapper.hx	/^	static function init() {$/;"	f
init	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	function init() {$/;"	f
initCodes	/usr/lib/haxe/std/haxe/Unserializer.hx	/^	static function initCodes() {$/;"	f
initGlobals	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	function initGlobals()$/;"	f
initHeight	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	public static var initHeight (default, null):Int;$/;"	v
initManager	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	function initManager( pos : Position ) {$/;"	f
initRelation	/usr/lib/haxe/std/sys/db/Manager.hx	/^	function initRelation( r : RecordInfos.RecordRelation ) {$/;"	f
initSampler2D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DefaultShader.hx	/^	public function initSampler2D (uniform:Dynamic):Void {$/;"	f
initShaderBuffers	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^	public function initShaderBuffers ():Void {$/;"	f
initTable	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^	function initTable() {$/;"	f
initUniforms	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DefaultShader.hx	/^	public function initUniforms ():Void {$/;"	f
initVelocityConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^	public function initVelocityConstraints(step: B2TimeStep) : Void{$/;"	f
initVelocityConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^	public override function initVelocityConstraints(step:B2TimeStep) : Void{$/;"	f
initVelocityConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^	public override function initVelocityConstraints(step:B2TimeStep) : Void {$/;"	f
initVelocityConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^	public override function initVelocityConstraints(step:B2TimeStep) : Void{$/;"	f
initVelocityConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	public function initVelocityConstraints(step:B2TimeStep) : Void{}$/;"	f
initVelocityConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	public override function initVelocityConstraints(step:B2TimeStep) : Void{$/;"	f
initVelocityConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^	public override function initVelocityConstraints(step:B2TimeStep): Void{$/;"	f
initVelocityConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	public override function initVelocityConstraints(step:B2TimeStep) : Void{$/;"	f
initVelocityConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	public override function initVelocityConstraints(step:B2TimeStep) : Void{$/;"	f
initVelocityConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	public override function initVelocityConstraints(step:B2TimeStep) : Void{$/;"	f
initVelocityConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^	public override function initVelocityConstraints(step:B2TimeStep) : Void {$/;"	f
initWidth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	public static var initWidth (default, null):Int;$/;"	v
init_list	/usr/lib/haxe/std/sys/db/Manager.hx	/^	private static var init_list : List<Manager<Dynamic>> = new List();$/;"	v
inited	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Main.hx	/^	var inited:Bool;$/;"	v
initialBufferSize	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	public var initialBufferSize : Int;$/;"	v
initialize	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^	public function initialize(cache:B2SimplexCache,$/;"	f
initialize	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2WorldManifold.hx	/^	public function initialize(manifold:B2Manifold,$/;"	f
initialize	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Transform.hx	/^	public function initialize(pos:B2Vec2, r:B2Mat22) : Void $/;"	f
initialize	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^	public function initialize($/;"	f
initialize	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^	public function initialize(step:B2TimeStep, contacts:Array <B2Contact>, contactCount:Int, allocator:Dynamic):Void$/;"	f
initialize	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PositionSolverManifold.hx	/^	public function initialize(cc:B2ContactConstraint):Void$/;"	f
initialize	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJointDef.hx	/^	public function initialize(bA:B2Body, bB:B2Body,$/;"	f
initialize	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJointDef.hx	/^	public function initialize(bA:B2Body, bB:B2Body,$/;"	f
initialize	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJointDef.hx	/^	public function initialize(bA:B2Body, bB:B2Body, anchor:B2Vec2, axis:B2Vec2) : Void$/;"	f
initialize	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJointDef.hx	/^	public function initialize(bA:B2Body, bB:B2Body, anchor:B2Vec2, axis:B2Vec2) : Void$/;"	f
initialize	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJointDef.hx	/^	public function initialize(bA:B2Body, bB:B2Body,$/;"	f
initialize	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJointDef.hx	/^	public function initialize(bA:B2Body, bB:B2Body, anchor:B2Vec2) : Void{$/;"	f
initialize	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJointDef.hx	/^	public function initialize(bA:B2Body, bB:B2Body,$/;"	f
initialize	/usr/lib/haxe/lib/lime/2,4,3/legacy/templates/haxe/lime/AssetData.hx	/^	public static function initialize():Void {$/;"	f
initialize	/usr/lib/haxe/lib/lime/2,4,3/legacy/templates/html5/haxe/lime/AssetData.hx	/^	public static function initialize():Void {$/;"	f
initialize	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	private static function initialize ():Void {$/;"	f
initialize	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	private static function initialize ():Void {$/;"	f
initialize	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^	private function initialize ():Void {$/;"	f
initialize	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AIRHelper.hx	/^	public static function initialize (defines:Map <String, String>, targetFlags:Map <String, String>, target:String, NME:String):Void {$/;"	f
initialize	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^	public static function initialize (project:HXProject):Void {$/;"	f
initialize	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AntHelper.hx	/^	public static function initialize (defines:Map <String, String>):Void {$/;"	f
initialize	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^	public static function initialize (project:HXProject):Void {$/;"	f
initialize	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CordovaHelper.hx	/^	public static function initialize (defines:Map <String, String>, targetFlags:Map <String, String>, target:String, NME:String):Void {$/;"	f
initialize	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^	private static function initialize (project:HXProject):Void {$/;"	f
initialize	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FirefoxPlatform.hx	/^	private override function initialize (command:String, project:HXProject):Void {$/;"	f
initialize	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/HTML5Platform.hx	/^	private function initialize (command:String, project:HXProject):Void {$/;"	f
initialize	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	private static function initialize ():Void {$/;"	f
initialize	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	public function initialize (caCertFilePath : String) : Void {$/;"	f
initialize	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	public static function initialize (caCertFilePath:String):Void {$/;"	f
initialize	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static function initialize (target:Dynamic):Void;$/;"	f
initialize	/usr/lib/haxe/std/sys/db/Manager.hx	/^	public static function initialize() {$/;"	f
initializeDefaultPlugins	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static function initializeDefaultPlugins ():Bool;$/;"	f
initializeElement	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMRenderer.hx	/^	public static function initializeElement (displayObject:DisplayObject, element:Element, renderSession:RenderSession):Void {$/;"	f
initializeProject	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	private function initializeProject (project:HXProject = null, targetName:String = ""):HXProject {$/;"	f
initializeRegisters	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactFactory.hx	/^	public function initializeRegisters() : Void{$/;"	f
initializeShaders	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^	private function initializeShaders ():Void {$/;"	f
initialized	/usr/lib/haxe/lib/lime/2,4,3/legacy/templates/haxe/lime/AssetData.hx	/^	private static var initialized:Bool = false;$/;"	v
initialized	/usr/lib/haxe/lib/lime/2,4,3/legacy/templates/html5/haxe/lime/AssetData.hx	/^	private static var initialized:Bool = false;$/;"	v
initialized	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	private static var initialized = false;$/;"	v
initialized	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	private static var initialized:Bool;$/;"	v
initialized	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^	private static var initialized = false;$/;"	v
initialized	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	private static var initialized = false;$/;"	v
initialized	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	private static var initialized = false;$/;"	v
inits	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^	var inits : List<TypedExpr>;$/;"	v
inner	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/DropShadowFilter.hx	/^	public var inner:Bool;$/;"	v
inner	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/GlowFilter.hx	/^	public var inner:Bool;$/;"	v
inner	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/DropShadowFilter.hx	/^	public var inner:Bool;$/;"	v
inner	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/GlowFilter.hx	/^	public var inner:Bool;$/;"	v
innerData	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^	public var innerData(get,null) : String;$/;"	v
innerHTML	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var innerHTML:String;$/;"	v
innerHTML	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^	public var innerHTML(get,null) : String;$/;"	v
innerText	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var innerText:String;$/;"	v
ino	/usr/lib/haxe/std/sys/FileStat.hx	/^	var ino : Int;$/;"	v
input	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2Shape.hx	/^		var input:B2DistanceInput = new B2DistanceInput ();$/;"	v
input	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var input:B2RayCastInput = new B2RayCastInput(point1, point2);$/;"	v
input	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Main.hx	/^		var input:Input = new Input(this);$/;"	v
input	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRaycast.hx	/^				var input:B2RayCastInput = new B2RayCastInput(p1, p2);$/;"	v
input	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^					var input = new BytesInput (bytes, 0, bytes.length);$/;"	v
input	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CPPHelper.hx	/^					var input = File.read (options, false);$/;"	v
input	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^		var input = File.read (source, true);$/;"	v
input	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^			var input = File.read (src, true);$/;"	v
input	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^			var input = File.read (targetPath, true);$/;"	v
input	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ZipHelper.hx	/^				var input = File.read (defines.get ("KEY_STORE"), true);$/;"	v
input	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ZipHelper.hx	/^			var input = File.read (fullPath, true);$/;"	v
input	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    var input:Input;$/;"	v
input	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var input = File.read (path, false);$/;"	v
input	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/ByteArrayTest.hx	/^		var input = new ByteArray();$/;"	v
input	/usr/lib/haxe/std/haxe/Http.hx	/^	var input(default,null) : haxe.io.Input;$/;"	v
input	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	var input : haxe.io.Input;$/;"	v
input	/usr/lib/haxe/std/sys/net/Socket.hx	/^	var input(default,null) : haxe.io.Input;$/;"	v
inputMode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Multitouch.hx	/^	public static var inputMode (get, set):MultitouchInputMode;$/;"	v
inputMode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Multitouch.hx	/^	public static var inputMode (get, set):MultitouchInputMode;$/;"	v
inputPath	/usr/lib/haxe/lib/lime/2,4,3/tools/SVGExport.hx	/^				var inputPath = words[1];$/;"	v
inputTexture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^			var inputTexture:FilterTexture = texture;$/;"	v
insert	/usr/lib/haxe/std/Array.hx	/^	function insert( pos : Int, x : T ) : Void;$/;"	f
insert	/usr/lib/haxe/std/sys/db/Object.hx	/^	public function insert() {$/;"	f
insertAdjacentElement	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function insertAdjacentElement (where:String, element:Dynamic \/*Element*\/):Dynamic \/*Element*\/ { return null; };$/;"	f
insertAdjacentHTML	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function insertAdjacentHTML (where:String, html:String):Void {};$/;"	f
insertAdjacentText	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function insertAdjacentText (where:String, text:String):Void {};$/;"	f
insertBefore	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function insertBefore (newChild:Dynamic \/*Node*\/, refChild:Dynamic \/*Node*\/):Dynamic \/*Node*\/ { return null; };$/;"	f
insertChild	/usr/lib/haxe/std/Xml.hx	/^	function insertChild( x : Xml, pos : Int ) : Void;$/;"	f
insertLeaf	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^	private function insertLeaf(leaf:B2DynamicTreeNode):Void$/;"	f
inserted	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var inserted = false;$/;"	v
inserted	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^		var inserted = false;$/;"	v
inside	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^					var inside:Bool = shape.testPoint(fixture.getBody().getTransform(), mousePVec);$/;"	v
insize	/usr/lib/haxe/std/haxe/ds/ListSort.hx	/^		var insize = 1, nmerges, psize = 0, qsize = 0;$/;"	v
inst	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^					var inst = getInfos(t);$/;"	v
inst	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var inst = Context.getLocalClass().get();$/;"	v
inst	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var inst = getManagerInfos(Context.typeof(em),pos);$/;"	v
inst	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var inst = if( param == null ) null else getInfos(param);$/;"	v
install	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^	public static function install (project:HXProject, targetPath:String, deviceID:String = null):String {$/;"	f
install	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/TizenHelper.hx	/^	public static function install (project:HXProject, workingDirectory:String):Void {$/;"	f
install	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/WebOSHelper.hx	/^	public static function install (project:HXProject, workingDirectory:String):Void {$/;"	f
install	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^	public override function install ():Void {$/;"	f
install	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WebOSPlatform.hx	/^	public override function install ():Void {$/;"	f
installHaxelib	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	public static function installHaxelib (haxelib:Haxelib):Void {$/;"	f
installedCommand	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var installedCommand = false;$/;"	v
instance	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^		var instance = Type.createInstance (classRef, []);$/;"	v
instance	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		var instance = null;$/;"	v
instance	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	static var instance : URLLoadersManager;$/;"	v
instance	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^		var instance = Type.createInstance (font, []);$/;"	v
instance	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^		var instance = $/;"	v
instance	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^		var instance = cast (Type.createInstance (font, []), Font);$/;"	v
instance	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/ApplicationMain.hx	/^			var instance:DocumentClass = Type.createInstance (DocumentClass, []);$/;"	v
instance	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^					var instance:DocumentClass = Type.createInstance (DocumentClass, []);$/;"	v
instance	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^				var instance = Type.createInstance (::APP_MAIN::, []);$/;"	v
instance	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^			var instance:DocumentClass = Type.createInstance (DocumentClass, []);$/;"	v
int	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var int = data.getInt32 (this.position, littleEndian);$/;"	v
int	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^		var int = data.getInt32 (this.position, littleEndian);$/;"	v
int	/usr/lib/haxe/std/Std.hx	/^	public static function int( x : Float ) : Int;$/;"	f
int	/usr/lib/haxe/std/UInt.hx	/^		var int = toInt();$/;"	v
int	/usr/lib/haxe/std/neko/Random.hx	/^	public function int( max : Int ) : Int {$/;"	f
int16Array	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/Int16ArrayTest.hx	/^		var int16Array = new Int16Array (0);$/;"	v
int32Array	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/Int32ArrayTest.hx	/^		var int32Array = new Int32Array (0);$/;"	v
inter	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^			var inter = c.interfaces.map(function(i) return me.getPath(i.t.get())).join(",");$/;"	v
interactive	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^		var interactive = __asInteractiveObject ();$/;"	v
interactive	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^				var interactive = false;$/;"	v
interface_name	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^			var interface_name = parts[parts.length - 1];$/;"	v
interfaces	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var interfaces : []];$/;"	v
interfaces	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var interfaces : Array<{ t : Ref<ClassType>, params : Array<Type> }>;$/;"	v
interfaces	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	var interfaces : List<PathParams>;$/;"	v
interfaces	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		var interfaces = new List();$/;"	v
interp	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^			var interp:Float = distance0 \/ (distance0 - distance1);$/;"	v
interpolate	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public static function interpolate (thisMat:Matrix4, toMat:Matrix4, percent:Float):Matrix4 {$/;"	f
interpolate	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector2.hx	/^	public static function interpolate (pt1:Vector2, pt2:Vector2, f:Float):Vector2 {$/;"	f
interpolate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Point.hx	/^	public static function interpolate (pt1:Point, pt2:Point, f:Float):Point {$/;"	f
interpolate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public static function interpolate (thisMat:Matrix3D, toMat:Matrix3D, percent:Float):Matrix3D {$/;"	f
interpolate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Point.hx	/^	public static function interpolate (pt1:Point, pt2:Point, f:Float):Point {$/;"	f
interpolateTo	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public function interpolateTo (toMat:Matrix4, percent:Float):Void {$/;"	f
interpolateTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public inline function interpolateTo (toMat:Matrix3D, percent:Float):Void {$/;"	f
interpolationMethod	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsGradientFill.hx	/^	public var interpolationMethod:InterpolationMethod;$/;"	v
interpolationMethod	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsGradientFill.hx	/^	public var interpolationMethod:InterpolationMethod;$/;"	v
intersection	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	public function intersection (toIntersect:Rectangle):Rectangle {$/;"	f
intersection	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	public function intersection (toIntersect:Rectangle):Rectangle {$/;"	f
intersection	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^	public function intersection (toIntersect:Rectangle):Rectangle {$/;"	f
intersects	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	public function intersects (toIntersect:Rectangle):Bool {$/;"	f
intersects	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	public function intersects (toIntersect:Rectangle):Bool {$/;"	f
intersects	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^	public function intersects (toIntersect:Rectangle):Bool {$/;"	f
interval	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Preloader.hx	/^			var interval:Null<Int> = null;$/;"	v
intf	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^		var intf : Dynamic = cc.__interfaces__;$/;"	v
intf	/usr/lib/haxe/std/neko/Boot.hx	/^		var intf : Dynamic = cc.__interfaces__;$/;"	v
intf_count	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var intf_count = src.readUInt16();$/;"	v
intoIndex	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var intoIndex:Int = -1;$/;"	v
intoIndex2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var intoIndex2:Int = (intoIndex + 1) % m_vertexCount;$/;"	v
intoLamdda	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var intoLamdda:Float = (0 - depths[intoIndex]) \/ (depths[intoIndex2] - depths[intoIndex]);$/;"	v
intoVec	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var intoVec:B2Vec2 = new B2Vec2(m_vertices[intoIndex].x * (1 - intoLamdda) + m_vertices[intoIndex2].x * intoLamdda,$/;"	v
ints	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Int16Array.hx	/^			var ints:Array<Int> = cast bufferOrArray;$/;"	v
ints	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Int16Array.hx	/^			var ints:Array<Int> = vector;$/;"	v
ints	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Int16Array.hx	/^			var ints:Int16Array = cast bufferOrArray;$/;"	v
ints	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Int32Array.hx	/^			var ints:Array<Int> = cast bufferOrArray;$/;"	v
ints	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Int32Array.hx	/^			var ints:Array<Int> = vector;$/;"	v
ints	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Int32Array.hx	/^			var ints:Int32Array = cast bufferOrArray;$/;"	v
ints	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Int8Array.hx	/^			var ints:Array<Int> = cast bufferOrArray;$/;"	v
ints	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Int8Array.hx	/^			var ints:Array<Int> = vector;$/;"	v
ints	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Int8Array.hx	/^			var ints:Int8Array = cast bufferOrArray;$/;"	v
ints	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/UInt16Array.hx	/^			var ints:Array<Int> = cast bufferOrArray;$/;"	v
ints	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/UInt16Array.hx	/^			var ints:Array<Int> = vector;$/;"	v
ints	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/UInt16Array.hx	/^			var ints:UInt16Array = cast bufferOrArray;$/;"	v
ints	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/UInt32Array.hx	/^			var ints:Array<Int> = cast bufferOrArray;$/;"	v
ints	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/UInt32Array.hx	/^			var ints:Array<Int> = vector;$/;"	v
ints	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/UInt32Array.hx	/^			var ints:UInt32Array = cast bufferOrArray;$/;"	v
ints	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/UInt8Array.hx	/^			var ints:Array<Int> = cast bufferOrArray;$/;"	v
ints	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/UInt8Array.hx	/^			var ints:Array<Int> = vector;$/;"	v
ints	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/UInt8Array.hx	/^			var ints:UInt8Array = cast bufferOrArray;$/;"	v
ints	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Int16Array.hx	/^			var ints:Array<Int> = bufferOrArray;$/;"	v
ints	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Int16Array.hx	/^			var ints:Vector<Int> = bufferOrArray.data;$/;"	v
ints	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Int32Array.hx	/^			var ints:Array<Int> = bufferOrArray;$/;"	v
ints	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Int32Array.hx	/^			var ints:Vector<Int> = bufferOrArray.data;$/;"	v
ints	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/UInt8Array.hx	/^			var ints:Array<Int> = bufferOrArray;$/;"	v
ints	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/UInt8Array.hx	/^			var ints:Vector<Int> = bufferOrArray.data;$/;"	v
intx2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var intx2:Float = k_inv3 * (0.25 * (ex1*ex1 + ex2*ex1 + ex2*ex2) + (px*ex1 + px*ex2)) + 0.5*px*px;$/;"	v
inty2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var inty2:Float = k_inv3 * (0.25 * (ey1*ey1 + ey2*ey1 + ey2*ey2) + (py*ey1 + py*ey2)) + 0.5*py*py;$/;"	v
inv3	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var inv3:Float = 1.0 \/ 3.0;$/;"	v
invDenom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var invDenom = 1 \/ (dot00 * dot11 - dot01 * dot01);$/;"	v
invI	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^		var invI:Float = b.m_invI;$/;"	v
invI1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^			var invI1:Float = bA.m_invI;$/;"	v
invI2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^			var invI2:Float = bB.m_invI;$/;"	v
invIA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var invIA:Float = bodyA.m_invI;$/;"	v
invIA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var invIA:Float = bodyA.m_invI;$/;"	v
invIA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var invIA:Float = bodyA.m_mass * bodyA.m_invI;$/;"	v
invIB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var invIB:Float = bodyB.m_invI;$/;"	v
invIB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var invIB:Float = bodyB.m_invI;$/;"	v
invIB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var invIB:Float = bodyB.m_mass * bodyB.m_invI;$/;"	v
invLength	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec2.hx	/^		var invLength:Float = 1.0 \/ length;$/;"	v
invMass	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^		var invMass:Float = bA.m_invMass + bA.m_invI * cr1u * cr1u + bB.m_invMass + bB.m_invI * cr2u * cr2u;$/;"	v
invMass	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^		var invMass:Float = b.m_invMass;$/;"	v
invMass1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^			var invMass1:Float = bA.m_invMass;$/;"	v
invMass2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^			var invMass2:Float = bB.m_invMass;$/;"	v
invMassA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var invMassA:Float = bodyA.m_invMass;$/;"	v
invMassA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var invMassA:Float = bodyA.m_invMass;$/;"	v
invMassA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var invMassA:Float = bodyA.m_mass * bodyA.m_invMass;$/;"	v
invMassB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var invMassB:Float = bodyB.m_invMass;$/;"	v
invMassB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var invMassB:Float = bodyB.m_invMass;$/;"	v
invMassB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var invMassB:Float = bodyB.m_mass * bodyB.m_invMass;$/;"	v
invQ	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var invQ:B2Vec2 = new B2Vec2 ();$/;"	v
invQ	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^			var invQ:B2Vec2 = new B2Vec2();$/;"	v
invSqr	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2GravityController.hx	/^	public var invSqr:Bool;$/;"	v
inv_d	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^		var inv_d:Float;$/;"	v
inv_d12	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^		var inv_d12:Float = 1.0 \/ (d12_1 + d12_2);$/;"	v
inv_d12	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^	var inv_d12:Float = 1.0 \/ (d12_1 + d12_2);$/;"	v
inv_d123	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^	var inv_d123:Float = 1.0 \/ (d123_1 + d123_2 + d123_3);$/;"	v
inv_d13	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^		var inv_d13:Float = 1.0 \/ (d13_1 + d13_2);$/;"	v
inv_d23	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^		var inv_d23:Float = 1.0 \/ (d23_1 + d23_2);$/;"	v
inv_dt	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2TimeStep.hx	/^	public var inv_dt:Float = 0;		\/\/ inverse time step (0 if dt == 0).$/;"	v
invalid	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/VectorTest.hx	/^			var invalid = vector[3];$/;"	v
invalidChar	/usr/lib/haxe/std/haxe/format/JsonParser.hx	/^	function invalidChar() {$/;"	f
invalidDataIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ArrayBufferView.hx	/^	private static var invalidDataIndex = "Invalid data index";$/;"	v
invalidNumber	/usr/lib/haxe/std/haxe/format/JsonParser.hx	/^	function invalidNumber( start : Int ) {$/;"	f
invalidate	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLObject.hx	/^    public function invalidate() : Void {$/;"	f
invalidate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public function invalidate ():Void {$/;"	f
invalidate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLObject.hx	/^	public function invalidate ():Void {$/;"	f
invalidate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function invalidate ():Void {$/;"	f
invalidated	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLObject.hx	/^    public var invalidated (get, null) : Bool;$/;"	v
invalidated	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLObject.hx	/^	public var invalidated (get, null):Bool;$/;"	v
inversePendingMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^	private static var inversePendingMatrix:Matrix;$/;"	v
inversePendingMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^	private static var inversePendingMatrix:Matrix;$/;"	v
invert	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public function invert ():Matrix3 {$/;"	f
invert	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public function invert ():Bool {$/;"	f
invert	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^	public function invert ():Matrix {$/;"	f
invert	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^	public function invert ():Matrix {$/;"	f
invert	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public inline function invert ():Bool {$/;"	f
invertable	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var invertable = Math.abs (d) > 0.00000000001;$/;"	v
invertable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var invertable = Math.abs (d) > 0.00000000001;$/;"	v
inverted	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var inverted = matrix3D.invert(); $/;"	v
ioErrorEvent	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/IOErrorEventTest.hx	/^		var ioErrorEvent = new IOErrorEvent (IOErrorEvent.IO_ERROR);$/;"	v
ip	/usr/lib/haxe/std/sys/net/Host.hx	/^	var ip(default,null) : Int;$/;"	v
ipad	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^	inline function ipad ():Void {$/;"	f
iphoneVersion	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^		var iphoneVersion = project.environment.get ("IPHONE_VER");$/;"	v
is	/usr/lib/haxe/std/Std.hx	/^	public static function is( v : Dynamic, t : Dynamic ) : Bool;$/;"	f
is this possible?	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^			\/\/ TODO is this possible?$/;"	i
is16bit	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^					var is16bit = switch (hdr.bitsPerSample) {$/;"	v
is64	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^	private var is64:Bool;$/;"	v
is64	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/MacPlatform.hx	/^	private var is64:Bool;$/;"	v
isAbsolute	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^	public static function isAbsolute (path:String):Bool {$/;"	f
isAccessible	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static function isAccessible ():Bool {$/;"	f
isActive	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function isActive():Bool{$/;"	f
isActive	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	public function isActive():Bool {$/;"	f
isAlpha	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^		var isAlpha = ~\/[A-Z0-9]\/i;$/;"	v
isAvailable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInput.hx	/^	public static var isAvailable = true;$/;"	v
isAwake	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function isAwake():Bool {$/;"	f
isB	/usr/lib/haxe/std/DateTools.hx	/^		var isB = ((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0);$/;"	v
isBinary	/usr/lib/haxe/std/sys/db/Manager.hx	/^	inline function isBinary( t : RecordInfos.RecordType ) {$/;"	f
isBlank	/usr/lib/haxe/std/haxe/xml/Check.hx	/^	static function isBlank( x : Xml ) {$/;"	f
isBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function isBuffer (buffer:Int):Bool {$/;"	f
isBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function isBuffer (buffer:Int):Bool {$/;"	f
isBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function isBuffer (buffer:GLBuffer):Bool;$/;"	f
isBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function isBuffer (buffer:GLBuffer):Bool {$/;"	f
isBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function isBuffer (buffer:GLBuffer):Bool {$/;"	f
isBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function isBuffer(buffer:GLBuffer):Bool $/;"	f
isBuffer	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function isBuffer(buffer:GLBuffer):Bool;$/;"	f
isBuffering	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^	public var isBuffering (get, null):Bool;$/;"	v
isBuffering	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public var isBuffering (default, null):Bool;$/;"	v
isBullet	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function isBullet() : Bool{$/;"	f
isCCW	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^	private static inline function isCCW (x1:Float, y1:Float, x2:Float, y2:Float, x3:Float, y3:Float) {$/;"	f
isCCW	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^	private static inline function isCCW (x1:Float, y1:Float, x2:Float, y2:Float, x3:Float, y3:Float) {$/;"	f
isCCW	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	private static inline function isCCW(x1:Float, y1:Float, x2:Float, y2:Float, x3:Float, y3:Float) {$/;"	f
isClass	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^	static inline function isClass(o:Dynamic) : Bool {$/;"	f
isColor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^						var isColor = switch(__fill) { case Color(_, _): true; case _: false; };$/;"	v
isContentEditable	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var isContentEditable (default, null):Bool;$/;"	v
isContextLost	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function isContextLost ():Bool;$/;"	f
isContextLost	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function isContextLost ():Bool {$/;"	f
isContextLost	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function isContextLost ():Bool {$/;"	f
isContinuous	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	public function isContinuous():Bool$/;"	f
isDeadlock	/usr/lib/haxe/std/sys/db/Transaction.hx	/^	public static function isDeadlock(e : Dynamic) {$/;"	f
isDebugger	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var isDebugger (default, null) = #if debug true #else false #end;$/;"	v
isDebugger	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var isDebugger (default, null) = #if debug true #else false #end;$/;"	v
isDefaultNamespace	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function isDefaultNamespace (?namespaceURI:String):Bool { return false; };$/;"	f
isDefaultPrevented	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public function isDefaultPrevented ():Bool {$/;"	f
isDefaultPrevented	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public function isDefaultPrevented ():Bool {$/;"	f
isDirectory	/usr/lib/haxe/std/sys/FileSystem.hx	/^	static function isDirectory( path : String ) : Bool;$/;"	f
isEmbeddedInAcrobat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var isEmbeddedInAcrobat (default, null) = false;$/;"	v
isEmbeddedInAcrobat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var isEmbeddedInAcrobat (default, null) = false;$/;"	v
isEmpty	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	public function isEmpty ():Bool {$/;"	f
isEmpty	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	public function isEmpty ():Bool {$/;"	f
isEmpty	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^	public function isEmpty ():Bool {$/;"	f
isEmpty	/usr/lib/haxe/std/List.hx	/^	public function isEmpty() : Bool {$/;"	f
isEmpty	/usr/lib/haxe/std/haxe/ds/GenericStack.hx	/^	public inline function isEmpty() : Bool {$/;"	f
isEnabled	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	public function isEnabled():Bool {$/;"	f
isEnabled	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function isEnabled (capability:Int):Bool {$/;"	f
isEnabled	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function isEnabled (capability:Int):Bool {$/;"	f
isEnabled	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function isEnabled (cap:Int):Bool;$/;"	f
isEnabled	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function isEnabled (cap:Int):Bool {$/;"	f
isEnabled	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function isEnabled (cap:Int):Bool {$/;"	f
isEnabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function isEnabled(cap:Int):Bool $/;"	f
isEnabled	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function isEnabled(cap:Int):Bool;$/;"	f
isEnum	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^	static inline function isEnum(e:Dynamic) : Bool {$/;"	f
isEnumValue	/usr/lib/haxe/std/Reflect.hx	/^	public static function isEnumValue( v : Dynamic ) : Bool;$/;"	f
isEqualNode	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function isEqualNode (other:Dynamic \/*Node*\/):Bool { return false; };$/;"	f
isException	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^		var isException = false;$/;"	v
isExtensionPresent	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function isExtensionPresent (extname:String):Bool {$/;"	f
isExtensionPresent	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function isExtensionPresent (extname:String):Bool {$/;"	f
isExtern	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var isExtern : Bool;$/;"	v
isExtern	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	var isExtern : Bool;$/;"	v
isFinal	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var isFinal : false;$/;"	v
isFinite	/usr/lib/haxe/std/Math.hx	/^	static function isFinite( f : Float ) : Bool;$/;"	f
isFixedRotation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function isFixedRotation():Bool$/;"	f
isFormatExpr	/usr/lib/haxe/std/haxe/macro/MacroStringTools.hx	/^	static public function isFormatExpr(e:ExprOf<String>) {$/;"	f
isFramebuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function isFramebuffer (framebuffer:GLFramebuffer):Bool;$/;"	f
isFramebuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function isFramebuffer (framebuffer:GLFramebuffer):Bool {$/;"	f
isFramebuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function isFramebuffer (framebuffer:GLFramebuffer):Bool {$/;"	f
isFramebuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function isFramebuffer(framebuffer:GLFramebuffer):Bool $/;"	f
isFramebuffer	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function isFramebuffer(framebuffer:GLFramebuffer):Bool;$/;"	f
isFunction	/usr/lib/haxe/std/Reflect.hx	/^	public static function isFunction( f : Dynamic ) : Bool;$/;"	f
isId	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var isId = switch( fi.t ) {$/;"	v
isInterface	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var isInterface : false;$/;"	v
isInterface	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var isInterface : Bool;$/;"	v
isInterface	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	var isInterface : Bool;$/;"	v
isInvalid	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLObject.hx	/^    public function isInvalid() : Bool {$/;"	f
isInvalid	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLObject.hx	/^	public function isInvalid ():Bool {$/;"	f
isJavaObject	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private function isJavaObject(inType)$/;"	f
isKeyDown	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		static public function isKeyDown(k:Int):Bool{$/;"	f
isKeyInBuffer	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		public function isKeyInBuffer(k:Int, i:Int, t:Int):Bool{$/;"	f
isKeyPressed	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		static public function isKeyPressed(k:Int):Bool{$/;"	f
isKeyReleased	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		static public function isKeyReleased(k:Int):Bool{$/;"	f
isKeyword	/usr/lib/haxe/std/haxe/macro/JSGenApi.hx	/^	function isKeyword( ident : String ) : Bool;$/;"	f
isLeaf	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeNode.hx	/^	public function isLeaf():Bool$/;"	f
isLimitEnabled	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	public function isLimitEnabled() : Bool$/;"	f
isLimitEnabled	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	public function isLimitEnabled() : Bool$/;"	f
isLimitEnabled	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	public function isLimitEnabled() :Bool{$/;"	f
isLocal	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public function isLocal (id:String, type:String):Bool {$/;"	f
isLocal	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public static function isLocal (id:String, type:AssetType = null, useCache:Bool = true):Bool {$/;"	f
isLocal	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^	public override function isLocal (id:String, type:AssetType):Bool {$/;"	f
isLocal	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^	public override function isLocal (id:String, type:String):Bool {$/;"	f
isLocal	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public static function isLocal (id:String, type:AssetType = null, useCache:Bool = true):Bool {$/;"	f
isLocal	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function isLocal (id:String, type:AssetType):Bool {$/;"	f
isLocal	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public static function isLocal (id:String, type:AssetType = null, useCache:Bool = true):Bool {$/;"	f
isLocal	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^	public override function isLocal (id:String, type:AssetType):Bool {$/;"	f
isLocal	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^	public override function isLocal (id:String, type:String):Bool {$/;"	f
isLocked	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function isLocked():Bool$/;"	f
isLocked	/usr/lib/haxe/std/sys/db/Object.hx	/^	public function isLocked() {$/;"	f
isMainThread	/usr/lib/haxe/std/neko/vm/Ui.hx	/^	public static function isMainThread() {$/;"	f
isModNeko	/usr/lib/haxe/std/neko/Web.hx	/^	public static var isModNeko(default,null) : Bool;$/;"	v
isMotorEnabled	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	public function isMotorEnabled() : Bool$/;"	f
isMotorEnabled	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	public function isMotorEnabled() : Bool$/;"	f
isMotorEnabled	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	public function isMotorEnabled() :Bool {$/;"	f
isNaN	/usr/lib/haxe/std/Math.hx	/^	static function isNaN( f : Float ) : Bool;$/;"	f
isNeg	/usr/lib/haxe/std/haxe/Int64.hx	/^	public static inline function isNeg( a : Int64 ) : Bool {$/;"	f
isNeko	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	static var isNeko = Context.defined("neko");$/;"	v
isNewer	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^	public static function isNewer (source:String, destination:String):Bool {$/;"	f
isNull	/usr/lib/haxe/std/sys/db/RecordInfos.hx	/^	var isNull : Bool;$/;"	v
isNull	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^						var isNull = false;$/;"	v
isNull	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	var isNull : Bool;$/;"	v
isNullable	/usr/lib/haxe/std/haxe/xml/Check.hx	/^	static function isNullable( r : Rule ) {$/;"	f
isObject	/usr/lib/haxe/std/Reflect.hx	/^	public static function isObject( v : Dynamic ) : Bool;$/;"	f
isOpenGL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public var isOpenGL (get, null):Bool;$/;"	v
isOverride	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	var isOverride : Bool;$/;"	v
isPOD	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private function isPOD(inName:String)$/;"	f
isPointInPath	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function isPointInPath (x:Float, y:Float):Bool { return false; };$/;"	f
isPowerOfTwo	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public function isPowerOfTwo(x:Int):Bool$/;"	f
isPrimaryTouchPoint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/TouchEvent.hx	/^	public var isPrimaryTouchPoint:Bool;$/;"	v
isPrimaryTouchPoint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TouchEvent.hx	/^	public var isPrimaryTouchPoint:Bool;$/;"	v
isPrivate	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var isPrivate : Bool;$/;"	v
isPrivate	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	var isPrivate : Bool;$/;"	v
isProgram	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function isProgram (program:GLProgram):Bool;$/;"	f
isProgram	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function isProgram (program:GLProgram):Bool {$/;"	f
isProgram	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function isProgram (program:GLProgram):Bool {$/;"	f
isProgram	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function isProgram(program:GLProgram):Bool $/;"	f
isProgram	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function isProgram(program:GLProgram):Bool;$/;"	f
isPublic	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var isPublic : Bool;$/;"	v
isPublic	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	var isPublic : Bool;$/;"	v
isRGB	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/AbstractFont.hx	/^	private var isRGB:Bool;$/;"	v
isRaspberryPi	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^	private var isRaspberryPi:Bool;$/;"	v
isReady	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static function isReady ():Bool;$/;"	f
isRelative	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^	public static function isRelative (path:String):Bool {$/;"	f
isRemovable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	public var isRemovable:Bool = true;$/;"	v
isRemovable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/StorageVolume.hx	/^	public var isRemovable (default, null):Bool;$/;"	v
isRenderbuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function isRenderbuffer (renderbuffer:GLRenderbuffer):Bool;$/;"	f
isRenderbuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function isRenderbuffer (renderbuffer:GLRenderbuffer):Bool {$/;"	f
isRenderbuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function isRenderbuffer (renderbuffer:GLRenderbuffer):Bool {$/;"	f
isRenderbuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function isRenderbuffer(renderbuffer:GLRenderbuffer):Bool $/;"	f
isRenderbuffer	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function isRenderbuffer(renderbuffer:GLRenderbuffer):Bool;$/;"	f
isRequest	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^	public function isRequest( data : String ) {$/;"	f
isSameNode	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function isSameNode (other:Dynamic \/*Node*\/):Bool { return false; };$/;"	f
isSaucy	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var isSaucy = lsbId == "Ubuntu\\n" &&  lsbRelease == "13.10\\n" && arch == "x86_64\\n";$/;"	v
isScreenshotValid	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	private static function isScreenshotValid (path:String):Bool {$/;"	f
isSealed	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var isSealed : false;$/;"	v
isSensor	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public function isSensor():Bool$/;"	f
isSensor	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2FixtureDef.hx	/^	public var isSensor:Bool;$/;"	v
isSensor	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	public function isSensor():Bool{$/;"	f
isShader	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function isShader (shader:GLShader):Bool;$/;"	f
isShader	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function isShader (shader:GLShader):Bool {$/;"	f
isShader	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function isShader (shader:GLShader):Bool {$/;"	f
isShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function isShader(shader:GLShader):Bool $/;"	f
isShader	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function isShader(shader:GLShader):Bool;$/;"	f
isShift	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^		var isShift = event.shiftKey;$/;"	v
isSleepingAllowed	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function isSleepingAllowed():Bool$/;"	f
isSource	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function isSource (source:Int):Bool {$/;"	f
isSource	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function isSource (source:Int):Bool {$/;"	f
isSpace	/usr/lib/haxe/std/StringTools.hx	/^	public static function isSpace( s : String, pos : Int ) : Bool {$/;"	f
isStatic	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexArray.hx	/^	public var isStatic:Bool = false;$/;"	v
isStatic	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^					var isStatic = StringTools.startsWith(r,"static ");$/;"	v
isStatic	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^					var isStatic = rp[rp.length - 1] == "static";$/;"	v
isStereo	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^					var isStereo = switch (hdr.channels) {$/;"	v
isStereo	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var isStereo:Null<Bool> = null;$/;"	v
isSubmerged	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var isSubmerged:Bool = depths[i] < -B2Math.MIN_VALUE;$/;"	v
isSupported	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function isSupported (feature:String, ?version:String):Bool { return false; };$/;"	f
isSupported	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/OpenGLView.hx	/^	public static var isSupported (get_isSupported, null):Bool;$/;"	v
isSupported	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/StorageVolumeInfo.hx	/^	public static inline var isSupported = true;$/;"	v
isSupported	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/sensors/Accelerometer.hx	/^	public static var isSupported (get, null):Bool;$/;"	v
isSupported	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/OpenGLView.hx	/^	public static var isSupported (get, null):Bool;$/;"	v
isSupported	/usr/lib/haxe/lib/openfl/3,0,8/openfl/sensors/Accelerometer.hx	/^	public static var isSupported (get, null):Bool;$/;"	v
isText	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^	public static function isText (source:String):Bool {$/;"	f
isTexture	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function isTexture (texture:GLTexture):Bool;$/;"	f
isTexture	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function isTexture (texture:GLTexture):Bool {$/;"	f
isTexture	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function isTexture (texture:GLTexture):Bool {$/;"	f
isTexture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function isTexture(texture:GLTexture):Bool $/;"	f
isTexture	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function isTexture(texture:GLTexture):Bool;$/;"	f
isTora	/usr/lib/haxe/std/neko/Web.hx	/^	public static var isTora(default,null) : Bool;$/;"	v
isTouching	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	public function isTouching():Bool$/;"	f
isValid	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^	public function isValid():Bool{$/;"	f
isValid	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public function isValid(x:Float) : Bool$/;"	f
isValid	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec2.hx	/^	public function isValid():Bool$/;"	f
isValid	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLObject.hx	/^    public function isValid() : Bool {$/;"	f
isValid	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLShader.hx	/^	public override function isValid ():Bool {$/;"	f
isValid	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^				var isValid = isValidElement (childElement, "");$/;"	v
isValid	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^			var isValid = isValidElement (element, section);$/;"	v
isValid	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	public static function isValid (project:HXProject):Bool {$/;"	f
isValid	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLObject.hx	/^	public function isValid ():Bool {$/;"	f
isValid	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLShader.hx	/^	public override function isValid ():Bool {$/;"	f
isValidAudio	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	private static function isValidAudio (buffer:AudioBuffer):Bool {$/;"	f
isValidBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	private static function isValidBitmapData (bitmapData:BitmapData):Bool {$/;"	f
isValidBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	private static function isValidBitmapData (bitmapData:BitmapData):Bool {$/;"	f
isValidChar	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^	static inline function isValidChar(c) {$/;"	f
isValidDirectory	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^				var isValidDirectory:Bool = (sys.FileSystem.exists(fullPath) && sys.FileSystem.isDirectory(fullPath));$/;"	v
isValidElement	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^	private function isValidElement (element:Fast, section:String):Bool {$/;"	f
isValidImage	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	private static function isValidImage (buffer:Image):Bool {$/;"	f
isValidModule	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^				var isValidModule:Bool = !isValidDirectory && sys.FileSystem.exists(fullPath + ".hx");$/;"	v
isValidSound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	private static function isValidSound (sound:Sound):Bool {$/;"	f
isValidSound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	private static function isValidSound (sound:Sound):Bool {$/;"	f
isValidSubType	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^				var isValidSubType:Bool = !isValidModule && (moduleRootPath != "" && sys.FileSystem.exists(moduleRootPath));$/;"	v
isVar	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	public static function isVar( t : CType ) {$/;"	f
isWritable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/StorageVolume.hx	/^	public var isWritable (default, null):Bool;$/;"	v
isZero	/usr/lib/haxe/std/haxe/Int64.hx	/^	public static inline function isZero( a : Int64 ) : Bool {$/;"	f
is_bold	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	var is_bold:Bool;$/;"	v
is_bold	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	var is_bold: Bool;$/;"	v
is_fixed_width	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	var is_fixed_width:Bool;$/;"	v
is_fixed_width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	var is_fixed_width: Bool;$/;"	v
is_interface	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var is_interface = (access & ACC_INTERFACE) > 0;$/;"	v
is_italic	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	var is_italic:Bool;$/;"	v
is_italic	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	var is_italic: Bool;$/;"	v
is_obj	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var is_obj = false;$/;"	v
is_static	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^			var is_static = (access&ACC_STATIC)>0;$/;"	v
island	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var island:B2Island = m_island;$/;"	v
it	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^		var it = l2.iterator();$/;"	v
it	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^		var it = x.elements();$/;"	v
it	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^		var it = x.iterator();$/;"	v
it	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^			var it = xml.elements();$/;"	v
italic	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextFormat.hx	/^	public var italic:Null<Bool>;$/;"	v
italic	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextFormat.hx	/^	public var italic:Null<Bool>;$/;"	v
item	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^				var item;$/;"	v
item	/usr/lib/haxe/std/haxe/CallStack.hx	/^				var item;$/;"	v
itemCount	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var itemCount = Std.int (totalCount \/ numValues);$/;"	v
itemCount	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var itemCount = Std.int (totalCount \/ numValues);$/;"	v
itemCount	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var itemCount = Std.int (totalCount \/ numValues);$/;"	v
itemCount	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^		var itemCount;$/;"	v
itemDestination	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^				var itemDestination:String = destination + "\/" + file;$/;"	v
itemSource	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^				var itemSource:String = source + "\/" + file;$/;"	v
itemSource	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^				var itemSource:String = source + "\/" + file;$/;"	v
itemToString	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^	private static function itemToString( b : StringBuf, s ) {$/;"	f
itemToString	/usr/lib/haxe/std/haxe/CallStack.hx	/^	private static function itemToString( b : StringBuf, s ) {$/;"	f
items	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^		var items = [];$/;"	v
items	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^			var items = elem.name.split(':');$/;"	v
items	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^		var items = [];$/;"	v
items	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^		var items = [];$/;"	v
items	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^		var items = [];$/;"	v
items	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^		var items = [];$/;"	v
iter	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Distance.hx	/^	var iter:Int = 0;$/;"	v
iter	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^		var iter:Int = 0;$/;"	v
iter	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ObjectHelper.hx	/^				var iter:Iterator<Dynamic> = v.iterator ();$/;"	v
iter	/usr/lib/haxe/std/haxe/Utf8.hx	/^	public static function iter( s : String, chars : Int -> Void ) {$/;"	f
iter	/usr/lib/haxe/std/haxe/macro/ExprTools.hx	/^	static public function iter( e : Expr, f : Expr -> Void ) : Void {$/;"	f
iter	/usr/lib/haxe/std/haxe/macro/ExprTools.hx	/^	static public function iter( el : Array<Expr>, f : Expr -> Void):Void {$/;"	f
iterations	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/VectorTest.hx	/^		var iterations = 0;$/;"	v
iterator	/usr/lib/haxe/std/Array.hx	/^	function iterator() : Iterator<T>;$/;"	f
iterator	/usr/lib/haxe/std/List.hx	/^	public function iterator() : Iterator<T> {$/;"	f
iterator	/usr/lib/haxe/std/Map.hx	/^	public function iterator():Iterator<V>;$/;"	f
iterator	/usr/lib/haxe/std/Map.hx	/^	public inline function iterator():Iterator<V> {$/;"	f
iterator	/usr/lib/haxe/std/StdTypes.hx	/^	function iterator() : Iterator<T>;$/;"	f
iterator	/usr/lib/haxe/std/Xml.hx	/^	function iterator() : Iterator<Xml>;$/;"	f
iterator	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^	public function iterator():Iterator<V> {$/;"	f
iterator	/usr/lib/haxe/std/haxe/ds/GenericStack.hx	/^	public function iterator() : Iterator<T> {$/;"	f
iterator	/usr/lib/haxe/std/haxe/ds/HashMap.hx	/^	public inline function iterator() {$/;"	f
iterator	/usr/lib/haxe/std/haxe/ds/IntMap.hx	/^	public function iterator() : Iterator<T>;$/;"	f
iterator	/usr/lib/haxe/std/haxe/ds/ObjectMap.hx	/^	public function iterator():Iterator<V>;$/;"	f
iterator	/usr/lib/haxe/std/haxe/ds/StringMap.hx	/^	public function iterator() : Iterator<T>;$/;"	f
iterator	/usr/lib/haxe/std/haxe/ds/WeakMap.hx	/^	public function iterator():Iterator<V> {$/;"	f
iteratorLoop	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^	function iteratorLoop(node:TreeNode<K,V>, acc:Array<V>) {$/;"	f
ix	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var ix = (image.width - 1) - _ix;$/;"	v
ix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^		var ix, iy;$/;"	v
ix1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^		var ix1, iy1, ix2, iy2;$/;"	v
iy	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var iy = (image.height - 1) - _iy;$/;"	v
j	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^		var j:Int;$/;"	v
j	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var j:B2Joint = B2Joint.create(def, null);$/;"	v
j	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var j:B2Joint = m_jointList;$/;"	v
j	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var j:B2Joint;$/;"	v
j	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var j:Int;$/;"	v
j	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^		var j:Int;$/;"	v
j	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2GravityController.hx	/^		var j:B2ControllerEdge = null;$/;"	v
j	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBridge.hx	/^			var j:Int;$/;"	v
j	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^				var j = 0;$/;"	v
j	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var j = 0.0;$/;"	v
j	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^			var j = 0;$/;"	v
j	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^			var j = 7;$/;"	v
j	/usr/lib/haxe/std/haxe/ds/ArraySort.hx	/^				var j = i;$/;"	v
jEdge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^				var jEdge:B2JointEdge = b.m_jointList;$/;"	v
javaJDKURL	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var javaJDKURL = "http:\/\/www.oracle.com\/technetwork\/java\/javase\/downloads\/jdk6u37-downloads-1859587.html";$/;"	v
javaPath	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^				var javaPath = PathHelper.combine (Sys.getEnv ("JAVA_HOME"), "bin");$/;"	v
javaPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private var javaPath:String;$/;"	v
javaPaths	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public var javaPaths:Array <String>;$/;"	v
javaType	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private function javaType(inType)$/;"	f
java_name	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var java_name = "";$/;"	v
java_out	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var java_out:Output = null;$/;"	v
jd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBridge.hx	/^				var jd:B2RevoluteJointDef = new B2RevoluteJointDef();$/;"	v
jd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRagdoll.hx	/^			var jd:B2RevoluteJointDef = new B2RevoluteJointDef();$/;"	v
jd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^			var jd:B2RevoluteJointDef = new B2RevoluteJointDef();$/;"	v
jd1	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^				var jd1:B2RevoluteJointDef = new B2RevoluteJointDef();$/;"	v
jd2	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^				var jd2:B2RevoluteJointDef = new B2RevoluteJointDef();$/;"	v
jd3	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^				var jd3:B2PrismaticJointDef = new B2PrismaticJointDef();$/;"	v
jd4	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^				var jd4:B2GearJointDef = new B2GearJointDef();$/;"	v
jd5	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^				var jd5:B2GearJointDef = new B2GearJointDef();$/;"	v
jn	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var jn:B2JointEdge = m_jointList;$/;"	v
jn	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^				var jn:B2JointEdge = b.m_jointList;$/;"	v
jn	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var jn:B2JointEdge = b.m_jointList;$/;"	v
jn0	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^			var jn0:B2JointEdge = jn;$/;"	v
jni_filesystem_get_special_dir	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/File.hx	/^	private static var jni_filesystem_get_special_dir:Dynamic = null;$/;"	v
jni_filesystem_get_special_dir	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/SystemPath.hx	/^	private static var jni_filesystem_get_special_dir:Dynamic = null;$/;"	v
jobject	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^		var jobject = args.shift ();$/;"	v
join	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public function join (sep:String):String {$/;"	f
join	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public inline function join (sep:String):String {$/;"	f
join	/usr/lib/haxe/std/Array.hx	/^	function join( sep : String ) : String;$/;"	f
join	/usr/lib/haxe/std/List.hx	/^	public function join(sep : String) {$/;"	f
join	/usr/lib/haxe/std/haxe/io/Path.hx	/^	public static function join(paths:Array<String>) : String {$/;"	f
joint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^		var joint:B2Joint;$/;"	v
joint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^		var joint:B2Joint = null;$/;"	v
joint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2JointEdge.hx	/^	public var joint:B2Joint;$/;"	v
joint1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJointDef.hx	/^	public var joint1:B2Joint;$/;"	v
joint2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJointDef.hx	/^	public var joint2:B2Joint;$/;"	v
jointAngle	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^			var jointAngle:Float = bB.m_sweep.a - bA.m_sweep.a - m_referenceAngle;$/;"	v
jointOkay	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^				var jointOkay:Bool = joint.solvePositionConstraints(B2Settings.b2_contactBaumgarte);$/;"	v
jointOkay	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^				var jointOkay:Bool = m_joints[j].solvePositionConstraints(B2Settings.b2_contactBaumgarte);$/;"	v
jointTransition	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^			var jointTransition:Float = m_axis.x * dX + m_axis.y * dY;$/;"	v
jointTransition	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^			var jointTransition:Float = m_axis.x * dX + m_axis.y * dY;$/;"	v
joints	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	public var joints:JointStyle;$/;"	v
joints	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsStroke.hx	/^	public var joints:JointStyle;$/;"	v
joints	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsStroke.hx	/^	public var joints:JointStyle;$/;"	v
jointsOkay	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^			var jointsOkay:Bool = true;$/;"	v
joystickEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var joystickEvent:JoystickEvent = null;$/;"	v
joystickEvent	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/JoystickEventTest.hx	/^		var joystickEvent = new JoystickEvent (JoystickEvent.AXIS_MOVE);$/;"	v
jpg	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var jpg = bitmapData.encode ("jpg", 1);$/;"	v
js	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^package js;$/;"	p
jsConnect	/usr/lib/haxe/std/haxe/remoting/ExternalConnection.hx	/^	public static function jsConnect( name : String, ?ctx : Context ) {$/;"	f
json	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^								var json = Json.parse (File.getContent (jsonPath));$/;"	v
json	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^					var json = Json.parse (File.getContent (jsonPath));$/;"	v
json	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CompatibilityHelper.hx	/^			var json = Json.parse (File.getContent (PathHelper.getHaxelib (haxelib) + "\/haxelib.json"));$/;"	v
json	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/EmscriptenPlatform.hx	/^		var json = Json.parse (File.getContent (PathHelper.getHaxelib (new Haxelib ("hxcpp"), true) + "\/haxelib.json"));$/;"	v
json	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^		var json = Json.parse (File.getContent (PathHelper.getHaxelib (new Haxelib ("hxcpp"), true) + "\/haxelib.json"));$/;"	v
json	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^		var json = Json.parse (File.getContent (PathHelper.getHaxelib (haxelib, true) + "\/haxelib.json"));$/;"	v
jsonPath	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^						var jsonPath = PathHelper.combine (path, "haxelib.json");$/;"	v
jsonPath	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^			var jsonPath = PathHelper.combine (haxelibPath, "haxelib.json");$/;"	v
k	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^			var k:Float = m_mass * omega * omega;$/;"	v
k	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^		var k:Float = mass * omega * omega;$/;"	v
k	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^				var k:Float = invMass1 + invMass2;$/;"	v
k	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^				var k : String = null;$/;"	v
k	/usr/lib/haxe/std/Date.hx	/^				var k = s.split(" ");$/;"	v
k	/usr/lib/haxe/std/Date.hx	/^				var k = s.split("-");$/;"	v
k	/usr/lib/haxe/std/Date.hx	/^				var k = s.split(":");$/;"	v
k	/usr/lib/haxe/std/haxe/Http.hx	/^			var k = url.split("?");$/;"	v
k	/usr/lib/haxe/std/haxe/Http.hx	/^		var k = 4;$/;"	v
k	/usr/lib/haxe/std/haxe/Template.hx	/^			var k = p.pos + p.len;$/;"	v
k	/usr/lib/haxe/std/haxe/Unserializer.hx	/^ 			var k = unserialize();$/;"	v
k	/usr/lib/haxe/std/haxe/Unserializer.hx	/^ 		var k = 0;$/;"	v
k	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^		var k = nblk * 16 - 2;$/;"	v
k	/usr/lib/haxe/std/haxe/ds/GenericStack.hx	/^				var k = l;$/;"	v
k	/usr/lib/haxe/std/haxe/ds/GenericStack.hx	/^		var k = head;$/;"	v
k	/usr/lib/haxe/std/haxe/io/Input.hx	/^			var k = readBytes(s,p,nbytes);$/;"	v
k	/usr/lib/haxe/std/haxe/io/Input.hx	/^			var k = readBytes(s,pos,len);$/;"	v
k	/usr/lib/haxe/std/haxe/io/Input.hx	/^		var k = len;$/;"	v
k	/usr/lib/haxe/std/haxe/io/Output.hx	/^					var k = writeBytes(buf,p,len);$/;"	v
k	/usr/lib/haxe/std/haxe/io/Output.hx	/^			var k = writeBytes(s,p,l);$/;"	v
k	/usr/lib/haxe/std/haxe/io/Output.hx	/^			var k = writeBytes(s,pos,len);$/;"	v
k	/usr/lib/haxe/std/haxe/io/Output.hx	/^		var k = len;$/;"	v
k	/usr/lib/haxe/std/neko/Web.hx	/^					var k = p.split("=");$/;"	v
k	/usr/lib/haxe/std/neko/Web.hx	/^		var k = "";$/;"	v
k	/usr/lib/haxe/std/neko/net/Poll.hx	/^			var k = socket_poll_prepare(d,r,w);$/;"	v
k	/usr/lib/haxe/std/sys/db/Manager.hx	/^			var k = Reflect.field(x,table_keys[0]);$/;"	v
k	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var k = g.types.get(name);$/;"	v
k11	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var k11:Float = invMassA + invMassB + invIA * rn1A * rn1A + invIB * rn1B * rn1B;$/;"	v
k11	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^			var k11:Float  = m1 + m2 + i1 * m_s1 * m_s1 + i2 * m_s2 * m_s2;$/;"	v
k11	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^			var k11:Float  = m1 + m2 + i1 * m_s1 * m_s1 + i2 * m_s2 * m_s2;$/;"	v
k12	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var k12:Float = invMassA + invMassB + invIA * rn1A * rn2A + invIB * rn1B * rn2B;$/;"	v
k12	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^			var k12:Float = i1 * m_s1 + i2 * m_s2;$/;"	v
k22	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var k22:Float = invMassA + invMassB + invIA * rn2A * rn2A + invIB * rn2B * rn2B;$/;"	v
k22	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^			var k22:Float = i1 + i2; $/;"	v
kEqualized	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var kEqualized:Float = bodyA.m_mass * bodyA.m_invMass + bodyB.m_mass * bodyB.m_invMass;$/;"	v
kNormal	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var kNormal:Float = bodyA.m_invMass + bodyB.m_invMass + bodyA.m_invI * rnA + bodyB.m_invI * rnB;$/;"	v
kTangent	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var kTangent:Float = bodyA.m_invMass + bodyB.m_invMass + bodyA.m_invI * rtA + bodyB.m_invI * rtB;$/;"	v
k_absoluteTol	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var k_absoluteTol:Float = 0.001;$/;"	v
k_allowedStretch	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^			var k_allowedStretch:Float = 10.0 * B2Settings.b2_linearSlop;$/;"	v
k_allowedStretch	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^		var k_allowedStretch:Float = 10.0 * B2Settings.b2_linearSlop;$/;"	v
k_beta	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^				var k_beta:Float = 0.5;$/;"	v
k_errorTol	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var k_errorTol:Float  = 0.001;$/;"	v
k_increment	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^					var k_increment:Number = 2.0 * Math.PI \/ k_segments;$/;"	v
k_inv3	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var k_inv3:Float = 1.0 \/ 3.0;$/;"	v
k_maxConditionNumber	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var k_maxConditionNumber:Float = 100.0;$/;"	v
k_maxIterations	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^		var k_maxIterations:Int = 1000; \/\/TODO_ERIN b2Settings$/;"	v
k_maxIters	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Distance.hx	/^	var k_maxIters:Int = 20;$/;"	v
k_relativeTol	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var k_relativeTol:Float = 0.98;$/;"	v
k_segments	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^					var k_segments:Number = 16.0;$/;"	v
k_slop	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^		var k_slop: Float = 100.0 * B2Math.MIN_VALUE;$/;"	v
k_toiBaumgarte	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^		var k_toiBaumgarte:Float = 0.75;$/;"	v
kappa	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^						var kappa = .5522848,$/;"	v
kappa	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var kappa = .5522848,$/;"	v
kappa	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^						var kappa = .5522848,$/;"	v
kappa	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^					var kappa = .5522848,$/;"	v
keep	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^	public static function keep(?path : String, ?paths : Array<String>, ?recursive:Bool = true)$/;"	f
keepModule	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^	private static function keepModule( path : String )$/;"	f
keepSubType	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^	private static function keepSubType( path : String )$/;"	f
kerning	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	var kerning:Array<NativeKerningData>;$/;"	v
kerning	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^			var kerning = new Array <FontKerningData> ();$/;"	v
kerning	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	var kerning: Array<NativeKerningData>;$/;"	v
kerning	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextFormat.hx	/^	public var kerning:Null<Bool>;$/;"	v
kerning	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextFormat.hx	/^	public var kerning:Null<Bool>;$/;"	v
key	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ContactID.hx	/^	public var key (get, set):Int;$/;"	v
key	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthConsumer.hx	/^	public var key:String;$/;"	v
key	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthRequest.hx	/^		var key = consumer.secret.urlEncode() + "&";$/;"	v
key	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var key = StringTools.trim (CLIHelper.param ("OAuth Key"));$/;"	v
key	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var key = defines.get ("FIREFOX_MARKETPLACE" + (devServer ? "_DEV_" : "_") + "KEY");$/;"	v
key	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^	public var key : K;$/;"	v
key	/usr/lib/haxe/std/sys/db/RecordInfos.hx	/^	var key : Array<String>;$/;"	v
key	/usr/lib/haxe/std/sys/db/RecordInfos.hx	/^	var key : String;$/;"	v
key	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var key = inf.key.copy();$/;"	v
keyArr	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		private var keyArr:Array<UInt> = new Array();$/;"	v
keyBuffer	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		private var keyBuffer:Array<Array<Int>> = new Array();$/;"	v
keyCode	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashApplication.hx	/^			var keyCode = convertKeyCode (event.keyCode);$/;"	v
keyCode	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Application.hx	/^			var keyCode = cast convertKeyCode (event.keyCode != null ? event.keyCode : event.which);$/;"	v
keyCode	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public var keyCode:Int;$/;"	v
keyCode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/KeyboardEvent.hx	/^	public var keyCode:Int;$/;"	v
keyCode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^			var keyCode = Keyboard.convertKeyCode (keyCode);$/;"	v
keyCode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/FocusEvent.hx	/^	public var keyCode:Int;$/;"	v
keyCode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/KeyboardEvent.hx	/^	public var keyCode:Int;$/;"	v
keyCode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^		var keyCode = event.which;$/;"	v
keyEventInfo	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private var keyEventInfo = new KeyEventInfo ();$/;"	v
keyLocation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/KeyboardEvent.hx	/^	public var keyLocation:Int;$/;"	v
keyLocation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/KeyboardEvent.hx	/^	public var keyLocation:KeyLocation;$/;"	v
keyPress	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		public function keyPress(e:KeyboardEvent):Void{$/;"	f
keyRelease	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		public function keyRelease(e:KeyboardEvent):Void{$/;"	f
keyState	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		static private var keyState:Array<Float> = new Array() ;$/;"	v
keyStorePath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CordovaHelper.hx	/^						var keyStorePath = PathHelper.tryFullPath (defines.get ("KEY_STORE"));$/;"	v
keyboardEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^			var keyboardEvent = new KeyboardEvent (type, true, true, event.code, event.value, ((flags & efLocationRight) == 0) ? 1 : 0, (flags & efCtrlDown) != 0, (flags & efAltDown) != 0, (flags & efShiftDown) != 0);$/;"	v
keyboardEvent	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/KeyboardEventTest.hx	/^		var keyboardEvent = new KeyboardEvent (KeyboardEvent.KEY_DOWN);$/;"	v
keys	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^			var keys = audio.keys ();$/;"	v
keys	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^			var keys = font.keys ();$/;"	v
keys	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^			var keys = image.keys ();$/;"	v
keys	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthRequest.hx	/^				var keys = parameters.keys();$/;"	v
keys	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ObjectHelper.hx	/^				var keys:Iterator<Int> = v.keys ();$/;"	v
keys	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ObjectHelper.hx	/^				var keys:Iterator<String> = v.keys ();$/;"	v
keys	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^			var keys = bitmapData.keys ();$/;"	v
keys	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^			var keys = font.keys ();$/;"	v
keys	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^			var keys = sound.keys ();$/;"	v
keys	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^			var keys = bitmapData.keys ();$/;"	v
keys	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^			var keys = font.keys ();$/;"	v
keys	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^			var keys = sound.keys ();$/;"	v
keys	/usr/lib/haxe/std/Map.hx	/^	public function keys():Iterator<K>;$/;"	f
keys	/usr/lib/haxe/std/Map.hx	/^	public inline function keys():Iterator<K> {$/;"	f
keys	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^	public function keys():Iterator<K> {$/;"	f
keys	/usr/lib/haxe/std/haxe/ds/HashMap.hx	/^	public inline function keys() {$/;"	f
keys	/usr/lib/haxe/std/haxe/ds/IntMap.hx	/^	public function keys() : Iterator<Int>;$/;"	f
keys	/usr/lib/haxe/std/haxe/ds/ObjectMap.hx	/^	public function keys():Iterator<K>;$/;"	f
keys	/usr/lib/haxe/std/haxe/ds/StringMap.hx	/^	public function keys() : Iterator<String>;$/;"	f
keys	/usr/lib/haxe/std/haxe/ds/WeakMap.hx	/^	public function keys():Iterator<K> {$/;"	f
keysLoop	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^	function keysLoop(node:TreeNode<K,V>, acc:Array<K>) {$/;"	f
keystore	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/TizenHelper.hx	/^		var keystore = null;$/;"	v
keystorePassword	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^					var keystorePassword:String = null;$/;"	v
keystorePath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^					var keystorePath:String = null;$/;"	v
kill	/usr/lib/haxe/std/sys/io/Process.hx	/^	function kill() : Void;$/;"	f
kind	/usr/lib/haxe/std/haxe/macro/Expr.hx	/^	var kind : FieldType;$/;"	v
kind	/usr/lib/haxe/std/haxe/macro/Expr.hx	/^	var kind : TypeDefKind;$/;"	v
kind	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var kind : ClassKind;$/;"	v
kind	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var kind : FieldKind;$/;"	v
knockout	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/DropShadowFilter.hx	/^	public var knockout:Bool;$/;"	v
knockout	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/GlowFilter.hx	/^	public var knockout:Bool;$/;"	v
knockout	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/DropShadowFilter.hx	/^	public var knockout:Bool;$/;"	v
knockout	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/GlowFilter.hx	/^	public var knockout:Bool;$/;"	v
kt	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^	function kt( t : Int ) : Int {$/;"	f
l	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^		var l:Float = -(B2Math.dot(normal, p) - offset);$/;"	v
l	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^			var l = untyped __dollar__asize(s);$/;"	v
l	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^					var l = o.length;$/;"	v
l	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var l : UInt = array.length - index;$/;"	v
l	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var l : UInt = this.length;$/;"	v
l	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^		var l = length;$/;"	v
l	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var l = new List();$/;"	v
l	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var l = ind.length;$/;"	v
l	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var l = ind.length;$/;"	v
l	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^		var l = __currentPath.points.length;$/;"	v
l	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var l = points.length;$/;"	v
l	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var l : UInt = rawData.length;$/;"	v
l	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var l : UInt = vector.length - index;$/;"	v
l	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^		var l = length;$/;"	v
l	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^				var l : Int;$/;"	v
l	/usr/lib/haxe/std/Lambda.hx	/^		var l = new List();$/;"	v
l	/usr/lib/haxe/std/Lambda.hx	/^		var l = new List<A>();$/;"	v
l	/usr/lib/haxe/std/Lambda.hx	/^		var l = new List<B>();$/;"	v
l	/usr/lib/haxe/std/List.hx	/^		var l = h;$/;"	v
l	/usr/lib/haxe/std/StringTools.hx	/^		var l = s.length;$/;"	v
l	/usr/lib/haxe/std/haxe/CallStack.hx	/^			var l = untyped __dollar__asize(s);$/;"	v
l	/usr/lib/haxe/std/haxe/Serializer.hx	/^				var l : Int = untyped __dollar__asize(v.args);$/;"	v
l	/usr/lib/haxe/std/haxe/Serializer.hx	/^				var l = #if (neko || flash9 || php || cs || java) v.length #elseif cpp v.__length() #else v[untyped "length"] #end;$/;"	v
l	/usr/lib/haxe/std/haxe/Serializer.hx	/^			var l : Int = untyped __call__("count", v.params);$/;"	v
l	/usr/lib/haxe/std/haxe/Serializer.hx	/^			var l = v[untyped "length"];$/;"	v
l	/usr/lib/haxe/std/haxe/Template.hx	/^		var l = new List();$/;"	v
l	/usr/lib/haxe/std/haxe/Template.hx	/^		var l = new List<ExprToken>();$/;"	v
l	/usr/lib/haxe/std/haxe/Template.hx	/^	var l : Array<String>;$/;"	v
l	/usr/lib/haxe/std/haxe/Unserializer.hx	/^			var l = new List();$/;"	v
l	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^		var l = b.length * 8;$/;"	v
l	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^		var l = str.length * 8;$/;"	v
l	/usr/lib/haxe/std/haxe/ds/GenericStack.hx	/^		var l = head;$/;"	v
l	/usr/lib/haxe/std/haxe/io/Output.hx	/^		var l = s.length;$/;"	v
l	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^				var l = StringTools.trim(f.readLine());$/;"	v
l	/usr/lib/haxe/std/haxe/macro/Context.hx	/^		var l : String = load("local_method", 0)();$/;"	v
l	/usr/lib/haxe/std/haxe/macro/Context.hx	/^		var l : Type = load("expected_type", 0)();$/;"	v
l	/usr/lib/haxe/std/haxe/macro/Context.hx	/^		var l : Type = load("local_type", 0)();$/;"	v
l	/usr/lib/haxe/std/haxe/remoting/LocalConnection.hx	/^			var l = new flash.LocalConnection();$/;"	v
l	/usr/lib/haxe/std/haxe/remoting/LocalConnection.hx	/^			var l = new flash.net.LocalConnection();$/;"	v
l	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		var l = new List();$/;"	v
l	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^		var l = new List();$/;"	v
l	/usr/lib/haxe/std/haxe/zip/Huffman.hx	/^			var l = lengths[i + pos];$/;"	v
l	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var l = new List();$/;"	v
l	/usr/lib/haxe/std/neko/Boot.hx	/^		var l = untyped __dollar__asize(e.args);$/;"	v
l	/usr/lib/haxe/std/neko/Lib.hx	/^			var l = __dollar__asize(f);$/;"	v
l	/usr/lib/haxe/std/neko/Web.hx	/^				var l = null;$/;"	v
l	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^		var l = new neko.vm.Lock();$/;"	v
l	/usr/lib/haxe/std/neko/vm/Loader.hx	/^		var l = {$/;"	v
l	/usr/lib/haxe/std/neko/vm/Loader.hx	/^	public var l : LoaderHandle;$/;"	v
l	/usr/lib/haxe/std/neko/vm/Lock.hx	/^	var l : Dynamic;$/;"	v
l	/usr/lib/haxe/std/neko/vm/Ui.hx	/^		var l = new Lock();$/;"	v
l	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var l = init_list;$/;"	v
l	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var l = unsafeExecute(sql).results();$/;"	v
l0	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^					var l0 = limits[0], l1 = limits[1];$/;"	v
l2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^		var l2:Float = l * l;$/;"	v
l2	/usr/lib/haxe/std/List.hx	/^		var l2 = new List();$/;"	v
l2	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var l2 = new List<T>();$/;"	v
l_oProj	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Utils3D.hx	/^		var l_oProj = new Vector3D ();$/;"	v
label	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^		var label = (id > 0 ? Std.string (id + 1) : "");$/;"	v
lambda	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^		var lambda:Float;$/;"	v
lambda	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRaycast.hx	/^			var lambda:Float = 1;$/;"	v
landscape	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^			var landscape = img.width >= MIN_WH_SCREENSHOT.height && img.height >= MIN_WH_SCREENSHOT.width;$/;"	v
lang	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var lang:String;$/;"	v
language	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextLayout.hx	/^	public var language (get, set):String;$/;"	v
language	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^			var language = LangCode.LCNone;$/;"	v
language	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var language (get, null):String;$/;"	v
language	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var language (get, null):String;$/;"	v
laser	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRaycast.hx	/^		public var laser:B2Body;$/;"	v
last	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^				var last:GLBucketData = null;$/;"	v
last	/usr/lib/haxe/std/List.hx	/^	public function last() : Null<T> {$/;"	f
last	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^				var last = len - 1;$/;"	v
last	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^		var last = len - 1;$/;"	v
last	/usr/lib/haxe/std/haxe/io/Input.hx	/^		var last : Int;$/;"	v
lastArgument	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^			var lastArgument = "";$/;"	v
lastArgument	/usr/lib/haxe/lib/lime/2,4,3/tools/RunScript.hx	/^			var lastArgument = new Path (args[args.length - 1]).toString ();$/;"	v
lastArgument	/usr/lib/haxe/lib/lime/2,4,3/tools/SVGExport.hx	/^			var lastArgument = "";$/;"	v
lastBucketMode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	private static var lastBucketMode:BucketMode;$/;"	v
lastChild	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var lastChild (default, null):Dynamic \/*Node*\/;$/;"	v
lastElementChild	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var lastElementChild (default, null):Dynamic \/*Element*\/;$/;"	v
lastEnableColor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	var lastEnableColor:Bool = true;$/;"	v
lastException	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^	static var lastException:js.Error;$/;"	v
lastIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var lastIndex:Int = 0;$/;"	v
lastIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var lastIndex:Int;$/;"	v
lastIndexOf	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public function lastIndexOf (x:T, ?from:Int = 0):Int {$/;"	f
lastIndexOf	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public inline function lastIndexOf (x:T, ?from:Int = 0):Int {$/;"	f
lastIndexOf	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public inline function lastIndexOf (x:T, ?from:Int):Int {$/;"	f
lastIndexOf	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public inline function lastIndexOf (x:T, from:Int = 0x7fffffff):Int {$/;"	f
lastIndexOf	/usr/lib/haxe/std/Array.hx	/^	function lastIndexOf( x : T, ?fromIndex:Int ) : Int;$/;"	f
lastIndexOf	/usr/lib/haxe/std/String.hx	/^	function lastIndexOf( str : String, ?startIndex : Int ) : Int;$/;"	f
lastInsertId	/usr/lib/haxe/std/sys/db/Connection.hx	/^	function lastInsertId() : Int;$/;"	f
lastKey	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		static public var lastKey:Int = 0;$/;"	v
lastModified	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^	private var lastModified:Float;$/;"	v
lastModified	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^	private var lastModified:Float;$/;"	v
lastModified	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^	private var lastModified:Float;$/;"	v
lastPoint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var lastPoint = new Point (points[Std.int (points.length - 2)], points[Std.int (points.length - 1)]);$/;"	v
lastSubmerged	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var lastSubmerged:Bool = false;$/;"	v
lastTexture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	private static var lastTexture:GLTexture;$/;"	v
lastTextureRepeat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	private static var lastTextureRepeat:Bool;$/;"	v
lastTextureSmooth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	private static var lastTextureSmooth:Bool;$/;"	v
lastTime	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Application.hx	/^			var lastTime = 0;$/;"	v
lastUpdate	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Application.hx	/^	private var lastUpdate:Float;$/;"	v
lastValue	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/VectorTest.hx	/^		var lastValue = 0;$/;"	v
lastVertsBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	private static var lastVertsBuffer:GLBuffer;$/;"	v
lastVertsSize	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var lastVertsSize:Int = 0;$/;"	v
lastWasUpperCase	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^		var lastWasUpperCase = false;$/;"	v
lastX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^			var lastX = points[points.length-2];$/;"	v
lastY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^			var lastY = points[points.length-1];$/;"	v
last_char	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		var last_char:Int = textField.text.length - 1;$/;"	v
launch	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CordovaHelper.hx	/^	public static function launch (workingDirectory:String, debug:Bool):Void {$/;"	f
launch	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/HTML5Helper.hx	/^	public static function launch (project:HXProject, path:String, port:Int = 3000):Void {$/;"	f
launch	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^	public static function launch (project:HXProject, workingDirectory:String):Void {$/;"	f
launch	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/TizenHelper.hx	/^	public static function launch (project:HXProject):Void {$/;"	f
launch	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/WebOSHelper.hx	/^	public static function launch (project:HXProject):Void {$/;"	f
launcher	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^			var launcher = PathHelper.findTemplate (templatePaths, "bin\/ios-deploy");$/;"	v
launcher	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^			var launcher = PathHelper.findTemplate (templatePaths, "bin\/ios-sim");$/;"	v
layer	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/FrameHeader.hx	/^    public var layer(default, null):Layer;$/;"	v
layer	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var layer = layers[layerIndex];$/;"	v
layerIndex	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var layerIndex = (b >> 1) & 0x3;$/;"	v
layers	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    static var layers = [null, Layer.Layer3, Layer.Layer2, Layer.Layer1];$/;"	v
ld	/usr/lib/haxe/std/haxe/ds/EnumValueMap.hx	/^		var ld = a1.length - a2.length;$/;"	v
leading	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^			var leading = Math.ceil ((font.height - font.ascend + font.descend) * swf_em \/ font.em_size);$/;"	v
leading	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextFormat.hx	/^	public var leading:Null<Float>;$/;"	v
leading	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextLineMetrics.hx	/^	public var leading:Float;$/;"	v
leading	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	var leading:Float;$/;"	v
leading	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^		var leading = 0;$/;"	v
leading	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^		var leading = CairoTextField.getLineMetric (this, lineIndex, LEADING);$/;"	v
leading	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextFormat.hx	/^	public var leading:Null<Float>;$/;"	v
leading	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextLineMetrics.hx	/^	public var leading:Float;$/;"	v
left	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^		var left:Int = image.width + 1;$/;"	v
left	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	public var left (get, set):Float;$/;"	v
left	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	public var left (get, set):Float;$/;"	v
left	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^	public var left (get, set):Float;$/;"	v
left	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^	public var left : TreeNode<K,V>;$/;"	v
leftImageUniform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^	private static var leftImageUniform:GLUniformLocation;$/;"	v
leftMargin	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextFormat.hx	/^	public var leftMargin:Null<Float>;$/;"	v
leftMargin	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextFormat.hx	/^	public var leftMargin:Null<Float>;$/;"	v
leftPeak	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	public var leftPeak (get, null):Float;$/;"	v
leftPeak	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/SoundChannel.hx	/^	public var leftPeak (default, null):Float;$/;"	v
leftPos	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^			var leftPos:Int;$/;"	v
leftTexture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^	private static var leftTexture:GLTexture;$/;"	v
leftToLeft	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/SoundTransform.hx	/^	public var leftToLeft:Float;$/;"	v
leftToRight	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/SoundTransform.hx	/^	public var leftToRight:Float;$/;"	v
left_glyph	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	var left_glyph:Int;$/;"	v
left_glyph	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	var left_glyph:Int;$/;"	v
leftsideBearing	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	var leftsideBearing:Float;$/;"	v
len	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var len = Math.round (rect.width * rect.height);$/;"	v
len	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^				var len = Math.sqrt((mr[6] - mr[9]) * (mr[6] - mr[9]) + (mr[8] - mr[2]) * (mr[8] - mr[2]) + (mr[1] - mr[4]) * (mr[1] - mr[4]));$/;"	v
len	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var len = size + 1;$/;"	v
len	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^			var len = i.readUInt16();$/;"	v
len	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^					var len = src.readUInt16();$/;"	v
len	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var len = src.readInt32();$/;"	v
len	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Memory.hx	/^	private static var len:Int;$/;"	v
len	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^		var len = uvt.length;$/;"	v
len	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^		var len = uvt.length;$/;"	v
len	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Memory.hx	/^	private static var len:Int;$/;"	v
len	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var len = readUnsignedShort ();$/;"	v
len	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var len = size + 1;$/;"	v
len	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^				var len = Math.sqrt((mr[6] - mr[9]) * (mr[6] - mr[9]) + (mr[8] - mr[2]) * (mr[8] - mr[2]) + (mr[1] - mr[4]) * (mr[1] - mr[4]));$/;"	v
len	/usr/lib/haxe/std/haxe/Http.hx	/^					var len = 0;$/;"	v
len	/usr/lib/haxe/std/haxe/Http.hx	/^					var len = sock.input.readBytes(buf,0,bufsize);$/;"	v
len	/usr/lib/haxe/std/haxe/Http.hx	/^					var len = sock.input.readBytes(buf,0,if( size > bufsize ) bufsize else size);$/;"	v
len	/usr/lib/haxe/std/haxe/Unserializer.hx	/^ 			var len = readDigits();$/;"	v
len	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^		var len = base.length;$/;"	v
len	/usr/lib/haxe/std/haxe/ds/ArraySort.hx	/^		var len = to - from, half, mid;$/;"	v
len	/usr/lib/haxe/std/haxe/ds/Vector.hx	/^			var len = length;$/;"	v
len	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^				var len = v.length;$/;"	v
len	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^		var len = fields.length;$/;"	v
len	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^		var len = (length < other.length) ? length : other.length;$/;"	v
len	/usr/lib/haxe/std/haxe/io/BytesInput.hx	/^	var len : Int;$/;"	v
len	/usr/lib/haxe/std/haxe/io/Input.hx	/^				var len = readBytes(buf,0,bufsize);$/;"	v
len	/usr/lib/haxe/std/haxe/io/Output.hx	/^				var len = i.readBytes(buf,0,bufsize);$/;"	v
len	/usr/lib/haxe/std/haxe/macro/Format.hx	/^				var len = i - start - 1;$/;"	v
len	/usr/lib/haxe/std/haxe/macro/Format.hx	/^				var len = i - start;$/;"	v
len	/usr/lib/haxe/std/haxe/macro/Format.hx	/^			var len = i - start - 1;$/;"	v
len	/usr/lib/haxe/std/haxe/macro/Format.hx	/^		var len = i - start;$/;"	v
len	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^		var len = messageLength(c1,c2);$/;"	v
len	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^			var len = inflate.readBytes(buf,0,bufsize);$/;"	v
len	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	var len : Int;$/;"	v
len	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^			var len = i.readUInt16();$/;"	v
len	/usr/lib/haxe/std/neko/net/Poll.hx	/^			var len = a.length;$/;"	v
len	/usr/lib/haxe/std/neko/net/Poll.hx	/^			var len = read.length;$/;"	v
len	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^		var len = c.bufpos + bytes;$/;"	v
length	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var length:Float = Math.sqrt(uxX*uxX + uxY*uxY);$/;"	v
length	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec2.hx	/^		var length:Float = Math.sqrt(x * x + y * y);$/;"	v
length	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec2.hx	/^	public function length():Float$/;"	f
length	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^		var length:Float = Math.sqrt(dX*dX + dY*dY);$/;"	v
length	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^		var length:Float = Math.sqrt(m_u.x*m_u.x + m_u.y*m_u.y);$/;"	v
length	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJointDef.hx	/^	public var length:Float;$/;"	v
length	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Hmac.hx	/^	var length : Int;$/;"	v
length	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public var length:Int;$/;"	v
length	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Event.hx	/^			var length = listeners.length;$/;"	v
length	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^	public var length (get, set):Int;$/;"	v
length	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^					var length = Std.int (byteArray.length \/ 4);$/;"	v
length	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^					var length = header.width * header.height;$/;"	v
length	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^				var length = image.buffer.width * image.buffer.height;$/;"	v
length	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var length = Std.int (data.length \/ 4);$/;"	v
length	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var length = Std.int (sourceRect.width * sourceRect.height);$/;"	v
length	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^		var length = Std.int (rect.width * rect.height);$/;"	v
length	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector2.hx	/^	public var length (get, null):Float;$/;"	v
length	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	public var length (get, null):Float;$/;"	v
length	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^		var length = value.length;$/;"	v
length	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public var length (default, set):Int = 0;$/;"	v
length	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Float32Array.hx	/^	public var length (default, null):Int;$/;"	v
length	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Int16Array.hx	/^	public var length (default, null):Int;$/;"	v
length	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Int32Array.hx	/^	public var length (default, null):Int;$/;"	v
length	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Int8Array.hx	/^	public var length (default, null):Int;$/;"	v
length	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/UInt16Array.hx	/^	public var length (default, null):Int;$/;"	v
length	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/UInt32Array.hx	/^	public var length (default, null) : Int;$/;"	v
length	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/UInt8Array.hx	/^	public var length (default, null):Int;$/;"	v
length	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^				var length = lines.length;$/;"	v
length	/usr/lib/haxe/lib/lime/2,4,3/tools/SVGExport.hx	/^				var length = lines.length;$/;"	v
length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^		var length = end - pos;$/;"	v
length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public var length (get, set):Int;$/;"	v
length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public var length:Int;$/;"	v
length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^						var length = text.length;$/;"	v
length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^			var length = 0;$/;"	v
length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^				var length = text.length;$/;"	v
length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^						var length = text.length;$/;"	v
length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^			var length = Std.int (points.length \/ 2);$/;"	v
length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var length = Std.int (points.length \/ 2);$/;"	v
length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var length = source.length;$/;"	v
length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^		var length = stack.length;$/;"	v
length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Point.hx	/^	public var length (get, null):Float;$/;"	v
length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^	public var length (get, null):Float;$/;"	v
length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^			var length = locale.length;$/;"	v
length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Float32Array.hx	/^	public var length (default, null):Int;$/;"	v
length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Int16Array.hx	/^	public var length (default, null):Int;$/;"	v
length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Int32Array.hx	/^	public var length (default, null):Int;$/;"	v
length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/UInt8Array.hx	/^	public var length (default, null):Int;$/;"	v
length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var length = Std.int (pixels.length \/ 4);$/;"	v
length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^				var length = stack.length;$/;"	v
length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Sprite.hx	/^		var length = 0;$/;"	v
length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^		var length = stack.length;$/;"	v
length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/IndexBuffer3D.hx	/^		var length:Int = count * bytesPerIndex;$/;"	v
length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/VertexBuffer3D.hx	/^		var length:Int = count * bytesPerVertex;$/;"	v
length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/VertexBuffer3D.hx	/^		var length:Int = numVertices * data32PerVertex;$/;"	v
length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Point.hx	/^	public var length (get, null):Float;$/;"	v
length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^	public var length (get, null):Float;$/;"	v
length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public var length (default, null):Float;$/;"	v
length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var length (default, null):Int;$/;"	v
length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public var length (default, set):Int = 0;$/;"	v
length	/usr/lib/haxe/std/Array.hx	/^	var length(default,null) : Int;$/;"	v
length	/usr/lib/haxe/std/List.hx	/^	public var length(default,null) : Int;$/;"	v
length	/usr/lib/haxe/std/String.hx	/^	var length(default,null) : Int;$/;"	v
length	/usr/lib/haxe/std/StringBuf.hx	/^	public var length(get,never) : Int;$/;"	v
length	/usr/lib/haxe/std/haxe/Unserializer.hx	/^ 	var length : Int;$/;"	v
length	/usr/lib/haxe/std/haxe/Utf8.hx	/^	public static inline function length( s : String ) : Int {$/;"	f
length	/usr/lib/haxe/std/haxe/ds/Vector.hx	/^	public var length(get, never):Int;$/;"	v
length	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^	public var length(default,null) : Int;$/;"	v
length	/usr/lib/haxe/std/haxe/io/BytesBuffer.hx	/^	public var length(get,never) : Int;$/;"	v
length	/usr/lib/haxe/std/haxe/io/BytesInput.hx	/^	public var length(get,never) : Int;$/;"	v
length	/usr/lib/haxe/std/haxe/io/BytesOutput.hx	/^	public var length(get,never) : Int;$/;"	v
length	/usr/lib/haxe/std/neko/NativeArray.hx	/^	public static inline function length( a : NativeArray<Dynamic> ) : Int {$/;"	f
length	/usr/lib/haxe/std/neko/NativeString.hx	/^	public static inline function length( s : NativeString ) : Int {$/;"	f
length	/usr/lib/haxe/std/sys/db/ResultSet.hx	/^	var length(get,null) : Int;$/;"	v
length1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var length1:Float = m_u1.length();$/;"	v
length1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var length1:Float;$/;"	v
length2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var length2:Float = m_u2.length();$/;"	v
length2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var length2:Float;$/;"	v
lengthA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJointDef.hx	/^	public var lengthA:Float;$/;"	v
lengthB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJointDef.hx	/^	public var lengthB:Float;$/;"	v
lengthSquared	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec2.hx	/^	public function lengthSquared():Float$/;"	f
lengthSquared	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	public var lengthSquared (get, null):Float;$/;"	v
lengthSquared	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^	public var lengthSquared (get, null):Float;$/;"	v
lengths	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^				var lengths = new Array();$/;"	v
lengths	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	var lengths : Array<Int>;$/;"	v
letterSpacing	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextFormat.hx	/^	public var letterSpacing:Null<Float>;$/;"	v
letterSpacing	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextFormat.hx	/^	public var letterSpacing:Null<Float>;$/;"	v
level	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^			var level = count;$/;"	v
level	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^		var level = count;$/;"	v
lib	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var lib = PathHelper.getHaxelib (haxelib, false, true);$/;"	v
lib	/usr/lib/haxe/std/neko/Web.hx	/^			var lib = "mod_neko"+if( ver == untyped "1".__s ) "" else ver;$/;"	v
libExt	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^			var libExt = [ ".iphoneos.a", ".iphoneos-v7.a", ".iphoneos-v7s.a", ".iphoneos-64.a", ".iphonesim.a", ".iphonesim-64.a" ][archID];$/;"	v
libPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/MacPlatform.hx	/^			var libPath = PathHelper.combine (PathHelper.getHaxelib (new Haxelib ("lime")), "templates\/java\/lib\/");$/;"	v
libraries	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public static var libraries (default, null) = new Map <String, AssetLibrary> ();$/;"	v
libraries	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public var libraries:Array <Library>;$/;"	v
libraries	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public static var libraries (default, null) = new Map <String, AssetLibrary> ();$/;"	v
library	/usr/lib/haxe/lib/lime/2,4,3/legacy/templates/haxe/lime/AssetData.hx	/^	public static var library = new #if haxe3 Map <String, #else Hash <#end LibraryType> ();$/;"	v
library	/usr/lib/haxe/lib/lime/2,4,3/legacy/templates/html5/haxe/lime/AssetData.hx	/^	public static var library = new #if haxe3 Map <String, #else Hash <#end LibraryType> ();$/;"	v
library	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^			var library = Type.createInstance (Type.resolveClass (info.type), info.args);$/;"	v
library	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^		var library = getLibrary (libraryName);$/;"	v
library	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^		var library = libraries.get (name);$/;"	v
library	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^		var library = getLibrary (libraryName);$/;"	v
library	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^		var library:AssetLibrary = cast getLibrary (libraryName);$/;"	v
library	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^			var library = Type.createInstance (Type.resolveClass (info.type), info.args);$/;"	v
library	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^		var library = getLibrary (libraryName);$/;"	v
library	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^		var library = libraries.get (name);$/;"	v
libraryHandlers	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public var libraryHandlers:Map <String, String>;$/;"	v
libraryItems	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^			var libraryItems = library.list (cast type);$/;"	v
libraryItems	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^			var libraryItems = library.list (type);$/;"	v
libraryName	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^		var libraryName = id.substring (0, id.indexOf (":"));$/;"	v
libraryName	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^		var libraryName = id.substring (0, id.indexOf(":"));$/;"	v
libraryName	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^		var libraryName = id.substring (0, id.indexOf (":"));$/;"	v
libraryName	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^		var libraryName = id.substring (0, id.indexOf (":"));$/;"	v
libraryName	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^		var libraryName = id.substring (0, id.indexOf(":"));$/;"	v
library_onEvent	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	private static function library_onEvent (library:AssetLibrary, type:String):Void {$/;"	f
library_onEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	private static function library_onEvent (library:AssetLibrary, type:String):Void {$/;"	f
library_onEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	private static function library_onEvent (library:AssetLibrary, type:String):Void {$/;"	f
library_onLoad	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/ApplicationMain.hx	/^		var library_onLoad = function (__) {$/;"	v
library_onLoad	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^		var library_onLoad = function (__) {$/;"	v
libs	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var libs = [ "android", "bada-wac", "bada", "blackberry", "ios", "mac", "qt", "tizen", "webos", "wp7" ];$/;"	v
lime	/usr/lib/haxe/lib/lime/2,4,3/legacy/templates/haxe/lime/AssetData.hx	/^package lime;$/;"	p
lime	/usr/lib/haxe/lib/lime/2,4,3/legacy/templates/html5/haxe/lime/AssetData.hx	/^package lime;$/;"	p
lime	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^package lime;$/;"	p
lime	/usr/lib/haxe/lib/lime/2,4,3/tests/runtime/test/lime/WindowTest.hx	/^package lime;$/;"	p
lime._backend.flash	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashApplication.hx	/^package lime._backend.flash;$/;"	p
lime._backend.flash	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashMouse.hx	/^package lime._backend.flash;$/;"	p
lime._backend.flash	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashRenderer.hx	/^package lime._backend.flash;$/;"	p
lime._backend.flash	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashWindow.hx	/^package lime._backend.flash;$/;"	p
lime._backend.html5	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Application.hx	/^package lime._backend.html5;$/;"	p
lime._backend.html5	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Mouse.hx	/^package lime._backend.html5;$/;"	p
lime._backend.html5	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Renderer.hx	/^package lime._backend.html5;$/;"	p
lime._backend.html5	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^package lime._backend.html5;$/;"	p
lime._backend.native	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^package lime._backend.native;$/;"	p
lime._backend.native	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeMouse.hx	/^package lime._backend.native;$/;"	p
lime._backend.native	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeRenderer.hx	/^package lime._backend.native;$/;"	p
lime._backend.native	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^package lime._backend.native;$/;"	p
lime.app	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^package lime.app;$/;"	p
lime.app	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Config.hx	/^package lime.app;$/;"	p
lime.app	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Event.hx	/^package lime.app;$/;"	p
lime.app	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^package lime.app;$/;"	p
lime.app	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^package lime.app;$/;"	p
lime.app	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Preloader.hx	/^package lime.app;$/;"	p
lime.audio	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^package lime.audio;$/;"	p
lime.audio	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^package lime.audio;$/;"	p
lime.audio	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioBuffer.hx	/^package lime.audio;$/;"	p
lime.audio	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioContext.hx	/^package lime.audio;$/;"	p
lime.audio	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioManager.hx	/^package lime.audio;$/;"	p
lime.audio	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^package lime.audio;$/;"	p
lime.audio	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/FlashAudioContext.hx	/^package lime.audio;$/;"	p
lime.audio	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^package lime.audio;$/;"	p
lime.audio	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/WebAudioContext.hx	/^package lime.audio; #if (!js || !html5 || display)$/;"	p
lime.audio.openal	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^package lime.audio.openal;$/;"	p
lime.audio.openal	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^package lime.audio.openal;$/;"	p
lime.audio.openal	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALContext.hx	/^package lime.audio.openal;$/;"	p
lime.audio.openal	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALDevice.hx	/^package lime.audio.openal;$/;"	p
lime.graphics	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CairoRenderContext.hx	/^package lime.graphics;$/;"	p
lime.graphics	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^package lime.graphics;$/;"	p
lime.graphics	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ConsoleRenderContext.hx	/^package lime.graphics; #if lime_console$/;"	p
lime.graphics	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^package lime.graphics;$/;"	p
lime.graphics	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^package lime.graphics;$/;"	p
lime.graphics	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^package lime.graphics; #if (!js || !html5)$/;"	p
lime.graphics	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^package lime.graphics;$/;"	p
lime.graphics	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ImageBuffer.hx	/^package lime.graphics;$/;"	p
lime.graphics	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ImageChannel.hx	/^package lime.graphics;$/;"	p
lime.graphics	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ImageType.hx	/^package lime.graphics;$/;"	p
lime.graphics	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/PixelFormat.hx	/^package lime.graphics;$/;"	p
lime.graphics	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/RenderContext.hx	/^package lime.graphics;$/;"	p
lime.graphics	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Renderer.hx	/^package lime.graphics;$/;"	p
lime.graphics.cairo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^package lime.graphics.cairo;$/;"	p
lime.graphics.cairo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoAntialias.hx	/^package lime.graphics.cairo;$/;"	p
lime.graphics.cairo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoContent.hx	/^package lime.graphics.cairo;$/;"	p
lime.graphics.cairo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoExtend.hx	/^package lime.graphics.cairo;$/;"	p
lime.graphics.cairo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFillRule.hx	/^package lime.graphics.cairo;$/;"	p
lime.graphics.cairo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFilter.hx	/^package lime.graphics.cairo;$/;"	p
lime.graphics.cairo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFont.hx	/^package lime.graphics.cairo;$/;"	p
lime.graphics.cairo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFontOptions.hx	/^package lime.graphics.cairo;$/;"	p
lime.graphics.cairo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFormat.hx	/^package lime.graphics.cairo;$/;"	p
lime.graphics.cairo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoHintMetrics.hx	/^package lime.graphics.cairo;$/;"	p
lime.graphics.cairo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoHintStyle.hx	/^package lime.graphics.cairo;$/;"	p
lime.graphics.cairo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoLineCap.hx	/^package lime.graphics.cairo;$/;"	p
lime.graphics.cairo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoLineJoin.hx	/^package lime.graphics.cairo;$/;"	p
lime.graphics.cairo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoOperator.hx	/^package lime.graphics.cairo;$/;"	p
lime.graphics.cairo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoPattern.hx	/^package lime.graphics.cairo;$/;"	p
lime.graphics.cairo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoStatus.hx	/^package lime.graphics.cairo;$/;"	p
lime.graphics.cairo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoSubpixelOrder.hx	/^package lime.graphics.cairo;$/;"	p
lime.graphics.cairo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoSurface.hx	/^package lime.graphics.cairo; #if !macro$/;"	p
lime.graphics.format	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/format/BMP.hx	/^package lime.graphics.format;$/;"	p
lime.graphics.format	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/format/JPEG.hx	/^package lime.graphics.format;$/;"	p
lime.graphics.format	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/format/PNG.hx	/^package lime.graphics.format;$/;"	p
lime.graphics.opengl	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^package lime.graphics.opengl;$/;"	p
lime.graphics.opengl	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLActiveInfo.hx	/^package lime.graphics.opengl; #if (!js || !html5)$/;"	p
lime.graphics.opengl	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLBuffer.hx	/^package lime.graphics.opengl; #if (!js || !html5 || display)$/;"	p
lime.graphics.opengl	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLContextAttributes.hx	/^package lime.graphics.opengl; #if (!js || !html5)$/;"	p
lime.graphics.opengl	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLFramebuffer.hx	/^package lime.graphics.opengl; #if (!js || !html5 || display)$/;"	p
lime.graphics.opengl	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLObject.hx	/^package lime.graphics.opengl;$/;"	p
lime.graphics.opengl	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLProgram.hx	/^package lime.graphics.opengl; #if (!js || !html5 || display)$/;"	p
lime.graphics.opengl	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLRenderbuffer.hx	/^package lime.graphics.opengl; #if (!js || !html5 || display)$/;"	p
lime.graphics.opengl	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLShader.hx	/^package lime.graphics.opengl; #if (!js || !html5 || display)$/;"	p
lime.graphics.opengl	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLShaderPrecisionFormat.hx	/^package lime.graphics.opengl; #if (!js || !html5 || display)$/;"	p
lime.graphics.opengl	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLTexture.hx	/^package lime.graphics.opengl; #if (!js || !html5 || display)$/;"	p
lime.graphics.opengl	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLUniformLocation.hx	/^package lime.graphics.opengl; #if (!js || !html5 || display)$/;"	p
lime.graphics.utils	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageCanvasUtil.hx	/^package lime.graphics.utils;$/;"	p
lime.graphics.utils	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^package lime.graphics.utils;$/;"	p
lime.math	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^package lime.math;$/;"	p
lime.math	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^package lime.math;$/;"	p
lime.math	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^package lime.math;$/;"	p
lime.math	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^package lime.math;$/;"	p
lime.math	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector2.hx	/^package lime.math;$/;"	p
lime.math	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^package lime.math;$/;"	p
lime.net	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URIParser.hx	/^package lime.net;$/;"	p
lime.net	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^package lime.net;$/;"	p
lime.net	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoaderDataFormat.hx	/^package lime.net; #if !flash$/;"	p
lime.net	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLRequest.hx	/^package lime.net; #if !flash$/;"	p
lime.net	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLRequestHeader.hx	/^package lime.net; #if !flash$/;"	p
lime.net	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLRequestMethod.hx	/^package lime.net; #if !flash$/;"	p
lime.net	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLVariables.hx	/^package lime.net; #if !flash$/;"	p
lime.net.curl	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURL.hx	/^package lime.net.curl;$/;"	p
lime.net.curl	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLCode.hx	/^package lime.net.curl;$/;"	p
lime.net.curl	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLEasy.hx	/^package lime.net.curl;$/;"	p
lime.net.curl	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLInfo.hx	/^package lime.net.curl;$/;"	p
lime.net.curl	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLOption.hx	/^package lime.net.curl;$/;"	p
lime.net.curl	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLVersion.hx	/^package lime.net.curl;$/;"	p
lime.net.oauth	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthClient.hx	/^package lime.net.oauth;$/;"	p
lime.net.oauth	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthConsumer.hx	/^package lime.net.oauth;$/;"	p
lime.net.oauth	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthRequest.hx	/^package lime.net.oauth;$/;"	p
lime.net.oauth	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthSignatureMethod.hx	/^package lime.net.oauth;$/;"	p
lime.net.oauth	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthToken.hx	/^package lime.net.oauth;$/;"	p
lime.net.oauth	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthVersion.hx	/^package lime.net.oauth;$/;"	p
lime.project	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ApplicationData.hx	/^package lime.project;$/;"	p
lime.project	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Architecture.hx	/^package lime.project;$/;"	p
lime.project	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Asset.hx	/^package lime.project;$/;"	p
lime.project	/usr/lib/haxe/lib/lime/2,4,3/lime/project/AssetEncoding.hx	/^package lime.project;$/;"	p
lime.project	/usr/lib/haxe/lib/lime/2,4,3/lime/project/AssetType.hx	/^package lime.project;$/;"	p
lime.project	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Command.hx	/^package lime.project;$/;"	p
lime.project	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^package lime.project;$/;"	p
lime.project	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Dependency.hx	/^package lime.project;$/;"	p
lime.project	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^package lime.project;$/;"	p
lime.project	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Haxelib.hx	/^package lime.project;$/;"	p
lime.project	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Icon.hx	/^package lime.project;$/;"	p
lime.project	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Keystore.hx	/^package lime.project;$/;"	p
lime.project	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Library.hx	/^package lime.project;$/;"	p
lime.project	/usr/lib/haxe/lib/lime/2,4,3/lime/project/MetaData.hx	/^package lime.project;$/;"	p
lime.project	/usr/lib/haxe/lib/lime/2,4,3/lime/project/NDLL.hx	/^package lime.project;$/;"	p
lime.project	/usr/lib/haxe/lib/lime/2,4,3/lime/project/NDLLType.hx	/^package lime.project;$/;"	p
lime.project	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Orientation.hx	/^package lime.project;$/;"	p
lime.project	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Platform.hx	/^package lime.project;$/;"	p
lime.project	/usr/lib/haxe/lib/lime/2,4,3/lime/project/PlatformTarget.hx	/^package lime.project;$/;"	p
lime.project	/usr/lib/haxe/lib/lime/2,4,3/lime/project/PlatformType.hx	/^package lime.project;$/;"	p
lime.project	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^package lime.project;$/;"	p
lime.project	/usr/lib/haxe/lib/lime/2,4,3/lime/project/SplashScreen.hx	/^package lime.project;$/;"	p
lime.project	/usr/lib/haxe/lib/lime/2,4,3/lime/project/WindowData.hx	/^package lime.project;$/;"	p
lime.system	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^package lime.system;$/;"	p
lime.text	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^package lime.text;$/;"	p
lime.text	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Glyph.hx	/^package lime.text;$/;"	p
lime.text	/usr/lib/haxe/lib/lime/2,4,3/lime/text/GlyphMetrics.hx	/^package lime.text;$/;"	p
lime.text	/usr/lib/haxe/lib/lime/2,4,3/lime/text/GlyphPosition.hx	/^package lime.text;$/;"	p
lime.text	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextDirection.hx	/^package lime.text;$/;"	p
lime.text	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextLayout.hx	/^package lime.text;$/;"	p
lime.text	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^package lime.text;$/;"	p
lime.tools.helpers	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AIRHelper.hx	/^package lime.tools.helpers;$/;"	p
lime.tools.helpers	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^package lime.tools.helpers;$/;"	p
lime.tools.helpers	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AntHelper.hx	/^package lime.tools.helpers;$/;"	p
lime.tools.helpers	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ArrayHelper.hx	/^package lime.tools.helpers;$/;"	p
lime.tools.helpers	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AssetHelper.hx	/^package lime.tools.helpers;$/;"	p
lime.tools.helpers	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^package lime.tools.helpers;$/;"	p
lime.tools.helpers	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CLIHelper.hx	/^package lime.tools.helpers;$/;"	p
lime.tools.helpers	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CPPHelper.hx	/^package lime.tools.helpers;$/;"	p
lime.tools.helpers	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CompatibilityHelper.hx	/^package lime.tools.helpers;$/;"	p
lime.tools.helpers	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CordovaHelper.hx	/^package lime.tools.helpers;$/;"	p
lime.tools.helpers	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/DeploymentHelper.hx	/^package lime.tools.helpers;$/;"	p
lime.tools.helpers	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^package lime.tools.helpers;$/;"	p
lime.tools.helpers	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^package lime.tools.helpers;$/;"	p
lime.tools.helpers	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/HTML5Helper.hx	/^package lime.tools.helpers;$/;"	p
lime.tools.helpers	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^package lime.tools.helpers;$/;"	p
lime.tools.helpers	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^package lime.tools.helpers;$/;"	p
lime.tools.helpers	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ImageHelper.hx	/^package lime.tools.helpers;$/;"	p
lime.tools.helpers	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/JavaHelper.hx	/^package lime.tools.helpers;$/;"	p
lime.tools.helpers	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/LogHelper.hx	/^package lime.tools.helpers;$/;"	p
lime.tools.helpers	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/NekoHelper.hx	/^package lime.tools.helpers;$/;"	p
lime.tools.helpers	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/NodeJSHelper.hx	/^package lime.tools.helpers;$/;"	p
lime.tools.helpers	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ObjectHelper.hx	/^package lime.tools.helpers;$/;"	p
lime.tools.helpers	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^package lime.tools.helpers;$/;"	p
lime.tools.helpers	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PlatformHelper.hx	/^package lime.tools.helpers;$/;"	p
lime.tools.helpers	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ProcessHelper.hx	/^package lime.tools.helpers;$/;"	p
lime.tools.helpers	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^package lime.tools.helpers;$/;"	p
lime.tools.helpers	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringMapHelper.hx	/^package lime.tools.helpers;$/;"	p
lime.tools.helpers	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/TizenHelper.hx	/^package lime.tools.helpers;$/;"	p
lime.tools.helpers	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/WebOSHelper.hx	/^package lime.tools.helpers;$/;"	p
lime.tools.helpers	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ZipHelper.hx	/^package lime.tools.helpers;$/;"	p
lime.tools.platforms	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^package lime.tools.platforms;$/;"	p
lime.tools.platforms	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/BlackBerryPlatform.hx	/^package lime.tools.platforms;$/;"	p
lime.tools.platforms	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/EmscriptenPlatform.hx	/^package lime.tools.platforms;$/;"	p
lime.tools.platforms	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FirefoxPlatform.hx	/^package lime.tools.platforms;$/;"	p
lime.tools.platforms	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FlashPlatform.hx	/^package lime.tools.platforms;$/;"	p
lime.tools.platforms	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/HTML5Platform.hx	/^package lime.tools.platforms;$/;"	p
lime.tools.platforms	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^package lime.tools.platforms;$/;"	p
lime.tools.platforms	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^package lime.tools.platforms;$/;"	p
lime.tools.platforms	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/MacPlatform.hx	/^package lime.tools.platforms;$/;"	p
lime.tools.platforms	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/TizenPlatform.hx	/^package lime.tools.platforms;$/;"	p
lime.tools.platforms	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WebOSPlatform.hx	/^package lime.tools.platforms;$/;"	p
lime.tools.platforms	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WindowsPlatform.hx	/^package lime.tools.platforms;$/;"	p
lime.ui	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Gamepad.hx	/^package lime.ui;$/;"	p
lime.ui	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/GamepadAxis.hx	/^package lime.ui;$/;"	p
lime.ui	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/GamepadButton.hx	/^package lime.ui;$/;"	p
lime.ui	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyCode.hx	/^package lime.ui;$/;"	p
lime.ui	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^package lime.ui;$/;"	p
lime.ui	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Mouse.hx	/^package lime.ui;$/;"	p
lime.ui	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/MouseCursor.hx	/^package lime.ui;$/;"	p
lime.ui	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^package lime.ui;$/;"	p
lime.utils	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ArrayBuffer.hx	/^package lime.utils;$/;"	p
lime.utils	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ArrayBufferView.hx	/^package lime.utils;$/;"	p
lime.utils	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^package lime.utils; #if !flash$/;"	p
lime.utils	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/CompressionAlgorithm.hx	/^package lime.utils;$/;"	p
lime.utils	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Float32Array.hx	/^package lime.utils;$/;"	p
lime.utils	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/GLUtils.hx	/^package lime.utils;$/;"	p
lime.utils	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/IDataInput.hx	/^package lime.utils;$/;"	p
lime.utils	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/IMemoryRange.hx	/^package lime.utils;$/;"	p
lime.utils	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Int16Array.hx	/^package lime.utils;$/;"	p
lime.utils	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Int32Array.hx	/^package lime.utils;$/;"	p
lime.utils	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Int8Array.hx	/^package lime.utils;$/;"	p
lime.utils	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/JNI.hx	/^package lime.utils;$/;"	p
lime.utils	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/UInt16Array.hx	/^package lime.utils;$/;"	p
lime.utils	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/UInt32Array.hx	/^package lime.utils;$/;"	p
lime.utils	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/UInt8Array.hx	/^package lime.utils;$/;"	p
lime.vm	/usr/lib/haxe/lib/lime/2,4,3/lime/vm/NekoVM.hx	/^package lime.vm;$/;"	p
limeDirectory	/usr/lib/haxe/lib/lime/2,4,3/tools/RunScript.hx	/^		var limeDirectory = PathHelper.getHaxelib (new Haxelib ("lime"), true);$/;"	v
limeDirectory	/usr/lib/haxe/lib/openfl/3,0,8/script/RunScript.hx	/^			var limeDirectory = PathHelper.getHaxelib (new Haxelib ("lime"));$/;"	v
limeFont	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^		var limeFont = LimeAssets.getFont (id, false);$/;"	v
lime_al_buffer3f	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_buffer3f = System.load ("lime", "lime_al_buffer3f", 5);$/;"	v
lime_al_buffer3i	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_buffer3i = System.load ("lime", "lime_al_buffer3i", 5);$/;"	v
lime_al_buffer_data	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_buffer_data = System.load ("lime", "lime_al_buffer_data", 5);$/;"	v
lime_al_bufferf	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_bufferf = System.load ("lime", "lime_al_bufferf", 3);$/;"	v
lime_al_bufferfv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_bufferfv = System.load ("lime", "lime_al_bufferfv", 3);$/;"	v
lime_al_bufferi	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_bufferi = System.load ("lime", "lime_al_bufferi", 3);$/;"	v
lime_al_bufferiv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_bufferiv = System.load ("lime", "lime_al_bufferiv", 3);$/;"	v
lime_al_delete_buffer	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_delete_buffer = System.load ("lime", "lime_al_delete_buffer", 1);$/;"	v
lime_al_delete_buffers	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_delete_buffers = System.load ("lime", "lime_al_delete_buffers", 2);$/;"	v
lime_al_delete_source	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_delete_source = System.load ("lime", "lime_al_delete_source", 1);$/;"	v
lime_al_delete_sources	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_delete_sources = System.load ("lime", "lime_al_delete_sources", 2);$/;"	v
lime_al_disable	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_disable = System.load ("lime", "lime_al_disable", 1);$/;"	v
lime_al_distance_model	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_distance_model = System.load ("lime", "lime_al_distance_model", 1);$/;"	v
lime_al_doppler_factor	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_doppler_factor = System.load ("lime", "lime_al_doppler_factor", 1);$/;"	v
lime_al_doppler_velocity	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_doppler_velocity = System.load ("lime", "lime_al_doppler_velocity", 1);$/;"	v
lime_al_enable	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_enable = System.load ("lime", "lime_al_enable", 1);$/;"	v
lime_al_gen_buffer	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_gen_buffer = System.load ("lime", "lime_al_gen_buffer", 0);$/;"	v
lime_al_gen_buffers	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_gen_buffers = System.load ("lime", "lime_al_gen_buffers", 1);$/;"	v
lime_al_gen_source	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_gen_source = System.load ("lime", "lime_al_gen_source", 0);$/;"	v
lime_al_gen_sources	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_gen_sources = System.load ("lime", "lime_al_gen_sources", 1);$/;"	v
lime_al_get_boolean	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_get_boolean = System.load ("lime", "lime_al_get_boolean", 1);$/;"	v
lime_al_get_booleanv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_get_booleanv = System.load ("lime", "lime_al_get_booleanv", 2);$/;"	v
lime_al_get_buffer3f	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_get_buffer3f = System.load ("lime", "lime_al_get_buffer3f", 2);$/;"	v
lime_al_get_buffer3i	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_get_buffer3i = System.load ("lime", "lime_al_get_buffer3i", 2);$/;"	v
lime_al_get_bufferf	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_get_bufferf = System.load ("lime", "lime_al_get_bufferf", 2);$/;"	v
lime_al_get_bufferfv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_get_bufferfv = System.load ("lime", "lime_al_get_bufferfv", 3);$/;"	v
lime_al_get_bufferi	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_get_bufferi = System.load ("lime", "lime_al_get_bufferi", 2);$/;"	v
lime_al_get_bufferiv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_get_bufferiv = System.load ("lime", "lime_al_get_bufferiv", 3);$/;"	v
lime_al_get_double	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_get_double = System.load ("lime", "lime_al_get_double", 1);$/;"	v
lime_al_get_doublev	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_get_doublev = System.load ("lime", "lime_al_get_doublev", 2);$/;"	v
lime_al_get_enum_value	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_get_enum_value = System.load ("lime", "lime_al_get_enum_value", 1);$/;"	v
lime_al_get_error	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_get_error = System.load ("lime", "lime_al_get_error", 0);$/;"	v
lime_al_get_float	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_get_float = System.load ("lime", "lime_al_get_float", 1);$/;"	v
lime_al_get_floatv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_get_floatv = System.load ("lime", "lime_al_get_floatv", 2);$/;"	v
lime_al_get_integer	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_get_integer = System.load ("lime", "lime_al_get_integer", 1);$/;"	v
lime_al_get_integerv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_get_integerv = System.load ("lime", "lime_al_get_integerv", 2);$/;"	v
lime_al_get_listener3f	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_get_listener3f = System.load ("lime", "lime_al_get_listener3f", 1);$/;"	v
lime_al_get_listener3i	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_get_listener3i = System.load ("lime", "lime_al_get_listener3i", 1);$/;"	v
lime_al_get_listenerf	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_get_listenerf = System.load ("lime", "lime_al_get_listenerf", 1);$/;"	v
lime_al_get_listenerfv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_get_listenerfv = System.load ("lime", "lime_al_get_listenerfv", 2);$/;"	v
lime_al_get_listeneri	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_get_listeneri = System.load ("lime", "lime_al_get_listeneri", 1);$/;"	v
lime_al_get_listeneriv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_get_listeneriv = System.load ("lime", "lime_al_get_listeneriv", 2);$/;"	v
lime_al_get_proc_address	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_get_proc_address = System.load ("lime", "lime_al_get_proc_address", 1);$/;"	v
lime_al_get_source3f	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_get_source3f = System.load ("lime", "lime_al_get_source3f", 2);$/;"	v
lime_al_get_source3i	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_get_source3i = System.load ("lime", "lime_al_get_source3i", 2);$/;"	v
lime_al_get_sourcef	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_get_sourcef = System.load ("lime", "lime_al_get_sourcef", 2);$/;"	v
lime_al_get_sourcefv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_get_sourcefv = System.load ("lime", "lime_al_get_sourcefv", 2);$/;"	v
lime_al_get_sourcei	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_get_sourcei = System.load ("lime", "lime_al_get_sourcei", 2);$/;"	v
lime_al_get_sourceiv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_get_sourceiv = System.load ("lime", "lime_al_get_sourceiv", 3);$/;"	v
lime_al_get_string	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_get_string = System.load ("lime", "lime_al_get_string", 1);$/;"	v
lime_al_is_buffer	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_is_buffer = System.load ("lime", "lime_al_is_buffer", 1);$/;"	v
lime_al_is_enabled	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_is_enabled = System.load ("lime", "lime_al_is_enabled", 1);$/;"	v
lime_al_is_extension_present	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_is_extension_present = System.load ("lime", "lime_al_is_extension_present", 1);$/;"	v
lime_al_is_source	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_is_source = System.load ("lime", "lime_al_is_source", 1);$/;"	v
lime_al_listener3f	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_listener3f = System.load ("lime", "lime_al_listener3f", 4);$/;"	v
lime_al_listener3i	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_listener3i = System.load ("lime", "lime_al_listener3i", 4);$/;"	v
lime_al_listenerf	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_listenerf = System.load ("lime", "lime_al_listenerf", 2);$/;"	v
lime_al_listenerfv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_listenerfv = System.load ("lime", "lime_al_listenerfv", 2);$/;"	v
lime_al_listeneri	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_listeneri = System.load ("lime", "lime_al_listeneri", 2);$/;"	v
lime_al_listeneriv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_listeneriv = System.load ("lime", "lime_al_listeneriv", 2);$/;"	v
lime_al_source3f	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_source3f = System.load ("lime", "lime_al_source3f", 5);$/;"	v
lime_al_source3i	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_source3i = System.load ("lime", "lime_al_source3i", 5);$/;"	v
lime_al_source_pause	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_source_pause = System.load ("lime", "lime_al_source_pause", 1);$/;"	v
lime_al_source_pausev	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_source_pausev = System.load ("lime", "lime_al_source_pausev", 2);$/;"	v
lime_al_source_play	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_source_play = System.load ("lime", "lime_al_source_play", 1);$/;"	v
lime_al_source_playv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_source_playv = System.load ("lime", "lime_al_source_playv", 2);$/;"	v
lime_al_source_queue_buffers	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_source_queue_buffers = System.load ("lime", "lime_al_source_queue_buffers", 3);$/;"	v
lime_al_source_rewind	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_source_rewind = System.load ("lime", "lime_al_source_rewind", 1);$/;"	v
lime_al_source_rewindv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_source_rewindv = System.load ("lime", "lime_al_source_rewindv", 2);$/;"	v
lime_al_source_stop	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_source_stop = System.load ("lime", "lime_al_source_stop", 1);$/;"	v
lime_al_source_stopv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_source_stopv = System.load ("lime", "lime_al_source_stopv", 2);$/;"	v
lime_al_source_unqueue_buffers	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_source_unqueue_buffers = System.load ("lime", "lime_al_source_unqueue_buffers", 2);$/;"	v
lime_al_sourcef	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_sourcef = System.load ("lime", "lime_al_sourcef", 3);$/;"	v
lime_al_sourcefv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_sourcefv = System.load ("lime", "lime_al_sourcefv", 3);$/;"	v
lime_al_sourcei	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_sourcei = System.load ("lime", "lime_al_sourcei", 3);$/;"	v
lime_al_sourceiv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_sourceiv = System.load ("lime", "lime_al_sourceiv", 3);$/;"	v
lime_al_speed_of_sound	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	private static var lime_al_speed_of_sound = System.load ("lime", "lime_al_speed_of_sound", 1);$/;"	v
lime_alc_close_device	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	private static var lime_alc_close_device = System.load ("lime", "lime_alc_close_device", 1);$/;"	v
lime_alc_create_context	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	private static var lime_alc_create_context = System.load ("lime", "lime_alc_create_context", 2);$/;"	v
lime_alc_destroy_context	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	private static var lime_alc_destroy_context = System.load ("lime", "lime_alc_destroy_context", 1);$/;"	v
lime_alc_get_contexts_device	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	private static var lime_alc_get_contexts_device = System.load ("lime", "lime_alc_get_contexts_device", 1);$/;"	v
lime_alc_get_current_context	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	private static var lime_alc_get_current_context = System.load ("lime", "lime_alc_get_current_context", 0);$/;"	v
lime_alc_get_error	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	private static var lime_alc_get_error = System.load ("lime", "lime_alc_get_error", 1);$/;"	v
lime_alc_get_integerv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	private static var lime_alc_get_integerv = System.load ("lime", "lime_alc_get_integerv", 3);$/;"	v
lime_alc_get_string	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	private static var lime_alc_get_string = System.load ("lime", "lime_alc_get_string", 2);$/;"	v
lime_alc_make_context_current	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	private static var lime_alc_make_context_current = System.load ("lime", "lime_alc_make_context_current", 1);$/;"	v
lime_alc_open_device	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	private static var lime_alc_open_device = System.load ("lime", "lime_alc_open_device", 1);$/;"	v
lime_alc_process_context	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	private static var lime_alc_process_context = System.load ("lime", "lime_alc_process_context", 1);$/;"	v
lime_alc_suspend_context	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	private static var lime_alc_suspend_context = System.load ("lime", "lime_alc_suspend_context", 1);$/;"	v
lime_application_create	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private static var lime_application_create = System.load ("lime", "lime_application_create", 1);$/;"	v
lime_application_exec	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private static var lime_application_exec = System.load ("lime", "lime_application_exec", 1);$/;"	v
lime_application_init	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private static var lime_application_init = System.load ("lime", "lime_application_init", 1);$/;"	v
lime_application_quit	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private static var lime_application_quit = System.load ("lime", "lime_application_quit", 1);$/;"	v
lime_application_set_frame_rate	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private static var lime_application_set_frame_rate = System.load ("lime", "lime_application_set_frame_rate", 2);$/;"	v
lime_application_update	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private static var lime_application_update = System.load ("lime", "lime_application_update", 1);$/;"	v
lime_audio_load	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioBuffer.hx	/^	private static var lime_audio_load:Dynamic = System.load ("lime", "lime_audio_load", 1);$/;"	v
lime_bitmap_data_apply_filter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_apply_filter = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_apply_filter", 5);$/;"	v
lime_bitmap_data_clear	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_clear = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_clear", 2);$/;"	v
lime_bitmap_data_clone	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_clone = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_clone", 1);$/;"	v
lime_bitmap_data_color_transform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_color_transform = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_color_transform", 3);$/;"	v
lime_bitmap_data_copy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_copy = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_copy", 5);$/;"	v
lime_bitmap_data_copy_channel	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_copy_channel = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_copy_channel", -1);$/;"	v
lime_bitmap_data_create	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_create = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_create", -1);$/;"	v
lime_bitmap_data_create_hardware_surface	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_create_hardware_surface = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_create_hardware_surface", 1);$/;"	v
lime_bitmap_data_destroy_hardware_surface	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_destroy_hardware_surface = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_destroy_hardware_surface", 1);$/;"	v
lime_bitmap_data_dispose	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_dispose = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_dispose", 1);$/;"	v
lime_bitmap_data_dump_bits	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_dump_bits = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_dump_bits", 1);$/;"	v
lime_bitmap_data_encode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_encode = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_encode", 3);$/;"	v
lime_bitmap_data_fill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_fill = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_fill", 4);$/;"	v
lime_bitmap_data_flood_fill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_flood_fill = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_flood_fill", 4);$/;"	v
lime_bitmap_data_from_bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_from_bytes = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_from_bytes", 2);$/;"	v
lime_bitmap_data_generate_filter_rect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_generate_filter_rect = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_generate_filter_rect", 3);$/;"	v
lime_bitmap_data_get_array	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_get_array = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_get_array", 3);$/;"	v
lime_bitmap_data_get_color_bounds_rect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_get_color_bounds_rect = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_get_color_bounds_rect", 5);$/;"	v
lime_bitmap_data_get_pixel	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_get_pixel = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_get_pixel", 3);$/;"	v
lime_bitmap_data_get_pixel32	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_get_pixel32 = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_get_pixel32", 3);$/;"	v
lime_bitmap_data_get_pixel_rgba	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_get_pixel_rgba = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_get_pixel_rgba", 3);$/;"	v
lime_bitmap_data_get_pixels	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_get_pixels = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_get_pixels", 2);$/;"	v
lime_bitmap_data_get_prem_alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_get_prem_alpha = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_get_prem_alpha", 1);$/;"	v
lime_bitmap_data_get_transparent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_get_transparent = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_get_transparent", 1);$/;"	v
lime_bitmap_data_height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_height = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_height", 1);$/;"	v
lime_bitmap_data_load	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_load = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_load", 2);$/;"	v
lime_bitmap_data_multiply_alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_multiply_alpha = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_multiply_alpha", 1);$/;"	v
lime_bitmap_data_noise	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_noise = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_noise", -1);$/;"	v
lime_bitmap_data_scroll	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_scroll = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_scroll", 3);$/;"	v
lime_bitmap_data_set_array	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_set_array = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_set_array", 3);$/;"	v
lime_bitmap_data_set_bytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_set_bytes = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_set_bytes", 4);$/;"	v
lime_bitmap_data_set_flags	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_set_flags = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_set_flags", 2);$/;"	v
lime_bitmap_data_set_format	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_set_format = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_set_format", 2);$/;"	v
lime_bitmap_data_set_pixel	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_set_pixel = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_set_pixel", 4);$/;"	v
lime_bitmap_data_set_pixel32	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_set_pixel32 = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_set_pixel32", 4);$/;"	v
lime_bitmap_data_set_pixel_rgba	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_set_pixel_rgba = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_set_pixel_rgba", 4);$/;"	v
lime_bitmap_data_set_prem_alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_set_prem_alpha = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_set_prem_alpha", 2);$/;"	v
lime_bitmap_data_unmultiply_alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_unmultiply_alpha = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_unmultiply_alpha", 1);$/;"	v
lime_bitmap_data_width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_bitmap_data_width = Lib.load ("lime-legacy", "lime_legacy_bitmap_data_width", 1);$/;"	v
lime_buffer_get_native_pointer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoSurface.hx	/^	private static var lime_buffer_get_native_pointer = System.load ("lime", "lime_buffer_get_native_pointer", 1);$/;"	v
lime_byte_array_get_native_pointer	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	private static var lime_byte_array_get_native_pointer = System.load ("lime", "lime_byte_array_get_native_pointer", 1);$/;"	v
lime_byte_array_get_native_pointer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	private static var lime_byte_array_get_native_pointer = Lib.load ("lime-legacy", "lime_legacy_byte_array_get_native_pointer", 1);$/;"	v
lime_byte_array_overwrite_file	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	private static var lime_byte_array_overwrite_file = System.load ("lime", "lime_byte_array_overwrite_file", 2);$/;"	v
lime_byte_array_overwrite_file	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	private static var lime_byte_array_overwrite_file = Lib.load ("lime-legacy", "lime_legacy_byte_array_overwrite_file", 2);$/;"	v
lime_byte_array_read_file	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	private static var lime_byte_array_read_file = System.load ("lime", "lime_byte_array_read_file", 1);$/;"	v
lime_byte_array_read_file	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	private static var lime_byte_array_read_file = Lib.load ("lime-legacy", "lime_legacy_byte_array_read_file", 1);$/;"	v
lime_cairo_arc	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_arc = System.load ("lime", "lime_cairo_arc", -1);$/;"	v
lime_cairo_arc_negative	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_arc_negative = System.load ("lime", "lime_cairo_arc_negative", -1);$/;"	v
lime_cairo_clip	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_clip = System.load ("lime", "lime_cairo_clip", 1);$/;"	v
lime_cairo_clip_extents	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_clip_extents = System.load ("lime", "lime_cairo_clip_extents", 5);$/;"	v
lime_cairo_clip_preserve	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_clip_preserve = System.load ("lime", "lime_cairo_clip_preserve", 1);$/;"	v
lime_cairo_close_path	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_close_path = System.load ("lime", "lime_cairo_close_path", 1);$/;"	v
lime_cairo_copy_page	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_copy_page = System.load ("lime", "lime_cairo_copy_page", 1);$/;"	v
lime_cairo_create	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_create = System.load ("lime", "lime_cairo_create", 1);$/;"	v
lime_cairo_curve_to	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_curve_to = System.load ("lime", "lime_cairo_curve_to", -1);$/;"	v
lime_cairo_destroy	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_destroy = System.load ("lime", "lime_cairo_destroy", 1);$/;"	v
lime_cairo_fill	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_fill = System.load ("lime", "lime_cairo_fill", 1);$/;"	v
lime_cairo_fill_extents	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_fill_extents = System.load ("lime", "lime_cairo_fill_extents", 5);$/;"	v
lime_cairo_fill_preserve	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_fill_preserve = System.load ("lime", "lime_cairo_fill_preserve", 1);$/;"	v
lime_cairo_font_face_destroy	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFont.hx	/^	private static var lime_cairo_font_face_destroy = System.load ("lime", "lime_cairo_font_face_destroy", 1);$/;"	v
lime_cairo_font_options_create	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFontOptions.hx	/^	private static var lime_cairo_font_options_create = System.load ("lime", "lime_cairo_font_options_create", 0);$/;"	v
lime_cairo_font_options_get_antialias	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFontOptions.hx	/^	private static var lime_cairo_font_options_get_antialias = System.load ("lime", "lime_cairo_font_options_get_antialias", 1);$/;"	v
lime_cairo_font_options_get_hint_metrics	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFontOptions.hx	/^	private static var lime_cairo_font_options_get_hint_metrics = System.load ("lime", "lime_cairo_font_options_get_hint_metrics", 1);$/;"	v
lime_cairo_font_options_get_hint_style	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFontOptions.hx	/^	private static var lime_cairo_font_options_get_hint_style = System.load ("lime", "lime_cairo_font_options_get_hint_style", 1);$/;"	v
lime_cairo_font_options_get_subpixel_order	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFontOptions.hx	/^	private static var lime_cairo_font_options_get_subpixel_order = System.load ("lime", "lime_cairo_font_options_get_subpixel_order", 1);$/;"	v
lime_cairo_font_options_set_antialias	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFontOptions.hx	/^	private static var lime_cairo_font_options_set_antialias = System.load ("lime", "lime_cairo_font_options_set_antialias", 2);$/;"	v
lime_cairo_font_options_set_hint_metrics	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFontOptions.hx	/^	private static var lime_cairo_font_options_set_hint_metrics = System.load ("lime", "lime_cairo_font_options_set_hint_metrics", 2);$/;"	v
lime_cairo_font_options_set_hint_style	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFontOptions.hx	/^	private static var lime_cairo_font_options_set_hint_style = System.load ("lime", "lime_cairo_font_options_set_hint_style", 2);$/;"	v
lime_cairo_font_options_set_subpixel_order	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFontOptions.hx	/^	private static var lime_cairo_font_options_set_subpixel_order = System.load ("lime", "lime_cairo_font_options_set_subpixel_order", 2);$/;"	v
lime_cairo_ft_font_face_create_for_ft_face	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFont.hx	/^	private static var lime_cairo_ft_font_face_create_for_ft_face = System.load ("lime", "lime_cairo_ft_font_face_create_for_ft_face", 2);$/;"	v
lime_cairo_get_antialias	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_get_antialias = System.load ("lime", "lime_cairo_get_antialias", 1);$/;"	v
lime_cairo_get_current_point	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_get_current_point = System.load ("lime", "lime_cairo_get_current_point", 1);$/;"	v
lime_cairo_get_dash	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_get_dash = System.load ("lime", "lime_cairo_get_dash", 1);$/;"	v
lime_cairo_get_dash_count	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_get_dash_count = System.load ("lime", "lime_cairo_get_dash_count", 1);$/;"	v
lime_cairo_get_fill_rule	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_get_fill_rule = System.load ("lime", "lime_cairo_get_fill_rule", 1);$/;"	v
lime_cairo_get_font_options	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_get_font_options = System.load ("lime", "lime_cairo_get_font_options", 1);$/;"	v
lime_cairo_get_group_target	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_get_group_target = System.load ("lime", "lime_cairo_get_group_target", 1);$/;"	v
lime_cairo_get_line_cap	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_get_line_cap = System.load ("lime", "lime_cairo_get_line_cap", 1);$/;"	v
lime_cairo_get_line_join	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_get_line_join = System.load ("lime", "lime_cairo_get_line_join", 1);$/;"	v
lime_cairo_get_line_width	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_get_line_width = System.load ("lime", "lime_cairo_get_line_width", 1);$/;"	v
lime_cairo_get_matrix	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_get_matrix = System.load ("lime", "lime_cairo_get_matrix", 1);$/;"	v
lime_cairo_get_miter_limit	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_get_miter_limit = System.load ("lime", "lime_cairo_get_miter_limit", 1);$/;"	v
lime_cairo_get_operator	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_get_operator = System.load ("lime", "lime_cairo_get_operator", 1);$/;"	v
lime_cairo_get_reference_count	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_get_reference_count = System.load ("lime", "lime_cairo_get_reference_count", 1);$/;"	v
lime_cairo_get_source	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_get_source = System.load ("lime", "lime_cairo_get_source", 1);$/;"	v
lime_cairo_get_target	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_get_target = System.load ("lime", "lime_cairo_get_target", 1);$/;"	v
lime_cairo_get_tolerance	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_get_tolerance = System.load ("lime", "lime_cairo_get_tolerance", 1);$/;"	v
lime_cairo_has_current_point	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_has_current_point = System.load ("lime", "lime_cairo_has_current_point", 1);$/;"	v
lime_cairo_identity_matrix	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_identity_matrix = System.load ("lime", "lime_cairo_identity_matrix", 1);$/;"	v
lime_cairo_image_surface_create	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoSurface.hx	/^	private static var lime_cairo_image_surface_create = System.load ("lime", "lime_cairo_image_surface_create", 3);$/;"	v
lime_cairo_image_surface_create_for_data	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoSurface.hx	/^	private static var lime_cairo_image_surface_create_for_data = System.load ("lime", "lime_cairo_image_surface_create_for_data", 5);$/;"	v
lime_cairo_image_surface_get_height	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoSurface.hx	/^	private static var lime_cairo_image_surface_get_height = System.load ("lime", "lime_cairo_image_surface_get_height", 1);$/;"	v
lime_cairo_image_surface_get_width	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoSurface.hx	/^	private static var lime_cairo_image_surface_get_width = System.load ("lime", "lime_cairo_image_surface_get_width", 1);$/;"	v
lime_cairo_in_clip	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_in_clip = System.load ("lime", "lime_cairo_in_clip", 3);$/;"	v
lime_cairo_in_fill	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_in_fill = System.load ("lime", "lime_cairo_in_fill", 3);$/;"	v
lime_cairo_in_stroke	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_in_stroke = System.load ("lime", "lime_cairo_in_stroke", 3);$/;"	v
lime_cairo_line_to	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_line_to = System.load ("lime", "lime_cairo_line_to", 3);$/;"	v
lime_cairo_mask	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_mask = System.load ("lime", "lime_cairo_mask", 2);$/;"	v
lime_cairo_mask_surface	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_mask_surface = System.load ("lime", "lime_cairo_mask_surface", 4);$/;"	v
lime_cairo_move_to	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_move_to = System.load ("lime", "lime_cairo_move_to", 3);$/;"	v
lime_cairo_new_path	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_new_path = System.load ("lime", "lime_cairo_new_path", 1);$/;"	v
lime_cairo_paint	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_paint = System.load ("lime", "lime_cairo_paint", 1);$/;"	v
lime_cairo_paint_with_alpha	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_paint_with_alpha = System.load ("lime", "lime_cairo_paint_with_alpha", 2);$/;"	v
lime_cairo_pattern_add_color_stop_rgb	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoPattern.hx	/^	private static var lime_cairo_pattern_add_color_stop_rgb = System.load ("lime", "lime_cairo_pattern_add_color_stop_rgb", 5);$/;"	v
lime_cairo_pattern_add_color_stop_rgba	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoPattern.hx	/^	private static var lime_cairo_pattern_add_color_stop_rgba = System.load ("lime", "lime_cairo_pattern_add_color_stop_rgba", -1);$/;"	v
lime_cairo_pattern_create_for_surface	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoPattern.hx	/^	private static var lime_cairo_pattern_create_for_surface = System.load ("lime", "lime_cairo_pattern_create_for_surface", 1);$/;"	v
lime_cairo_pattern_create_linear	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoPattern.hx	/^	private static var lime_cairo_pattern_create_linear = System.load ("lime", "lime_cairo_pattern_create_linear", 4);$/;"	v
lime_cairo_pattern_create_radial	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoPattern.hx	/^	private static var lime_cairo_pattern_create_radial = System.load ("lime", "lime_cairo_pattern_create_radial", -1);$/;"	v
lime_cairo_pattern_create_rgb	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoPattern.hx	/^	private static var lime_cairo_pattern_create_rgb = System.load ("lime", "lime_cairo_pattern_create_rgb", 3);$/;"	v
lime_cairo_pattern_create_rgba	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoPattern.hx	/^	private static var lime_cairo_pattern_create_rgba = System.load ("lime", "lime_cairo_pattern_create_rgba", 4);$/;"	v
lime_cairo_pattern_destroy	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoPattern.hx	/^	private static var lime_cairo_pattern_destroy = System.load ("lime", "lime_cairo_pattern_destroy", 1);$/;"	v
lime_cairo_pattern_get_color_stop_count	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoPattern.hx	/^	private static var lime_cairo_pattern_get_color_stop_count = System.load ("lime", "lime_cairo_pattern_get_color_stop_count", 1);$/;"	v
lime_cairo_pattern_get_extend	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoPattern.hx	/^	private static var lime_cairo_pattern_get_extend = System.load ("lime", "lime_cairo_pattern_get_extend", 1);$/;"	v
lime_cairo_pattern_get_filter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoPattern.hx	/^	private static var lime_cairo_pattern_get_filter = System.load ("lime", "lime_cairo_pattern_get_filter", 1);$/;"	v
lime_cairo_pattern_get_matrix	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoPattern.hx	/^	private static var lime_cairo_pattern_get_matrix = System.load ("lime", "lime_cairo_pattern_get_matrix", 1);$/;"	v
lime_cairo_pattern_set_extend	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoPattern.hx	/^	private static var lime_cairo_pattern_set_extend = System.load ("lime", "lime_cairo_pattern_set_extend", 2);$/;"	v
lime_cairo_pattern_set_filter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoPattern.hx	/^	private static var lime_cairo_pattern_set_filter = System.load ("lime", "lime_cairo_pattern_set_filter", 2);$/;"	v
lime_cairo_pattern_set_matrix	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoPattern.hx	/^	private static var lime_cairo_pattern_set_matrix = System.load ("lime", "lime_cairo_pattern_set_matrix", 2);$/;"	v
lime_cairo_pop_group	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_pop_group = System.load ("lime", "lime_cairo_pop_group", 1);$/;"	v
lime_cairo_pop_group_to_source	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_pop_group_to_source = System.load ("lime", "lime_cairo_pop_group_to_source", 1);$/;"	v
lime_cairo_push_group	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_push_group = System.load ("lime", "lime_cairo_push_group", 1);$/;"	v
lime_cairo_push_group_with_content	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_push_group_with_content = System.load ("lime", "lime_cairo_push_group_with_content", 2);$/;"	v
lime_cairo_rectangle	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_rectangle = System.load ("lime", "lime_cairo_rectangle", 5);$/;"	v
lime_cairo_reference	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_reference = System.load ("lime", "lime_cairo_reference", 1);$/;"	v
lime_cairo_rel_curve_to	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_rel_curve_to = System.load ("lime", "lime_cairo_rel_curve_to", -1);$/;"	v
lime_cairo_rel_line_to	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_rel_line_to = System.load ("lime", "lime_cairo_rel_line_to", 3);$/;"	v
lime_cairo_rel_move_to	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_rel_move_to = System.load ("lime", "lime_cairo_rel_move_to", 3);$/;"	v
lime_cairo_reset_clip	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_reset_clip = System.load ("lime", "lime_cairo_reset_clip", 1);$/;"	v
lime_cairo_restore	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_restore = System.load ("lime", "lime_cairo_restore", 1);$/;"	v
lime_cairo_rotate	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_rotate = System.load ("lime", "lime_cairo_rotate", 2);$/;"	v
lime_cairo_save	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_save = System.load ("lime", "lime_cairo_save", 1);$/;"	v
lime_cairo_scale	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_scale = System.load ("lime", "lime_cairo_scale", 3);$/;"	v
lime_cairo_set_antialias	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_set_antialias = System.load ("lime", "lime_cairo_set_antialias", 2);$/;"	v
lime_cairo_set_dash	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_set_dash = System.load ("lime", "lime_cairo_set_dash", 2);$/;"	v
lime_cairo_set_fill_rule	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_set_fill_rule = System.load ("lime", "lime_cairo_set_fill_rule", 2);$/;"	v
lime_cairo_set_font_face	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_set_font_face = System.load ("lime", "lime_cairo_set_font_face", 2);$/;"	v
lime_cairo_set_font_options	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_set_font_options = System.load ("lime", "lime_cairo_set_font_options", 2);$/;"	v
lime_cairo_set_font_size	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_set_font_size = System.load ("lime", "lime_cairo_set_font_size", 2);$/;"	v
lime_cairo_set_line_cap	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_set_line_cap = System.load ("lime", "lime_cairo_set_line_cap", 2);$/;"	v
lime_cairo_set_line_join	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_set_line_join = System.load ("lime", "lime_cairo_set_line_join", 2);$/;"	v
lime_cairo_set_line_width	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_set_line_width = System.load ("lime", "lime_cairo_set_line_width", 2);$/;"	v
lime_cairo_set_matrix	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_set_matrix = System.load ("lime", "lime_cairo_set_matrix", 2);$/;"	v
lime_cairo_set_miter_limit	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_set_miter_limit = System.load ("lime", "lime_cairo_set_miter_limit", 2);$/;"	v
lime_cairo_set_operator	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_set_operator = System.load ("lime", "lime_cairo_set_operator", 2);$/;"	v
lime_cairo_set_source	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_set_source = System.load ("lime", "lime_cairo_set_source", 2);$/;"	v
lime_cairo_set_source_rgb	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_set_source_rgb = System.load ("lime", "lime_cairo_set_source_rgb", 4);$/;"	v
lime_cairo_set_source_rgba	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_set_source_rgba = System.load ("lime", "lime_cairo_set_source_rgba", 5);$/;"	v
lime_cairo_set_source_surface	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_set_source_surface = System.load ("lime", "lime_cairo_set_source_surface", 4);$/;"	v
lime_cairo_set_tolerance	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_set_tolerance = System.load ("lime", "lime_cairo_set_tolerance", 2);$/;"	v
lime_cairo_show_page	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_show_page = System.load ("lime", "lime_cairo_show_page", 1);$/;"	v
lime_cairo_show_text	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_show_text = System.load ("lime", "lime_cairo_show_text", 2);$/;"	v
lime_cairo_status	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_status = System.load ("lime", "lime_cairo_status", 1);$/;"	v
lime_cairo_stroke	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_stroke = System.load ("lime", "lime_cairo_stroke", 1);$/;"	v
lime_cairo_stroke_extents	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_stroke_extents = System.load ("lime", "lime_cairo_stroke_extents", 5);$/;"	v
lime_cairo_stroke_preserve	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_stroke_preserve = System.load ("lime", "lime_cairo_stroke_preserve", 1);$/;"	v
lime_cairo_surface_destroy	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoSurface.hx	/^	private static var lime_cairo_surface_destroy = System.load ("lime", "lime_cairo_surface_destroy", 1);$/;"	v
lime_cairo_surface_flush	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoSurface.hx	/^	private static var lime_cairo_surface_flush = System.load ("lime", "lime_cairo_surface_flush", 1);$/;"	v
lime_cairo_transform	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_transform = System.load ("lime", "lime_cairo_transform", 2);$/;"	v
lime_cairo_translate	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_translate = System.load ("lime", "lime_cairo_translate", 3);$/;"	v
lime_cairo_version	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_version = System.load ("lime", "lime_cairo_version", 0);$/;"	v
lime_cairo_version_string	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	private static var lime_cairo_version_string = System.load ("lime", "lime_cairo_version_string", 0);$/;"	v
lime_capabilities_get_language	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	private static var lime_capabilities_get_language = Lib.load ("lime-legacy", "lime_legacy_capabilities_get_language", 0);$/;"	v
lime_capabilities_get_pixel_aspect_ratio	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	private static var lime_capabilities_get_pixel_aspect_ratio = Lib.load ("lime-legacy", "lime_legacy_capabilities_get_pixel_aspect_ratio", 0);$/;"	v
lime_capabilities_get_screen_dpi	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	private static var lime_capabilities_get_screen_dpi = Lib.load ("lime-legacy", "lime_legacy_capabilities_get_screen_dpi", 0);$/;"	v
lime_capabilities_get_screen_modes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	private static var lime_capabilities_get_screen_modes = Lib.load ("lime-legacy", "lime_legacy_capabilities_get_screen_modes", 0 );$/;"	v
lime_capabilities_get_screen_resolution_x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	private static var lime_capabilities_get_screen_resolution_x = Lib.load ("lime-legacy", "lime_legacy_capabilities_get_screen_resolution_x", 0);$/;"	v
lime_capabilities_get_screen_resolution_y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	private static var lime_capabilities_get_screen_resolution_y = Lib.load ("lime-legacy", "lime_legacy_capabilities_get_screen_resolution_y", 0);$/;"	v
lime_capabilities_get_screen_resolutions	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	private static var lime_capabilities_get_screen_resolutions = Lib.load ("lime-legacy", "lime_legacy_capabilities_get_screen_resolutions", 0 );$/;"	v
lime_clear_user_preference	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^	private static var lime_clear_user_preference = Lib.load ("lime-legacy", "lime_legacy_clear_user_preference", 1);$/;"	v
lime_console_render_clear	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ConsoleRenderContext.hx	/^	private static var lime_console_render_clear = System.load ("lime", "lime_console_render_clear", 0);$/;"	v
lime_console_render_set_clear_color	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ConsoleRenderContext.hx	/^	private static var lime_console_render_set_clear_color = System.load ("lime", "lime_console_render_set_clear_color", 4);$/;"	v
lime_console_render_set_clear_depth_stencil	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ConsoleRenderContext.hx	/^	private static var lime_console_render_set_clear_depth_stencil = System.load ("lime", "lime_console_render_set_clear_depth_stencil", 2);$/;"	v
lime_create_display_object	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_create_display_object = Lib.load ("lime-legacy", "lime_legacy_create_display_object", 0);$/;"	v
lime_create_display_object_container	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^	private static var lime_create_display_object_container = Lib.load ("lime-legacy", "lime_legacy_create_display_object_container", 0);$/;"	v
lime_curl_create	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	private static var lime_curl_create = Lib.load ("lime-legacy", "lime_legacy_curl_create", 1);$/;"	v
lime_curl_easy_cleanup	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLEasy.hx	/^	private static var lime_curl_easy_cleanup = System.load ("lime", "lime_curl_easy_cleanup", 1);$/;"	v
lime_curl_easy_duphandle	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLEasy.hx	/^	private static var lime_curl_easy_duphandle = System.load ("lime", "lime_curl_easy_duphandle", 1);$/;"	v
lime_curl_easy_escape	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLEasy.hx	/^	private static var lime_curl_easy_escape = System.load ("lime", "lime_curl_easy_escape", 3);$/;"	v
lime_curl_easy_getinfo	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLEasy.hx	/^	private static var lime_curl_easy_getinfo = System.load ("lime", "lime_curl_easy_getinfo", 2);$/;"	v
lime_curl_easy_init	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLEasy.hx	/^	private static var lime_curl_easy_init = System.load ("lime", "lime_curl_easy_init", 0);$/;"	v
lime_curl_easy_pause	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLEasy.hx	/^	private static var lime_curl_easy_pause = System.load ("lime", "lime_curl_easy_pause", 2);$/;"	v
lime_curl_easy_perform	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLEasy.hx	/^	private static var lime_curl_easy_perform = System.load ("lime", "lime_curl_easy_perform", 1);$/;"	v
lime_curl_easy_recv	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLEasy.hx	/^	private static var lime_curl_easy_recv = System.load ("lime", "lime_curl_easy_recv", 4);$/;"	v
lime_curl_easy_reset	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLEasy.hx	/^	private static var lime_curl_easy_reset = System.load ("lime", "lime_curl_easy_reset", 1);$/;"	v
lime_curl_easy_send	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLEasy.hx	/^	private static var lime_curl_easy_send = System.load ("lime", "lime_curl_easy_send", 4);$/;"	v
lime_curl_easy_setopt	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLEasy.hx	/^	private static var lime_curl_easy_setopt = System.load ("lime", "lime_curl_easy_setopt", 3);$/;"	v
lime_curl_easy_strerror	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLEasy.hx	/^	private static var lime_curl_easy_strerror = System.load ("lime", "lime_curl_easy_strerror", 1);$/;"	v
lime_curl_easy_unescape	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLEasy.hx	/^	private static var lime_curl_easy_unescape = System.load ("lime", "lime_curl_easy_unescape", 4);$/;"	v
lime_curl_get_code	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	private static var lime_curl_get_code = Lib.load ("lime-legacy", "lime_legacy_curl_get_code", 1);$/;"	v
lime_curl_get_cookies	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	private static var lime_curl_get_cookies = Lib.load ("lime-legacy", "lime_legacy_curl_get_cookies", 1);$/;"	v
lime_curl_get_data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	private static var lime_curl_get_data = Lib.load ("lime-legacy", "lime_legacy_curl_get_data", 1);$/;"	v
lime_curl_get_error_message	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	private static var lime_curl_get_error_message = Lib.load ("lime-legacy", "lime_legacy_curl_get_error_message", 1);$/;"	v
lime_curl_get_headers	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	private static var lime_curl_get_headers = Lib.load ("lime-legacy", "lime_legacy_curl_get_headers", 1);$/;"	v
lime_curl_getdate	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURL.hx	/^	private static var lime_curl_getdate = System.load ("lime", "lime_curl_getdate", 2);$/;"	v
lime_curl_getdate	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLEasy.hx	/^	private static var lime_curl_getdate = System.load ("lime", "lime_curl_getdate", 2);$/;"	v
lime_curl_global_cleanup	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURL.hx	/^	private static var lime_curl_global_cleanup = System.load ("lime", "lime_curl_global_cleanup", 0);$/;"	v
lime_curl_global_cleanup	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLEasy.hx	/^	private static var lime_curl_global_cleanup = System.load ("lime", "lime_curl_global_cleanup", 0);$/;"	v
lime_curl_global_init	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURL.hx	/^	private static var lime_curl_global_init = System.load ("lime", "lime_curl_global_init", 1);$/;"	v
lime_curl_global_init	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLEasy.hx	/^	private static var lime_curl_global_init = System.load ("lime", "lime_curl_global_init", 1);$/;"	v
lime_curl_initialize	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	private static var lime_curl_initialize = Lib.load ("lime-legacy", "lime_legacy_curl_initialize", 1);$/;"	v
lime_curl_process_loaders	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	private static var lime_curl_process_loaders = Lib.load ("lime-legacy", "lime_legacy_curl_process_loaders", 0);$/;"	v
lime_curl_update_loader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	private static var lime_curl_update_loader = Lib.load ("lime-legacy", "lime_legacy_curl_update_loader", 2);$/;"	v
lime_curl_version	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURL.hx	/^	private static var lime_curl_version = System.load ("lime", "lime_curl_version", 0);$/;"	v
lime_curl_version	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLEasy.hx	/^	private static var lime_curl_version = System.load ("lime", "lime_curl_version", 0);$/;"	v
lime_curl_version_info	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURL.hx	/^	private static var lime_curl_version_info = System.load ("lime", "lime_curl_easy_cleanup", 1);$/;"	v
lime_curl_version_info	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLEasy.hx	/^	private static var lime_curl_version_info = System.load ("lime", "lime_curl_easy_cleanup", 1);$/;"	v
lime_direct_renderer_create	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DirectRenderer.hx	/^	private static var lime_direct_renderer_create = Lib.load ("lime-legacy", "lime_legacy_direct_renderer_create", 0);$/;"	v
lime_direct_renderer_set	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DirectRenderer.hx	/^	private static var lime_direct_renderer_set = Lib.load ("lime-legacy", "lime_legacy_direct_renderer_set", 2);$/;"	v
lime_display_object_dismiss_soft_keyboard	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/InteractiveObject.hx	/^	private static var lime_display_object_dismiss_soft_keyboard = Lib.load ("lime-legacy", "lime_legacy_display_object_dismiss_soft_keyboard", 1);$/;"	v
lime_display_object_draw_to_surface	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_draw_to_surface = Lib.load ("lime-legacy", "lime_legacy_display_object_draw_to_surface", -1);$/;"	v
lime_display_object_get_alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_get_alpha = Lib.load ("lime-legacy", "lime_legacy_display_object_get_alpha", 1);$/;"	v
lime_display_object_get_bg	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_get_bg = Lib.load ("lime-legacy", "lime_legacy_display_object_get_bg", 1);$/;"	v
lime_display_object_get_blend_mode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_get_blend_mode = Lib.load ("lime-legacy", "lime_legacy_display_object_get_blend_mode", 1);$/;"	v
lime_display_object_get_bounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_get_bounds = Lib.load ("lime-legacy", "lime_legacy_display_object_get_bounds", 4);$/;"	v
lime_display_object_get_cache_as_bitmap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_get_cache_as_bitmap = Lib.load ("lime-legacy", "lime_legacy_display_object_get_cache_as_bitmap", 1);$/;"	v
lime_display_object_get_color_transform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_get_color_transform = Lib.load ("lime-legacy", "lime_legacy_display_object_get_color_transform", 3);$/;"	v
lime_display_object_get_graphics	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_get_graphics = Lib.load ("lime-legacy", "lime_legacy_display_object_get_graphics", 1);$/;"	v
lime_display_object_get_height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_get_height = Lib.load ("lime-legacy", "lime_legacy_display_object_get_height", 1);$/;"	v
lime_display_object_get_id	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_get_id = Lib.load ("lime-legacy", "lime_legacy_display_object_get_id", 1);$/;"	v
lime_display_object_get_matrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_get_matrix = Lib.load ("lime-legacy", "lime_legacy_display_object_get_matrix", 3);$/;"	v
lime_display_object_get_mouse_x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_get_mouse_x = Lib.load ("lime-legacy", "lime_legacy_display_object_get_mouse_x", 1);$/;"	v
lime_display_object_get_mouse_y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_get_mouse_y = Lib.load ("lime-legacy", "lime_legacy_display_object_get_mouse_y", 1);$/;"	v
lime_display_object_get_moves_for_soft_keyboard	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/InteractiveObject.hx	/^	private static var lime_display_object_get_moves_for_soft_keyboard = Lib.load ("lime-legacy", "lime_legacy_display_object_get_moves_for_soft_keyboard", 1);$/;"	v
lime_display_object_get_name	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_get_name = Lib.load ("lime-legacy", "lime_legacy_display_object_get_name", 1);$/;"	v
lime_display_object_get_needs_soft_keyboard	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/InteractiveObject.hx	/^	private static var lime_display_object_get_needs_soft_keyboard = Lib.load ("lime-legacy", "lime_legacy_display_object_get_needs_soft_keyboard", 1);$/;"	v
lime_display_object_get_pedantic_bitmap_caching	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_get_pedantic_bitmap_caching = Lib.load ("lime-legacy", "lime_legacy_display_object_get_pedantic_bitmap_caching", 1);$/;"	v
lime_display_object_get_pixel_bounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_get_pixel_bounds = Lib.load ("lime-legacy", "lime_legacy_display_object_get_pixel_bounds", 2);$/;"	v
lime_display_object_get_pixel_snapping	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Bitmap.hx	/^	private static var lime_display_object_get_pixel_snapping = Lib.load ("lime-legacy", "lime_legacy_display_object_get_pixel_snapping", 1);$/;"	v
lime_display_object_get_rotation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_get_rotation = Lib.load ("lime-legacy", "lime_legacy_display_object_get_rotation", 1);$/;"	v
lime_display_object_get_scale_x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_get_scale_x = Lib.load ("lime-legacy", "lime_legacy_display_object_get_scale_x", 1);$/;"	v
lime_display_object_get_scale_y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_get_scale_y = Lib.load ("lime-legacy", "lime_legacy_display_object_get_scale_y", 1);$/;"	v
lime_display_object_get_visible	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_get_visible = Lib.load ("lime-legacy", "lime_legacy_display_object_get_visible", 1);$/;"	v
lime_display_object_get_width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_get_width = Lib.load ("lime-legacy", "lime_legacy_display_object_get_width", 1);$/;"	v
lime_display_object_get_x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_get_x = Lib.load ("lime-legacy", "lime_legacy_display_object_get_x", 1);$/;"	v
lime_display_object_get_y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_get_y = Lib.load ("lime-legacy", "lime_legacy_display_object_get_y", 1);$/;"	v
lime_display_object_get_z	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_get_z = Lib.load ("lime-legacy", "lime_legacy_display_object_get_z", 1);$/;"	v
lime_display_object_global_to_local	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_global_to_local = Lib.load ("lime-legacy", "lime_legacy_display_object_global_to_local", 2);$/;"	v
lime_display_object_hit_test_point	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_hit_test_point = Lib.load ("lime-legacy", "lime_legacy_display_object_hit_test_point", 5);$/;"	v
lime_display_object_local_to_global	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_local_to_global = Lib.load ("lime-legacy", "lime_legacy_display_object_local_to_global", 2);$/;"	v
lime_display_object_request_soft_keyboard	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/InteractiveObject.hx	/^	private static var lime_display_object_request_soft_keyboard = Lib.load ("lime-legacy", "lime_legacy_display_object_request_soft_keyboard", 1);$/;"	v
lime_display_object_set_alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_set_alpha = Lib.load ("lime-legacy", "lime_legacy_display_object_set_alpha", 2);$/;"	v
lime_display_object_set_bg	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_set_bg = Lib.load ("lime-legacy", "lime_legacy_display_object_set_bg", 2);$/;"	v
lime_display_object_set_blend_mode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_set_blend_mode = Lib.load ("lime-legacy", "lime_legacy_display_object_set_blend_mode", 2);$/;"	v
lime_display_object_set_cache_as_bitmap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_set_cache_as_bitmap = Lib.load ("lime-legacy", "lime_legacy_display_object_set_cache_as_bitmap", 2);$/;"	v
lime_display_object_set_color_transform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_set_color_transform = Lib.load ("lime-legacy", "lime_legacy_display_object_set_color_transform", 2);$/;"	v
lime_display_object_set_filters	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_set_filters = Lib.load ("lime-legacy", "lime_legacy_display_object_set_filters", 2);$/;"	v
lime_display_object_set_height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_set_height = Lib.load ("lime-legacy", "lime_legacy_display_object_set_height", 2);$/;"	v
lime_display_object_set_mask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_set_mask = Lib.load ("lime-legacy", "lime_legacy_display_object_set_mask", 2);$/;"	v
lime_display_object_set_matrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_set_matrix = Lib.load ("lime-legacy", "lime_legacy_display_object_set_matrix", 2);$/;"	v
lime_display_object_set_mouse_enabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/InteractiveObject.hx	/^	private static var lime_display_object_set_mouse_enabled = Lib.load ("lime-legacy", "lime_legacy_display_object_set_mouse_enabled", 2);$/;"	v
lime_display_object_set_moves_for_soft_keyboard	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/InteractiveObject.hx	/^	private static var lime_display_object_set_moves_for_soft_keyboard = Lib.load ("lime-legacy", "lime_legacy_display_object_set_moves_for_soft_keyboard", 2);$/;"	v
lime_display_object_set_name	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_set_name = Lib.load ("lime-legacy", "lime_legacy_display_object_set_name", 2);$/;"	v
lime_display_object_set_needs_soft_keyboard	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/InteractiveObject.hx	/^	private static var lime_display_object_set_needs_soft_keyboard = Lib.load ("lime-legacy", "lime_legacy_display_object_set_needs_soft_keyboard", 2);$/;"	v
lime_display_object_set_pedantic_bitmap_caching	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_set_pedantic_bitmap_caching = Lib.load ("lime-legacy", "lime_legacy_display_object_set_pedantic_bitmap_caching", 2);$/;"	v
lime_display_object_set_pixel_snapping	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Bitmap.hx	/^	private static var lime_display_object_set_pixel_snapping = Lib.load ("lime-legacy", "lime_legacy_display_object_set_pixel_snapping", 2);$/;"	v
lime_display_object_set_rotation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_set_rotation = Lib.load ("lime-legacy", "lime_legacy_display_object_set_rotation", 2);$/;"	v
lime_display_object_set_scale9_grid	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_set_scale9_grid = Lib.load ("lime-legacy", "lime_legacy_display_object_set_scale9_grid", 2);$/;"	v
lime_display_object_set_scale_x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_set_scale_x = Lib.load ("lime-legacy", "lime_legacy_display_object_set_scale_x", 2);$/;"	v
lime_display_object_set_scale_y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_set_scale_y = Lib.load ("lime-legacy", "lime_legacy_display_object_set_scale_y", 2);$/;"	v
lime_display_object_set_scroll_rect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_set_scroll_rect = Lib.load ("lime-legacy", "lime_legacy_display_object_set_scroll_rect", 2);$/;"	v
lime_display_object_set_visible	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_set_visible = Lib.load ("lime-legacy", "lime_legacy_display_object_set_visible", 2);$/;"	v
lime_display_object_set_width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_set_width = Lib.load ("lime-legacy", "lime_legacy_display_object_set_width", 2);$/;"	v
lime_display_object_set_x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_set_x = Lib.load ("lime-legacy", "lime_legacy_display_object_set_x", 2);$/;"	v
lime_display_object_set_y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_set_y = Lib.load ("lime-legacy", "lime_legacy_display_object_set_y", 2);$/;"	v
lime_display_object_set_z	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private static var lime_display_object_set_z = Lib.load ("lime-legacy", "lime_legacy_display_object_set_z", 2);$/;"	v
lime_doc_add_child	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^	private static var lime_doc_add_child = Lib.load ("lime-legacy", "lime_legacy_doc_add_child", 2);$/;"	v
lime_doc_get_mouse_children	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^	private static var lime_doc_get_mouse_children = Lib.load ("lime-legacy", "lime_legacy_doc_get_mouse_children", 1);$/;"	v
lime_doc_remove_child	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^	private static var lime_doc_remove_child = Lib.load ("lime-legacy", "lime_legacy_doc_remove_child", 2);$/;"	v
lime_doc_set_child_index	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^	private static var lime_doc_set_child_index = Lib.load ("lime-legacy", "lime_legacy_doc_set_child_index", 3);$/;"	v
lime_doc_set_mouse_children	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^	private static var lime_doc_set_mouse_children = Lib.load ("lime-legacy", "lime_legacy_doc_set_mouse_children", 2);$/;"	v
lime_doc_swap_children	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^	private static var lime_doc_swap_children = Lib.load ("lime-legacy", "lime_legacy_doc_swap_children", 3);$/;"	v
lime_external_interface_add_callback	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/external/ExternalInterface.hx	/^	private static var lime_external_interface_add_callback = Lib.load ("lime-legacy", "lime_legacy_external_interface_add_callback", 2);$/;"	v
lime_external_interface_available	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/external/ExternalInterface.hx	/^	private static var lime_external_interface_available = Lib.load ("lime-legacy", "lime_legacy_external_interface_available", 0);$/;"	v
lime_external_interface_call	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/external/ExternalInterface.hx	/^	private static var lime_external_interface_call = Lib.load ("lime-legacy", "lime_legacy_external_interface_call", 2);$/;"	v
lime_external_interface_register_callbacks	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/external/ExternalInterface.hx	/^	private static var lime_external_interface_register_callbacks = Lib.load ("lime-legacy", "lime_legacy_external_interface_register_callbacks", 0);$/;"	v
lime_filesystem_get_special_dir	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/File.hx	/^	private static function lime_filesystem_get_special_dir (which:Int):String {$/;"	f
lime_filesystem_get_special_dir	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/File.hx	/^	private static var lime_filesystem_get_special_dir = Lib.load ("lime-legacy", "lime_legacy_filesystem_get_special_dir", 1);$/;"	v
lime_filesystem_get_special_dir	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/SystemPath.hx	/^	private static function lime_filesystem_get_special_dir (inWhich:Int):String {$/;"	f
lime_filesystem_get_special_dir	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/SystemPath.hx	/^	private static var lime_filesystem_get_special_dir = Lib.load ("lime-legacy", "lime_legacy_filesystem_get_special_dir", 1);$/;"	v
lime_filesystem_get_volumes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/StorageVolumeInfo.hx	/^	private static var lime_filesystem_get_volumes = Lib.load ("lime-legacy", "lime_legacy_filesystem_get_volumes", 2);$/;"	v
lime_font_get_ascender	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	private static var lime_font_get_ascender = System.load ("lime", "lime_font_get_ascender", 1);$/;"	v
lime_font_get_descender	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	private static var lime_font_get_descender = System.load ("lime", "lime_font_get_descender", 1);$/;"	v
lime_font_get_family_name	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	private static var lime_font_get_family_name = System.load ("lime", "lime_font_get_family_name", 1);$/;"	v
lime_font_get_glyph_index	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	private static var lime_font_get_glyph_index = System.load ("lime", "lime_font_get_glyph_index", 2);$/;"	v
lime_font_get_glyph_indices	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	private static var lime_font_get_glyph_indices = System.load ("lime", "lime_font_get_glyph_indices", 2);$/;"	v
lime_font_get_glyph_metrics	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	private static var lime_font_get_glyph_metrics = System.load ("lime", "lime_font_get_glyph_metrics", 2);$/;"	v
lime_font_get_height	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	private static var lime_font_get_height = System.load ("lime", "lime_font_get_height", 1);$/;"	v
lime_font_get_num_glyphs	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	private static var lime_font_get_num_glyphs = System.load ("lime", "lime_font_get_num_glyphs", 1);$/;"	v
lime_font_get_underline_position	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	private static var lime_font_get_underline_position = System.load ("lime", "lime_font_get_underline_position", 1);$/;"	v
lime_font_get_underline_thickness	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	private static var lime_font_get_underline_thickness = System.load ("lime", "lime_font_get_underline_thickness", 1);$/;"	v
lime_font_get_units_per_em	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	private static var lime_font_get_units_per_em = System.load ("lime", "lime_font_get_units_per_em", 1);$/;"	v
lime_font_iterate_device_fonts	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	private static var lime_font_iterate_device_fonts = Lib.load ("lime-legacy", "lime_legacy_font_iterate_device_fonts", 1);$/;"	v
lime_font_load	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	private static var lime_font_load:Dynamic = System.load ("lime", "lime_font_load", 1);$/;"	v
lime_font_outline_decompose	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	private static var lime_font_outline_decompose = System.load ("lime", "lime_font_outline_decompose", 2);$/;"	v
lime_font_register_font	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	private static var lime_font_register_font = Lib.load ("lime-legacy", "lime_legacy_font_register_font", 2);$/;"	v
lime_font_render_glyph	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	private static var lime_font_render_glyph = System.load ("lime", "lime_font_render_glyph", 3);$/;"	v
lime_font_render_glyphs	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	private static var lime_font_render_glyphs = System.load ("lime", "lime_font_render_glyphs", 3);$/;"	v
lime_font_set_size	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	private static var lime_font_set_size = System.load ("lime", "lime_font_set_size", 2);$/;"	v
lime_gamepad_event_manager_register	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private static var lime_gamepad_event_manager_register = System.load ("lime", "lime_gamepad_event_manager_register", 2);$/;"	v
lime_gamepad_get_device_guid	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Gamepad.hx	/^	private static var lime_gamepad_get_device_guid = System.load ("lime", "lime_gamepad_get_device_guid", 1);$/;"	v
lime_gamepad_get_device_name	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Gamepad.hx	/^	private static var lime_gamepad_get_device_name = System.load ("lime", "lime_gamepad_get_device_name", 1);$/;"	v
lime_get_frame_stage	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	private static var lime_get_frame_stage = Lib.load ("lime-legacy", "lime_legacy_get_frame_stage", 1);$/;"	v
lime_get_resource_path	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/File.hx	/^	private static var lime_get_resource_path = Lib.load ("lime-legacy", "lime_legacy_get_resource_path", 0);$/;"	v
lime_get_s3d_enabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3D.hx	/^	private static var lime_get_s3d_enabled:Void->Bool;$/;"	v
lime_get_s3d_supported	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3D.hx	/^	private static var lime_get_s3d_supported:Void->Bool;$/;"	v
lime_get_softkeyboardheight	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_get_softkeyboardheight = JNI.createStaticMethod ("org.haxe.lime.GameActivity", "getSoftKeyboardHeight", "()F");$/;"	v
lime_get_unique_device_identifier	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/System.hx	/^	private static var lime_get_unique_device_identifier = Lib.load ("lime-legacy", "lime_legacy_get_unique_device_identifier", 0);$/;"	v
lime_get_url	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	private static var lime_get_url = Lib.load ("lime-legacy", "lime_legacy_get_url", 1);$/;"	v
lime_get_user_preference	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^	private static var lime_get_user_preference = Lib.load ("lime-legacy", "lime_legacy_get_user_preference", 1);$/;"	v
lime_gfx_arc_to	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	private static var lime_gfx_arc_to = Lib.load ("lime-legacy", "lime_legacy_gfx_arc_to", 5);$/;"	v
lime_gfx_begin_bitmap_fill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	private static var lime_gfx_begin_bitmap_fill = Lib.load ("lime-legacy", "lime_legacy_gfx_begin_bitmap_fill", 5);$/;"	v
lime_gfx_begin_fill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	private static var lime_gfx_begin_fill = Lib.load ("lime-legacy", "lime_legacy_gfx_begin_fill", 3);$/;"	v
lime_gfx_begin_gradient_fill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	private static var lime_gfx_begin_gradient_fill = Lib.load ("lime-legacy", "lime_legacy_gfx_begin_gradient_fill", -1);$/;"	v
lime_gfx_clear	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	private static var lime_gfx_clear = Lib.load ("lime-legacy", "lime_legacy_gfx_clear", 1);$/;"	v
lime_gfx_curve_to	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	private static var lime_gfx_curve_to = Lib.load ("lime-legacy", "lime_legacy_gfx_curve_to", 5);$/;"	v
lime_gfx_draw_data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	private static var lime_gfx_draw_data = Lib.load ("lime-legacy", "lime_legacy_gfx_draw_data", 2);$/;"	v
lime_gfx_draw_datum	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	private static var lime_gfx_draw_datum = Lib.load ("lime-legacy", "lime_legacy_gfx_draw_datum", 2);$/;"	v
lime_gfx_draw_ellipse	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	private static var lime_gfx_draw_ellipse = Lib.load ("lime-legacy", "lime_legacy_gfx_draw_ellipse", 5);$/;"	v
lime_gfx_draw_path	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	private static var lime_gfx_draw_path = Lib.load ("lime-legacy", "lime_legacy_gfx_draw_path", 4);$/;"	v
lime_gfx_draw_points	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	private static var lime_gfx_draw_points = Lib.load ("lime-legacy", "lime_legacy_gfx_draw_points", -1);$/;"	v
lime_gfx_draw_rect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	private static var lime_gfx_draw_rect = Lib.load ("lime-legacy", "lime_legacy_gfx_draw_rect", 5);$/;"	v
lime_gfx_draw_round_rect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	private static var lime_gfx_draw_round_rect = Lib.load ("lime-legacy", "lime_legacy_gfx_draw_round_rect", -1);$/;"	v
lime_gfx_draw_tiles	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	private static var lime_gfx_draw_tiles = Lib.load ("lime-legacy", "lime_legacy_gfx_draw_tiles", 5);$/;"	v
lime_gfx_draw_triangles	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	private static var lime_gfx_draw_triangles = Lib.load ("lime-legacy", "lime_legacy_gfx_draw_triangles", -1);$/;"	v
lime_gfx_end_fill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	private static var lime_gfx_end_fill = Lib.load ("lime-legacy", "lime_legacy_gfx_end_fill", 1);$/;"	v
lime_gfx_line_bitmap_fill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	private static var lime_gfx_line_bitmap_fill = Lib.load ("lime-legacy", "lime_legacy_gfx_line_bitmap_fill", 5);$/;"	v
lime_gfx_line_gradient_fill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	private static var lime_gfx_line_gradient_fill = Lib.load ("lime-legacy", "lime_legacy_gfx_line_gradient_fill", -1);$/;"	v
lime_gfx_line_style	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	private static var lime_gfx_line_style = Lib.load ("lime-legacy", "lime_legacy_gfx_line_style", -1);$/;"	v
lime_gfx_line_to	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	private static var lime_gfx_line_to = Lib.load ("lime-legacy", "lime_legacy_gfx_line_to", 3);$/;"	v
lime_gfx_move_to	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	private static var lime_gfx_move_to = Lib.load ("lime-legacy", "lime_legacy_gfx_move_to", 3);$/;"	v
lime_gl_active_texture	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_active_texture = System.load ("lime", "lime_gl_active_texture", 1);$/;"	v
lime_gl_active_texture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_active_texture = load ("lime_legacy_gl_active_texture", 1);$/;"	v
lime_gl_attach_shader	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_attach_shader = System.load ("lime", "lime_gl_attach_shader", 2);$/;"	v
lime_gl_attach_shader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_attach_shader = load ("lime_legacy_gl_attach_shader", 2);$/;"	v
lime_gl_bind_attrib_location	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_bind_attrib_location = System.load ("lime", "lime_gl_bind_attrib_location", 3);$/;"	v
lime_gl_bind_attrib_location	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_bind_attrib_location = load ("lime_legacy_gl_bind_attrib_location", 3);$/;"	v
lime_gl_bind_bitmap_data_texture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_bind_bitmap_data_texture = load ("lime_legacy_gl_bind_bitmap_data_texture", 1);$/;"	v
lime_gl_bind_buffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_bind_buffer = System.load ("lime", "lime_gl_bind_buffer", 2);$/;"	v
lime_gl_bind_buffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_bind_buffer = load ("lime_legacy_gl_bind_buffer", 2);$/;"	v
lime_gl_bind_framebuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_bind_framebuffer = System.load ("lime", "lime_gl_bind_framebuffer", 2);$/;"	v
lime_gl_bind_framebuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_bind_framebuffer = load ("lime_legacy_gl_bind_framebuffer", 2);$/;"	v
lime_gl_bind_renderbuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_bind_renderbuffer = System.load ("lime", "lime_gl_bind_renderbuffer", 2);$/;"	v
lime_gl_bind_renderbuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_bind_renderbuffer = load ("lime_legacy_gl_bind_renderbuffer", 2);$/;"	v
lime_gl_bind_texture	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_bind_texture = System.load ("lime", "lime_gl_bind_texture", 2);$/;"	v
lime_gl_bind_texture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_bind_texture = load ("lime_legacy_gl_bind_texture", 2);$/;"	v
lime_gl_blend_color	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_blend_color = System.load ("lime", "lime_gl_blend_color", 4);$/;"	v
lime_gl_blend_color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_blend_color = load ("lime_legacy_gl_blend_color", 4);$/;"	v
lime_gl_blend_equation	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_blend_equation = System.load ("lime", "lime_gl_blend_equation", 1);$/;"	v
lime_gl_blend_equation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_blend_equation = load ("lime_legacy_gl_blend_equation", 1);$/;"	v
lime_gl_blend_equation_separate	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_blend_equation_separate = System.load ("lime", "lime_gl_blend_equation_separate", 2);$/;"	v
lime_gl_blend_equation_separate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_blend_equation_separate = load ("lime_legacy_gl_blend_equation_separate", 2);$/;"	v
lime_gl_blend_func	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_blend_func = System.load ("lime", "lime_gl_blend_func", 2);$/;"	v
lime_gl_blend_func	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_blend_func = load ("lime_legacy_gl_blend_func", 2);$/;"	v
lime_gl_blend_func_separate	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_blend_func_separate = System.load ("lime", "lime_gl_blend_func_separate", 4);$/;"	v
lime_gl_blend_func_separate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_blend_func_separate = load ("lime_legacy_gl_blend_func_separate", 4);$/;"	v
lime_gl_buffer_data	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_buffer_data = System.load ("lime", "lime_gl_buffer_data", 5);$/;"	v
lime_gl_buffer_data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_buffer_data = load ("lime_legacy_gl_buffer_data", 5);$/;"	v
lime_gl_buffer_sub_data	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_buffer_sub_data = System.load ("lime", "lime_gl_buffer_sub_data", 5);$/;"	v
lime_gl_buffer_sub_data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_buffer_sub_data = load ("lime_legacy_gl_buffer_sub_data", 5);$/;"	v
lime_gl_check_framebuffer_status	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_check_framebuffer_status = System.load ("lime", "lime_gl_check_framebuffer_status", 1);$/;"	v
lime_gl_check_framebuffer_status	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_check_framebuffer_status = load ("lime_legacy_gl_check_framebuffer_status", 1);$/;"	v
lime_gl_clear	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_clear = System.load ("lime", "lime_gl_clear", 1);$/;"	v
lime_gl_clear	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_clear = load ("lime_legacy_gl_clear", 1);$/;"	v
lime_gl_clear_color	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_clear_color = System.load ("lime", "lime_gl_clear_color", 4);$/;"	v
lime_gl_clear_color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_clear_color = load ("lime_legacy_gl_clear_color", 4);$/;"	v
lime_gl_clear_depth	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_clear_depth = System.load ("lime", "lime_gl_clear_depth", 1);$/;"	v
lime_gl_clear_depth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_clear_depth = load ("lime_legacy_gl_clear_depth", 1);$/;"	v
lime_gl_clear_stencil	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_clear_stencil = System.load ("lime", "lime_gl_clear_stencil", 1);$/;"	v
lime_gl_clear_stencil	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_clear_stencil = load ("lime_legacy_gl_clear_stencil", 1);$/;"	v
lime_gl_color_mask	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_color_mask = System.load ("lime", "lime_gl_color_mask", 4);$/;"	v
lime_gl_color_mask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_color_mask = load ("lime_legacy_gl_color_mask", 4);$/;"	v
lime_gl_compile_shader	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_compile_shader = System.load ("lime", "lime_gl_compile_shader", 1);$/;"	v
lime_gl_compile_shader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_compile_shader = load ("lime_legacy_gl_compile_shader", 1);$/;"	v
lime_gl_compressed_tex_image_2d	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_compressed_tex_image_2d = System.load ("lime", "lime_gl_compressed_tex_image_2d", -1);$/;"	v
lime_gl_compressed_tex_image_2d	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_compressed_tex_image_2d = load ("lime_legacy_gl_compressed_tex_image_2d", -1);$/;"	v
lime_gl_compressed_tex_sub_image_2d	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_compressed_tex_sub_image_2d = System.load ("lime", "lime_gl_compressed_tex_sub_image_2d", -1);$/;"	v
lime_gl_compressed_tex_sub_image_2d	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_compressed_tex_sub_image_2d = load ("lime_legacy_gl_compressed_tex_sub_image_2d", -1);$/;"	v
lime_gl_copy_tex_image_2d	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_copy_tex_image_2d = System.load ("lime", "lime_gl_copy_tex_image_2d", -1);$/;"	v
lime_gl_copy_tex_image_2d	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_copy_tex_image_2d = load ("lime_legacy_gl_copy_tex_image_2d", -1);$/;"	v
lime_gl_copy_tex_sub_image_2d	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_copy_tex_sub_image_2d = System.load ("lime", "lime_gl_copy_tex_sub_image_2d", -1);$/;"	v
lime_gl_copy_tex_sub_image_2d	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_copy_tex_sub_image_2d = load ("lime_legacy_gl_copy_tex_sub_image_2d", -1);$/;"	v
lime_gl_create_buffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_create_buffer = System.load ("lime", "lime_gl_create_buffer", 0);$/;"	v
lime_gl_create_buffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_create_buffer = load ("lime_legacy_gl_create_buffer", 0);$/;"	v
lime_gl_create_framebuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_create_framebuffer = System.load ("lime", "lime_gl_create_framebuffer", 0);$/;"	v
lime_gl_create_framebuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_create_framebuffer = load ("lime_legacy_gl_create_framebuffer", 0);$/;"	v
lime_gl_create_program	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_create_program = System.load ("lime", "lime_gl_create_program", 0);$/;"	v
lime_gl_create_program	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_create_program = load ("lime_legacy_gl_create_program", 0);$/;"	v
lime_gl_create_render_buffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_create_render_buffer = System.load ("lime", "lime_gl_create_render_buffer", 0);$/;"	v
lime_gl_create_render_buffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_create_render_buffer = load ("lime_legacy_gl_create_render_buffer", 0);$/;"	v
lime_gl_create_shader	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_create_shader = System.load ("lime", "lime_gl_create_shader", 1);$/;"	v
lime_gl_create_shader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_create_shader = load ("lime_legacy_gl_create_shader", 1);$/;"	v
lime_gl_create_texture	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_create_texture = System.load ("lime", "lime_gl_create_texture", 0);$/;"	v
lime_gl_create_texture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_create_texture = load ("lime_legacy_gl_create_texture", 0);$/;"	v
lime_gl_cull_face	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_cull_face = System.load ("lime", "lime_gl_cull_face", 1);$/;"	v
lime_gl_cull_face	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_cull_face = load ("lime_legacy_gl_cull_face", 1);$/;"	v
lime_gl_delete_buffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_delete_buffer = System.load ("lime", "lime_gl_delete_buffer", 1);$/;"	v
lime_gl_delete_buffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_delete_buffer = load ("lime_legacy_gl_delete_buffer", 1);$/;"	v
lime_gl_delete_framebuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_delete_framebuffer = System.load ("lime", "lime_gl_delete_framebuffer", 1);$/;"	v
lime_gl_delete_framebuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_delete_framebuffer = load ("lime_legacy_gl_delete_framebuffer", 1);$/;"	v
lime_gl_delete_program	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_delete_program = System.load ("lime", "lime_gl_delete_program", 1);$/;"	v
lime_gl_delete_program	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_delete_program = load ("lime_legacy_gl_delete_program", 1);$/;"	v
lime_gl_delete_render_buffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_delete_render_buffer = System.load ("lime", "lime_gl_delete_render_buffer", 1);$/;"	v
lime_gl_delete_render_buffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_delete_render_buffer = load ("lime_legacy_gl_delete_render_buffer", 1);$/;"	v
lime_gl_delete_shader	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_delete_shader = System.load ("lime", "lime_gl_delete_shader", 1);$/;"	v
lime_gl_delete_shader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_delete_shader = load ("lime_legacy_gl_delete_shader", 1);$/;"	v
lime_gl_delete_texture	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_delete_texture = System.load ("lime", "lime_gl_delete_texture", 1);$/;"	v
lime_gl_delete_texture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_delete_texture = load ("lime_legacy_gl_delete_texture", 1);$/;"	v
lime_gl_depth_func	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_depth_func = System.load ("lime", "lime_gl_depth_func", 1);$/;"	v
lime_gl_depth_func	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_depth_func = load ("lime_legacy_gl_depth_func", 1);$/;"	v
lime_gl_depth_mask	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_depth_mask = System.load ("lime", "lime_gl_depth_mask", 1);$/;"	v
lime_gl_depth_mask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_depth_mask = load ("lime_legacy_gl_depth_mask", 1);$/;"	v
lime_gl_depth_range	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_depth_range = System.load ("lime", "lime_gl_depth_range", 2);$/;"	v
lime_gl_depth_range	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_depth_range = load ("lime_legacy_gl_depth_range", 2);$/;"	v
lime_gl_detach_shader	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_detach_shader = System.load ("lime", "lime_gl_detach_shader", 2);$/;"	v
lime_gl_detach_shader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_detach_shader = load ("lime_legacy_gl_detach_shader", 2);$/;"	v
lime_gl_disable	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_disable = System.load ("lime", "lime_gl_disable", 1);$/;"	v
lime_gl_disable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_disable = load ("lime_legacy_gl_disable", 1);$/;"	v
lime_gl_disable_vertex_attrib_array	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_disable_vertex_attrib_array = System.load ("lime", "lime_gl_disable_vertex_attrib_array", 1);$/;"	v
lime_gl_disable_vertex_attrib_array	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_disable_vertex_attrib_array = load ("lime_legacy_gl_disable_vertex_attrib_array", 1);$/;"	v
lime_gl_draw_arrays	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_draw_arrays = System.load ("lime", "lime_gl_draw_arrays", 3);$/;"	v
lime_gl_draw_arrays	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_draw_arrays = load ("lime_legacy_gl_draw_arrays", 3);$/;"	v
lime_gl_draw_elements	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_draw_elements = System.load ("lime", "lime_gl_draw_elements", 4);$/;"	v
lime_gl_draw_elements	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_draw_elements = load ("lime_legacy_gl_draw_elements", 4);$/;"	v
lime_gl_enable	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_enable = System.load ("lime", "lime_gl_enable", 1);$/;"	v
lime_gl_enable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_enable = load ("lime_legacy_gl_enable", 1);$/;"	v
lime_gl_enable_vertex_attrib_array	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_enable_vertex_attrib_array = System.load ("lime", "lime_gl_enable_vertex_attrib_array", 1);$/;"	v
lime_gl_enable_vertex_attrib_array	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_enable_vertex_attrib_array = load ("lime_legacy_gl_enable_vertex_attrib_array", 1);$/;"	v
lime_gl_finish	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_finish = System.load ("lime", "lime_gl_finish", 0);$/;"	v
lime_gl_finish	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_finish = load ("lime_legacy_gl_finish", 0);$/;"	v
lime_gl_flush	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_flush = System.load ("lime", "lime_gl_flush", 0);$/;"	v
lime_gl_flush	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_flush = load ("lime_legacy_gl_flush", 0);$/;"	v
lime_gl_framebuffer_renderbuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_framebuffer_renderbuffer = System.load ("lime", "lime_gl_framebuffer_renderbuffer", 4);$/;"	v
lime_gl_framebuffer_renderbuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_framebuffer_renderbuffer = load ("lime_legacy_gl_framebuffer_renderbuffer", 4);$/;"	v
lime_gl_framebuffer_texture2D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_framebuffer_texture2D = System.load ("lime", "lime_gl_framebuffer_texture2D", 5);$/;"	v
lime_gl_framebuffer_texture2D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_framebuffer_texture2D = load ("lime_legacy_gl_framebuffer_texture2D", 5);$/;"	v
lime_gl_front_face	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_front_face = System.load ("lime", "lime_gl_front_face", 1);$/;"	v
lime_gl_front_face	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_front_face = load ("lime_legacy_gl_front_face", 1);$/;"	v
lime_gl_generate_mipmap	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_generate_mipmap = System.load ("lime", "lime_gl_generate_mipmap", 1);$/;"	v
lime_gl_generate_mipmap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_generate_mipmap = load ("lime_legacy_gl_generate_mipmap", 1);$/;"	v
lime_gl_get_active_attrib	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_get_active_attrib = System.load ("lime", "lime_gl_get_active_attrib", 2);$/;"	v
lime_gl_get_active_attrib	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_get_active_attrib = load ("lime_legacy_gl_get_active_attrib", 2);$/;"	v
lime_gl_get_active_uniform	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_get_active_uniform = System.load ("lime", "lime_gl_get_active_uniform", 2);$/;"	v
lime_gl_get_active_uniform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_get_active_uniform = load ("lime_legacy_gl_get_active_uniform", 2);$/;"	v
lime_gl_get_attrib_location	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_get_attrib_location = System.load ("lime", "lime_gl_get_attrib_location", 2);$/;"	v
lime_gl_get_attrib_location	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_get_attrib_location = load ("lime_legacy_gl_get_attrib_location", 2);$/;"	v
lime_gl_get_buffer_paramerter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_get_buffer_paramerter = load ("lime_legacy_gl_get_buffer_paramerter", 2);$/;"	v
lime_gl_get_buffer_parameter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_get_buffer_parameter = System.load ("lime", "lime_gl_get_buffer_parameter", 2);$/;"	v
lime_gl_get_context_attributes	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_get_context_attributes = System.load ("lime", "lime_gl_get_context_attributes", 0);$/;"	v
lime_gl_get_context_attributes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_get_context_attributes = load ("lime_legacy_gl_get_context_attributes", 0);$/;"	v
lime_gl_get_error	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_get_error = System.load ("lime", "lime_gl_get_error", 0);$/;"	v
lime_gl_get_error	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_get_error = load ("lime_legacy_gl_get_error", 0);$/;"	v
lime_gl_get_framebuffer_attachment_parameter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_get_framebuffer_attachment_parameter = System.load ("lime", "lime_gl_get_framebuffer_attachment_parameter", 3);$/;"	v
lime_gl_get_framebuffer_attachment_parameter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_get_framebuffer_attachment_parameter = load ("lime_legacy_gl_get_framebuffer_attachment_parameter", 3);$/;"	v
lime_gl_get_parameter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_get_parameter = System.load ("lime", "lime_gl_get_parameter", 1);$/;"	v
lime_gl_get_parameter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_get_parameter = load ("lime_legacy_gl_get_parameter", 1);$/;"	v
lime_gl_get_program_info_log	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_get_program_info_log = System.load ("lime", "lime_gl_get_program_info_log", 1);$/;"	v
lime_gl_get_program_info_log	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_get_program_info_log = load ("lime_legacy_gl_get_program_info_log", 1);$/;"	v
lime_gl_get_program_parameter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_get_program_parameter = System.load ("lime", "lime_gl_get_program_parameter", 2);$/;"	v
lime_gl_get_program_parameter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_get_program_parameter = load ("lime_legacy_gl_get_program_parameter", 2);$/;"	v
lime_gl_get_render_buffer_parameter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_get_render_buffer_parameter = System.load ("lime", "lime_gl_get_render_buffer_parameter", 2);$/;"	v
lime_gl_get_render_buffer_parameter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_get_render_buffer_parameter = load ("lime_legacy_gl_get_render_buffer_parameter", 2);$/;"	v
lime_gl_get_shader_info_log	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_get_shader_info_log = System.load ("lime", "lime_gl_get_shader_info_log", 1);$/;"	v
lime_gl_get_shader_info_log	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_get_shader_info_log = load ("lime_legacy_gl_get_shader_info_log", 1);$/;"	v
lime_gl_get_shader_parameter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_get_shader_parameter = System.load ("lime", "lime_gl_get_shader_parameter", 2);$/;"	v
lime_gl_get_shader_parameter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_get_shader_parameter = load ("lime_legacy_gl_get_shader_parameter", 2);$/;"	v
lime_gl_get_shader_precision_format	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_get_shader_precision_format = System.load ("lime", "lime_gl_get_shader_precision_format", 2);$/;"	v
lime_gl_get_shader_precision_format	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_get_shader_precision_format = load ("lime_legacy_gl_get_shader_precision_format", 2);$/;"	v
lime_gl_get_shader_source	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_get_shader_source = System.load ("lime", "lime_gl_get_shader_source", 1);$/;"	v
lime_gl_get_shader_source	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_get_shader_source = load ("lime_legacy_gl_get_shader_source", 1);$/;"	v
lime_gl_get_supported_extensions	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_get_supported_extensions = System.load ("lime", "lime_gl_get_supported_extensions", 1);$/;"	v
lime_gl_get_supported_extensions	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_get_supported_extensions = load ("lime_legacy_gl_get_supported_extensions", 1);$/;"	v
lime_gl_get_tex_parameter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_get_tex_parameter = System.load ("lime", "lime_gl_get_tex_parameter", 2);$/;"	v
lime_gl_get_tex_parameter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_get_tex_parameter = load ("lime_legacy_gl_get_tex_parameter", 2);$/;"	v
lime_gl_get_uniform	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_get_uniform = System.load ("lime", "lime_gl_get_uniform", 2);$/;"	v
lime_gl_get_uniform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_get_uniform = load ("lime_legacy_gl_get_uniform", 2);$/;"	v
lime_gl_get_uniform_location	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_get_uniform_location = System.load ("lime", "lime_gl_get_uniform_location", 2);$/;"	v
lime_gl_get_uniform_location	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_get_uniform_location = load ("lime_legacy_gl_get_uniform_location", 2);$/;"	v
lime_gl_get_vertex_attrib	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_get_vertex_attrib = System.load ("lime", "lime_gl_get_vertex_attrib", 2);$/;"	v
lime_gl_get_vertex_attrib	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_get_vertex_attrib = load ("lime_legacy_gl_get_vertex_attrib", 2);$/;"	v
lime_gl_get_vertex_attrib_offset	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_get_vertex_attrib_offset = System.load ("lime", "lime_gl_get_vertex_attrib_offset", 2);$/;"	v
lime_gl_get_vertex_attrib_offset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_get_vertex_attrib_offset = load ("lime_legacy_gl_get_vertex_attrib_offset", 2);$/;"	v
lime_gl_hint	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_hint = System.load ("lime", "lime_gl_hint", 2);$/;"	v
lime_gl_hint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_hint = load ("lime_legacy_gl_hint", 2);$/;"	v
lime_gl_is_buffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_is_buffer = System.load ("lime", "lime_gl_is_buffer", 1);$/;"	v
lime_gl_is_buffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_is_buffer = load ("lime_legacy_gl_is_buffer", 1);$/;"	v
lime_gl_is_enabled	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_is_enabled = System.load ("lime", "lime_gl_is_enabled", 1);$/;"	v
lime_gl_is_enabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_is_enabled = load ("lime_legacy_gl_is_enabled", 1);$/;"	v
lime_gl_is_framebuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_is_framebuffer = System.load ("lime", "lime_gl_is_framebuffer", 1);$/;"	v
lime_gl_is_framebuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_is_framebuffer = load ("lime_legacy_gl_is_framebuffer", 1);$/;"	v
lime_gl_is_program	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_is_program = System.load ("lime", "lime_gl_is_program", 1);$/;"	v
lime_gl_is_program	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_is_program = load ("lime_legacy_gl_is_program", 1);$/;"	v
lime_gl_is_renderbuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_is_renderbuffer = System.load ("lime", "lime_gl_is_renderbuffer", 1);$/;"	v
lime_gl_is_renderbuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_is_renderbuffer = load ("lime_legacy_gl_is_renderbuffer", 1);$/;"	v
lime_gl_is_shader	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_is_shader = System.load ("lime", "lime_gl_is_shader", 1);$/;"	v
lime_gl_is_shader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_is_shader = load ("lime_legacy_gl_is_shader", 1);$/;"	v
lime_gl_is_texture	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_is_texture = System.load ("lime", "lime_gl_is_texture", 1);$/;"	v
lime_gl_is_texture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_is_texture = load ("lime_legacy_gl_is_texture", 1);$/;"	v
lime_gl_line_width	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_line_width = System.load ("lime", "lime_gl_line_width", 1);$/;"	v
lime_gl_line_width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_line_width = load ("lime_legacy_gl_line_width", 1);$/;"	v
lime_gl_link_program	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_link_program = System.load ("lime", "lime_gl_link_program", 1);$/;"	v
lime_gl_link_program	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_link_program = load ("lime_legacy_gl_link_program", 1);$/;"	v
lime_gl_pixel_storei	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_pixel_storei = System.load ("lime", "lime_gl_pixel_storei", 2);$/;"	v
lime_gl_pixel_storei	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_pixel_storei = load ("lime_legacy_gl_pixel_storei", 2);$/;"	v
lime_gl_polygon_offset	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_polygon_offset = System.load ("lime", "lime_gl_polygon_offset", 2);$/;"	v
lime_gl_polygon_offset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_polygon_offset = load ("lime_legacy_gl_polygon_offset", 2);$/;"	v
lime_gl_read_pixels	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_read_pixels = System.load ("lime", "lime_gl_read_pixels", -1);$/;"	v
lime_gl_read_pixels	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_read_pixels = load ("lime_legacy_gl_read_pixels", -1);$/;"	v
lime_gl_renderbuffer_storage	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_renderbuffer_storage = System.load ("lime", "lime_gl_renderbuffer_storage", 4);$/;"	v
lime_gl_renderbuffer_storage	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_renderbuffer_storage = load ("lime_legacy_gl_renderbuffer_storage", 4);$/;"	v
lime_gl_s3d_get_eye_separation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3D.hx	/^	private static var lime_gl_s3d_get_eye_separation:Void->Float;$/;"	v
lime_gl_s3d_get_focal_length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3D.hx	/^	private static var lime_gl_s3d_get_focal_length:Void->Float;$/;"	v
lime_gl_s3d_set_eye_separation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3D.hx	/^	private static var lime_gl_s3d_set_eye_separation:Float->Void;$/;"	v
lime_gl_s3d_set_focal_length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3D.hx	/^	private static var lime_gl_s3d_set_focal_length:Float->Void;$/;"	v
lime_gl_sample_coverage	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_sample_coverage = System.load ("lime", "lime_gl_sample_coverage", 2);$/;"	v
lime_gl_sample_coverage	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_sample_coverage = load ("lime_legacy_gl_sample_coverage", 2);$/;"	v
lime_gl_scissor	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_scissor = System.load ("lime", "lime_gl_scissor", 4);$/;"	v
lime_gl_scissor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_scissor = load ("lime_legacy_gl_scissor", 4);$/;"	v
lime_gl_shader_source	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_shader_source = System.load ("lime", "lime_gl_shader_source", 2);$/;"	v
lime_gl_shader_source	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_shader_source = load ("lime_legacy_gl_shader_source", 2);$/;"	v
lime_gl_stencil_func	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_stencil_func = System.load ("lime", "lime_gl_stencil_func", 3);$/;"	v
lime_gl_stencil_func	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_stencil_func = load ("lime_legacy_gl_stencil_func", 3);$/;"	v
lime_gl_stencil_func_separate	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_stencil_func_separate = System.load ("lime", "lime_gl_stencil_func_separate", 4);$/;"	v
lime_gl_stencil_func_separate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_stencil_func_separate = load ("lime_legacy_gl_stencil_func_separate", 4);$/;"	v
lime_gl_stencil_mask	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_stencil_mask = System.load ("lime", "lime_gl_stencil_mask", 1);$/;"	v
lime_gl_stencil_mask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_stencil_mask = load ("lime_legacy_gl_stencil_mask", 1);$/;"	v
lime_gl_stencil_mask_separate	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_stencil_mask_separate = System.load ("lime", "lime_gl_stencil_mask_separate", 2);$/;"	v
lime_gl_stencil_mask_separate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_stencil_mask_separate = load ("lime_legacy_gl_stencil_mask_separate", 2);$/;"	v
lime_gl_stencil_op	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_stencil_op = System.load ("lime", "lime_gl_stencil_op", 3);$/;"	v
lime_gl_stencil_op	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_stencil_op = load ("lime_legacy_gl_stencil_op", 3);$/;"	v
lime_gl_stencil_op_separate	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_stencil_op_separate = System.load ("lime", "lime_gl_stencil_op_separate", 4);$/;"	v
lime_gl_stencil_op_separate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_stencil_op_separate = load ("lime_legacy_gl_stencil_op_separate", 4);$/;"	v
lime_gl_tex_image_2d	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_tex_image_2d = System.load ("lime", "lime_gl_tex_image_2d", -1);$/;"	v
lime_gl_tex_image_2d	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_tex_image_2d = load ("lime_legacy_gl_tex_image_2d", -1);$/;"	v
lime_gl_tex_parameterf	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_tex_parameterf = System.load ("lime", "lime_gl_tex_parameterf", 3);$/;"	v
lime_gl_tex_parameterf	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_tex_parameterf = load ("lime_legacy_gl_tex_parameterf", 3);$/;"	v
lime_gl_tex_parameteri	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_tex_parameteri = System.load ("lime", "lime_gl_tex_parameteri", 3);$/;"	v
lime_gl_tex_parameteri	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_tex_parameteri = load ("lime_legacy_gl_tex_parameteri", 3);$/;"	v
lime_gl_tex_sub_image_2d	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_tex_sub_image_2d = System.load ("lime", "lime_gl_tex_sub_image_2d", -1);$/;"	v
lime_gl_tex_sub_image_2d	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_tex_sub_image_2d = load ("lime_legacy_gl_tex_sub_image_2d", -1);$/;"	v
lime_gl_uniform1f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_uniform1f = System.load ("lime", "lime_gl_uniform1f", 2);$/;"	v
lime_gl_uniform1f	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_uniform1f = load ("lime_legacy_gl_uniform1f", 2);$/;"	v
lime_gl_uniform1fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_uniform1fv = System.load ("lime", "lime_gl_uniform1fv", 2);$/;"	v
lime_gl_uniform1fv	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_uniform1fv = load ("lime_legacy_gl_uniform1fv", 2);$/;"	v
lime_gl_uniform1i	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_uniform1i = System.load ("lime", "lime_gl_uniform1i", 2);$/;"	v
lime_gl_uniform1i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_uniform1i = load ("lime_legacy_gl_uniform1i", 2);$/;"	v
lime_gl_uniform1iv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_uniform1iv = System.load ("lime", "lime_gl_uniform1iv", 2);$/;"	v
lime_gl_uniform1iv	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_uniform1iv = load ("lime_legacy_gl_uniform1iv", 2);$/;"	v
lime_gl_uniform2f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_uniform2f = System.load ("lime", "lime_gl_uniform2f", 3);$/;"	v
lime_gl_uniform2f	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_uniform2f = load ("lime_legacy_gl_uniform2f", 3);$/;"	v
lime_gl_uniform2fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_uniform2fv = System.load ("lime", "lime_gl_uniform2fv", 2);$/;"	v
lime_gl_uniform2fv	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_uniform2fv = load ("lime_legacy_gl_uniform2fv", 2);$/;"	v
lime_gl_uniform2i	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_uniform2i = System.load ("lime", "lime_gl_uniform2i", 3);$/;"	v
lime_gl_uniform2i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_uniform2i = load ("lime_legacy_gl_uniform2i", 3);$/;"	v
lime_gl_uniform2iv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_uniform2iv = System.load ("lime", "lime_gl_uniform2iv", 2);$/;"	v
lime_gl_uniform2iv	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_uniform2iv = load ("lime_legacy_gl_uniform2iv", 2);$/;"	v
lime_gl_uniform3f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_uniform3f = System.load ("lime", "lime_gl_uniform3f", 4);$/;"	v
lime_gl_uniform3f	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_uniform3f = load ("lime_legacy_gl_uniform3f", 4);$/;"	v
lime_gl_uniform3fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_uniform3fv = System.load ("lime", "lime_gl_uniform3fv", 2);$/;"	v
lime_gl_uniform3fv	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_uniform3fv = load ("lime_legacy_gl_uniform3fv", 2);$/;"	v
lime_gl_uniform3i	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_uniform3i = System.load ("lime", "lime_gl_uniform3i", 4);$/;"	v
lime_gl_uniform3i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_uniform3i = load ("lime_legacy_gl_uniform3i", 4);$/;"	v
lime_gl_uniform3iv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_uniform3iv = System.load ("lime", "lime_gl_uniform3iv", 2);$/;"	v
lime_gl_uniform3iv	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_uniform3iv = load ("lime_legacy_gl_uniform3iv", 2);$/;"	v
lime_gl_uniform4f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_uniform4f = System.load ("lime", "lime_gl_uniform4f", 5);$/;"	v
lime_gl_uniform4f	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_uniform4f = load ("lime_legacy_gl_uniform4f", 5);$/;"	v
lime_gl_uniform4fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_uniform4fv = System.load ("lime", "lime_gl_uniform4fv", 2);$/;"	v
lime_gl_uniform4fv	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_uniform4fv = load ("lime_legacy_gl_uniform4fv", 2);$/;"	v
lime_gl_uniform4i	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_uniform4i = System.load ("lime", "lime_gl_uniform4i", 5);$/;"	v
lime_gl_uniform4i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_uniform4i = load ("lime_legacy_gl_uniform4i", 5);$/;"	v
lime_gl_uniform4iv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_uniform4iv = System.load ("lime", "lime_gl_uniform4iv", 2);$/;"	v
lime_gl_uniform4iv	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_uniform4iv = load ("lime_legacy_gl_uniform4iv", 2);$/;"	v
lime_gl_uniform_matrix	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_uniform_matrix = System.load ("lime", "lime_gl_uniform_matrix", 4);$/;"	v
lime_gl_uniform_matrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_uniform_matrix = load ("lime_legacy_gl_uniform_matrix", 4);$/;"	v
lime_gl_use_program	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_use_program = System.load ("lime", "lime_gl_use_program", 1);$/;"	v
lime_gl_use_program	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_use_program = load ("lime_legacy_gl_use_program", 1);$/;"	v
lime_gl_validate_program	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_validate_program = System.load ("lime", "lime_gl_validate_program", 1);$/;"	v
lime_gl_validate_program	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_validate_program = load ("lime_legacy_gl_validate_program", 1);$/;"	v
lime_gl_version	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_version = System.load ("lime", "lime_gl_version", 0);$/;"	v
lime_gl_version	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_version = load ("lime_legacy_gl_version", 0);$/;"	v
lime_gl_vertex_attrib1f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_vertex_attrib1f = System.load ("lime", "lime_gl_vertex_attrib1f", 2);$/;"	v
lime_gl_vertex_attrib1f	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_vertex_attrib1f = load ("lime_legacy_gl_vertex_attrib1f", 2);$/;"	v
lime_gl_vertex_attrib1fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_vertex_attrib1fv = System.load ("lime", "lime_gl_vertex_attrib1fv", 2);$/;"	v
lime_gl_vertex_attrib1fv	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_vertex_attrib1fv = load ("lime_legacy_gl_vertex_attrib1fv", 2);$/;"	v
lime_gl_vertex_attrib2f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_vertex_attrib2f = System.load ("lime", "lime_gl_vertex_attrib2f", 3);$/;"	v
lime_gl_vertex_attrib2f	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_vertex_attrib2f = load ("lime_legacy_gl_vertex_attrib2f", 3);$/;"	v
lime_gl_vertex_attrib2fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_vertex_attrib2fv = System.load ("lime", "lime_gl_vertex_attrib2fv", 2);$/;"	v
lime_gl_vertex_attrib2fv	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_vertex_attrib2fv = load ("lime_legacy_gl_vertex_attrib2fv", 2);$/;"	v
lime_gl_vertex_attrib3f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_vertex_attrib3f = System.load ("lime", "lime_gl_vertex_attrib3f", 4);$/;"	v
lime_gl_vertex_attrib3f	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_vertex_attrib3f = load ("lime_legacy_gl_vertex_attrib3f", 4);$/;"	v
lime_gl_vertex_attrib3fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_vertex_attrib3fv = System.load ("lime", "lime_gl_vertex_attrib3fv", 2);$/;"	v
lime_gl_vertex_attrib3fv	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_vertex_attrib3fv = load ("lime_legacy_gl_vertex_attrib3fv", 2);$/;"	v
lime_gl_vertex_attrib4f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_vertex_attrib4f = System.load ("lime", "lime_gl_vertex_attrib4f", 5);$/;"	v
lime_gl_vertex_attrib4f	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_vertex_attrib4f = load ("lime_legacy_gl_vertex_attrib4f", 5);$/;"	v
lime_gl_vertex_attrib4fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_vertex_attrib4fv = System.load ("lime", "lime_gl_vertex_attrib4fv", 2);$/;"	v
lime_gl_vertex_attrib4fv	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_vertex_attrib4fv = load ("lime_legacy_gl_vertex_attrib4fv", 2);$/;"	v
lime_gl_vertex_attrib_pointer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_vertex_attrib_pointer = System.load ("lime", "lime_gl_vertex_attrib_pointer", -1);$/;"	v
lime_gl_vertex_attrib_pointer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_vertex_attrib_pointer = load ("lime_legacy_gl_vertex_attrib_pointer", -1);$/;"	v
lime_gl_viewport	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	private static var lime_gl_viewport = System.load ("lime", "lime_gl_viewport", 4);$/;"	v
lime_gl_viewport	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static var lime_gl_viewport = load ("lime_legacy_gl_viewport", 4);$/;"	v
lime_graphics_end_fill_create	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsEndFill.hx	/^	private static var lime_graphics_end_fill_create = Lib.load ("lime-legacy", "lime_legacy_graphics_end_fill_create", 0);$/;"	v
lime_graphics_path_create	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsPath.hx	/^	private static var lime_graphics_path_create = Lib.load ("lime-legacy", "lime_legacy_graphics_path_create", 3);$/;"	v
lime_graphics_path_curve_to	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsPath.hx	/^	private static var lime_graphics_path_curve_to = Lib.load ("lime-legacy", "lime_legacy_graphics_path_curve_to", 5);$/;"	v
lime_graphics_path_get_commands	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsPath.hx	/^	private static var lime_graphics_path_get_commands = Lib.load ("lime-legacy", "lime_legacy_graphics_path_get_commands", 2);$/;"	v
lime_graphics_path_get_data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsPath.hx	/^	private static var lime_graphics_path_get_data = Lib.load ("lime-legacy", "lime_legacy_graphics_path_get_data", 2);$/;"	v
lime_graphics_path_line_to	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsPath.hx	/^	private static var lime_graphics_path_line_to = Lib.load ("lime-legacy", "lime_legacy_graphics_path_line_to", 3);$/;"	v
lime_graphics_path_move_to	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsPath.hx	/^	private static var lime_graphics_path_move_to = Lib.load ("lime-legacy", "lime_legacy_graphics_path_move_to", 3);$/;"	v
lime_graphics_path_set_commands	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsPath.hx	/^	private static var lime_graphics_path_set_commands = Lib.load ("lime-legacy", "lime_legacy_graphics_path_set_commands", 2);$/;"	v
lime_graphics_path_set_data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsPath.hx	/^	private static var lime_graphics_path_set_data = Lib.load ("lime-legacy", "lime_legacy_graphics_path_set_data", 2);$/;"	v
lime_graphics_path_wline_to	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsPath.hx	/^	private static var lime_graphics_path_wline_to = Lib.load ("lime-legacy", "lime_legacy_graphics_path_wline_to", 3);$/;"	v
lime_graphics_path_wmove_to	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsPath.hx	/^	private static var lime_graphics_path_wmove_to = Lib.load ("lime-legacy", "lime_legacy_graphics_path_wmove_to", 3);$/;"	v
lime_graphics_solid_fill_create	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsBitmapFill.hx	/^	private static var lime_graphics_solid_fill_create = Lib.load ("lime-legacy", "lime_legacy_graphics_solid_fill_create", 2);$/;"	v
lime_graphics_solid_fill_create	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsGradientFill.hx	/^	private static var lime_graphics_solid_fill_create = Lib.load ("lime-legacy", "lime_legacy_graphics_solid_fill_create", 2);$/;"	v
lime_graphics_solid_fill_create	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsSolidFill.hx	/^	private static var lime_graphics_solid_fill_create = Lib.load ("lime-legacy", "lime_legacy_graphics_solid_fill_create", 2);$/;"	v
lime_graphics_stroke_create	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsStroke.hx	/^	private static var lime_graphics_stroke_create = Lib.load ("lime-legacy", "lime_legacy_graphics_stroke_create", -1);$/;"	v
lime_haptic_vibrate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/feedback/Haptic.hx	/^	static var lime_haptic_vibrate = Lib.load ("lime-legacy", "lime_legacy_haptic_vibrate", 2);$/;"	v
lime_image_data_util_color_transform	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	private static var lime_image_data_util_color_transform = System.load ("lime", "lime_image_data_util_color_transform", 3);$/;"	v
lime_image_data_util_copy_channel	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	private static var lime_image_data_util_copy_channel = System.load ("lime", "lime_image_data_util_copy_channel", -1);$/;"	v
lime_image_data_util_copy_pixels	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	private static var lime_image_data_util_copy_pixels = System.load ("lime", "lime_image_data_util_copy_pixels", 5);$/;"	v
lime_image_data_util_fill_rect	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	private static var lime_image_data_util_fill_rect = System.load ("lime", "lime_image_data_util_fill_rect", 3);$/;"	v
lime_image_data_util_flood_fill	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	private static var lime_image_data_util_flood_fill = System.load ("lime", "lime_image_data_util_flood_fill", 4);$/;"	v
lime_image_data_util_get_pixels	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	private static var lime_image_data_util_get_pixels = System.load ("lime", "lime_image_data_util_get_pixels", 3);$/;"	v
lime_image_data_util_merge	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	private static var lime_image_data_util_merge = System.load ("lime", "lime_image_data_util_merge", -1);$/;"	v
lime_image_data_util_multiply_alpha	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	private static var lime_image_data_util_multiply_alpha = System.load ("lime", "lime_image_data_util_multiply_alpha", 1);$/;"	v
lime_image_data_util_resize	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	private static var lime_image_data_util_resize = System.load ("lime", "lime_image_data_util_resize", 4);$/;"	v
lime_image_data_util_set_format	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	private static var lime_image_data_util_set_format = System.load ("lime", "lime_image_data_util_set_format", 2);$/;"	v
lime_image_data_util_set_pixels	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	private static var lime_image_data_util_set_pixels = System.load ("lime", "lime_image_data_util_set_pixels", 4);$/;"	v
lime_image_data_util_unmultiply_alpha	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	private static var lime_image_data_util_unmultiply_alpha = System.load ("lime", "lime_image_data_util_unmultiply_alpha", 1);$/;"	v
lime_image_encode	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	private static var lime_image_encode:ImageBuffer -> Int -> Int -> ByteArray = System.load ("lime", "lime_image_encode", 3);$/;"	v
lime_image_encode	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/format/JPEG.hx	/^	private static var lime_image_encode:ImageBuffer -> Int -> Int -> ByteArray = System.load ("lime", "lime_image_encode", 3);$/;"	v
lime_image_encode	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/format/PNG.hx	/^	private static var lime_image_encode:ImageBuffer -> Int -> Int -> ByteArray = System.load ("lime", "lime_image_encode", 3);$/;"	v
lime_image_load	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	private static var lime_image_load:Dynamic = System.load ("lime", "lime_image_load", 1);$/;"	v
lime_input_get_acceleration	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/sensors/Accelerometer.hx	/^	private static var lime_input_get_acceleration = Lib.load ("lime-legacy", "lime_legacy_input_get_acceleration", 0);$/;"	v
lime_input_get_acceleration	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Accelerometer.hx	/^	private static var lime_input_get_acceleration = Lib.load ("lime-legacy", "lime_legacy_input_get_acceleration", 0);$/;"	v
lime_jni_call_member	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	private static var lime_jni_call_member = Lib.load ("lime-legacy", "lime_legacy_jni_call_member", 3);$/;"	v
lime_jni_call_static	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	private static var lime_jni_call_static = Lib.load ("lime-legacy", "lime_legacy_jni_call_static", 2);$/;"	v
lime_jni_create_field	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	private static var lime_jni_create_field = Lib.load ("lime-legacy", "lime_legacy_jni_create_field", 4);$/;"	v
lime_jni_create_method	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	private static var lime_jni_create_method = Lib.load ("lime-legacy", "lime_legacy_jni_create_method", 5);$/;"	v
lime_jni_get_env	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	private static var lime_jni_get_env = Lib.load ("lime-legacy", "lime_legacy_jni_get_env", 0);$/;"	v
lime_jni_get_member	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	private static var lime_jni_get_member = Lib.load ("lime-legacy", "lime_legacy_jni_get_member", 2);$/;"	v
lime_jni_get_static	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	private static var lime_jni_get_static = Lib.load ("lime-legacy", "lime_legacy_jni_get_static", 1);$/;"	v
lime_jni_getenv	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/JNI.hx	/^	private static var lime_jni_getenv = System.load ("lime", "lime_jni_getenv", 0);$/;"	v
lime_jni_set_member	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	private static var lime_jni_set_member = Lib.load ("lime-legacy", "lime_legacy_jni_set_member", 3);$/;"	v
lime_jni_set_static	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	private static var lime_jni_set_static = Lib.load ("lime-legacy", "lime_legacy_jni_set_static", 2);$/;"	v
lime_key_event_manager_register	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private static var lime_key_event_manager_register = System.load ("lime", "lime_key_event_manager_register", 2);$/;"	v
lime_lzma_decode	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	private static var lime_lzma_decode = System.load ("lime", "lime_lzma_decode", 1);$/;"	v
lime_lzma_decode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	private static var lime_lzma_decode = Lib.load ("lime-legacy", "lime_legacy_lzma_decode", 1);$/;"	v
lime_lzma_encode	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	private static var lime_lzma_encode = System.load ("lime", "lime_lzma_encode", 1);$/;"	v
lime_lzma_encode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	private static var lime_lzma_encode = Lib.load ("lime-legacy", "lime_legacy_lzma_encode", 1);$/;"	v
lime_managed_stage_create	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	private static var lime_managed_stage_create = Lib.load ("lime-legacy", "lime_legacy_managed_stage_create", 3);$/;"	v
lime_managed_stage_pump_event	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	private static var lime_managed_stage_pump_event = Lib.load ("lime-legacy", "lime_legacy_managed_stage_pump_event", 2);$/;"	v
lime_mouse_event_manager_register	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private static var lime_mouse_event_manager_register = System.load ("lime", "lime_mouse_event_manager_register", 2);$/;"	v
lime_mouse_hide	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeMouse.hx	/^	private static var lime_mouse_hide = System.load ("lime", "lime_mouse_hide", 0);$/;"	v
lime_mouse_set_cursor	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeMouse.hx	/^	private static var lime_mouse_set_cursor = System.load ("lime", "lime_mouse_set_cursor", 1);$/;"	v
lime_mouse_set_lock	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeMouse.hx	/^	private static var lime_mouse_set_lock = System.load ("lime", "lime_mouse_set_lock", 1);$/;"	v
lime_mouse_show	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeMouse.hx	/^	private static var lime_mouse_show = System.load ("lime", "lime_mouse_show", 0);$/;"	v
lime_mouse_warp	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeMouse.hx	/^	private static var lime_mouse_warp = System.load ("lime", "lime_mouse_warp", 3);$/;"	v
lime_neko_execute	/usr/lib/haxe/lib/lime/2,4,3/lime/vm/NekoVM.hx	/^	private static var lime_neko_execute = System.load ("lime", "lime_neko_execute", 1);$/;"	v
lime_pause_animation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	private static var lime_pause_animation = Lib.load ("lime-legacy", "lime_legacy_pause_animation", 0);$/;"	v
lime_post_ui_callback	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	private static var lime_post_ui_callback = Lib.load ("lime-legacy", "lime_legacy_post_ui_callback", 1);$/;"	v
lime_render_event_manager_register	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private static var lime_render_event_manager_register = System.load ("lime", "lime_render_event_manager_register", 2);$/;"	v
lime_render_stage	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_render_stage = Lib.load ("lime-legacy", "lime_legacy_render_stage", 1);$/;"	v
lime_render_surface_to_surface	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private static var lime_render_surface_to_surface = Lib.load ("lime-legacy", "lime_legacy_render_surface_to_surface", -1);$/;"	v
lime_renderer_create	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeRenderer.hx	/^	private static var lime_renderer_create = System.load ("lime", "lime_renderer_create", 1);$/;"	v
lime_renderer_flip	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeRenderer.hx	/^	private static var lime_renderer_flip = System.load ("lime", "lime_renderer_flip", 1);$/;"	v
lime_renderer_lock	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeRenderer.hx	/^	private static var lime_renderer_lock = System.load ("lime", "lime_renderer_lock", 1);$/;"	v
lime_renderer_unlock	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeRenderer.hx	/^	private static var lime_renderer_unlock = System.load ("lime", "lime_renderer_unlock", 1);$/;"	v
lime_resume_animation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	private static var lime_resume_animation = Lib.load ("lime-legacy", "lime_legacy_resume_animation", 0);$/;"	v
lime_set_package	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	private static var lime_set_package = Lib.load ("lime-legacy", "lime_legacy_set_package", 4);$/;"	v
lime_set_s3d_enabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3D.hx	/^	private static var lime_set_s3d_enabled:Bool->Void;$/;"	v
lime_set_stage_handler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_set_stage_handler = Lib.load ("lime-legacy", "lime_legacy_set_stage_handler", 4);$/;"	v
lime_set_user_preference	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^	private static var lime_set_user_preference = Lib.load ("lime-legacy", "lime_legacy_set_user_preference", 2);$/;"	v
lime_simple_button_create	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/SimpleButton.hx	/^	private static var lime_simple_button_create = Lib.load ("lime-legacy", "lime_legacy_simple_button_create", 0);$/;"	v
lime_simple_button_get_enabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/SimpleButton.hx	/^	private static var lime_simple_button_get_enabled = Lib.load ("lime-legacy", "lime_legacy_simple_button_get_enabled", 1);$/;"	v
lime_simple_button_get_hand_cursor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/SimpleButton.hx	/^	private static var lime_simple_button_get_hand_cursor = Lib.load ("lime-legacy", "lime_legacy_simple_button_get_hand_cursor", 1);$/;"	v
lime_simple_button_set_enabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/SimpleButton.hx	/^	private static var lime_simple_button_set_enabled = Lib.load ("lime-legacy", "lime_legacy_simple_button_set_enabled", 2);$/;"	v
lime_simple_button_set_hand_cursor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/SimpleButton.hx	/^	private static var lime_simple_button_set_hand_cursor = Lib.load ("lime-legacy", "lime_legacy_simple_button_set_hand_cursor", 2);$/;"	v
lime_simple_button_set_state	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/SimpleButton.hx	/^	private static var lime_simple_button_set_state = Lib.load ("lime-legacy", "lime_legacy_simple_button_set_state", 3);$/;"	v
lime_sound_channel_add_data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	private static var lime_sound_channel_add_data = Lib.load ("lime-legacy", "lime_legacy_sound_channel_add_data", 2);$/;"	v
lime_sound_channel_create	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	private static var lime_sound_channel_create = Lib.load ("lime-legacy", "lime_legacy_sound_channel_create", 4);$/;"	v
lime_sound_channel_create_dynamic	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^	private static var lime_sound_channel_create_dynamic = Lib.load ("lime-legacy", "lime_legacy_sound_channel_create_dynamic", 2);$/;"	v
lime_sound_channel_get_data_position	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	private static var lime_sound_channel_get_data_position = Lib.load ("lime-legacy", "lime_legacy_sound_channel_get_data_position", 1);$/;"	v
lime_sound_channel_get_left	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	private static var lime_sound_channel_get_left = Lib.load ("lime-legacy", "lime_legacy_sound_channel_get_left", 1);$/;"	v
lime_sound_channel_get_position	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	private static var lime_sound_channel_get_position = Lib.load ("lime-legacy", "lime_legacy_sound_channel_get_position", 1);$/;"	v
lime_sound_channel_get_right	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	private static var lime_sound_channel_get_right = Lib.load ("lime-legacy", "lime_legacy_sound_channel_get_right", 1);$/;"	v
lime_sound_channel_is_complete	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	private static var lime_sound_channel_is_complete = Lib.load ("lime-legacy", "lime_legacy_sound_channel_is_complete", 1);$/;"	v
lime_sound_channel_needs_data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	private static var lime_sound_channel_needs_data = Lib.load ("lime-legacy", "lime_legacy_sound_channel_needs_data", 1);$/;"	v
lime_sound_channel_set_pitch	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	private static var lime_sound_channel_set_pitch = Lib.load ("lime-legacy", "lime_legacy_sound_channel_set_pitch", 2);$/;"	v
lime_sound_channel_set_position	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	private static var lime_sound_channel_set_position = Lib.load ("lime-legacy", "lime_legacy_sound_channel_set_position", 2);$/;"	v
lime_sound_channel_set_transform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	private static var lime_sound_channel_set_transform = Lib.load ("lime-legacy", "lime_legacy_sound_channel_set_transform", 2);$/;"	v
lime_sound_channel_stop	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	private static var lime_sound_channel_stop = Lib.load ("lime-legacy", "lime_legacy_sound_channel_stop", 1);$/;"	v
lime_sound_close	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^	private static var lime_sound_close = Lib.load ("lime-legacy", "lime_legacy_sound_close", 1);$/;"	v
lime_sound_from_data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^	private static var lime_sound_from_data = Lib.load ("lime-legacy", "lime_legacy_sound_from_data", 3);$/;"	v
lime_sound_from_file	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^	private static var lime_sound_from_file = Lib.load ("lime-legacy", "lime_legacy_sound_from_file", 2);$/;"	v
lime_sound_get_id3	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^	private static var lime_sound_get_id3 = Lib.load ("lime-legacy", "lime_legacy_sound_get_id3", 2);$/;"	v
lime_sound_get_length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^	private static var lime_sound_get_length = Lib.load ("lime-legacy", "lime_legacy_sound_get_length", 1);$/;"	v
lime_sound_get_status	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^	private static var lime_sound_get_status = Lib.load ("lime-legacy", "lime_legacy_sound_get_status", 1);$/;"	v
lime_stage_get_align	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_stage_get_align = Lib.load ("lime-legacy", "lime_legacy_stage_get_align", 1);$/;"	v
lime_stage_get_autos3d	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_stage_get_autos3d = Lib.load ("lime-legacy", "lime_legacy_stage_get_autos3d", 1);$/;"	v
lime_stage_get_display_state	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_stage_get_display_state = Lib.load ("lime-legacy", "lime_legacy_stage_get_display_state", 1);$/;"	v
lime_stage_get_dpi_scale	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_stage_get_dpi_scale = Lib.load ("lime-legacy", "lime_legacy_stage_get_dpi_scale", 1);$/;"	v
lime_stage_get_focus_id	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_stage_get_focus_id = Lib.load ("lime-legacy", "lime_legacy_stage_get_focus_id", 1);$/;"	v
lime_stage_get_focus_rect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_stage_get_focus_rect = Lib.load ("lime-legacy", "lime_legacy_stage_get_focus_rect", 1);$/;"	v
lime_stage_get_keyboard_height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_stage_get_keyboard_height = Lib.load ("lime-legacy", "lime_legacy_stage_get_keyboard_height", 1);$/;"	v
lime_stage_get_multitouch_active	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Multitouch.hx	/^	private static var lime_stage_get_multitouch_active = Lib.load ("lime-legacy", "lime_legacy_stage_get_multitouch_active", 1);$/;"	v
lime_stage_get_multitouch_supported	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Multitouch.hx	/^	private static var lime_stage_get_multitouch_supported = Lib.load ("lime-legacy", "lime_legacy_stage_get_multitouch_supported", 1);$/;"	v
lime_stage_get_normal_orientation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_stage_get_normal_orientation = Lib.load ("lime-legacy", "lime_legacy_stage_get_normal_orientation", 0);$/;"	v
lime_stage_get_orientation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_stage_get_orientation = Lib.load ("lime-legacy", "lime_legacy_stage_get_orientation", 0);$/;"	v
lime_stage_get_quality	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_stage_get_quality = Lib.load ("lime-legacy", "lime_legacy_stage_get_quality", 1);$/;"	v
lime_stage_get_scale_mode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_stage_get_scale_mode = Lib.load ("lime-legacy", "lime_legacy_stage_get_scale_mode", 1);$/;"	v
lime_stage_get_stage_height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_stage_get_stage_height = Lib.load ("lime-legacy", "lime_legacy_stage_get_stage_height", 1);$/;"	v
lime_stage_get_stage_width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_stage_get_stage_width = Lib.load ("lime-legacy", "lime_legacy_stage_get_stage_width", 1);$/;"	v
lime_stage_is_opengl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_stage_is_opengl = Lib.load ("lime-legacy", "lime_legacy_stage_is_opengl", 1);$/;"	v
lime_stage_request_render	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_stage_request_render = Lib.load ("lime-legacy", "lime_legacy_stage_request_render", 0);$/;"	v
lime_stage_resize_window	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_stage_resize_window = Lib.load ("lime-legacy", "lime_legacy_stage_resize_window", 3);$/;"	v
lime_stage_set_align	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_stage_set_align = Lib.load ("lime-legacy", "lime_legacy_stage_set_align", 2);$/;"	v
lime_stage_set_autos3d	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_stage_set_autos3d = Lib.load ("lime-legacy", "lime_legacy_stage_set_autos3d", 2);$/;"	v
lime_stage_set_display_state	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_stage_set_display_state = Lib.load ("lime-legacy", "lime_legacy_stage_set_display_state", 2);$/;"	v
lime_stage_set_fixed_orientation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_stage_set_fixed_orientation = Lib.load ("lime-legacy", "lime_legacy_stage_set_fixed_orientation", 1);$/;"	v
lime_stage_set_focus	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_stage_set_focus = Lib.load ("lime-legacy", "lime_legacy_stage_set_focus", 3);$/;"	v
lime_stage_set_focus_rect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_stage_set_focus_rect = Lib.load ("lime-legacy", "lime_legacy_stage_set_focus_rect", 2);$/;"	v
lime_stage_set_fullscreen	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_stage_set_fullscreen = Lib.load ("lime-legacy", "lime_legacy_stage_set_fullscreen", 2);$/;"	v
lime_stage_set_multitouch_active	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Multitouch.hx	/^	private static var lime_stage_set_multitouch_active = Lib.load ("lime-legacy", "lime_legacy_stage_set_multitouch_active", 2);$/;"	v
lime_stage_set_next_wake	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_stage_set_next_wake = Lib.load ("lime-legacy", "lime_legacy_stage_set_next_wake", 2);$/;"	v
lime_stage_set_quality	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_stage_set_quality = Lib.load ("lime-legacy", "lime_legacy_stage_set_quality", 2);$/;"	v
lime_stage_set_resolution	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_stage_set_resolution = Lib.load ("lime-legacy", "lime_legacy_stage_set_resolution", 3);$/;"	v
lime_stage_set_scale_mode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_stage_set_scale_mode = Lib.load ("lime-legacy", "lime_legacy_stage_set_scale_mode", 2);$/;"	v
lime_stage_set_screenmode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_stage_set_screenmode = Lib.load ("lime-legacy", "lime_legacy_stage_set_screenmode", 5);$/;"	v
lime_stage_show_cursor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private static var lime_stage_show_cursor = Lib.load ("lime-legacy", "lime_legacy_stage_show_cursor", 2);$/;"	v
lime_system_get_directory	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	private static var lime_system_get_directory = System.load ("lime", "lime_system_get_directory", 3);$/;"	v
lime_system_get_timer	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	private static var lime_system_get_timer = System.load ("lime", "lime_system_get_timer", 0);$/;"	v
lime_text_event_manager_register	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private static var lime_text_event_manager_register = System.load ("lime", "lime_text_event_manager_register", 2);$/;"	v
lime_text_field_create	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_create = Lib.load ("lime-legacy", "lime_legacy_text_field_create", 0);$/;"	v
lime_text_field_get_auto_size	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_get_auto_size = Lib.load ("lime-legacy", "lime_legacy_text_field_get_auto_size", 1);$/;"	v
lime_text_field_get_background	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_get_background = Lib.load ("lime-legacy", "lime_legacy_text_field_get_background", 1);$/;"	v
lime_text_field_get_background_color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_get_background_color = Lib.load ("lime-legacy", "lime_legacy_text_field_get_background_color", 1);$/;"	v
lime_text_field_get_border	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_get_border = Lib.load ("lime-legacy", "lime_legacy_text_field_get_border", 1);$/;"	v
lime_text_field_get_border_color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_get_border_color = Lib.load ("lime-legacy", "lime_legacy_text_field_get_border_color", 1);$/;"	v
lime_text_field_get_bottom_scroll_v	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_get_bottom_scroll_v = Lib.load ("lime-legacy", "lime_legacy_text_field_get_bottom_scroll_v", 1);$/;"	v
lime_text_field_get_def_text_format	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_get_def_text_format = Lib.load ("lime-legacy", "lime_legacy_text_field_get_def_text_format", 2);$/;"	v
lime_text_field_get_display_as_password	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_get_display_as_password = Lib.load ("lime-legacy", "lime_legacy_text_field_get_display_as_password", 1);$/;"	v
lime_text_field_get_embed_fonts	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_get_embed_fonts = Lib.load ("lime-legacy", "lime_legacy_text_field_get_embed_fonts", 1);$/;"	v
lime_text_field_get_html_text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_get_html_text = Lib.load ("lime-legacy", "lime_legacy_text_field_get_html_text", 1);$/;"	v
lime_text_field_get_line_metrics	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_get_line_metrics = Lib.load ("lime-legacy", "lime_legacy_text_field_get_line_metrics", 3);$/;"	v
lime_text_field_get_line_offset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_get_line_offset = Lib.load ("lime-legacy", "lime_legacy_text_field_get_line_offset", 2);$/;"	v
lime_text_field_get_line_text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_get_line_text = Lib.load ("lime-legacy", "lime_legacy_text_field_get_line_text", 2);$/;"	v
lime_text_field_get_max_chars	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_get_max_chars = Lib.load ("lime-legacy", "lime_legacy_text_field_get_max_chars", 1);$/;"	v
lime_text_field_get_max_scroll_h	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_get_max_scroll_h = Lib.load ("lime-legacy", "lime_legacy_text_field_get_max_scroll_h", 1);$/;"	v
lime_text_field_get_max_scroll_v	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_get_max_scroll_v = Lib.load ("lime-legacy", "lime_legacy_text_field_get_max_scroll_v", 1);$/;"	v
lime_text_field_get_multiline	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_get_multiline = Lib.load ("lime-legacy", "lime_legacy_text_field_get_multiline", 1);$/;"	v
lime_text_field_get_num_lines	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_get_num_lines = Lib.load ("lime-legacy", "lime_legacy_text_field_get_num_lines", 1);$/;"	v
lime_text_field_get_scroll_h	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_get_scroll_h = Lib.load ("lime-legacy", "lime_legacy_text_field_get_scroll_h", 1);$/;"	v
lime_text_field_get_scroll_v	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_get_scroll_v = Lib.load ("lime-legacy", "lime_legacy_text_field_get_scroll_v", 1);$/;"	v
lime_text_field_get_selectable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_get_selectable = Lib.load ("lime-legacy", "lime_legacy_text_field_get_selectable", 1);$/;"	v
lime_text_field_get_text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_get_text = Lib.load ("lime-legacy", "lime_legacy_text_field_get_text", 1);$/;"	v
lime_text_field_get_text_color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_get_text_color = Lib.load ("lime-legacy", "lime_legacy_text_field_get_text_color", 1);$/;"	v
lime_text_field_get_text_format	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_get_text_format = Lib.load ("lime-legacy", "lime_legacy_text_field_get_text_format", 4);$/;"	v
lime_text_field_get_text_height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_get_text_height = Lib.load ("lime-legacy", "lime_legacy_text_field_get_text_height", 1);$/;"	v
lime_text_field_get_text_width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_get_text_width = Lib.load ("lime-legacy", "lime_legacy_text_field_get_text_width", 1);$/;"	v
lime_text_field_get_type	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_get_type = Lib.load ("lime-legacy", "lime_legacy_text_field_get_type", 1);$/;"	v
lime_text_field_get_word_wrap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_get_word_wrap = Lib.load ("lime-legacy", "lime_legacy_text_field_get_word_wrap", 1);$/;"	v
lime_text_field_set_auto_size	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_set_auto_size = Lib.load ("lime-legacy", "lime_legacy_text_field_set_auto_size", 2);$/;"	v
lime_text_field_set_background	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_set_background = Lib.load ("lime-legacy", "lime_legacy_text_field_set_background", 2);$/;"	v
lime_text_field_set_background_color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_set_background_color = Lib.load ("lime-legacy", "lime_legacy_text_field_set_background_color", 2);$/;"	v
lime_text_field_set_border	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_set_border = Lib.load ("lime-legacy", "lime_legacy_text_field_set_border", 2);$/;"	v
lime_text_field_set_border_color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_set_border_color = Lib.load ("lime-legacy", "lime_legacy_text_field_set_border_color", 2);$/;"	v
lime_text_field_set_def_text_format	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_set_def_text_format = Lib.load ("lime-legacy", "lime_legacy_text_field_set_def_text_format", 2);$/;"	v
lime_text_field_set_display_as_password	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_set_display_as_password = Lib.load ("lime-legacy", "lime_legacy_text_field_set_display_as_password", 2);$/;"	v
lime_text_field_set_embed_fonts	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_set_embed_fonts = Lib.load ("lime-legacy", "lime_legacy_text_field_set_embed_fonts", 2);$/;"	v
lime_text_field_set_html_text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_set_html_text = Lib.load ("lime-legacy", "lime_legacy_text_field_set_html_text", 2);$/;"	v
lime_text_field_set_max_chars	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_set_max_chars = Lib.load ("lime-legacy", "lime_legacy_text_field_set_max_chars", 2);$/;"	v
lime_text_field_set_multiline	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_set_multiline = Lib.load ("lime-legacy", "lime_legacy_text_field_set_multiline", 2);$/;"	v
lime_text_field_set_scroll_h	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_set_scroll_h = Lib.load ("lime-legacy", "lime_legacy_text_field_set_scroll_h", 2);$/;"	v
lime_text_field_set_scroll_v	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_set_scroll_v = Lib.load ("lime-legacy", "lime_legacy_text_field_set_scroll_v", 2);$/;"	v
lime_text_field_set_selectable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_set_selectable = Lib.load ("lime-legacy", "lime_legacy_text_field_set_selectable", 2);$/;"	v
lime_text_field_set_text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_set_text = Lib.load ("lime-legacy", "lime_legacy_text_field_set_text", 2);$/;"	v
lime_text_field_set_text_color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_set_text_color = Lib.load ("lime-legacy", "lime_legacy_text_field_set_text_color", 2);$/;"	v
lime_text_field_set_text_format	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_set_text_format = Lib.load ("lime-legacy", "lime_legacy_text_field_set_text_format", 4);$/;"	v
lime_text_field_set_type	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_set_type = Lib.load ("lime-legacy", "lime_legacy_text_field_set_type", 2);$/;"	v
lime_text_field_set_word_wrap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private static var lime_text_field_set_word_wrap = Lib.load ("lime-legacy", "lime_legacy_text_field_set_word_wrap", 2);$/;"	v
lime_text_layout_create	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextLayout.hx	/^	private static var lime_text_layout_create = System.load ("lime", "lime_text_layout_create", 3);$/;"	v
lime_text_layout_position	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextLayout.hx	/^	private static var lime_text_layout_position = System.load ("lime", "lime_text_layout_position", 5);$/;"	v
lime_text_layout_set_direction	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextLayout.hx	/^	private static var lime_text_layout_set_direction = System.load ("lime", "lime_text_layout_set_direction", 2);$/;"	v
lime_text_layout_set_language	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextLayout.hx	/^	private static var lime_text_layout_set_language = System.load ("lime", "lime_text_layout_set_language", 2);$/;"	v
lime_text_layout_set_script	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextLayout.hx	/^	private static var lime_text_layout_set_script = System.load ("lime", "lime_text_layout_set_script", 2);$/;"	v
lime_tilesheet_add_rect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Tilesheet.hx	/^	private static var lime_tilesheet_add_rect = Lib.load ("lime-legacy", "lime_legacy_tilesheet_add_rect", 3);$/;"	v
lime_tilesheet_create	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Tilesheet.hx	/^	private static var lime_tilesheet_create = Lib.load ("lime-legacy", "lime_legacy_tilesheet_create", 1);$/;"	v
lime_time_stamp	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^	static var lime_time_stamp:Void->Float = flash.Lib.load ("lime-legacy", "lime_legacy_time_stamp", 0);$/;"	v
lime_time_stamp	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^	static var lime_time_stamp:Void->Float = flash.Lib.load ("lime-legacy", "lime_legacy_time_stamp", 0);$/;"	v
lime_touch_event_manager_register	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private static var lime_touch_event_manager_register = System.load ("lime", "lime_touch_event_manager_register", 2);$/;"	v
lime_update_event_manager_register	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private static var lime_update_event_manager_register = System.load ("lime", "lime_update_event_manager_register", 2);$/;"	v
lime_weak_ref_create	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/WeakRef.hx	/^	private static var lime_weak_ref_create:Dynamic = Lib.load ("lime-legacy", "lime_legacy_weak_ref_create", 2);$/;"	v
lime_weak_ref_get	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/WeakRef.hx	/^	private static var lime_weak_ref_get:Dynamic = Lib.load ("lime-legacy", "lime_legacy_weak_ref_get", 1);$/;"	v
lime_window_close	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	private static var lime_window_close = System.load ("lime", "lime_window_close", 1);$/;"	v
lime_window_create	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	private static var lime_window_create = System.load ("lime", "lime_window_create", 5);$/;"	v
lime_window_event_manager_register	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private static var lime_window_event_manager_register = System.load ("lime", "lime_window_event_manager_register", 2);$/;"	v
lime_window_get_enable_text_events	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	private static var lime_window_get_enable_text_events = System.load ("lime", "lime_window_get_enable_text_events", 1);$/;"	v
lime_window_get_height	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	private static var lime_window_get_height = System.load ("lime", "lime_window_get_height", 1);$/;"	v
lime_window_get_width	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	private static var lime_window_get_width = System.load ("lime", "lime_window_get_width", 1);$/;"	v
lime_window_get_x	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	private static var lime_window_get_x = System.load ("lime", "lime_window_get_x", 1);$/;"	v
lime_window_get_y	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	private static var lime_window_get_y = System.load ("lime", "lime_window_get_y", 1);$/;"	v
lime_window_move	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	private static var lime_window_move = System.load ("lime", "lime_window_move", 3);$/;"	v
lime_window_resize	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	private static var lime_window_resize = System.load ("lime", "lime_window_resize", 3);$/;"	v
lime_window_set_enable_text_events	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	private static var lime_window_set_enable_text_events = System.load ("lime", "lime_window_set_enable_text_events", 2);$/;"	v
lime_window_set_fullscreen	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	private static var lime_window_set_fullscreen = System.load ("lime", "lime_window_set_fullscreen", 2);$/;"	v
lime_window_set_icon	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	private static var lime_window_set_icon = System.load ("lime", "lime_window_set_icon", 2);$/;"	v
lime_window_set_minimized	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	private static var lime_window_set_minimized = System.load ("lime", "lime_window_set_minimized", 2);$/;"	v
limit	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var limit = null;$/;"	v
limitC	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var limitC:Float;$/;"	v
limitC	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var limitC:Float;$/;"	v
limitImpulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^			var limitImpulse:Float = 0.0;$/;"	v
limits	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^					var limits = switch( o.expr.expr ) {$/;"	v
linTolSqr	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^			var linTolSqr:Float = B2Settings.b2_linearSleepTolerance * B2Settings.b2_linearSleepTolerance;$/;"	v
line	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^						var line = Std.parseInt(rie10.matched(3));$/;"	v
line	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^				var line = StringTools.trim (process.stdout.readLine ());$/;"	v
line	/usr/lib/haxe/lib/lime/2,4,3/tools/SVGExport.hx	/^				var line = StringTools.trim (process.stdout.readLine ());$/;"	v
line	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^				var line = proc.stdout.readLine();$/;"	v
line	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLParser.hx	/^				var line = "  " + lutentry.s;$/;"	v
line	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^			var line = "";$/;"	v
line	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	public var line:LineStyle;$/;"	v
line	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var line = bucket.getData(Line);$/;"	v
line	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	var line : Null<Int>;$/;"	v
lineBitmapStyle	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public function lineBitmapStyle (bitmap:BitmapData, matrix:Matrix = null, repeat:Bool = true, smooth:Bool = false):Void {$/;"	f
lineBitmapStyle	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public function lineBitmapStyle (bitmap:BitmapData, matrix:Matrix = null, repeat:Bool = true, smooth:Bool = false):Void {$/;"	f
lineCap	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public var lineCap:String;$/;"	v
lineCap	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public var lineCap (get, set):CairoLineCap;$/;"	v
lineChars	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		var lineChars = getLineIndices (textField, specificLine);$/;"	v
lineDash	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public var lineDash:Array<Dynamic>;$/;"	v
lineDashOffset	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public var lineDashOffset:Float;$/;"	v
lineGradientStyle	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public function lineGradientStyle (type:GradientType, colors:Array<Dynamic>, alphas:Array<Dynamic>, ratios:Array<Dynamic>, matrix:Matrix = null, spreadMethod:Null<SpreadMethod> = null, interpolationMethod:Null<InterpolationMethod> = null, focalPointRatio:Float = 0.0):Void {$/;"	f
lineGradientStyle	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public function lineGradientStyle (type:GradientType, colors:Array<Dynamic>, alphas:Array<Dynamic>, ratios:Array<Dynamic>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:Null<Float> = null):Void {$/;"	f
lineHeight	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^		var lineHeight = ascender + descender + leading;$/;"	v
lineHeight	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^		var lineHeight = textHeight;$/;"	v
lineJoin	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public var lineJoin:String;$/;"	v
lineJoin	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public var lineJoin (get, set):CairoLineJoin;$/;"	v
lineNumber	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^				var lineNumber = el.getLineNumber();$/;"	v
lineNumber	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^				var lineNumber = frame.GetFileLineNumber();$/;"	v
lineNumber	/usr/lib/haxe/std/haxe/CallStack.hx	/^				var lineNumber = el.getLineNumber();$/;"	v
lineNumber	/usr/lib/haxe/std/haxe/CallStack.hx	/^				var lineNumber = frame.GetFileLineNumber();$/;"	v
lineNumber	/usr/lib/haxe/std/haxe/PosInfos.hx	/^	var lineNumber : Int;$/;"	v
lineStyle	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public function lineStyle (thickness:Null<Float> = null, color:Int = 0, alpha:Float = 1.0, pixelHinting:Bool = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:Float = 3):Void {$/;"	f
lineStyle	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public function lineStyle (thickness:Null<Float> = null, color:Null<Int> = null, alpha:Null<Float> = null, pixelHinting:Null<Bool> = null, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:Null<Float> = null):Void {$/;"	f
lineTo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function lineTo (x:Float, y:Float):Void {};$/;"	f
lineTo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function lineTo (x:Float, y:Float):Void {$/;"	f
lineTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	private static inline function lineTo (x:Float, y:Float) {$/;"	f
lineTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public function lineTo (x:Float, y:Float):Void {$/;"	f
lineTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsPath.hx	/^	public function lineTo (x:Float, y:Float):Void {$/;"	f
lineTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public function lineTo (x:Float, y:Float):Void {$/;"	f
lineTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsPath.hx	/^	public function lineTo (x:Float, y:Float):Void {$/;"	f
lineWidth	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public var lineWidth:Float;$/;"	v
lineWidth	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function lineWidth (width:Float):Void;$/;"	f
lineWidth	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function lineWidth (width:Float):Void {$/;"	f
lineWidth	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public var lineWidth (get, set):Float;$/;"	v
lineWidth	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function lineWidth (width:Float):Void {$/;"	f
lineWidth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function lineWidth(width:Float):Void $/;"	f
lineWidth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^		var lineWidth = CairoTextField.getLineWidth (this, lineIndex);$/;"	v
lineWidth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^		var lineWidth = CanvasTextField.getLineWidth (this, lineIndex);$/;"	v
lineWidth	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function lineWidth(width:Float):Void;$/;"	f
line_i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^			var line_i:Int = 0;$/;"	v
line_i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^			var line_i = 0;$/;"	v
linearA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Jacobian.hx	/^	public var linearA:B2Vec2;$/;"	v
linearB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Jacobian.hx	/^	public var linearB:B2Vec2;$/;"	v
linearDamping	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2BodyDef.hx	/^	public var linearDamping:Float;$/;"	v
linearDrag	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^	public var linearDrag:Float;$/;"	v
linearError	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^		var linearError:Float = 0.0;$/;"	v
linearError	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var linearError:Float = 0.0;$/;"	v
linearError	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var linearError:Float = 0.0;$/;"	v
linearError	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var linearError:Float = 0.0;$/;"	v
linearVelocity	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var linearVelocity:B2Vec2 = getLinearVelocity().copy();\/\/Reset mass will alter this$/;"	v
linearVelocity	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2BodyDef.hx	/^	public var linearVelocity:B2Vec2;$/;"	v
linebreaks	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		var linebreaks = getLineBreakIndices (textField);$/;"	v
linebreaks	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^		var linebreaks = getLineBreakIndices (textField);$/;"	v
lines	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^			var lines = output.split ("\\n");$/;"	v
lines	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^		var lines = new Array <String> ();$/;"	v
lines	/usr/lib/haxe/lib/lime/2,4,3/tools/SVGExport.hx	/^			var lines = new Array <String> ();$/;"	v
lines	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^			var lines = text.split ("\\n");$/;"	v
lines	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^			var lines = text.split ("\\n");$/;"	v
lines	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		var lines = 0;$/;"	v
lines	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^		var lines = [];$/;"	v
lines	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var lines:Array<GLBucketData> = [];$/;"	v
lines	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^		var lines = reg.split (source); \/\/ handle breaks, then split into lines        $/;"	v
lines	/usr/lib/haxe/std/haxe/unit/TestRunner.hx	/^				var lines = tf.text.split("\\r");$/;"	v
link	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static function link (dir:String, file:String, dest:String):Void {$/;"	f
linkFile	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^	public static function linkFile (source:String, destination:String, symbolic:Bool = true, overwrite:Bool = false) {$/;"	f
linkProgram	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function linkProgram (program:GLProgram):Void;$/;"	f
linkProgram	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function linkProgram (program:GLProgram):Void {$/;"	f
linkProgram	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function linkProgram (program:GLProgram):Void {$/;"	f
linkProgram	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function linkProgram(program:GLProgram):Void $/;"	f
linkProgram	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function linkProgram(program:GLProgram):Void;$/;"	f
linkedLibraries	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/BlackBerryPlatform.hx	/^			var linkedLibraries = [ new NDLL ("libSDL", haxelib), new NDLL ("libOpenAL", haxelib) ];$/;"	v
linuxAptPackages	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var linuxAptPackages = "ia32-libs-multiarch gcc-multilib g++-multilib";$/;"	v
linuxPacman32Packages	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var linuxPacman32Packages = "multilib-devel mesa mesa-libgl glu";$/;"	v
linuxPacman64Packages	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var linuxPacman64Packages = "multilib-devel lib32-mesa lib32-mesa-libgl lib32-glu";$/;"	v
linuxUbuntuSaucyPackages	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var linuxUbuntuSaucyPackages = "gcc-multilib g++-multilib libxext-dev";$/;"	v
linuxYumPackages	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var linuxYumPackages = "gcc gcc-c++";$/;"	v
list	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public function list (type:String):Array<String> {$/;"	f
list	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public static function list (type:AssetType = null):Array<String> {$/;"	f
list	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CPPHelper.hx	/^					var list;$/;"	v
list	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^	public override function list (type:AssetType):Array<String> {$/;"	f
list	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^	public override function list (type:String):Array<String> {$/;"	f
list	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public static function list (type:AssetType = null):Array<String> {$/;"	f
list	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function list (type:AssetType):Array<String> {$/;"	f
list	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public static function list (type:AssetType = null):Array<String> {$/;"	f
list	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/EventDispatcher.hx	/^			var list = __eventMap.get (type);$/;"	v
list	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/EventDispatcher.hx	/^			var list = new Array<Listener> ();$/;"	v
list	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/EventDispatcher.hx	/^		var list = __eventMap.get (event.type);$/;"	v
list	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/EventDispatcher.hx	/^		var list = __eventMap.get (type);$/;"	v
list	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^			var list = [];$/;"	v
list	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/EventDispatcher.hx	/^			var list = __newEventMap.get (type);$/;"	v
list	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/EventDispatcher.hx	/^			var list = new Array<Listener> ();$/;"	v
list	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/EventDispatcher.hx	/^			var list;$/;"	v
list	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/EventDispatcher.hx	/^		var list = __eventMap.get (type);$/;"	v
list	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^	public override function list (type:AssetType):Array<String> {$/;"	f
list	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^	public override function list (type:String):Array<String> {$/;"	f
listAVDs	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^	public static function listAVDs ():Array <String> {$/;"	f
listDevices	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^	public static function listDevices ():Array <String> {$/;"	f
listNames	/usr/lib/haxe/std/haxe/Resource.hx	/^	public static function listNames() : Array<String> {$/;"	f
listSamples	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^	public static function listSamples (projectName:String, userDefines:Map<String, Dynamic>) {$/;"	f
listen	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	public var listen : Int;$/;"	v
listen	/usr/lib/haxe/std/sys/net/Socket.hx	/^	function listen( connections : Int ) : Void;$/;"	f
listenCount	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^	public var listenCount : Int;$/;"	v
listener	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/WebAudioContext.hx	/^	public var listener (default, null):Dynamic \/*AudioListener*\/;$/;"	v
listener	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/EventDispatcher.hx	/^		var listener;$/;"	v
listener	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/EventDispatcher.hx	/^		var listener;$/;"	v
listener	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventDispatcherTest.hx	/^		var listener = function (_) { $/;"	v
listener	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventDispatcherTest.hx	/^		var listener = function (_) {$/;"	v
listener	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventDispatcherTest.hx	/^		var listener = function (_) {};$/;"	v
listener	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventDispatcherTest.hx	/^		var listener = function (event:Event) { $/;"	v
listener	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventDispatcherTest.hx	/^		var listener = function (event:Event) {$/;"	v
listener	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventTest.hx	/^		var listener = function (e:Event) {$/;"	v
listener2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventDispatcherTest.hx	/^		var listener2 = function (_) {$/;"	v
listener2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventTest.hx	/^		var listener2 = function (e:Event) {$/;"	v
listener3f	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function listener3f (param:Int, value1:Float, value2:Float, value3:Float):Void {$/;"	f
listener3f	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function listener3f (param:Int, value1:Float, value2:Float, value3:Float):Void {$/;"	f
listener3i	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function listener3i (param:Int, value1:Int, value2:Int, value3:Int):Void {$/;"	f
listener3i	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function listener3i (param:Int, value1:Int, value2:Int, value3:Int):Void {$/;"	f
listenerf	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function listenerf (param:Int, value:Float):Void {$/;"	f
listenerf	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function listenerf (param:Int, value:Float):Void {$/;"	f
listenerfv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function listenerfv (param:Int, values:Array<Float>):Void {$/;"	f
listenerfv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function listenerfv (param:Int, values:Array<Float>):Void {$/;"	f
listeneri	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function listeneri (param:Int, value:Int):Void {$/;"	f
listeneri	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function listeneri (param:Int, value:Int):Void {$/;"	f
listeneriv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function listeneriv (param:Int, values:Array<Int>):Void {$/;"	f
listeneriv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function listeneriv (param:Int, values:Array<Int>):Void {$/;"	f
listeners	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Event.hx	/^			var listeners = $ethis.listeners;$/;"	v
littleEndian	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	private var littleEndian:Bool = false;$/;"	v
littleEndian	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	private var littleEndian:Bool = false; \/\/ NOTE: default ByteArray endian is BIG_ENDIAN$/;"	v
liveDelay	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/NetStream.hx	/^	public var liveDelay:Float;$/;"	v
ljd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^				var ljd:B2LineJointDef = new B2LineJointDef();$/;"	v
lo	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^					var lo = src.readInt32();$/;"	v
load	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	private function load (handler:AssetLibrary -> Void):Void {$/;"	f
load	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Preloader.hx	/^	public function load (urls:Array<String>, types:Array<AssetType>):Void {$/;"	f
load	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/FlashAudioContext.hx	/^	public function load (buffer:AudioBuffer, stream:Dynamic \/*flash.net.URLRequest*\/, context:Dynamic \/*SoundLoaderContext*\/ = null):Void {$/;"	f
load	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function load (buffer:AudioBuffer):Void {$/;"	f
load	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^	public function load (request:URLRequest):Void {$/;"	f
load	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	public static function load (library:String, method:String, args:Int = 0, lazy:Bool = false):Dynamic {$/;"	f
load	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	private function load (method:URLRequestMethod, path:String, data:String = null, progressMsg:String = null):Dynamic {$/;"	f
load	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	private function load (handler:AssetLibrary -> Void):Void {$/;"	f
load	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	public static function load (library:String, method:String, args:Int = 0):Dynamic {$/;"	f
load	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public static function load (filename:String, format:Int = 0):BitmapData {$/;"	f
load	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Loader.hx	/^	public function load (request:URLRequest, context:LoaderContext = null):Void {$/;"	f
load	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/LoaderInfo.hx	/^	public override function load (request:URLRequest):Void {$/;"	f
load	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	private static function load(inName:String, inArgCount:Int):Dynamic $/;"	f
load	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^	public function load (stream:URLRequest, context:SoundLoaderContext = null, forcePlayAsMusic:Bool = false):Void {$/;"	f
load	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	public function load (request:URLRequest):Void {$/;"	f
load	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	public static function load (filename:String):NativeFontData {$/;"	f
load	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Loader.hx	/^	public function load (request:URLRequest, context:LoaderContext = null):Void {$/;"	f
load	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Preloader.hx	/^	public override function load (urls:Array<String>, types:Array<AssetType>):Void {$/;"	f
load	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public function load (stream:URLRequest, context:SoundLoaderContext = null):Void {$/;"	f
load	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^	public function load (request:URLRequest):Void {$/;"	f
load	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^	static function load( f, nargs ) : Dynamic {$/;"	f
load	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	static function load( f, nargs ) : Dynamic {$/;"	f
load	/usr/lib/haxe/std/neko/Lib.hx	/^	public static function load( lib : String, prim : String, nargs : Int ) : Dynamic {$/;"	f
loadAudioBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public function loadAudioBuffer (id:String, handler:AudioBuffer -> Void):Void {$/;"	f
loadAudioBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public static function loadAudioBuffer (id:String, handler:AudioBuffer -> Void, useCache:Bool = true):Void {$/;"	f
loadAudioBuffer	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^	public override function loadAudioBuffer (id:String, handler:AudioBuffer -> Void):Void {$/;"	f
loadAudioBuffer	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^	public override function loadAudioBuffer (id:String, handler:AudioBuffer -> Void):Void {$/;"	f
loadBitmapData	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^	public override function loadBitmapData (id:String, handler:BitmapData -> Void):Void {$/;"	f
loadBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public static function loadBitmapData (id:String, handler:BitmapData -> Void, useCache:Bool = true):Void {$/;"	f
loadBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function loadBitmapData (id:String, handler:BitmapData -> Void):Void {$/;"	f
loadBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public static function loadBitmapData (id:String, handler:BitmapData -> Void, useCache:Bool = true):Void {$/;"	f
loadBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^	public override function loadBitmapData (id:String, handler:BitmapData -> Void):Void {$/;"	f
loadBytes	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public function loadBytes (id:String, handler:ByteArray -> Void):Void {$/;"	f
loadBytes	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public static function loadBytes (id:String, handler:ByteArray -> Void):Void {$/;"	f
loadBytes	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^	public override function loadBytes (id:String, handler:ByteArray -> Void):Void {$/;"	f
loadBytes	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^	public override function loadBytes (id:String, handler:ByteArray -> Void):Void {$/;"	f
loadBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public static function loadBytes (id:String, handler:ByteArray -> Void):Void {$/;"	f
loadBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function loadBytes (id:String, handler:ByteArray -> Void):Void {$/;"	f
loadBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public static function loadBytes (id:String, handler:ByteArray -> Void):Void {$/;"	f
loadBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Loader.hx	/^	public function loadBytes (bytes:ByteArray, context:LoaderContext = null):Void {$/;"	f
loadBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	public static function loadBytes (bytes:ByteArray):NativeFontData {$/;"	f
loadBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Loader.hx	/^	public function loadBytes (buffer:ByteArray):Void {$/;"	f
loadBytes	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^	public override function loadBytes (id:String, handler:ByteArray -> Void):Void {$/;"	f
loadCall	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^			var loadCall = loadsQueue.shift ();$/;"	v
loadComplete	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static function loadComplete (src:String):Bool;$/;"	f
loadCompressedDataFromByteArray	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/FlashAudioContext.hx	/^	public function loadCompressedDataFromByteArray (buffer:AudioBuffer, bytes:Dynamic \/*flash.utils.ByteArray*\/, bytesLength:UInt):Void {$/;"	f
loadCompressedDataFromByteArray	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^	public function loadCompressedDataFromByteArray (bytes:ByteArray, length:Int, forcePlayAsMusic:Bool = false):Void {$/;"	f
loadCompressedDataFromByteArray	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public function loadCompressedDataFromByteArray (bytes:ByteArray, bytesLength:Int, forcePlayAsMusic = false):Void {$/;"	f
loadFont	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public function loadFont (id:String, handler:Font -> Void):Void {$/;"	f
loadFont	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Preloader.hx	/^	private function loadFont (font:String):Void {$/;"	f
loadFont	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^	public override function loadFont (id:String, handler:Font -> Void):Void {$/;"	f
loadFont	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public static function loadFont (id:String, handler:Font -> Void, useCache:Bool = true):Void {$/;"	f
loadFont	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function loadFont (id:String, handler:Font -> Void):Void {$/;"	f
loadFont	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public static function loadFont (id:String, handler:Font -> Void, useCache:Bool = true):Void {$/;"	f
loadFont	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^	public override function loadFont (id:String, handler:Font -> Void):Void {$/;"	f
loadFromBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public static function loadFromBytes (bytes:ByteArray, rawAlpha:ByteArray = null):BitmapData {$/;"	f
loadFromHaxeBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public static function loadFromHaxeBytes (bytes:Bytes, rawAlpha:Bytes = null):BitmapData {$/;"	f
loadImage	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public function loadImage (id:String, handler:Image -> Void):Void {$/;"	f
loadImage	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public static function loadImage (id:String, handler:Image -> Void, useCache:Bool = true):Void {$/;"	f
loadImage	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^	public override function loadImage (id:String, handler:Image -> Void):Void {$/;"	f
loadImage	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^	public override function loadImage (id:String, handler:Image -> Void):Void {$/;"	f
loadInCURLThread	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	function loadInCURLThread (request:URLRequest):Void {$/;"	f
loadLazy	/usr/lib/haxe/std/neko/Lib.hx	/^	public static function loadLazy(lib,prim,nargs) : Dynamic {$/;"	f
loadLibrary	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public static function loadLibrary (name:String, handler:AssetLibrary -> Void):Void {$/;"	f
loadLibrary	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public static function loadLibrary (name:String, handler:LimeAssetLibrary -> Void):Void {$/;"	f
loadLibrary	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public static function loadLibrary (name:String, handler:AssetLibrary -> Void):Void {$/;"	f
loadManifest	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^	private function loadManifest ():Void {$/;"	f
loadManifest	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^	private function loadManifest ():Void {$/;"	f
loadManifest	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^	private function loadManifest ():Void {$/;"	f
loadModule	/usr/lib/haxe/lib/lime/2,4,3/lime/vm/NekoVM.hx	/^	public static function loadModule (path:String):Void {$/;"	f
loadModule	/usr/lib/haxe/std/neko/vm/Loader.hx	/^	public function loadModule( modName : String, ?loader : Loader ) : Module {$/;"	f
loadMovieClip	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function loadMovieClip (id:String, handler:MovieClip -> Void):Void {$/;"	f
loadMovieClip	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public static function loadMovieClip (id:String, handler:MovieClip -> Void):Void {$/;"	f
loadMovieClip	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function loadMovieClip (id:String, handler:MovieClip -> Void):Void {$/;"	f
loadMovieClip	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public static function loadMovieClip (id:String, handler:MovieClip -> Void):Void {$/;"	f
loadMusic	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^	public override function loadMusic (id:String, handler:Sound -> Void):Void {$/;"	f
loadMusic	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function loadMusic (id:String, handler:Sound -> Void):Void {$/;"	f
loadMusic	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public static function loadMusic (id:String, handler:Sound -> Void, useCache:Bool = true):Void {$/;"	f
loadMusic	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function loadMusic (id:String, handler:Sound -> Void):Void {$/;"	f
loadMusic	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public static function loadMusic (id:String, handler:Sound -> Void, useCache:Bool = true):Void {$/;"	f
loadMusic	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^	public override function loadMusic (id:String, handler:Sound -> Void):Void {$/;"	f
loadNekoAPI	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	private static function loadNekoAPI (lazy:Bool):Void {$/;"	f
loadNekoAPI	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	private static function loadNekoAPI ():Void {$/;"	f
loadPCMFromByteArray	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/FlashAudioContext.hx	/^	public function loadPCMFromByteArray (buffer:AudioBuffer, bytes:Dynamic \/*flash.utils.ByteArray*\/, samples:UInt, format:String = null, stereo:Bool = true, sampleRate:Float = 44100):Void {$/;"	f
loadPCMFromByteArray	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^	public function loadPCMFromByteArray (bytes:ByteArray, samples:Int, format:String = "float", stereo:Bool = true, sampleRate:Float = 44100.0):Void {$/;"	f
loadPCMFromByteArray	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public function loadPCMFromByteArray (bytes:ByteArray, samples:Int, format:String = null, stereo:Bool = true, sampleRate:Float = 44100):Void {$/;"	f
loadPolicyFile	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Security.hx	/^	public static function loadPolicyFile (url:String) {$/;"	f
loadPrimitive	/usr/lib/haxe/std/neko/vm/Loader.hx	/^	public function loadPrimitive( prim : String, nargs : Int ) : Dynamic {$/;"	f
loadSound	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^	public override function loadSound (id:String, handler:Sound -> Void):Void {$/;"	f
loadSound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function loadSound (id:String, handler:Sound -> Void):Void {$/;"	f
loadSound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public static function loadSound (id:String, handler:Sound -> Void, useCache:Bool = true):Void {$/;"	f
loadSound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function loadSound (id:String, handler:Sound -> Void):Void {$/;"	f
loadSound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public static function loadSound (id:String, handler:Sound -> Void, useCache:Bool = true):Void {$/;"	f
loadSound	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^	public override function loadSound (id:String, handler:Sound -> Void):Void {$/;"	f
loadText	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public function loadText (id:String, handler:String -> Void):Void {$/;"	f
loadText	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public static function loadText (id:String, handler:String -> Void):Void {$/;"	f
loadText	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^	public override function loadText (id:String, handler:String -> Void):Void {$/;"	f
loadText	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^	public override function loadText (id:String, handler:String -> Void):Void {$/;"	f
loadText	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public static function loadText (id:String, handler:String -> Void):Void {$/;"	f
loadText	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function loadText (id:String, handler:String -> Void):Void {$/;"	f
loadText	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public static function loadText (id:String, handler:String -> Void):Void {$/;"	f
loadText	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^	public override function loadText (id:String, handler:String -> Void):Void {$/;"	f
loaded	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Preloader.hx	/^	private var loaded = 0;$/;"	v
loaded	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/ApplicationMain.hx	/^		var loaded = 0;$/;"	v
loaded	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^		var loaded = 0;$/;"	v
loadedData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^		var loadedData:Dynamic = { };$/;"	v
loader	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Preloader.hx	/^						var loader = new URLLoader ();$/;"	v
loader	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Preloader.hx	/^				var loader = loaders.get (url);$/;"	v
loader	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^			var loader = new Loader ();$/;"	v
loader	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^			var loader = new URLLoader ();$/;"	v
loader	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/ApplicationMain.hx	/^		var loader = new neko.vm.Loader (untyped $loader);$/;"	v
loader	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^			var loader = new Loader ();$/;"	v
loader	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^			var loader = new URLLoader ();$/;"	v
loader	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	private var loader:URLLoader;$/;"	v
loader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/LoaderInfo.hx	/^	public var loader (default, null):Loader;$/;"	v
loader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/LoaderInfo.hx	/^	public var loader (default, null):Loader;$/;"	v
loader	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/ApplicationMain.hx	/^		var loader = new neko.vm.Loader (untyped $loader);$/;"	v
loader	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^		var loader = new neko.vm.Loader (untyped $loader);$/;"	v
loader	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^			var loader = new Loader ();$/;"	v
loader	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^			var loader = new URLLoader ();$/;"	v
loader	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/LoaderInfoTest.hx	/^		var loader = new Loader ();$/;"	v
loader	/usr/lib/haxe/std/haxe/Http.hx	/^		var loader = req = new flash.net.URLLoader();$/;"	v
loader	/usr/lib/haxe/std/neko/vm/Module.hx	/^	public function loader() {$/;"	f
loaderContext	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/LoaderContextTest.hx	/^		var loaderContext = new LoaderContext ();$/;"	v
loaderInfo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var loaderInfo (default, null):Dynamic \/*LoaderInfo*\/;$/;"	v
loaderInfo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public var loaderInfo:LoaderInfo;$/;"	v
loaderInfo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/LoaderInfo.hx	/^		var loaderInfo = new LoaderInfo ();$/;"	v
loaderInfo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	public var loaderInfo:LoaderInfo;$/;"	v
loaderInfo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/LoaderInfo.hx	/^		var loaderInfo = new LoaderInfo ();$/;"	v
loaderInfo_onComplete	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Preloader.hx	/^	private function loaderInfo_onComplete (event:flash.events.Event):Void {$/;"	f
loaderInfo_onInit	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Preloader.hx	/^	private function loaderInfo_onInit (event:flash.events.Event):Void {$/;"	f
loaderInfo_onProgress	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Preloader.hx	/^	private function loaderInfo_onProgress (event:flash.events.ProgressEvent):Void {$/;"	f
loaderTrace	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	private static function loaderTrace (message:String) {$/;"	f
loaderTrace	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	private static function loaderTrace (message:String) {$/;"	f
loaderURL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/LoaderInfo.hx	/^	public var loaderURL (default, null):String;$/;"	v
loaderURL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/LoaderInfo.hx	/^	public var loaderURL (default, null):String;$/;"	v
loader_onComplete	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Preloader.hx	/^	private function loader_onComplete (loader:URLLoader):Void {$/;"	f
loaders	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Preloader.hx	/^	public static var loaders = new Map<String, URLLoader> ();$/;"	v
loadsQueue	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	var loadsQueue : Array<{loader : URLLoader, request : URLRequest}>;$/;"	v
loadsQueueMutex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	var loadsQueueMutex : Mutex;$/;"	v
local	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^		var local = new Matrix ();$/;"	v
local	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^			var local = object.globalToLocal (new Point (event.x, event.y));$/;"	v
local	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var local:Point = null;$/;"	v
local	/usr/lib/haxe/std/neko/vm/Loader.hx	/^	public static function local() {$/;"	f
local	/usr/lib/haxe/std/neko/vm/Module.hx	/^	public static function local() {$/;"	f
local3DToGlobal	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function local3DToGlobal (point3d:Dynamic \/*flash.geom.Vector3D*\/):Dynamic \/*flash.geom.Point*\/ { return null; };$/;"	f
localAnchorA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJointDef.hx	/^	public var localAnchorA:B2Vec2;$/;"	v
localAnchorA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJointDef.hx	/^	public var localAnchorA:B2Vec2;$/;"	v
localAnchorA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJointDef.hx	/^	public var localAnchorA:B2Vec2;$/;"	v
localAnchorA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJointDef.hx	/^	public var localAnchorA:B2Vec2;$/;"	v
localAnchorA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJointDef.hx	/^	public var localAnchorA:B2Vec2;$/;"	v
localAnchorA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJointDef.hx	/^	public var localAnchorA:B2Vec2;$/;"	v
localAnchorA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJointDef.hx	/^	public var localAnchorA:B2Vec2;$/;"	v
localAnchorB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJointDef.hx	/^	public var localAnchorB:B2Vec2;$/;"	v
localAnchorB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJointDef.hx	/^	public var localAnchorB:B2Vec2;$/;"	v
localAnchorB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJointDef.hx	/^	public var localAnchorB:B2Vec2;$/;"	v
localAnchorB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJointDef.hx	/^	public var localAnchorB:B2Vec2;$/;"	v
localAnchorB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJointDef.hx	/^	public var localAnchorB:B2Vec2;$/;"	v
localAnchorB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJointDef.hx	/^	public var localAnchorB:B2Vec2;$/;"	v
localAnchorB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJointDef.hx	/^	public var localAnchorB:B2Vec2;$/;"	v
localAxisA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJointDef.hx	/^	public var localAxisA:B2Vec2;$/;"	v
localAxisA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJointDef.hx	/^	public var localAxisA:B2Vec2;$/;"	v
localCenter	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Sweep.hx	/^	public var localCenter:B2Vec2;$/;"	v
localFileReadDisable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var localFileReadDisable (default, null) = #if html5 true #else false #end;$/;"	v
localFileReadDisable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var localFileReadDisable (default, null) = #if html5 true #else false #end;$/;"	v
localName	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var localName (default, null):String;$/;"	v
localNormal	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var localNormal:B2Vec2 = s_localNormal;$/;"	v
localPath	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^	private var localPath:String;$/;"	v
localPlaneNormal	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactConstraint.hx	/^	public var localPlaneNormal:B2Vec2;$/;"	v
localPoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactConstraint.hx	/^	public var localPoint:B2Vec2;$/;"	v
localPoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactConstraintPoint.hx	/^	public var localPoint:B2Vec2;$/;"	v
localPoint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^					var localPoint = target.globalToLocal (targetPoint);$/;"	v
localPoint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^				var localPoint = target.globalToLocal (targetPoint);$/;"	v
localPoint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^			var localPoint = target.globalToLocal (point);$/;"	v
localPoint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^			var localPoint = globalToLocal (new Point (event.stageX, event.stageY));$/;"	v
localPoint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^		var localPoint = globalToLocal (new Point (event.stageX, event.stageY));$/;"	v
localPoint	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var localPoint = sprite.globalToLocal (new Point ());$/;"	v
localPointA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^		var localPointA:B2Vec2 = new B2Vec2 ();$/;"	v
localPointA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^		var localPointA:B2Vec2;$/;"	v
localPointA1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^		var localPointA1:B2Vec2;$/;"	v
localPointA2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^		var localPointA2:B2Vec2;$/;"	v
localPointB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^		var localPointB:B2Vec2 = new B2Vec2 ();$/;"	v
localPointB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^		var localPointB:B2Vec2;$/;"	v
localPointB1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^		var localPointB1:B2Vec2;$/;"	v
localPointB2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^		var localPointB2:B2Vec2;$/;"	v
localTangent	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var localTangent:B2Vec2 = s_localTangent;$/;"	v
localToGlobal	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function localToGlobal (point:Dynamic \/*flash.geom.Point*\/):Dynamic \/*flash.geom.Point*\/ { return null; };$/;"	f
localToGlobal	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public function localToGlobal (point:Point):Point {$/;"	f
localToGlobal	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	public function localToGlobal (point:Point):Point {$/;"	f
localToGlobal	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public override function localToGlobal (pos:Point):Point {$/;"	f
localUnserialize	/usr/lib/haxe/std/neko/Lib.hx	/^	public static function localUnserialize( s : haxe.io.Bytes ) : Dynamic {$/;"	f
localVertices	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^				var localVertices:Array <B2Vec2> = poly.getVertices();$/;"	v
localX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public var localX:Float;$/;"	v
localX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public var localX:Float;$/;"	v
localX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TouchEvent.hx	/^	public var localX:Float;$/;"	v
localY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public var localY:Float;$/;"	v
localY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public var localY:Float;$/;"	v
localY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TouchEvent.hx	/^	public var localY:Float;$/;"	v
local_v11	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var local_v11:B2Vec2 = vertices1[edge1];$/;"	v
local_v12	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var local_v12:B2Vec2;$/;"	v
locale	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^		var locale:String = lime_capabilities_get_language ();$/;"	v
localhost	/usr/lib/haxe/std/sys/net/Host.hx	/^	static function localhost() : String;$/;"	f
location	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var location = h.responseHeaders.get ("Location");$/;"	v
location	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/Shader.hx	/^			var location = gl.getAttribLocation(program, attribute);$/;"	v
location	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/Shader.hx	/^			var location = gl.getUniformLocation(program, uniform);$/;"	v
location	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/Shader.hx	/^		var location = getAttribLocation(attribute.name);$/;"	v
location	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		var location = (currentProgram != null && currentProgram.glProgram != null) ? GL.getAttribLocation (currentProgram.glProgram, locationName) : -1;$/;"	v
location	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		var location = GL.getUniformLocation (currentProgram.glProgram, locationName);$/;"	v
location	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		var location:GLUniformLocation = GL.getUniformLocation (currentProgram.glProgram, "yflip");$/;"	v
locationName	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^			var locationName = __getUniformLocationNameFromAgalRegisterIndex (programType, firstRegister + i);$/;"	v
locationName	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		var locationName = "fs" + sampler;$/;"	v
locationName	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		var locationName = "va" + index;$/;"	v
lock	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeRenderer.hx	/^			var lock = lime_renderer_lock (handle);$/;"	v
lock	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Mouse.hx	/^	public static var lock (get, set):Bool;$/;"	v
lock	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function lock ():Void {$/;"	f
lock	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function lock ():Void {$/;"	f
lock	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^						var lock = switch( t ) {$/;"	v
lock	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var lock = r.lock;$/;"	v
lock	/usr/lib/haxe/std/sys/db/Object.hx	/^	public function lock() {$/;"	f
lock	/usr/lib/haxe/std/sys/db/RecordInfos.hx	/^	var lock : Bool;$/;"	v
lock	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^						var lock = false;$/;"	v
lockMode	/usr/lib/haxe/std/sys/db/Manager.hx	/^	public static var lockMode : String;$/;"	v
lock_create	/usr/lib/haxe/std/neko/vm/Lock.hx	/^	static var lock_create = neko.Lib.load("std","lock_create",0);$/;"	v
lock_release	/usr/lib/haxe/std/neko/vm/Lock.hx	/^	static var lock_release = neko.Lib.load("std","lock_release",1);$/;"	v
lock_wait	/usr/lib/haxe/std/neko/vm/Lock.hx	/^	static var lock_wait = neko.Lib.load("std","lock_wait",2);$/;"	v
lod	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/OpLUT.hx	/^	public var lod:Bool;$/;"	v
lodbiad	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Destination.hx	/^	public var lodbiad:Int; \/\/ sampler$/;"	v
lodbias	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Sampler.hx	/^	public var lodbias:Float;$/;"	v
log	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^	private function log (v:Dynamic):Void {$/;"	f
log	/usr/lib/haxe/std/Math.hx	/^	static function log(v:Float):Float;$/;"	f
logError	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	function logError( e : Dynamic ) {$/;"	f
logMessage	/usr/lib/haxe/std/neko/Web.hx	/^	public static function logMessage( msg : String ) {$/;"	f
longest	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^			var longest = 0.0;$/;"	v
look into whether this method and others can replace the JS stuff yet or not	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		\/\/TODO: look into whether this method and others can replace the JS stuff yet or not$/;"	i
lookupNamespaceURI	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function lookupNamespaceURI (?prefix:String):String { return null; };$/;"	f
lookupPrefix	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function lookupPrefix (?namespaceURI:String):String { return null; };$/;"	f
lookupSamplesPerFrame	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/Utils.hx	/^    public static function lookupSamplesPerFrame(mpegVersion:MpegVersion, layer:Layer) {$/;"	f
loop	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^	function loop( args : Array<Dynamic>, r ) {$/;"	f
loop	/usr/lib/haxe/std/neko/vm/Ui.hx	/^	public static function loop() {$/;"	f
loopThread	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	function loopThread( t : ThreadInfos ) {$/;"	f
loops	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^	public var loops:Int;$/;"	v
low	/usr/lib/haxe/std/haxe/Int64.hx	/^		var low = i32(-a.low);$/;"	v
low	/usr/lib/haxe/std/haxe/Int64.hx	/^		var low = i32(a.low + b.low);$/;"	v
low	/usr/lib/haxe/std/haxe/Int64.hx	/^		var low = i32(a.low - b.low); \/\/ i32() call required to match add$/;"	v
low	/usr/lib/haxe/std/haxe/Int64.hx	/^		var low = p00;$/;"	v
low	/usr/lib/haxe/std/haxe/Int64.hx	/^	var low : Int;$/;"	v
lowPos	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^						var lowPos = Std.int (Math.min (textField.__selectionStart, textField.__cursorPosition));$/;"	v
lower	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var lower:Float = 0.0;$/;"	v
lowerAngle	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJointDef.hx	/^	public var lowerAngle:Float;$/;"	v
lowerArmL	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRagdoll.hx	/^				var lowerArmL:B2Body = m_world.createBody(bd);$/;"	v
lowerArmR	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRagdoll.hx	/^				var lowerArmR:B2Body = m_world.createBody(bd);$/;"	v
lowerBound	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^	public var lowerBound:B2Vec2;$/;"	v
lowerLegL	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRagdoll.hx	/^				var lowerLegL:B2Body = m_world.createBody(bd);$/;"	v
lowerLegR	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRagdoll.hx	/^				var lowerLegR:B2Body = m_world.createBody(bd);$/;"	v
lowerTranslation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJointDef.hx	/^	public var lowerTranslation:Float;$/;"	v
lowerTranslation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJointDef.hx	/^	public var lowerTranslation:Float;$/;"	v
lowerX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var lowerX:Float = B2Math.MAX_VALUE;$/;"	v
lowerX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var lowerX:Float = xf.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);$/;"	v
lowerY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var lowerY:Float = B2Math.MAX_VALUE;$/;"	v
lowerY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var lowerY:Float = xf.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);$/;"	v
lpad	/usr/lib/haxe/std/StringTools.hx	/^	public static function lpad( s : String, c : String, l : Int ) : String {$/;"	f
lsb	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^		var lsb = (a & 0x1) & (b & 0x1);$/;"	v
lsb	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^		var lsb = (a & 0x1) ^ (b & 0x1);$/;"	v
lsb	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^		var lsb = (a & 0x1) | (b & 0x1);$/;"	v
lsbId	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var lsbId = ProcessHelper.runProcess ("", "lsb_release", ["-si"], true, true, true);$/;"	v
lsbRelease	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var lsbRelease = ProcessHelper.runProcess ("", "lsb_release", ["-sr"], true, true, true);$/;"	v
lsw	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^		var lsw = (x & 0xFFFF) + (y & 0xFFFF);$/;"	v
lsw	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^		var lsw = (x & 0xFFFF)+(y & 0xFFFF);$/;"	v
lutentry	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGALTokenizer.hx	/^			var lutentry:OpLUT = Mapping.agal2glsllut[token.opcode];$/;"	v
lutentry	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLParser.hx	/^			var lutentry = Mapping.agal2glsllut[desc.tokens[i].opcode];$/;"	v
m	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var m:B2Manifold = c.manifold;$/;"	v
m	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^				var m:Float = 1.0 \/ k;$/;"	v
m	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^					var m:B2Manifold = ms[ i ];$/;"	v
m	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^				var m = [];$/;"	v
m	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^				var m = frame.GetMethod();$/;"	v
m	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^			var m = [];$/;"	v
m	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^			var m = new Array<StackItem>();$/;"	v
m	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^		var m = lime_cairo_get_matrix (handle);$/;"	v
m	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoPattern.hx	/^		var m = lime_cairo_pattern_get_matrix (this);$/;"	v
m	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var m = clone();$/;"	v
m	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var m = getAxisRotation (axis.x, axis.y, axis.z, degrees);$/;"	v
m	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var m = new Matrix4 ();$/;"	v
m	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var m = new Matrix4();$/;"	v
m	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		var m = 0.0;$/;"	v
m	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var m = matrix != null ? matrix.clone () : new Matrix ();$/;"	v
m	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^			var m = __worldTransform.clone();$/;"	v
m	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^		var m = new Matrix ();$/;"	v
m	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var m = clone();$/;"	v
m	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var m = getAxisRotation (axis.x, axis.y, axis.z, degrees);$/;"	v
m	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var m = new Matrix3D ();$/;"	v
m	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var m = new Matrix3D();$/;"	v
m	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^		var m = __metrics[inGlyph];$/;"	v
m	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^		var m:UInt = 0;$/;"	v
m	/usr/lib/haxe/std/Date.hx	/^			var m = date.getMonth() + 1;$/;"	v
m	/usr/lib/haxe/std/DateTools.hx	/^		var m = s \/ 60;$/;"	v
m	/usr/lib/haxe/std/haxe/CallStack.hx	/^				var m = [];$/;"	v
m	/usr/lib/haxe/std/haxe/CallStack.hx	/^				var m = frame.GetMethod();$/;"	v
m	/usr/lib/haxe/std/haxe/CallStack.hx	/^			var m = [];$/;"	v
m	/usr/lib/haxe/std/haxe/CallStack.hx	/^			var m = new Array();$/;"	v
m	/usr/lib/haxe/std/haxe/CallStack.hx	/^			var m = new Array<StackItem>();$/;"	v
m	/usr/lib/haxe/std/haxe/Int64.hx	/^		var m = divMod(a, b).modulus;$/;"	v
m	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^			var m = new Md5();$/;"	v
m	/usr/lib/haxe/std/haxe/remoting/Context.hx	/^		var m = Reflect.field(o,path[1]);$/;"	v
m	/usr/lib/haxe/std/haxe/remoting/ContextAll.hx	/^		var m : Dynamic = neko.Lib.getClasses();$/;"	v
m	/usr/lib/haxe/std/haxe/remoting/ContextAll.hx	/^		var m = Reflect.field(o,f);$/;"	v
m	/usr/lib/haxe/std/haxe/remoting/ContextAll.hx	/^		var m = null;$/;"	v
m	/usr/lib/haxe/std/haxe/remoting/DelayedConnection.hx	/^			var m = d.__data.cache.shift();$/;"	v
m	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^			var m;$/;"	v
m	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^		var m : Dynamic = dc.dispatchConfig[0];$/;"	v
m	/usr/lib/haxe/std/haxe/xml/Check.hx	/^					var m = checkList([x].iterator(),r);$/;"	v
m	/usr/lib/haxe/std/haxe/xml/Check.hx	/^				var m = check(x,r);$/;"	v
m	/usr/lib/haxe/std/haxe/xml/Check.hx	/^				var m = checkList([x].iterator(),r);$/;"	v
m	/usr/lib/haxe/std/haxe/xml/Check.hx	/^			var m = checkList(x.iterator(),childs);$/;"	v
m	/usr/lib/haxe/std/haxe/xml/Check.hx	/^		var m = checkList([x].iterator(),r);$/;"	v
m	/usr/lib/haxe/std/haxe/xml/Check.hx	/^		var m = checkList(x.iterator(),r);$/;"	v
m	/usr/lib/haxe/std/haxe/xml/Proxy.hx	/^	var m = new MyXml(h.get);$/;"	v
m	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^			var m : { s : sys.net.Socket, cnx : Bool } = neko.vm.Thread.readMessage(t.socks.length == 0);$/;"	v
m	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^			var m = readClientMessage(c.client,c.buf,pos,len);$/;"	v
m	/usr/lib/haxe/std/neko/vm/Module.hx	/^		var m = _module_read(function(buf,pos,len) {$/;"	v
m	/usr/lib/haxe/std/neko/vm/Module.hx	/^		var m = _module_read_path(p,untyped name.__s,loader.l);$/;"	v
m	/usr/lib/haxe/std/neko/vm/Module.hx	/^	public var m : ModuleHandle;$/;"	v
m	/usr/lib/haxe/std/neko/vm/Mutex.hx	/^	var m : Dynamic;$/;"	v
m	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var m : Array<Dynamic> = haxe.rtti.Meta.getType(classval).rtti;$/;"	v
m	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^					var m = getManager(typeof(mpath),p);$/;"	v
m	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var m : { private var KEYWORDS : haxe.ds.StringMap<Bool>; } = Manager;$/;"	v
m0	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var m0 = src.readByte();$/;"	v
m1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^			var m1:Float = m_invMassA;$/;"	v
m1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var m1:Float;$/;"	v
m1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^			var m1:Float = m_invMassA;$/;"	v
m1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var m1:Float;$/;"	v
m1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^		var m1:Float = bA.m_invMass;$/;"	v
m1	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var m1 = src.readByte();$/;"	v
m1	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var m1 = new Matrix3D ();$/;"	v
m11	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^			var m11:Float = this[0]; var m21:Float = this[4]; var m31:Float = this[8]; var m41:Float = this[12];$/;"	v
m11	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^			var m11:Float = rawData[0]; var m21:Float = rawData[4]; var m31:Float = rawData[8]; var m41:Float = rawData[12];$/;"	v
m111	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var m111:Float = rhs[0], m121:Float = rhs[4], m131:Float = rhs[8], m141:Float = rhs[12],$/;"	v
m111	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var m111:Float = this[0], m121:Float = this[4], m131:Float = this[8], m141:Float = this[12],$/;"	v
m111	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var m111:Float = rhs.rawData[0], m121:Float = rhs.rawData[4], m131:Float = rhs.rawData[8], m141:Float = rhs.rawData[12],$/;"	v
m111	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var m111:Float = this.rawData[0], m121:Float = this.rawData[4], m131:Float = this.rawData[8], m141:Float = this.rawData[12],$/;"	v
m12	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^			var m12:Float = this[1]; var m22:Float = this[5]; var m32:Float = this[9]; var m42:Float = this[13];$/;"	v
m12	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^			var m12:Float = rawData[1]; var m22:Float = rawData[5]; var m32:Float = rawData[9]; var m42:Float = rawData[13];$/;"	v
m13	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^			var m13:Float = this[2]; var m23:Float = this[6]; var m33:Float = this[10]; var m43:Float = this[14];$/;"	v
m13	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^			var m13:Float = rawData[2]; var m23:Float = rawData[6]; var m33:Float = rawData[10]; var m43:Float = rawData[14];$/;"	v
m14	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^			var m14:Float = this[3]; var m24:Float = this[7]; var m34:Float = this[11]; var m44:Float = this[15];$/;"	v
m14	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^			var m14:Float = rawData[3]; var m24:Float = rawData[7]; var m34:Float = rawData[11]; var m44:Float = rawData[15];$/;"	v
m2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^			var m2:Float = m_invMassB;$/;"	v
m2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var m2:Float;$/;"	v
m2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^			var m2:Float = m_invMassB;$/;"	v
m2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var m2:Float;$/;"	v
m2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^		var m2:Float = bB.m_invMass;$/;"	v
m2	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var m2 = src.readByte();$/;"	v
m2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var m2 = new Matrix3D([ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0 ] );$/;"	v
m2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var m2 = new Matrix3D([ 1.0, 5.0, 9.0, 13.0, 2.0, 6.0, 10.0, 14.0, 3.0, 7.0, 11.0, 15.0, 4.0, 8.0, 12.0, 16.0 ] );$/;"	v
m3	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var m3 = src.readByte();$/;"	v
mA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^		var mA:Float = bA.m_invMass;$/;"	v
mA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^		var mA:Float = bA.m_invMass;$/;"	v
mB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^		var mB:Float = bB.m_invMass;$/;"	v
mB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^		var mB:Float = bB.m_invMass;$/;"	v
mConstants	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private var mConstants:Array<Dynamic>;$/;"	v
mCurrentType	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private var mCurrentType:String;$/;"	v
mExactTypes	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private var mExactTypes:Map<String, Bool>;$/;"	v
mFireAt	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^	private var mFireAt:Float;$/;"	v
mFireAt	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^	private var mFireAt:Float;$/;"	v
mImage	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Loader.hx	/^	private var mImage:BitmapData;$/;"	v
mOutput	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private var mOutput:Output;$/;"	v
mProcessed	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private var mProcessed:Map<String, Bool>;$/;"	v
mRunning	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^	private var mRunning:Bool;$/;"	v
mRunning	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^	private var mRunning:Bool;$/;"	v
mShape	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Loader.hx	/^	private var mShape:Shape;$/;"	v
mStack	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private var mStack:Array<String>;$/;"	v
mTime	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^	private var mTime:Float;$/;"	v
mTime	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^	private var mTime:Float;$/;"	v
m_C	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^	private var m_C:B2Vec2;			\/\/ position error$/;"	v
m_I	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public var m_I:Float;$/;"	v
m_J	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^	private var m_J:B2Jacobian;$/;"	v
m_K	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	private var m_K:B2Mat22;$/;"	v
m_K	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	private var m_K:B2Mat33;$/;"	v
m_a1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	private var m_a1:Float;$/;"	v
m_a1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	private var m_a1:Float;$/;"	v
m_a2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	private var m_a2:Float;$/;"	v
m_a2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	private var m_a2:Float;$/;"	v
m_aabb	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public var m_aabb:B2AABB;$/;"	v
m_allocator	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^	public var m_allocator:Dynamic;$/;"	v
m_allocator	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^	private var m_allocator:Dynamic;$/;"	v
m_allocator	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactFactory.hx	/^	private var m_allocator:Dynamic;$/;"	v
m_allocator	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^	private var m_allocator:Dynamic;$/;"	v
m_allowSleep	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	private var m_allowSleep:Bool;$/;"	v
m_alpha	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	private var m_alpha:Float;$/;"	v
m_angularDamping	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public var m_angularDamping:Float;$/;"	v
m_angularImpulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^	private var m_angularImpulse:Float;$/;"	v
m_angularMass	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^	public var m_angularMass:Float;$/;"	v
m_angularVelocity	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public var m_angularVelocity:Float;$/;"	v
m_angularVelocity	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBreakable.hx	/^		public var m_angularVelocity:Float;$/;"	v
m_axis	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^	public var m_axis:B2Vec2;$/;"	v
m_axis	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	private var m_axis:B2Vec2;$/;"	v
m_axis	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	private var m_axis:B2Vec2;$/;"	v
m_beta	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^	private var m_beta:Float;						\/\/ bias factor$/;"	v
m_bias	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^	private var m_bias:Float;$/;"	v
m_bodies	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^	public var m_bodies:Array <B2Body>;$/;"	v
m_bodies	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBuoyancy.hx	/^		private var m_bodies:Array<B2Body> = new Array();$/;"	v
m_body	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public var m_body:B2Body;$/;"	v
m_body1	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBreakable.hx	/^		public var m_body1:B2Body;$/;"	v
m_bodyA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	public var m_bodyA:B2Body;$/;"	v
m_bodyB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	public var m_bodyB:B2Body;$/;"	v
m_bodyCapacity	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^	private var m_bodyCapacity:Int = 0;$/;"	v
m_bodyCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^	public var m_bodyCount:Int = 0;$/;"	v
m_bodyCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	private var m_bodyCount:Int;$/;"	v
m_bodyCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2Controller.hx	/^	public var m_bodyCount:Int = 0;$/;"	v
m_bodyList	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public var m_bodyList:B2Body;$/;"	v
m_bodyList	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2Controller.hx	/^	public var m_bodyList:B2ControllerEdge;$/;"	v
m_bomb	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^		public var m_bomb:B2Body;$/;"	v
m_bottom	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestOneSidedPlatform.hx	/^		public var m_bottom:Float;$/;"	v
m_break	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBreakable.hx	/^		public var m_break:Bool;$/;"	v
m_broadPhase	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^	public var m_broadPhase:IBroadPhase;$/;"	v
m_broke	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBreakable.hx	/^		public var m_broke:Bool;$/;"	v
m_centroid	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	public var m_centroid:B2Vec2;$/;"	v
m_character	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestOneSidedPlatform.hx	/^		public var m_character:B2Fixture;$/;"	v
m_chassis	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^	private var m_chassis:B2Body;$/;"	v
m_collideConnected	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	public var m_collideConnected:Bool;$/;"	v
m_constant	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^	private var m_constant:Float;$/;"	v
m_constant	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	private var m_constant:Float;$/;"	v
m_constraintCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^	private var m_constraintCount:Int = 0;$/;"	v
m_constraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^	public var m_constraints:Array <B2ContactConstraint>;$/;"	v
m_contactCapacity	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^	public var m_contactCapacity:Int = 0;$/;"	v
m_contactCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^	public var m_contactCount:Int;$/;"	v
m_contactCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^	public var m_contactCount:Int = 0;$/;"	v
m_contactCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public var m_contactCount:Int;$/;"	v
m_contactFactory	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^	public var m_contactFactory:B2ContactFactory;$/;"	v
m_contactFilter	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^	public var m_contactFilter:B2ContactFilter;$/;"	v
m_contactList	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public var m_contactList:B2ContactEdge;$/;"	v
m_contactList	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^	public var m_contactList:B2Contact;$/;"	v
m_contactList	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public var m_contactList:B2Contact;$/;"	v
m_contactListener	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^	public var m_contactListener:B2ContactListener;$/;"	v
m_contactManager	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public var m_contactManager:B2ContactManager;$/;"	v
m_contactSolver	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^	private var m_contactSolver:B2ContactSolver;$/;"	v
m_contactSolver	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	private var m_contactSolver:B2ContactSolver;$/;"	v
m_contacts	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^	public var m_contacts:Array <B2Contact>;$/;"	v
m_continuousPhysics	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	static private var m_continuousPhysics:Bool;$/;"	v
m_controller	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBuoyancy.hx	/^		private var m_controller:B2Controller;$/;"	v
m_controllerCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public var m_controllerCount:Int;$/;"	v
m_controllerCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	private var m_controllerCount:Int;$/;"	v
m_controllerList	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public var m_controllerList:B2ControllerEdge;$/;"	v
m_controllerList	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	private var m_controllerList:B2Controller;$/;"	v
m_coreV1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public var m_coreV1:B2Vec2;$/;"	v
m_coreV2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public var m_coreV2:B2Vec2;$/;"	v
m_cornerConvex1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public var m_cornerConvex1:Bool;$/;"	v
m_cornerConvex2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public var m_cornerConvex2:Bool;$/;"	v
m_cornerDir1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public var m_cornerDir1:B2Vec2;$/;"	v
m_cornerDir2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public var m_cornerDir2:B2Vec2;$/;"	v
m_count	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DistanceProxy.hx	/^	public var m_count:Int = 0;$/;"	v
m_count	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^public var m_count:Int = 0;$/;"	v
m_dampingRatio	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^	private var m_dampingRatio:Float;$/;"	v
m_dampingRatio	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^	private var m_dampingRatio:Float;$/;"	v
m_debugDraw	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	private var m_debugDraw:B2DebugDraw;$/;"	v
m_density	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public var m_density:Float;$/;"	v
m_destructionListener	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	private var m_destructionListener:B2DestructionListener;$/;"	v
m_direction	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public var m_direction:B2Vec2;$/;"	v
m_drawFlags	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	private var m_drawFlags:Int;$/;"	v
m_drawScale	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	private var m_drawScale:Float;$/;"	v
m_edgeA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	public var m_edgeA:B2JointEdge;$/;"	v
m_edgeB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	public var m_edgeB:B2JointEdge;$/;"	v
m_enableLimit	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	private var m_enableLimit:Bool;$/;"	v
m_enableLimit	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	private var m_enableLimit:Bool;$/;"	v
m_enableLimit	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	private var m_enableLimit:Bool;$/;"	v
m_enableMotor	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	private var m_enableMotor:Bool;$/;"	v
m_enableMotor	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	private var m_enableMotor:Bool;$/;"	v
m_enableMotor	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	private var m_enableMotor:Bool;$/;"	v
m_fillAlpha	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	private var m_fillAlpha:Float;$/;"	v
m_filter	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public var m_filter:B2FilterData;$/;"	v
m_fixtureA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	public var m_fixtureA:B2Fixture;$/;"	v
m_fixtureB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	public var m_fixtureB:B2Fixture;$/;"	v
m_fixtureCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public var m_fixtureCount:Int;$/;"	v
m_fixtureList	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public var m_fixtureList:B2Fixture;$/;"	v
m_flags	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public var m_flags:Int;$/;"	v
m_flags	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public var m_flags:Int;$/;"	v
m_flags	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	public var m_flags:Int = 0;$/;"	v
m_force	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public var m_force:B2Vec2;$/;"	v
m_freeList	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^	private var m_freeList:B2DynamicTreeNode;$/;"	v
m_frequencyHz	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^	private var m_frequencyHz:Float;$/;"	v
m_frequencyHz	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^	private var m_frequencyHz:Float;$/;"	v
m_friction	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public var m_friction:Float;$/;"	v
m_gJoint1	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^		public var m_gJoint1:B2RevoluteJoint;$/;"	v
m_gJoint2	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^		public var m_gJoint2:B2RevoluteJoint;$/;"	v
m_gJoint3	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^		public var m_gJoint3:B2PrismaticJoint;$/;"	v
m_gJoint4	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^		public var m_gJoint4:B2GearJoint;$/;"	v
m_gJoint5	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^		public var m_gJoint5:B2GearJoint;$/;"	v
m_gamma	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^	private var m_gamma:Float;$/;"	v
m_gamma	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^	private var m_gamma:Float;						\/\/ softness$/;"	v
m_gravity	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	private var m_gravity:B2Vec2;$/;"	v
m_ground	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	private var m_ground:B2Body;$/;"	v
m_ground1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^	private var m_ground1:B2Body;$/;"	v
m_ground2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^	private var m_ground2:B2Body;$/;"	v
m_groundAnchor1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^	private var m_groundAnchor1:B2Vec2;$/;"	v
m_groundAnchor1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	private var m_groundAnchor1:B2Vec2;$/;"	v
m_groundAnchor2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^	private var m_groundAnchor2:B2Vec2;$/;"	v
m_groundAnchor2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	private var m_groundAnchor2:B2Vec2;$/;"	v
m_groundBody	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public var m_groundBody:B2Body;$/;"	v
m_id	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ManifoldPoint.hx	/^	public var m_id:B2ContactID;$/;"	v
m_impulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^	private var m_impulse:Float;$/;"	v
m_impulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^	private var m_impulse:Float;$/;"	v
m_impulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	private var m_impulse:B2Vec2;$/;"	v
m_impulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^	private var m_impulse:B2Vec2;$/;"	v
m_impulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	private var m_impulse:B2Vec3;$/;"	v
m_impulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	private var m_impulse:Float;$/;"	v
m_impulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	private var m_impulse:B2Vec3;$/;"	v
m_impulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^	private var m_impulse:B2Vec3;$/;"	v
m_inertiaScale	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public var m_inertiaScale:Float;$/;"	v
m_insertionCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^	private var m_insertionCount:Int;$/;"	v
m_invI	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public var m_invI:Float;$/;"	v
m_invIA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	public var m_invIA:Float;$/;"	v
m_invIB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	public var m_invIB:Float;$/;"	v
m_invMass	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public var m_invMass:Float;$/;"	v
m_invMassA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	public var m_invMassA:Float;$/;"	v
m_invMassB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	public var m_invMassB:Float;$/;"	v
m_inv_dt0	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	private var m_inv_dt0:Float;$/;"	v
m_isSensor	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public var m_isSensor:Bool;$/;"	v
m_island	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	private var m_island:B2Island;$/;"	v
m_islandFlag	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	public var m_islandFlag:Bool;$/;"	v
m_islandIndex	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public var m_islandIndex:Int;$/;"	v
m_joint1	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^		private var m_joint1:B2RevoluteJoint;$/;"	v
m_joint2	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^		private var m_joint2:B2PrismaticJoint;$/;"	v
m_jointCapacity	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^	public var m_jointCapacity:Int = 0;$/;"	v
m_jointCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^	public var m_jointCount:Int = 0;$/;"	v
m_jointCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	private var m_jointCount:Int;$/;"	v
m_jointList	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public var m_jointList:B2JointEdge;$/;"	v
m_jointList	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	private var m_jointList:B2Joint;$/;"	v
m_joints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^	public var m_joints:Array <B2Joint>;$/;"	v
m_length	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public var m_length:Float;$/;"	v
m_length	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^	private var m_length:Float;$/;"	v
m_limitImpulse1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	private var m_limitImpulse1:Float;$/;"	v
m_limitImpulse2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	private var m_limitImpulse2:Float;$/;"	v
m_limitMass1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	private var m_limitMass1:Float;$/;"	v
m_limitMass2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	private var m_limitMass2:Float;$/;"	v
m_limitState	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	private var m_limitState:B2LimitState;$/;"	v
m_limitState	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	private var m_limitState:B2LimitState;$/;"	v
m_limitState	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	private var m_limitState:B2LimitState;$/;"	v
m_limitState1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	private var m_limitState1:B2LimitState;$/;"	v
m_limitState2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	private var m_limitState2:B2LimitState;$/;"	v
m_lineThickness	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	private var m_lineThickness:Float;$/;"	v
m_linearDamping	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public var m_linearDamping:Float;$/;"	v
m_linearImpulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^	private var m_linearImpulse:B2Vec2;$/;"	v
m_linearMass	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^	public var m_linearMass:B2Mat22;$/;"	v
m_linearVelocity	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public var m_linearVelocity:B2Vec2;$/;"	v
m_listener	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^	private var m_listener:B2ContactListener;$/;"	v
m_localAnchor	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^	private var m_localAnchor:B2Vec2;$/;"	v
m_localAnchor1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^	private var m_localAnchor1:B2Vec2;$/;"	v
m_localAnchor1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^	private var m_localAnchor1:B2Vec2;$/;"	v
m_localAnchor1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	public var m_localAnchor1:B2Vec2;$/;"	v
m_localAnchor1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	public var m_localAnchor1:B2Vec2;$/;"	v
m_localAnchor1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	private var m_localAnchor1:B2Vec2;$/;"	v
m_localAnchor1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	public var m_localAnchor1:B2Vec2; \/\/ relative$/;"	v
m_localAnchor2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^	private var m_localAnchor2:B2Vec2;$/;"	v
m_localAnchor2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^	private var m_localAnchor2:B2Vec2;$/;"	v
m_localAnchor2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	public var m_localAnchor2:B2Vec2;$/;"	v
m_localAnchor2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	public var m_localAnchor2:B2Vec2;$/;"	v
m_localAnchor2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	private var m_localAnchor2:B2Vec2;$/;"	v
m_localAnchor2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	public var m_localAnchor2:B2Vec2;$/;"	v
m_localAnchorA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^	private var m_localAnchorA:B2Vec2;$/;"	v
m_localAnchorA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^	private var m_localAnchorA:B2Vec2;$/;"	v
m_localAnchorB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^	private var m_localAnchorB:B2Vec2;$/;"	v
m_localAnchorB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^	private var m_localAnchorB:B2Vec2;$/;"	v
m_localCenterA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	public var m_localCenterA:B2Vec2;$/;"	v
m_localCenterB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	public var m_localCenterB:B2Vec2;$/;"	v
m_localPlaneNormal	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Manifold.hx	/^	public var m_localPlaneNormal:B2Vec2;	$/;"	v
m_localPoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Manifold.hx	/^	public var m_localPoint:B2Vec2;	$/;"	v
m_localPoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ManifoldPoint.hx	/^	public var m_localPoint:B2Vec2;$/;"	v
m_localPoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^	public var m_localPoint:B2Vec2;$/;"	v
m_localXAxis1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	public var m_localXAxis1:B2Vec2;$/;"	v
m_localXAxis1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	public var m_localXAxis1:B2Vec2;$/;"	v
m_localYAxis1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	private var m_localYAxis1:B2Vec2;$/;"	v
m_localYAxis1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	private var m_localYAxis1:B2Vec2;$/;"	v
m_lowerAngle	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	private var m_lowerAngle:Float;$/;"	v
m_lowerTranslation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	private var m_lowerTranslation:Float;$/;"	v
m_lowerTranslation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	private var m_lowerTranslation:Float;$/;"	v
m_manifold	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	public var m_manifold:B2Manifold;$/;"	v
m_mass	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public var m_mass:Float;$/;"	v
m_mass	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^	private var m_mass:Float;	\/\/ effective mass for the constraint.$/;"	v
m_mass	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^	private var m_mass:Float;$/;"	v
m_mass	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^	private var m_mass:B2Mat22;	\/\/ effective mass for point-to-point constraint.$/;"	v
m_mass	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	private var m_mass:B2Mat33;		\/\/ effective mass for point-to-point constraint.$/;"	v
m_mass	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^	private var m_mass:B2Mat33;$/;"	v
m_massData	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	private var m_massData:B2MassData;$/;"	v
m_maxForce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^	private var m_maxForce:Float;$/;"	v
m_maxForce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^	private var m_maxForce:Float;$/;"	v
m_maxLength1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	private var m_maxLength1:Float;$/;"	v
m_maxLength2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	private var m_maxLength2:Float;$/;"	v
m_maxMotorForce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	private var m_maxMotorForce:Float;$/;"	v
m_maxMotorForce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	private var m_maxMotorForce:Float;$/;"	v
m_maxMotorTorque	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	private var m_maxMotorTorque:Float;$/;"	v
m_maxTorque	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^	private var m_maxTorque:Float;$/;"	v
m_motorImpulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	private var m_motorImpulse:Float;$/;"	v
m_motorImpulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	private var m_motorImpulse:Float;$/;"	v
m_motorImpulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	private var m_motorImpulse:Float;$/;"	v
m_motorJoint	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^	private var m_motorJoint:B2RevoluteJoint;$/;"	v
m_motorMass	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	private var m_motorMass:Float;			\/\/ effective mass for motor\/limit translational constraint.$/;"	v
m_motorMass	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	private var m_motorMass:Float;			\/\/ effective mass for motor\/limit translational constraint.$/;"	v
m_motorMass	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	private var m_motorMass:Float;	\/\/ effective mass for motor\/limit angular constraint.$/;"	v
m_motorOn	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^	private var m_motorOn:Bool = true;$/;"	v
m_motorSpeed	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	private var m_motorSpeed:Float;$/;"	v
m_motorSpeed	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	private var m_motorSpeed:Float;$/;"	v
m_motorSpeed	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	private var m_motorSpeed:Float;$/;"	v
m_motorSpeed	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^	private var m_motorSpeed:Float;$/;"	v
m_mouseJoint	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^		public var m_mouseJoint:B2MouseJoint;$/;"	v
m_moveBuffer	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^	private var m_moveBuffer:Array <B2DynamicTreeNode>;$/;"	v
m_next	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public var m_next:B2Body;$/;"	v
m_next	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public var m_next:B2Fixture;$/;"	v
m_next	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	public var m_next:B2Contact;$/;"	v
m_next	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2Controller.hx	/^	public var m_next:B2Controller;$/;"	v
m_next	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	public var m_next:B2Joint;$/;"	v
m_nextEdge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public var m_nextEdge:B2EdgeShape;$/;"	v
m_nodeA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	public var m_nodeA:B2ContactEdge;$/;"	v
m_nodeB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	public var m_nodeB:B2ContactEdge;$/;"	v
m_normal	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2WorldManifold.hx	/^	public var m_normal:B2Vec2;						$/;"	v
m_normal	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public var m_normal:B2Vec2;$/;"	v
m_normal	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PositionSolverManifold.hx	/^	public var m_normal:B2Vec2;$/;"	v
m_normalImpulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ManifoldPoint.hx	/^	public var m_normalImpulse:Float;$/;"	v
m_normals	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	public var m_normals:Array <B2Vec2>;$/;"	v
m_offset	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^	private var m_offset:B2Vec2 = new B2Vec2();$/;"	v
m_oldManifold	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	public var m_oldManifold:B2Manifold;$/;"	v
m_p	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^	public var m_p:B2Vec2;$/;"	v
m_pairBuffer	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^	private var m_pairBuffer:Array <B2DynamicTreePair>;$/;"	v
m_pairCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^	private var m_pairCount:Int;$/;"	v
m_path	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^	private var m_path:Int;$/;"	v
m_perp	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	private var m_perp:B2Vec2;$/;"	v
m_perp	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	private var m_perp:B2Vec2;$/;"	v
m_physScale	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^		var m_physScale = 30;$/;"	v
m_piece1	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBreakable.hx	/^		public var m_piece1:B2Fixture;$/;"	v
m_piece2	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBreakable.hx	/^		public var m_piece2:B2Fixture;$/;"	v
m_platform	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestOneSidedPlatform.hx	/^		public var m_platform:B2Fixture;$/;"	v
m_pointCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Manifold.hx	/^	public var m_pointCount:Int;$/;"	v
m_points	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Manifold.hx	/^	public var m_points:Array <B2ManifoldPoint>;	$/;"	v
m_points	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2WorldManifold.hx	/^	public var m_points:Array <B2Vec2>;$/;"	v
m_points	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PositionSolverManifold.hx	/^	public var m_points:Array <B2Vec2>;$/;"	v
m_positionIterations	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^		public var m_positionIterations:Int = 10;$/;"	v
m_prev	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public var m_prev:B2Body;$/;"	v
m_prev	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	public var m_prev:B2Contact;$/;"	v
m_prev	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2Controller.hx	/^	public var m_prev:B2Controller;$/;"	v
m_prev	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	public var m_prev:B2Joint;$/;"	v
m_prevEdge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public var m_prevEdge:B2EdgeShape;$/;"	v
m_prismatic1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^	private var m_prismatic1:B2PrismaticJoint;$/;"	v
m_prismatic2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^	private var m_prismatic2:B2PrismaticJoint;$/;"	v
m_proxy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public var m_proxy:Dynamic;$/;"	v
m_proxyA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^	public var m_proxyA:B2DistanceProxy;$/;"	v
m_proxyB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^	public var m_proxyB:B2DistanceProxy;$/;"	v
m_proxyCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^	private var m_proxyCount:Int;$/;"	v
m_pulleyMass	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	private var m_pulleyMass:Float;$/;"	v
m_radius	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DistanceProxy.hx	/^	public var m_radius:Float = 0;$/;"	v
m_radius	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2Shape.hx	/^	public var m_radius:Float;$/;"	v
m_radius	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestOneSidedPlatform.hx	/^		public var m_radius:Float;$/;"	v
m_ratio	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^	private var m_ratio:Float;$/;"	v
m_ratio	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	private var m_ratio:Float;$/;"	v
m_refAngle	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	private var m_refAngle:Float;$/;"	v
m_referenceAngle	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	private var m_referenceAngle:Float;$/;"	v
m_referenceAngle	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^	private var m_referenceAngle:Float;$/;"	v
m_registers	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactFactory.hx	/^	private var m_registers:Array <Array <B2ContactRegister> >;$/;"	v
m_restitution	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public var m_restitution:Float;$/;"	v
m_revolute1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^	private var m_revolute1:B2RevoluteJoint;$/;"	v
m_revolute2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^	private var m_revolute2:B2RevoluteJoint;$/;"	v
m_root	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^	private var m_root:B2DynamicTreeNode;$/;"	v
m_s1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	private var m_s1:Float;$/;"	v
m_s1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	private var m_s1:Float;$/;"	v
m_s2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	private var m_s2:Float;$/;"	v
m_s2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	private var m_s2:Float;$/;"	v
m_separations	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PositionSolverManifold.hx	/^	public var m_separations:Array <Float>;$/;"	v
m_shape	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public var m_shape:B2Shape;$/;"	v
m_shape1	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBreakable.hx	/^		public var m_shape1:B2PolygonShape = new B2PolygonShape();$/;"	v
m_shape2	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBreakable.hx	/^		public var m_shape2:B2PolygonShape = new B2PolygonShape();$/;"	v
m_sleepTime	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public var m_sleepTime:Float;$/;"	v
m_sprite	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	public var m_sprite:Sprite;$/;"	v
m_sprite	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^	 	var m_sprite = Global.world_sprite;$/;"	v
m_stageMc	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		static public var m_stageMc;		$/;"	v
m_state	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	private var m_state:B2LimitState;$/;"	v
m_state	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestOneSidedPlatform.hx	/^		public var m_state:Int;$/;"	v
m_step	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^	private var m_step:B2TimeStep;$/;"	v
m_sweep	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public var m_sweep:B2Sweep;	\/\/ the swept motion for CCD$/;"	v
m_tangentImpulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ManifoldPoint.hx	/^	public var m_tangentImpulse:Float;$/;"	v
m_target	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^	private var m_target:B2Vec2;$/;"	v
m_tests	/usr/lib/haxe/std/haxe/unit/TestResult.hx	/^	var m_tests : List<TestStatus>;$/;"	v
m_timeStep	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^		public var m_timeStep:Float = 1.0\/30.0;$/;"	v
m_toi	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	public var m_toi:Float = 0;$/;"	v
m_top	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestOneSidedPlatform.hx	/^		public var m_top:Float;$/;"	v
m_torque	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public var m_torque:Float;$/;"	v
m_tree	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^	private var m_tree:B2DynamicTree;$/;"	v
m_type	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Manifold.hx	/^	public var m_type:B2ManifoldType;$/;"	v
m_type	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^	public var m_type:B2SeparationFunctionType;$/;"	v
m_type	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2Shape.hx	/^	public var m_type:B2ShapeType;$/;"	v
m_type	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public var m_type:B2BodyType;$/;"	v
m_type	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	public var m_type:B2JointType;$/;"	v
m_u	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^	private var m_u:B2Vec2;$/;"	v
m_u1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	private var m_u1:B2Vec2;$/;"	v
m_u2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	private var m_u2:B2Vec2;$/;"	v
m_upperAngle	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	private var m_upperAngle:Float;$/;"	v
m_upperTranslation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	private var m_upperTranslation:Float;$/;"	v
m_upperTranslation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	private var m_upperTranslation:Float;$/;"	v
m_userData	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	private var m_userData:Dynamic;$/;"	v
m_userData	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public var m_userData:Dynamic;$/;"	v
m_userData	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	private var m_userData:Dynamic;$/;"	v
m_v1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^public var m_v1:B2SimplexVertex;$/;"	v
m_v1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public var m_v1:B2Vec2;$/;"	v
m_v2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^public var m_v2:B2SimplexVertex;$/;"	v
m_v2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public var m_v2:B2Vec2;$/;"	v
m_v3	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^public var m_v3:B2SimplexVertex;$/;"	v
m_velocity	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBreakable.hx	/^		public var m_velocity:B2Vec2 = new B2Vec2();$/;"	v
m_velocityIterations	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^		public var m_velocityIterations:Int = 10;$/;"	v
m_vertexCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	public var m_vertexCount:Int = 0;$/;"	v
m_vertices	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DistanceProxy.hx	/^	public var m_vertices:Array <B2Vec2>;$/;"	v
m_vertices	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^public var m_vertices:Array <B2SimplexVertex>;$/;"	v
m_vertices	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	public var m_vertices:Array <B2Vec2>;$/;"	v
m_warmStarting	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	static private var m_warmStarting:Bool;$/;"	v
m_wheel	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^	private var m_wheel:B2Body;$/;"	v
m_world	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public var m_world:B2World;$/;"	v
m_world	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^	public var m_world:B2World;$/;"	v
m_world	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2Controller.hx	/^	public var m_world:B2World;$/;"	v
m_world	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^		public var m_world:B2World;$/;"	v
m_xf	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public var m_xf:B2Transform;		\/\/ the body origin transform$/;"	v
m_xformScale	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	private var m_xformScale:Float;$/;"	v
macroBuild	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	public static function macroBuild() {$/;"	f
macroCount	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	public static function macroCount( em : Expr, econd : Expr ) {$/;"	f
macroDelete	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	public static function macroDelete( em : Expr, econd : Expr, eopt : Expr ) {$/;"	f
macroGet	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	public static function macroGet( em : Expr, econd : Expr, elock : Expr ) {$/;"	f
macroSearch	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	public static function macroSearch( em : Expr, econd : Expr, eopt : Expr, elock : Expr, ?single ) {$/;"	f
macros	/usr/lib/haxe/std/haxe/Template.hx	/^	var macros : Dynamic;$/;"	v
magFilter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DefaultShader.hx	/^			var magFilter = (data.magFilter != #if !neko 0 #else null #end) ? data.magFilter : gl.LINEAR;$/;"	v
main	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Main.hx	/^	public static function main() $/;"	f
main	/usr/lib/haxe/lib/lime/2,4,3/legacy/templates/haxe/ApplicationMain.hx	/^    public static function main () {$/;"	f
main	/usr/lib/haxe/lib/lime/2,4,3/legacy/templates/html5/haxe/ApplicationMain.hx	/^        public static function main () {$/;"	f
main	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^		var main = app.main;$/;"	v
main	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public static function main () {$/;"	f
main	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/ApplicationMain.hx	/^	public static function main () {$/;"	f
main	/usr/lib/haxe/lib/lime/2,4,3/tools/AliasScript.hx	/^	public static function main () {$/;"	f
main	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	public static function main ():Void {$/;"	f
main	/usr/lib/haxe/lib/lime/2,4,3/tools/RunScript.hx	/^	public static function main () {$/;"	f
main	/usr/lib/haxe/lib/lime/2,4,3/tools/SVGExport.hx	/^	public static function main () {$/;"	f
main	/usr/lib/haxe/lib/openfl/3,0,8/script/RunScript.hx	/^	public static function main () {$/;"	f
main	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/ApplicationMain.hx	/^	public static function main () {$/;"	f
main	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^	public static function main () {$/;"	f
main	/usr/lib/haxe/std/haxe/macro/JSGenApi.hx	/^	var main : Null<TypedExpr>;$/;"	v
main	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^	static function main() {$/;"	f
main	/usr/lib/haxe/std/sys/db/Transaction.hx	/^	public static function main( cnx, mainFun : Void -> Void, ?logError : Dynamic -> Void ) {$/;"	f
mainLoop	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	function mainLoop () {$/;"	f
mainThread	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	public var mainThread:Thread;$/;"	v
make	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec2.hx	/^	static public function make(x_:Float, y_:Float):B2Vec2$/;"	f
make	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Hmac.hx	/^	public function make( key : haxe.io.Bytes, msg : haxe.io.Bytes ) : haxe.io.Bytes {$/;"	f
make	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^	public static function make( b : haxe.io.Bytes ) : haxe.io.Bytes {$/;"	f
make	/usr/lib/haxe/std/DateTools.hx	/^	public static function make( o : { ms : Float, seconds : Int, minutes : Int, hours : Int, days : Int } ) {$/;"	f
make	/usr/lib/haxe/std/haxe/Int64.hx	/^	public static inline function make( high : Int, low : Int ) : Int64 {$/;"	f
make	/usr/lib/haxe/std/haxe/crypto/Adler32.hx	/^	public static function make( b : haxe.io.Bytes ) {$/;"	f
make	/usr/lib/haxe/std/haxe/crypto/Crc32.hx	/^	public static function make( data : haxe.io.Bytes ) : Int {$/;"	f
make	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^	public static function make( b : haxe.io.Bytes ) : haxe.io.Bytes {$/;"	f
make	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^	public static function make( b : haxe.io.Bytes ) : haxe.io.Bytes {$/;"	f
make	/usr/lib/haxe/std/haxe/macro/Format.hx	/^		function make(size) {$/;"	f
make	/usr/lib/haxe/std/haxe/zip/Huffman.hx	/^	public function make(lengths,pos,nlengths,maxbits) {$/;"	f
make	/usr/lib/haxe/std/neko/vm/Loader.hx	/^	public static function make( loadPrim : String -> Int -> Dynamic, loadModule : String -> Loader -> Module ) {$/;"	f
make	/usr/lib/haxe/std/sys/db/Manager.hx	/^	function make( x : T ) {$/;"	f
make this better	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^					\/\/ TODO: make this better$/;"	i
makeArgs	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^	static function makeArgs( t : haxe.macro.Type, p ) {$/;"	f
makeCacheKey	/usr/lib/haxe/std/sys/db/Manager.hx	/^	function makeCacheKey( x : T ) : String {$/;"	f
makeClipPointVector	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^	private static function makeClipPointVector():Array <ClipVertex>$/;"	f
makeConfig	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^	static function makeConfig( obj : Expr ) {$/;"	f
makeConst	/usr/lib/haxe/std/haxe/Template.hx	/^	function makeConst( v : String ) : Void -> Dynamic {$/;"	f
makeContextCurrent	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public function makeContextCurrent (context:ALContext):Bool {$/;"	f
makeContextCurrent	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static function makeContextCurrent (context:ALContext):Bool {$/;"	f
makeError	/usr/lib/haxe/std/haxe/xml/Check.hx	/^	static function makeError(m,?path) {$/;"	f
makeExpr	/usr/lib/haxe/std/haxe/Template.hx	/^	function makeExpr( l ) {$/;"	f
makeExpr	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function makeExpr( v : Dynamic, pos : Position ) : Expr {$/;"	f
makeExpr2	/usr/lib/haxe/std/haxe/Template.hx	/^	function makeExpr2( l : List<ExprToken> ) : Void -> Dynamic {$/;"	f
makeIdent	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	function makeIdent( e : Expr ) {$/;"	f
makeInt	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	function makeInt( t : haxe.macro.Type ) {$/;"	f
makeOp	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	inline function makeOp( op : String, e1, e2, pos ) {$/;"	f
makePath	/usr/lib/haxe/std/haxe/Template.hx	/^	function makePath( e : Void -> Dynamic, l : List<ExprToken> ) {$/;"	f
makePosition	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function makePosition( inf : { min : Int, max : Int, file : String } ) : Position {$/;"	f
makeRecord	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	function makeRecord( t : haxe.macro.Type ) {$/;"	f
makeRule	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^	static function makeRule( f : ClassField ) : DispatchRule {$/;"	f
makeRule	/usr/lib/haxe/std/haxe/xml/Check.hx	/^	static function makeRule( r : Rule ) {$/;"	f
makeStack	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^	private static function makeStack(s #if cs : cs.system.diagnostics.StackTrace #end) {$/;"	f
makeStack	/usr/lib/haxe/std/haxe/CallStack.hx	/^	private static function makeStack(s #if cs : cs.system.diagnostics.StackTrace #end) {$/;"	f
makeString	/usr/lib/haxe/std/haxe/xml/Check.hx	/^	static function makeString( x : Xml ) {$/;"	f
makeString	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	inline function makeString( s : String, pos ) {$/;"	f
makeType	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	function makeType( t : haxe.macro.Type ) {$/;"	f
makeVarArgs	/usr/lib/haxe/std/Reflect.hx	/^	public static function makeVarArgs( f : Array<Dynamic> -> Dynamic ) : Dynamic;$/;"	f
makeWhere	/usr/lib/haxe/std/haxe/xml/Check.hx	/^	static function makeWhere( path : Array<Xml> ) {$/;"	f
make_md5	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^	static var make_md5 = neko.Lib.load("std","make_md5",1);$/;"	v
manager	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var manager : Manager<Dynamic> = spod.manager;$/;"	v
manager	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	var manager : Expr;$/;"	v
managersThread	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	var managersThread : Thread;$/;"	v
manifest	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AssetHelper.hx	/^		var manifest = new Array <Dynamic> ();$/;"	v
manifest	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^		var manifest = new Asset ();$/;"	v
manifest	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^						var manifest:Array<Dynamic> = Unserializer.run (data);$/;"	v
manifest	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^						var manifest:Array<Dynamic> = Unserializer.run (data);$/;"	v
manifest	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^						var manifest:Array<Dynamic> = Unserializer.run (data);$/;"	v
manifold	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactConstraint.hx	/^	public var manifold:B2Manifold;$/;"	v
manifold	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var manifold:B2Manifold = contact.getManifold();$/;"	v
manufacturer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var manufacturer (default, null) = "OpenFL Contributors";$/;"	v
manufacturer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var manufacturer (default, null) = "OpenFL Contributors";$/;"	v
map	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^			var map = new Map<Int, Image> ();$/;"	v
map	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/OpcodeMap.hx	/^	public static var map (get, never):Map<String, Opcode>;$/;"	v
map	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/RegMap.hx	/^	public static var map (get, never):StringMap<Reg>;$/;"	v
map	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/SamplerMap.hx	/^	public static var map (get, never):StringMap<Sampler>;$/;"	v
map	/usr/lib/haxe/std/EReg.hx	/^	public function map( s : String, f : EReg -> String ) : String {$/;"	f
map	/usr/lib/haxe/std/haxe/macro/ExprTools.hx	/^	static public function map( e : Expr, f : Expr -> Expr ) : Expr {$/;"	f
map	/usr/lib/haxe/std/haxe/macro/ExprTools.hx	/^	static public function map( el : Array<Expr>, f : Expr -> Expr):Array<Expr> {$/;"	f
map	/usr/lib/haxe/std/haxe/macro/TypeTools.hx	/^	static public function map(t:Type, f:Type -> Type):Type {$/;"	f
map	/usr/lib/haxe/std/haxe/macro/TypedExprTools.hx	/^	static public function map(e:TypedExpr, f:TypedExpr -> TypedExpr):TypedExpr {$/;"	f
mapWithType	/usr/lib/haxe/std/haxe/macro/TypedExprTools.hx	/^	static public function mapWithType(e:TypedExpr, f:TypedExpr -> TypedExpr, ft:Type -> Type, fv:TVar -> TVar):TypedExpr {$/;"	f
margin	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^		var margin = switch (__textFormat.align) {$/;"	v
marketplace	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var marketplace = new MarketplaceAPI (key, secret, devServer);$/;"	v
marshallExceptions	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/external/ExternalInterface.hx	/^	public static var marshallExceptions:Bool = false;$/;"	v
marshallExceptions	/usr/lib/haxe/lib/openfl/3,0,8/openfl/external/ExternalInterface.hx	/^	public static var marshallExceptions = false;$/;"	v
mask	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var mask:Dynamic \/*DisplayObject*\/;$/;"	v
mask	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function mask (pattern:CairoPattern):Void {$/;"	f
mask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Destination.hx	/^	public var mask:Int;$/;"	v
mask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Sampler.hx	/^	public var mask:Int;$/;"	v
mask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^						var mask = "";$/;"	v
mask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^				var mask = "";$/;"	v
mask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^						var mask = "";$/;"	v
mask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^		var mask = 0xFF - stencilMask;$/;"	v
mask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public var mask (default, set):DisplayObject;$/;"	v
mask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	public var mask (get, set):DisplayObject;$/;"	v
mask	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var mask = 0xFFFFFFFF;$/;"	v
mask	/usr/lib/haxe/std/haxe/Int64.hx	/^		var mask = 0xFFFF;$/;"	v
mask	/usr/lib/haxe/std/haxe/Int64.hx	/^		var mask = new Int64(0, 1);$/;"	v
mask	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^		var mask = (1 << nbits) - 1;$/;"	v
maskBits	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2FilterData.hx	/^	public var maskBits: Int;$/;"	v
maskGraphics	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^		var maskGraphics:Graphics = object.__maskGraphics;$/;"	v
maskManager	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/RenderSession.hx	/^	public var maskManager:AbstractMaskManager;$/;"	v
maskManager	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	public var maskManager:GLMaskManager;$/;"	v
maskPosition	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GLMaskManager.hx	/^	public var maskPosition:Int;$/;"	v
maskStack	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GLMaskManager.hx	/^	public var maskStack:Array<Dynamic>;$/;"	v
maskSurface	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function maskSurface (surface:CairoSurface, x:Float, y:Float):Void {$/;"	f
masked	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^		var masked = __mask != null && __maskGraphics != null && __maskGraphics.__commands.length > 0;$/;"	v
mass	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2MassData.hx	/^	public var mass:Float;$/;"	v
mass	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^			var mass:Float = 0.0;$/;"	v
mass	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^		var mass:Float = b.getMass();$/;"	v
mass1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2GravityController.hx	/^		var mass1:Float = 0;$/;"	v
massData	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^			var massData:B2MassData = f.getMassData();$/;"	v
massc	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^			var massc:B2Vec2 = new B2Vec2();$/;"	v
mat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat22.hx	/^		var mat:B2Mat22 = new B2Mat22();$/;"	v
mat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^		var mat = pattern.matrix;$/;"	v
match	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^			var match = false;$/;"	v
match	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^		var match = null;$/;"	v
match	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^			var match = ~\/(.*?)(\\d+)\/;$/;"	v
match	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^			var match = false;$/;"	v
match	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/EventDispatcher.hx	/^	public function match (callback:Dynamic->Void, useCapture:Bool) {$/;"	f
match	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/EventDispatcher.hx	/^	public function match (callback:Dynamic->Void, useCapture:Bool) {$/;"	f
match	/usr/lib/haxe/std/EReg.hx	/^	public function match( s : String ) : Bool {$/;"	f
match	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^	function match( v : String, r : MatchRule, opt : Bool ) : Dynamic {$/;"	f
matchOptional	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^			var matchOptional = false;$/;"	v
matchRequired	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^				var matchRequired = true;$/;"	v
matchSub	/usr/lib/haxe/std/EReg.hx	/^	public function matchSub( s : String, pos : Int, len : Int = 0):Bool {$/;"	f
matched	/usr/lib/haxe/std/EReg.hx	/^	public function matched( n : Int ) : String {$/;"	f
matchedLeft	/usr/lib/haxe/std/EReg.hx	/^	public function matchedLeft() : String {$/;"	f
matchedPos	/usr/lib/haxe/std/EReg.hx	/^	public function matchedPos() : { pos : Int, len : Int } {$/;"	f
matchedRight	/usr/lib/haxe/std/EReg.hx	/^	public function matchedRight() : String {$/;"	f
matches	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^		var matches = [];$/;"	v
matches	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^		var matches = findTemplates (templatePaths, path, warnIfNotFound);$/;"	v
matches	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^			var matches = new Map <String, Array <String>> ();$/;"	v
matches	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^		var matches:Array<String> = [];$/;"	v
matchesSelector	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function matchesSelector (selectors:String):Bool { return false; };$/;"	f
matrix	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^				var matrix = new Matrix ();$/;"	v
matrix	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public var matrix (get, set):Matrix3;$/;"	v
matrix	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoPattern.hx	/^	public var matrix (get, set):Matrix3;$/;"	v
matrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Flags.hx	/^	public var matrix:Bool;$/;"	v
matrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoBitmap.hx	/^				var matrix = transform.__toMatrix3 ();$/;"	v
matrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^								var matrix = new Matrix3 (tileData[index + transformIndex], tileData[index + transformIndex + 1], tileData[index + transformIndex + 2], tileData[index + transformIndex + 3], 0, 0);$/;"	v
matrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^						var matrix = new Matrix3 (t1, t2, t3, t4, dx, dy);$/;"	v
matrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var matrix = fillPatternMatrix.clone ();$/;"	v
matrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoShape.hx	/^					var matrix = transform.__toMatrix3 ();$/;"	v
matrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^				var matrix = matrix != null ? matrix.clone () : new Matrix ();$/;"	v
matrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var matrix = new Matrix();$/;"	v
matrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^		var matrix = new Matrix ();$/;"	v
matrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^		var matrix = new Matrix();$/;"	v
matrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsBitmapFill.hx	/^	public var matrix:Matrix;$/;"	v
matrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsGradientFill.hx	/^	public var matrix:Matrix;$/;"	v
matrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/ColorMatrixFilter.hx	/^	public var matrix:Array<Float>;$/;"	v
matrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Transform.hx	/^			var matrix = __parent.__getMatrix ();$/;"	v
matrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Transform.hx	/^			var matrix = new Matrix (value.rawData[0], value.rawData[1], value.rawData[4], value.rawData[5], value.rawData[12], value.rawData[13]);$/;"	v
matrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Transform.hx	/^	public var matrix (get, set):Matrix;$/;"	v
matrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^			var matrix = transform.__toMatrix3 ();$/;"	v
matrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^		var matrix = __getTransform ();$/;"	v
matrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^			var matrix = new Matrix ();$/;"	v
matrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsBitmapFill.hx	/^	public var matrix:Matrix;$/;"	v
matrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsGradientFill.hx	/^	public var matrix:Matrix;$/;"	v
matrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/ColorMatrixFilter.hx	/^	public var matrix:Array<Float>;$/;"	v
matrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Transform.hx	/^			var matrix = new Matrix ();$/;"	v
matrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Transform.hx	/^	public var matrix (get, set):Matrix;$/;"	v
matrix	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var matrix = new Matrix ();$/;"	v
matrix	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/MatrixTest.hx	/^		var matrix = new Matrix ();$/;"	v
matrix3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Transform.hx	/^	public var matrix3D (get, set):Matrix3D;$/;"	v
matrix3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/PerspectiveProjection.hx	/^	private var matrix3D:Matrix3D;$/;"	v
matrix3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Transform.hx	/^	public var matrix3D (get, set):Matrix3D;$/;"	v
matrix3D	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var matrix3D = new Matrix3D ();$/;"	v
matrix3D	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var matrix3D = setupTestMatrix3D();$/;"	v
matrixCache	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^				var matrixCache = source.__worldTransform;$/;"	v
matrixCache	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var matrixCache = source.__worldTransform;$/;"	v
matrixCache	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^		var matrixCache = null;$/;"	v
matrixheight	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/OpLUT.hx	/^	public var matrixheight:Int;$/;"	v
matrixwidth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/OpLUT.hx	/^	public var matrixwidth:Int;$/;"	v
max	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public function max(a:Float, b:Float):Float$/;"	f
max	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var max = this.position + len;$/;"	v
max	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	var max : Int;$/;"	v
max	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^		var max:Float = Math.NEGATIVE_INFINITY;$/;"	v
max	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^		var max:Float = Math.NEGATIVE_INFINITY;$/;"	v
max	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^		var max = this.position + len;$/;"	v
max	/usr/lib/haxe/std/IntIterator.hx	/^	var max : Int;$/;"	v
max	/usr/lib/haxe/std/Math.hx	/^	static function max(a:Float, b:Float):Float;$/;"	f
max	/usr/lib/haxe/std/haxe/Serializer.hx	/^				var max = v.length - 2;$/;"	v
max	/usr/lib/haxe/std/haxe/Unserializer.hx	/^			var max = i + (len - rest);$/;"	v
max	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^		var max = pos+len;$/;"	v
max	/usr/lib/haxe/std/haxe/macro/Expr.hx	/^	var max : Int;$/;"	v
max	/usr/lib/haxe/std/haxe/macro/Format.hx	/^		var max = str.length;$/;"	v
maxBufferSize	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	public var maxBufferSize : Int;$/;"	v
maxChars	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public var maxChars (get, set):Int;$/;"	v
maxChars	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var maxChars:Int;$/;"	v
maxDot	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var maxDot:Float = -B2Math.MAX_VALUE;$/;"	v
maxElementsPerVertex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	var maxElementsPerVertex:Int;$/;"	v
maxForce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJointDef.hx	/^	public var maxForce:Float;$/;"	v
maxForce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJointDef.hx	/^	public var maxForce:Float;$/;"	v
maxFraction	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^		var maxFraction:Float = input.maxFraction;$/;"	v
maxFraction	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2RayCastInput.hx	/^	public var maxFraction:Float;$/;"	v
maxFriction	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^		var maxFriction:Float;$/;"	v
maxImpulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^		var maxImpulse:Float;$/;"	v
maxImpulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^			var maxImpulse:Float = step.dt * m_maxMotorForce;$/;"	v
maxImpulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^		var maxImpulse:Float = step.dt * m_maxForce;$/;"	v
maxImpulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^			var maxImpulse:Float = step.dt * m_maxMotorForce;$/;"	v
maxImpulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^			var maxImpulse:Float = step.dt * m_maxMotorTorque;$/;"	v
maxImpulse	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/ContactListenerBreakable.hx	/^		var maxImpulse:Float = 0.0;$/;"	v
maxLengthA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJointDef.hx	/^	public var maxLengthA:Float;$/;"	v
maxLengthB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJointDef.hx	/^	public var maxLengthB:Float;$/;"	v
maxLevelIDC	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var maxLevelIDC (default, null) = 0;$/;"	v
maxLevelIDC	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var maxLevelIDC (default, null) = 0;$/;"	v
maxMotorForce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJointDef.hx	/^	public var maxMotorForce:Float;$/;"	v
maxMotorForce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJointDef.hx	/^	public var maxMotorForce:Float;$/;"	v
maxMotorTorque	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJointDef.hx	/^	public var maxMotorTorque:Float;$/;"	v
maxRows	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^			var maxRows = 0;$/;"	v
maxScrollH	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public var maxScrollH (get, null):Int;$/;"	v
maxScrollH	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var maxScrollH (get, null):Int;$/;"	v
maxScrollV	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public var maxScrollV (get, null):Int;$/;"	v
maxScrollV	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var maxScrollV (get, null):Int;$/;"	v
maxSize	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^		var maxSize = 1024 * 1024 * 16;$/;"	v
maxSockPerThread	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	public var maxSockPerThread : Int;$/;"	v
maxSprites	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	var maxSprites:Int;$/;"	v
maxSupportedAnisotropy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	private static var maxSupportedAnisotropy:UInt = 256;$/;"	v
maxTimestep	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2TensorDampingController.hx	/^	public var maxTimestep:Float;$/;"	v
maxTorque	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJointDef.hx	/^	public var maxTorque:Float;$/;"	v
maxTouchPoints	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Multitouch.hx	/^	public static var maxTouchPoints (default, null):Int;$/;"	v
maxTouchPoints	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Multitouch.hx	/^	public static var maxTouchPoints (default, null):Int;$/;"	v
maxUVT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^						var maxUVT = normalizedUVT.max;$/;"	v
maxUVT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^								var maxUVT = normalizedUVT.max;$/;"	v
maxV	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public function maxV(a:B2Vec2, b:B2Vec2):B2Vec2$/;"	f
maxV	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec2.hx	/^	public function maxV(b:B2Vec2) : Void$/;"	f
maxValue	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInputControl.hx	/^	public var maxValue (default, null):Float;$/;"	v
maxX	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var maxX = minX + image.width;$/;"	v
maxX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^		var maxX = Math.NEGATIVE_INFINITY;$/;"	v
maxY	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var maxY = minY + image.height;$/;"	v
maxY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^		var maxY = Math.NEGATIVE_INFINITY;$/;"	v
max_x	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	var max_x:Int;$/;"	v
max_x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	var max_x: Int;$/;"	v
max_x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^   var max_x:Int;$/;"	v
max_y	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	var max_y:Int;$/;"	v
max_y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	var max_y: Int;$/;"	v
maxfragconstants	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Context3D.hx	/^	public static var maxfragconstants = 28;$/;"	v
maxstreams	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Context3D.hx	/^	public static var maxstreams = 8;$/;"	v
maxtemp	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Context3D.hx	/^	public static var maxtemp = 8;$/;"	v
maxtextures	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Context3D.hx	/^	public static var maxtextures = 8;$/;"	v
maxvertexconstants	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Context3D.hx	/^	public static var maxvertexconstants = 128;$/;"	v
md	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^				var md:B2MassData = new B2MassData();$/;"	v
md	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^					var md:B2MouseJointDef = new B2MouseJointDef();$/;"	v
me	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^			var me = this;$/;"	v
me	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^			var me = this;$/;"	v
me	/usr/lib/haxe/std/haxe/Http.hx	/^		var me = this;$/;"	v
me	/usr/lib/haxe/std/haxe/Template.hx	/^		var me = this;$/;"	v
me	/usr/lib/haxe/std/haxe/Timer.hx	/^			var me = this;$/;"	v
me	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^			var me = this;$/;"	v
me	/usr/lib/haxe/std/haxe/remoting/AsyncDebugConnection.hx	/^		var me = this;$/;"	v
me	/usr/lib/haxe/std/neko/net/ThreadRemotingServer.hx	/^		var me = this;$/;"	v
measure	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^			var measure = measurements[i];$/;"	v
measureText	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function measureText(text:String):Dynamic \/*TextMetrics*\/ { return null; };$/;"	f
measureText	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^	public static function measureText (textField:TextField, condense:Bool = true):Array<Float> {$/;"	f
measureText	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^	public static function measureText (textField:TextField, condense:Bool = true):Array<Float> {$/;"	f
measureText	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMTextField.hx	/^	public static function measureText (textField:TextField):Void {$/;"	f
measureTextSub	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^	private static function measureTextSub (textField:TextField, condense:Bool):Array<Float> {$/;"	f
measureTextSubRangesNotNull	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^	private static function measureTextSubRangesNotNull (textField:TextField, condense:Bool):Array<Float> {$/;"	f
measureTextSubRangesNull	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^	private static function measureTextSubRangesNull (textField:TextField, condense:Bool):Array<Float> {$/;"	f
measurements	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^					var measurements = CairoTextField.measureText (textField);$/;"	v
measurements	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^			var measurements = measureText (textField);$/;"	v
measurements	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		var measurements = [];$/;"	v
measurements	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		var measurements = measureTextSub (textField, false);$/;"	v
measurements	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^					var measurements = measureText (textField);$/;"	v
measurements	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^			var measurements = [];$/;"	v
members	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^			var members = new Map<String, String>();$/;"	v
memcmp if unsafe flag is on	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^		\/\/TODO: memcmp if unsafe flag is on$/;"	i
memory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^			var memory = new ByteArray ();$/;"	v
memory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^			var memory = new ByteArray();$/;"	v
memory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^			var memory = new ByteArray ();$/;"	v
merge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function merge(other:B2Body):Void$/;"	f
merge	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public function merge (sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, redMultiplier:Int, greenMultiplier:Int, blueMultiplier:Int, alphaMultiplier:Int):Void {$/;"	f
merge	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageCanvasUtil.hx	/^	public static function merge (image:Image, sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, redMultiplier:Int, greenMultiplier:Int, blueMultiplier:Int, alphaMultiplier:Int):Void {$/;"	f
merge	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	public static function merge (image:Image, sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, redMultiplier:Int, greenMultiplier:Int, blueMultiplier:Int, alphaMultiplier:Int):Void {$/;"	f
merge	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^	public function merge (other:ConfigData):Void {$/;"	f
merge	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public function merge (project:HXProject):Void {$/;"	f
merge	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Keystore.hx	/^	public function merge (keystore:Keystore):Void {$/;"	f
merge	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function merge (sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, redMultiplier:UInt, greenMultiplier:UInt, blueMultiplier:UInt, alphaMultiplier:UInt):Void {$/;"	f
merge	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function merge (sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, redMultiplier:UInt, greenMultiplier:UInt, blueMultiplier:UInt, alphaMultiplier:UInt):Void {$/;"	f
merge	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^	function merge(t1, t2) {$/;"	f
merge	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	function merge( t : TypeTree ) {$/;"	f
mergeAbstracts	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	function mergeAbstracts( a : Abstractdef, a2 : Abstractdef ) {$/;"	f
mergeClasses	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	function mergeClasses( c : Classdef, c2 : Classdef ) {$/;"	f
mergeDoc	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	function mergeDoc( f1 : ClassField, f2 : ClassField ) {$/;"	f
mergeEnums	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	function mergeEnums( e : Enumdef, e2 : Enumdef ) {$/;"	f
mergeFields	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	function mergeFields( f : ClassField, f2 : ClassField ) {$/;"	f
mergeRights	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	function mergeRights( f1 : ClassField, f2 : ClassField ) {$/;"	f
mergeTypedefs	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	function mergeTypedefs( t : Typedef, t2 : Typedef ) {$/;"	f
message	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthRequest.hx	/^		var message = request.method + "&" + normalizeURI() + "&" + normalizeParameters();$/;"	v
message	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ProcessHelper.hx	/^			var message = command;$/;"	v
message	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^			var message = "";$/;"	v
message	/usr/lib/haxe/lib/openfl/3,0,8/openfl/errors/Error.hx	/^	public var message:String;$/;"	v
message	/usr/lib/haxe/std/haxe/macro/Expr.hx	/^	public var message : String;$/;"	v
messageHeaderSize	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	public var messageHeaderSize : Int;$/;"	v
messageLength	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^	public function messageLength( c1 : Int, c2 : Int ) : Null<Int> {$/;"	f
meta	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public var meta:MetaData;$/;"	v
meta	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^					var meta = rp.join(" ");$/;"	v
meta	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^		var meta = api.buildMetaData(e);$/;"	v
meta	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var meta : MetaAccess;$/;"	v
meta	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	var meta : MetaData;$/;"	v
meta	/usr/lib/haxe/std/haxe/rtti/Meta.hx	/^		var meta : Dynamic = Reflect.field(t, "__meta__");$/;"	v
meta	/usr/lib/haxe/std/haxe/rtti/Meta.hx	/^		var meta : Dynamic = untyped t.__meta__;$/;"	v
meta	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		var meta = [], to = [], from = [];$/;"	v
meta	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		var meta = [];$/;"	v
meta	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		var meta = if( x.hasNode.meta ) xmeta(x.node.meta) else [];$/;"	v
meta	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^						var meta = [{ name : ":hide", params : [], pos : pos }];$/;"	v
meta	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var meta = [ { name : ":hide", params : [], pos : pos } ];$/;"	v
metaData	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^		var metaData = classType.meta.get();$/;"	v
metaData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^		var metaData = classType.meta.get();$/;"	v
metaData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^		var metaData = classType.meta.get();$/;"	v
metaFields	/usr/lib/haxe/lib/lime/2,4,3/lime/project/PlatformTarget.hx	/^		var metaFields = Meta.getFields (Type.getClass (this));$/;"	v
metaKey	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	public var metaKey (get, set):Bool;$/;"	v
meth	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^						var meth = path.pop();$/;"	v
meth	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^				var meth = r.matched(2);$/;"	v
meth	/usr/lib/haxe/std/haxe/CallStack.hx	/^				var meth = r.matched(2);$/;"	v
method	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^				var method = Method( className, methodName );$/;"	v
method	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^				var method = StackItem.Method(m.ReflectedType.ToString(), m.Name);$/;"	v
method	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^				var method = null;$/;"	v
method	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Hmac.hx	/^	var method : HashMethod;$/;"	v
method	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLRequest.hx	/^	public var method:URLRequestMethod;$/;"	v
method	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequest.hx	/^	public var method:String;$/;"	v
method	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^			var method = Lib.load ("lime-legacy", "lime_legacy_jni_init_callback", 1);$/;"	v
method	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^		var method = new JNIMethod (handle);$/;"	v
method	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	private var method:Dynamic;$/;"	v
method	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLRequest.hx	/^	public var method:String;$/;"	v
method	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/ApplicationMain.hx	/^				var method = macro {$/;"	v
method	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^				var method = macro { return flash.Lib.current.stage; }$/;"	v
method	/usr/lib/haxe/std/haxe/CallStack.hx	/^					var method = null;$/;"	v
method	/usr/lib/haxe/std/haxe/CallStack.hx	/^				var method = Method( className, methodName );$/;"	v
method	/usr/lib/haxe/std/haxe/CallStack.hx	/^				var method = StackItem.Method(m.ReflectedType.ToString(), m.Name);$/;"	v
method	/usr/lib/haxe/std/haxe/unit/TestStatus.hx	/^	public var method : String;$/;"	v
methodName	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^						var methodName = fullName.substr(idx+1);$/;"	v
methodName	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^				var methodName = el.getMethodName();$/;"	v
methodName	/usr/lib/haxe/std/haxe/CallStack.hx	/^							var methodName = fullName.substr(idx+1);$/;"	v
methodName	/usr/lib/haxe/std/haxe/CallStack.hx	/^				var methodName = el.getMethodName();$/;"	v
methodName	/usr/lib/haxe/std/haxe/PosInfos.hx	/^	var methodName : String;$/;"	v
method_count	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var method_count = src.readUInt16();$/;"	v
metric	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SimplexCache.hx	/^	public var metric:Float = 0;		$/;"	v
metric1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^		var metric1:Float = cache.metric;$/;"	v
metric2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^		var metric2:Float = getMetric();$/;"	v
metrics	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^		var metrics = new GlyphMetrics ();$/;"	v
mhi	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGALTokenizer.hx	/^			var mhi:Int = 0;$/;"	v
mi	/usr/lib/haxe/std/Date.hx	/^			var mi = date.getMinutes();$/;"	v
midPointX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^			var midPointX = lastPoint.x + (firstPoint.x - lastPoint.x) * 0.5;$/;"	v
midPointY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^			var midPointY = lastPoint.y + (firstPoint.y - lastPoint.y) * 0.5;$/;"	v
middle	/usr/lib/haxe/std/haxe/ds/ArraySort.hx	/^		var middle = (from + to) >> 1;$/;"	v
might need robustness check for pathological cases (multiple format ranges) -- would need to change how line heights are calculated	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		\/\/TODO: might need robustness check for pathological cases (multiple format ranges) -- would need to change how line heights are calculated$/;"	i
min	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public function min(a:Float, b:Float):Float$/;"	f
min	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var min = (t >> 5) & 63;$/;"	v
min	/usr/lib/haxe/std/IntIterator.hx	/^	var min : Int;$/;"	v
min	/usr/lib/haxe/std/Math.hx	/^	static function min(a:Float, b:Float):Float;$/;"	f
min	/usr/lib/haxe/std/haxe/macro/Expr.hx	/^	var min : Int;$/;"	v
min	/usr/lib/haxe/std/haxe/macro/Format.hx	/^		var min = pos.min;$/;"	v
min	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var min = (t >> 5) & 63;$/;"	v
min	/usr/lib/haxe/std/haxe/zip/Writer.hx	/^		var min = date.getMinutes();$/;"	v
minArea	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var minArea:Float = B2Math.MAX_VALUE;$/;"	v
minBinding	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^	function minBinding(t:TreeNode<K,V>) {$/;"	f
minContact	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^			var minContact:B2Contact = null;$/;"	v
minDot	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var minDot:Float = B2Math.MAX_VALUE;$/;"	v
minFilter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DefaultShader.hx	/^			var minFilter = (data.minFilter != #if !neko 0 #else null #end) ? data.minFilter : gl.LINEAR;$/;"	v
minSeparation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^		var minSeparation:Float = 0.0;$/;"	v
minSleepTime	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^			var minSleepTime:Float = B2Math.MAX_VALUE;$/;"	v
minTOI	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^			var minTOI:Float = 1.0;$/;"	v
minV	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public function minV(a:B2Vec2, b:B2Vec2):B2Vec2$/;"	f
minV	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec2.hx	/^	public function minV(b:B2Vec2) : Void$/;"	f
minValue	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInputControl.hx	/^	public var minValue (default, null):Float;$/;"	v
minX	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var minX = -image.offsetX;$/;"	v
minY	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var minY = -image.offsetY;$/;"	v
min_x	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	var min_x:Int;$/;"	v
min_x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	var min_x: Int;$/;"	v
min_x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^   var min_x:Int;$/;"	v
min_y	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	var min_y:Int;$/;"	v
min_y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	var min_y: Int;$/;"	v
minify	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/HTML5Helper.hx	/^	public static function minify (project:HXProject, sourceFile:String):Bool {$/;"	f
minimized	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var minimized (get, set):Bool;$/;"	v
minus	/usr/lib/haxe/std/haxe/format/JsonParser.hx	/^		var minus = c == '-'.code, digit = !minus, zero = c == '0'.code;$/;"	v
minutes	/usr/lib/haxe/std/DateTools.hx	/^	public static inline function minutes( n : Float ) : Float {$/;"	f
mipfilter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public var mipfilter:Context3DMipFilter;$/;"	v
mipmap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Destination.hx	/^	public var mipmap:Int;$/;"	v
mipmap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Sampler.hx	/^	public var mipmap:Float;$/;"	v
miterLimit	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public var miterLimit:Float;$/;"	v
miterLimit	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public var miterLimit (get, set):Float;$/;"	v
miterLimit	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	public var miterLimit:Float;$/;"	v
miterLimit	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsStroke.hx	/^	public var miterLimit:Float;$/;"	v
miterLimit	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsStroke.hx	/^	public var miterLimit:Float;$/;"	v
mkPath	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	function mkPath( p : String ) : Path {$/;"	f
mkRights	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	function mkRights( r : String ) : Rights {$/;"	f
mkTypeParams	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	function mkTypeParams( p : String ) : TypeParams {$/;"	f
mkdir	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^	public static function mkdir (directory:String):Void {$/;"	f
mkdir	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private function mkdir(inName:String)$/;"	f
mkdir	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^	static public function mkdir (directory:String):Void {$/;"	f
ml	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		var ml = [];$/;"	v
mod	/usr/lib/haxe/std/haxe/Int64.hx	/^	public static function mod( a : Int64, b : Int64 ) : Int64 {$/;"	f
mod	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var mod = false;$/;"	v
mode	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/FrameHeader.hx	/^    public var mode(default, null):Mode;$/;"	v
mode	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var mode = modes[modeIndex];$/;"	v
mode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var mode:BucketMode;$/;"	v
mode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var mode:RenderMode = RenderMode.DEFAULT;$/;"	v
mode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^			var mode = new ScreenMode();$/;"	v
mode	/usr/lib/haxe/std/sys/FileStat.hx	/^	var mode : Int;$/;"	v
modeExtension	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/FrameHeader.hx	/^    public var modeExtension(default, null):Int;$/;"	v
modeExtension	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var modeExtension = (b >> 4) & 0x3;$/;"	v
modeIndex	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var modeIndex = (b >> 6) & 0x3;$/;"	v
modelViewMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^		var modelViewMatrix = new Matrix3D();$/;"	v
modelViewMatrixUniform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^	private static var modelViewMatrixUniform:GLUniformLocation;$/;"	v
modes	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    static var modes = [Mode.Stereo, Mode.JointStereo, Mode.DualChannel, Mode.SingleChannel];$/;"	v
modes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^		var modes:Array<Int> = lime_capabilities_get_screen_modes ();$/;"	v
modified	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^					var modified = FileSystem.stat (path).mtime.getTime ();$/;"	v
modified	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^					var modified = FileSystem.stat (path).mtime.getTime ();$/;"	v
modified	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^					var modified = FileSystem.stat (path).mtime.getTime ();$/;"	v
modifier	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashApplication.hx	/^			var modifier = (event.shiftKey ? (KeyModifier.SHIFT) : 0) | (event.ctrlKey ? (KeyModifier.CTRL) : 0) | (event.altKey ? (KeyModifier.ALT) : 0);$/;"	v
modifier	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Application.hx	/^			var modifier = (event.shiftKey ? (KeyModifier.SHIFT) : 0) | (event.ctrlKey ? (KeyModifier.CTRL) : 0) | (event.altKey ? (KeyModifier.ALT) : 0) | (event.metaKey ? (KeyModifier.META) : 0);$/;"	v
modifier	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public var modifier:Int;$/;"	v
module	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^							var module = path + "." + file.substr(0, file.length - 3);$/;"	v
module	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^		var module = path.substring(0, path.lastIndexOf("."));$/;"	v
module	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var module : String;$/;"	v
module	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	var module : Path;$/;"	v
moduleRoot	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^			var moduleRoot = (path.indexOf(".") < 0)?"":path.substring(0, path.lastIndexOf("."));$/;"	v
moduleRootPath	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^				var moduleRootPath = (moduleRoot == "")?"":(classPath + moduleRoot.split(".").join("\/") + ".hx");$/;"	v
modules	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public var modules (default, null):Array<IModule>;$/;"	v
month	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var month = (d >> 5) & 15;$/;"	v
month	/usr/lib/haxe/std/DateTools.hx	/^		var month = d.getMonth();$/;"	v
month	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var month = (d >> 5) & 15;$/;"	v
month	/usr/lib/haxe/std/haxe/zip/Writer.hx	/^		var month = date.getMonth() + 1;$/;"	v
more?	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^			\/\/ TODO more?$/;"	i
motorSpeed	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJointDef.hx	/^	public var motorSpeed:Float;$/;"	v
motorSpeed	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJointDef.hx	/^	public var motorSpeed:Float;$/;"	v
motorSpeed	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJointDef.hx	/^	public var motorSpeed:Float;$/;"	v
mouse	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		static public var mouse:Sprite = new Sprite();$/;"	v
mouse	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^				var mouse = new Point (mouseX, mouseY);$/;"	v
mouse	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^				var mouse = new Point (mouseX, mouseY);$/;"	v
mouseChildren	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var mouseChildren:Bool;$/;"	v
mouseChildren	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^	public var mouseChildren (get, set):Bool;$/;"	v
mouseChildren	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^	public var mouseChildren:Bool;$/;"	v
mouseDown	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		public static var mouseDown:Bool = false;$/;"	v
mouseDragX	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		static public var mouseDragX:Float = 0;$/;"	v
mouseDragY	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		static public var mouseDragY:Float = 0;$/;"	v
mouseEnabled	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var mouseEnabled:Bool;$/;"	v
mouseEnabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/InteractiveObject.hx	/^	public var mouseEnabled (get, set):Bool;$/;"	v
mouseEnabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/InteractiveObject.hx	/^	public var mouseEnabled:Bool;$/;"	v
mouseEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^						var mouseEvent = MouseEvent.__create (MouseEvent.DOUBLE_CLICK, event, local, clickObject);$/;"	v
mouseEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^				var mouseEvent = MouseEvent.__create (sClickEvents[button], event, local, clickObject);$/;"	v
mouseEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^			var mouseEvent = MouseEvent.__create (type, event, local, null);$/;"	v
mouseEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^			var mouseEvent = MouseEvent.__create (type, event, local, object);$/;"	v
mouseEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^		var mouseEvent = new MouseEvent (type, bubbles, cancelable, localX, localY, related == null ? relatedObject : related, ctrlKey, altKey, shiftKey, buttonDown, delta, commandKey, clickCount);$/;"	v
mouseEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^		var mouseEvent = new MouseEvent (type, true, true, local.x, local.y, null, (flags & efCtrlDown) != 0, (flags & efAltDown) != 0, (flags & efShiftDown) != 0, (flags & efLeftDown) != 0, 0, 0);$/;"	v
mouseEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^			var mouseEvent = MouseEvent.__create (mouseType, 0, __mouseX, __mouseY, localPoint, cast target);$/;"	v
mouseEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^			var mouseEvent = MouseEvent.__create (mouseType, 0, __mouseX, __mouseY, point, this);$/;"	v
mouseEvent	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/MouseEventTest.hx	/^		var mouseEvent = new MouseEvent (MouseEvent.MOUSE_DOWN);$/;"	v
mouseEventInfo	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private var mouseEventInfo = new MouseEventInfo ();$/;"	v
mouseLeave	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		public function mouseLeave(e:Event):Void{$/;"	f
mouseLeft	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashApplication.hx	/^	private var mouseLeft:Bool;$/;"	v
mouseMove	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		public function mouseMove(e:MouseEvent):Void{$/;"	f
mouseOffsetX	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		static public var mouseOffsetX:Float = 0;$/;"	v
mouseOffsetY	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		static public var mouseOffsetY:Float = 0;$/;"	v
mouseOver	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		static public var mouseOver:Bool = false;$/;"	v
mousePVec	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^		private var mousePVec:B2Vec2 = new B2Vec2();$/;"	v
mousePress	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		public function mousePress(e:MouseEvent):Void{$/;"	f
mousePressed	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		static public var mousePressed:Bool = false;$/;"	v
mouseRelease	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		public function mouseRelease(e:MouseEvent):Void{$/;"	f
mouseReleased	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		static public var mouseReleased:Bool = false;$/;"	v
mouseTarget	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/ContextMenuEvent.hx	/^	public var mouseTarget:InteractiveObject;$/;"	v
mouseType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^		var mouseType = switch (type) {$/;"	v
mouseX	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		static public var mouseX:Float = 0;$/;"	v
mouseX	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var mouseX (default, null):Float;$/;"	v
mouseX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public var mouseX (get, null):Float;$/;"	v
mouseX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	public var mouseX (get, null):Float;$/;"	v
mouseXWorld	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^		static public var mouseXWorld:Float;$/;"	v
mouseXWorldPhys	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^		static public var mouseXWorldPhys:Float;$/;"	v
mouseY	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		public static var mouseY:Float = 0;$/;"	v
mouseY	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var mouseY (default, null):Float;$/;"	v
mouseY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public var mouseY (get, null):Float;$/;"	v
mouseY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	public var mouseY (get, null):Float;$/;"	v
mouseYWorld	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^		static public var mouseYWorld:Float;$/;"	v
mouseYWorldPhys	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^		static public var mouseYWorldPhys:Float;$/;"	v
move	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashWindow.hx	/^	public function move (x:Int, y:Int):Void {$/;"	f
move	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^	public function move (x:Int, y:Int):Void {$/;"	f
move	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	public function move (x:Int, y:Int):Void {$/;"	f
move	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public function move (x:Int, y:Int):Void {$/;"	f
move this to Graphics?	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^						\/\/TODO move this to Graphics?$/;"	i
move this to Graphics?	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^								\/\/TODO move this to Graphics?$/;"	i
moveForSoftKeyboard	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/InteractiveObject.hx	/^	public var moveForSoftKeyboard (get, set):Bool;$/;"	v
moveProxy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^	public function moveProxy(proxy:B2DynamicTreeNode, aabb:B2AABB, displacement:B2Vec2):Bool$/;"	f
moveProxy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^	public function moveProxy(proxy:Dynamic, aabb:B2AABB, displacement:B2Vec2):Void$/;"	f
moveProxy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/IBroadPhase.hx	/^	function moveProxy(proxy:Dynamic, aabb:B2AABB, displacement:B2Vec2):Void;$/;"	f
moveTo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function moveTo (x:Float, y:Float):Void {};$/;"	f
moveTo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function moveTo (x:Float, y:Float):Void {$/;"	f
moveTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	private static inline function moveTo (x:Float, y:Float) {$/;"	f
moveTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public function moveTo (x:Float, y:Float):Void {$/;"	f
moveTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsPath.hx	/^	public function moveTo (x:Float, y:Float):Void {$/;"	f
moveTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public function moveTo (x:Float, y:Float):Void {$/;"	f
moveTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsPath.hx	/^	public function moveTo (x:Float, y:Float):Void {$/;"	f
movementX	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public var movementX:Float;$/;"	v
movementY	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public var movementY:Float;$/;"	v
movieClip	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/MovieClipTest.hx	/^		var movieClip = new MovieClip ();$/;"	v
mp1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^						var mp1:B2ManifoldPoint = m_oldManifold.m_points[j];$/;"	v
mp2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^					var mp2:B2ManifoldPoint = m_manifold.m_points[i];$/;"	v
mpath	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^					var mpath = { expr : EConst(CIdent(first)), pos : p };$/;"	v
mpeg.audio	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/Element.hx	/^package mpeg.audio;$/;"	p
mpeg.audio	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/Emphasis.hx	/^package mpeg.audio;$/;"	p
mpeg.audio	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/Frame.hx	/^package mpeg.audio;$/;"	p
mpeg.audio	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/FrameHeader.hx	/^package mpeg.audio;$/;"	p
mpeg.audio	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/Info.hx	/^package mpeg.audio;$/;"	p
mpeg.audio	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/Layer.hx	/^package mpeg.audio;$/;"	p
mpeg.audio	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/Mode.hx	/^package mpeg.audio;$/;"	p
mpeg.audio	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudio.hx	/^package mpeg.audio;$/;"	p
mpeg.audio	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^package mpeg.audio;$/;"	p
mpeg.audio	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegVersion.hx	/^package mpeg.audio;$/;"	p
mpeg.audio	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/Utils.hx	/^package mpeg.audio;$/;"	p
mr	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^		var mr, mg, mb, ma;$/;"	v
mr	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var mr = m.copy();$/;"	v
mr	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var mr = m.rawData.copy();$/;"	v
ms	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^				var ms:Array = c.GetManifolds();$/;"	v
msb31	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^		var msb31 = (a >>> 1) & (b >>> 1);$/;"	v
msb31	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^		var msb31 = (a >>> 1) ^ (b >>> 1);$/;"	v
msb31	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^		var msb31 = (a >>> 1) | (b >>> 1);$/;"	v
msg	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^			var msg = if( i != null ) i.fileName+":"+i.lineNumber+": " else "";$/;"	v
msg	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^			var msg = "setChildIndex : object " + child.toString () + " not found.";$/;"	v
msg	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^			var msg = Thread.readMessage(false);$/;"	v
msg	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^		var msg : ManagersThreadMessage = Thread.readMessage(true);$/;"	v
msg	/usr/lib/haxe/std/haxe/Template.hx	/^				var msg = "Macro call "+m+"("+plstr+") failed ("+Std.string(e)+")";$/;"	v
msg	/usr/lib/haxe/std/haxe/remoting/SocketConnection.hx	/^			var msg = Std.string(e) + " (in "+StringTools.urlEncode(data)+")";$/;"	v
msg	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^				var msg = if( tinf.module != inf.module ) "module "+inf.module+" should be "+tinf.module;$/;"	v
msg	/usr/lib/haxe/std/haxe/unit/TestRunner.hx	/^			var msg = js.Boot.__string_rec(v,"");$/;"	v
msgLen	/usr/lib/haxe/std/haxe/remoting/SocketConnection.hx	/^				var msgLen = sc.__data.protocol.messageLength(data.charCodeAt(0),data.charCodeAt(1));$/;"	v
msgLen	/usr/lib/haxe/std/haxe/remoting/SocketConnection.hx	/^			var msgLen = sc.__data.protocol.messageLength(data.charCodeAt(0),data.charCodeAt(1));$/;"	v
msgLen	/usr/lib/haxe/std/neko/net/ThreadRemotingServer.hx	/^		var msgLen = cnx.getProtocol().messageLength(buf.get(pos),buf.get(pos+1));$/;"	v
msw	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^		var msw = (x >> 16) + (y >> 16) + (lsw >> 16);$/;"	v
msw	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^		var msw = (x >> 16)+(y >> 16)+(lsw >> 16);$/;"	v
mtime	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var mtime = readZipDate();$/;"	v
mtime	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var mtime = readZipDate();$/;"	v
mtime	/usr/lib/haxe/std/sys/FileStat.hx	/^	var mtime : Date;$/;"	v
mu2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^				var mu2: Float = -rX * bY + rY * bX;$/;"	v
mul	/usr/lib/haxe/std/haxe/Int64.hx	/^	public static function mul( a : Int64, b : Int64 ) : Int64 {$/;"	f
mulFV	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public function mulFV(s:Float, a:B2Vec2):B2Vec2$/;"	f
mulM	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec2.hx	/^	public function mulM(A:B2Mat22) : Void$/;"	f
mulMM	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public function mulMM(A:B2Mat22, B:B2Mat22):B2Mat22$/;"	f
mulMV	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public function mulMV(A:B2Mat22, v:B2Vec2):B2Vec2$/;"	f
mulTM	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec2.hx	/^	public function mulTM(A:B2Mat22) : Void$/;"	f
mulTMM	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public function mulTMM(A:B2Mat22, B:B2Mat22):B2Mat22$/;"	f
mulTMV	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public function mulTMV(A:B2Mat22, v:B2Vec2):B2Vec2$/;"	f
mulX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public function mulX(T:B2Transform, v:B2Vec2) : B2Vec2$/;"	f
mulXT	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public function mulXT(T:B2Transform, v:B2Vec2):B2Vec2$/;"	f
mult	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public inline function mult (m:Matrix3) {$/;"	f
mult	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^	public function mult (m:Matrix):Matrix {$/;"	f
mult	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^	public inline function mult (m:Matrix) {$/;"	f
multiline	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public var multiline (get, set):Bool;$/;"	v
multiline	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var multiline:Bool;$/;"	v
multipart	/usr/lib/haxe/std/haxe/Http.hx	/^		var multipart = (file != null);$/;"	v
multiply	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec2.hx	/^	public function multiply(a:Float) : Void$/;"	f
multiply	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec3.hx	/^	public function multiply(a:Float) : Void$/;"	f
multiplyAlpha	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	public static function multiplyAlpha (image:Image):Void {$/;"	f
multiplyAlpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function multiplyAlpha ():Void {$/;"	f
mute	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/LogHelper.hx	/^	public static var mute = false;$/;"	v
muted	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/sensors/Accelerometer.hx	/^	public var muted (default, null):Bool;$/;"	v
muted	/usr/lib/haxe/lib/openfl/3,0,8/openfl/sensors/Accelerometer.hx	/^	public var muted (default, set_muted):Bool;$/;"	v
mutex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	public var mutex:Mutex;$/;"	v
mutex_acquire	/usr/lib/haxe/std/neko/vm/Mutex.hx	/^	static var mutex_acquire = neko.Lib.loadLazy("std","mutex_acquire",1);$/;"	v
mutex_create	/usr/lib/haxe/std/neko/vm/Mutex.hx	/^	static var mutex_create = neko.Lib.loadLazy("std","mutex_create",0);$/;"	v
mutex_release	/usr/lib/haxe/std/neko/vm/Mutex.hx	/^	static var mutex_release = neko.Lib.loadLazy("std","mutex_release",1);$/;"	v
mutex_try	/usr/lib/haxe/std/neko/vm/Mutex.hx	/^	static var mutex_try = neko.Lib.loadLazy("std","mutex_try",1);$/;"	v
n	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2EdgeAndCircleContact.hx	/^		var n: B2Vec2 = edge.m_normal;$/;"	v
n	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^				var n = s * s;$/;"	v
n	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^					var n = z.readBytes(tmp, 0, bufSize);$/;"	v
n	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^			var n = 1;$/;"	v
n	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^		var n = 20;$/;"	v
n	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var n = 20;$/;"	v
n	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var n = p.length >> 1;$/;"	v
n	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Utils3D.hx	/^		var n = m.rawData;$/;"	v
n	/usr/lib/haxe/std/Lambda.hx	/^		var n = 0;$/;"	v
n	/usr/lib/haxe/std/StringTools.hx	/^			var n : UInt = n;$/;"	v
n	/usr/lib/haxe/std/haxe/Unserializer.hx	/^			var n = readDigits();$/;"	v
n	/usr/lib/haxe/std/haxe/Unserializer.hx	/^ 					var n = readDigits();$/;"	v
n	/usr/lib/haxe/std/haxe/Unserializer.hx	/^ 			var n = readDigits();$/;"	v
n	/usr/lib/haxe/std/haxe/ds/ArraySort.hx	/^		var n;$/;"	v
n	/usr/lib/haxe/std/haxe/io/Input.hx	/^		var n = bigEndian ? ch2 | (ch1 << 8) : ch1 | (ch2 << 8);$/;"	v
n	/usr/lib/haxe/std/haxe/io/Input.hx	/^		var n = bigEndian ? ch3 | (ch2 << 8) | (ch1 << 16) : ch1 | (ch2 << 8) | (ch3 << 16);$/;"	v
n	/usr/lib/haxe/std/haxe/io/Input.hx	/^		var n = readByte();$/;"	v
n	/usr/lib/haxe/std/haxe/io/Input.hx	/^        var n = bigEndian ? ch4 | (ch3 << 8) | (ch2 << 16) | (ch1 << 24) : ch1 | (ch2 << 8) | (ch3 << 16) | (ch4 << 24);$/;"	v
n	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^		var n = it.next();$/;"	v
n	/usr/lib/haxe/std/haxe/zip/Huffman.hx	/^				var n = tmp[l-1];$/;"	v
n	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^			var n = applyHuffman(huffman);$/;"	v
n	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^						var n = z.readBytes(tmp, 0, bufSize);$/;"	v
n	/usr/lib/haxe/std/neko/Boot.hx	/^				var n = o.__class__.__name__;$/;"	v
n	/usr/lib/haxe/std/neko/Boot.hx	/^				var n = o.__enum__.__ename__;$/;"	v
n	/usr/lib/haxe/std/neko/Boot.hx	/^		var n = o.__enum__.__ename__;$/;"	v
n1	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^			var n1 = switch e1 {$/;"	v
n123	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^	var n123:Float = B2Math.crossVV(e12, e13);$/;"	v
n2	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^			var n2 = switch e2 {$/;"	v
n2	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^				var n2 = it.next();$/;"	v
nLen	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^					var nLen: Float = Math.sqrt(nX * nX + nY * nY);$/;"	v
nLocalX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var nLocalX: Number = (nX * tMat.col1.x + nY * tMat.col1.y );$/;"	v
nLocalY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var nLocalY: Number = (nX * tMat.col2.x + nY * tMat.col2.y );$/;"	v
nX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^		var nX: Float = transform.position.y + (tMat.col1.y * m_v2.x + tMat.col2.y * m_v2.y) - v1Y;$/;"	v
nX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var nX: Number = (tMat.col1.x * tVec1.x + tMat.col2.x * tVec1.y);$/;"	v
nY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^		var nY: Float = -(transform.position.x + (tMat.col1.x * m_v2.x + tMat.col2.x * m_v2.y) - v1X);$/;"	v
nY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var nY: Number = (tMat.col1.y * tVec1.x + tMat.col2.y * tVec1.y);$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^			var name = __nativeClassName(o);$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^		var name = untyped __toStr.call(o).slice(8, -1);$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var name:String;$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLRequestHeader.hx	/^	public var name : String;$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Dependency.hx	/^	public var name:String;$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^							var name = arg.substr (3);$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^			var name = haxelib.name;$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^		var name = Path.withoutDirectory (Path.withoutExtension (projectFile));$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Haxelib.hx	/^	public var name:String;$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Library.hx	/^	public var name:String;$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/lime/project/NDLL.hx	/^	public var name:String;$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^							var name = "";$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^							var name = attribute;$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^							var name = substitute (element.att.name);$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^						var name = "";$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^						var name = element.att.name;$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^						var name = substitute (element.att.name);$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^						var name:String = "";$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^					var name = formatAttributeName (attribute);$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^			var name = formatAttributeName (attribute);$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	public var name (default, null):String;$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^					var name = StringTools.trim (split[0].substr (split[0].lastIndexOf (" ") + 1));$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/DeploymentHelper.hx	/^		var name = project.meta.title + " (" + project.meta.version + " build " + project.meta.buildNumber + ") (" + targetName + ").zip";$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^					var name = Type.enumConstructor (tag);$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var name : packageName + "__ASSET__" + asset.flatName;$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^		var name = (path == null || path == "") ? inAsset.targetPath : path;$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^		var name = haxelib.name;$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ZipHelper.hx	/^			var name = path;$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^				var name = dependency.name;$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/HTML5Platform.hx	/^				var name = Path.withoutDirectory (dependency.path);$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^					var name = Path.withoutDirectory (Path.withoutExtension (dependency.path));$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^			var name = null;$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Gamepad.hx	/^	public var name (get, never):String;$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^						var name = argValue;$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^						var name = argument.substr (1).toUpperCase ();$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^						var name = field.substr (8);$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^		var name = defaultLibrary;$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/tools/RunScript.hx	/^						var name = field.substr (8);$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^					var name = i.read(len - 5).toString();$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^					var name = words[1];$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^				var name = outputName;$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^				var name = type.substr(1, end - 1);$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^			var name = mConstants[mConstants[super_ref]];$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var name = (mConstants[mConstants[cid]]);$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var name:String = mConstants[mConstants[cid]];$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^						var name = StringTools.trim (split[0].substr (split[0].lastIndexOf (" ") + 1));$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^				var name = Path.withoutExtension (archive);$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var name = names[i];$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var name = haxelib.name;$/;"	v
name	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var name:String = "";$/;"	v
name	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Part.hx	/^	public var name:String;$/;"	v
name	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexAttribute.hx	/^	public var name:String;$/;"	v
name	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public var name (get, set):String;$/;"	v
name	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/StorageVolume.hx	/^	public var name (default, null):String;$/;"	v
name	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^	private var name:String;$/;"	v
name	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	public var name (get, set):String;$/;"	v
name	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	public var name (get, set):String;$/;"	v
name	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/FrameLabel.hx	/^	public var name (get, null):String;$/;"	v
name	/usr/lib/haxe/lib/openfl/3,0,8/openfl/errors/Error.hx	/^	public var name:String;$/;"	v
name	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLRequestHeader.hx	/^	public var name:String;$/;"	v
name	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInputDevice.hx	/^	public var name (default, null):String;$/;"	v
name	/usr/lib/haxe/std/haxe/Resource.hx	/^			var name = path.substr(path.indexOf("Resources.") + 10);$/;"	v
name	/usr/lib/haxe/std/haxe/Unserializer.hx	/^			var name = unserialize();$/;"	v
name	/usr/lib/haxe/std/haxe/Unserializer.hx	/^	 		var name = unserialize();$/;"	v
name	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^		var name = p.split(".").map(api.quoteString).join(",");$/;"	v
name	/usr/lib/haxe/std/haxe/macro/Expr.hx	/^	var name : String;$/;"	v
name	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var name : String;$/;"	v
name	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var name: String;$/;"	v
name	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	var name : String;$/;"	v
name	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^					var name = csup.t.toString();$/;"	v
name	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^	public var name : String;$/;"	v
name	/usr/lib/haxe/std/haxe/web/Request.hx	/^			var name = pl.shift();$/;"	v
name	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^	public var name(get,null) : String;$/;"	v
name	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^					var name = i.read(len - 5).toString();$/;"	v
name	/usr/lib/haxe/std/neko/vm/Module.hx	/^	public var name(get,set) : String;$/;"	v
name	/usr/lib/haxe/std/sys/db/Manager.hx	/^			var name = f.name;$/;"	v
name	/usr/lib/haxe/std/sys/db/RecordInfos.hx	/^	var name : String;$/;"	v
name	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var name = a.toString();$/;"	v
name	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var name = c.toString();$/;"	v
name	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var name = e.toString();$/;"	v
name	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var name = t.toString();$/;"	v
name	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var name = td.toString();$/;"	v
name	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	var name : String;$/;"	v
name_ref	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^			var name_ref = src.readUInt16();$/;"	v
name_ref	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var name_ref = src.readUInt16();$/;"	v
namebytes	/usr/lib/haxe/std/haxe/zip/Writer.hx	/^					var namebytes = haxe.io.Bytes.ofString(name);$/;"	v
namelen	/usr/lib/haxe/std/haxe/zip/Writer.hx	/^			var namelen = f.name.length;$/;"	v
names	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^					var names:Array<String> = [];$/;"	v
names	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^				var names:Array<String> = [];$/;"	v
names	/usr/lib/haxe/std/haxe/Resource.hx	/^		var names = new Array();$/;"	v
names	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^		var names = p.split(".").map(api.quoteString).join(",");$/;"	v
names	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var names : Array<String>;$/;"	v
names	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^			var names = x.att.a.split(":");$/;"	v
namespace	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var namespace : null;$/;"	v
namespaceURI	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var namespaceURI (default, null):String;$/;"	v
nargs	/usr/lib/haxe/std/haxe/Unserializer.hx	/^		var nargs = readDigits();$/;"	v
nativePath	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/File.hx	/^	public var nativePath (default, set):String;$/;"	v
nbits	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^		var nbits = 1;$/;"	v
nbits	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^		var nbits = this.nbits;$/;"	v
nbits	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^	var nbits : Int;$/;"	v
nbits	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	var nbits : Int;$/;"	v
nblk	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^		var nblk = ((b.length + 8) >> 6) + 1;$/;"	v
nblk	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^		var nblk = ((s.length + 8) >> 6) + 1;$/;"	v
nblk	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^		var nblk = ((b.length + 8) >> 6) + 1;$/;"	v
nblk	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^		var nblk = ((str.length + 8) >> 6) + 1;$/;"	v
nblk	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^		var nblk = ((b.length + 8) >> 6) + 1;$/;"	v
nblk	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^		var nblk = ((s.length + 8) >> 6) + 1;$/;"	v
nbrackets	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^		var nbrackets = 0;$/;"	v
nbytes	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^				var nbytes = s.output.writeBytes(buf,pos,len);$/;"	v
nbytes	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^			var nbytes = processClientData(cl.data,cl.buffer,pos,cl.bufbytes);$/;"	v
nbytes	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^		var nbytes = cl.sock.input.readBytes(cl.buffer,cl.bufbytes,buflen - cl.bufbytes);$/;"	v
ndest	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLParser.hx	/^							var ndest = 0;$/;"	v
ndll	/usr/lib/haxe/lib/lime/2,4,3/lime/project/NDLL.hx	/^		var ndll = new NDLL (name, haxelib, type, registerStatics);$/;"	v
ndll	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^						var ndll = new NDLL (name, haxelib, type, registerStatics);$/;"	v
ndll	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^				var ndll = project.ndlls[i];$/;"	v
ndll	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/MacPlatform.hx	/^				var ndll = project.ndlls[i];$/;"	v
ndll	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WindowsPlatform.hx	/^				var ndll = project.ndlls[i];$/;"	v
ndlls	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public var ndlls:Array <NDLL>;$/;"	v
ndlls	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/BlackBerryPlatform.hx	/^			var ndlls = project.ndlls.copy ();$/;"	v
ndwm	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/OpLUT.hx	/^	public var ndwm:Bool;$/;"	v
nearEquals	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	inline public function nearEquals (toCompare:Vector4, tolerance:Float, ?allFour:Bool = false):Bool {$/;"	f
nearEquals	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^	inline public function nearEquals (toCompare:Vector3D, tolerance:Float, ?allFour:Bool = false):Bool {$/;"	f
nearEquals	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^	private function nearEquals(expected:Float, actual:Float, tolerance:Float = 0.001 ) : Bool {$/;"	f
need to check actual left/right bounding volume in case of pathological cases (multiple format ranges for instance)	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^		\/\/TODO: need to check actual left\/right bounding volume in case of pathological cases (multiple format ranges for instance)$/;"	i
needed	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	var needed : Int;$/;"	v
needsSoftKeyboard	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var needsSoftKeyboard:Bool;$/;"	v
needsSoftKeyboard	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/InteractiveObject.hx	/^	public var needsSoftKeyboard (get, set):Bool;$/;"	v
needsSoftKeyboard	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/InteractiveObject.hx	/^	public var needsSoftKeyboard:Bool;$/;"	v
neg	/usr/lib/haxe/std/haxe/Int64.hx	/^		var neg = false;$/;"	v
neg	/usr/lib/haxe/std/haxe/Int64.hx	/^	public static inline function neg( a : Int64 ) : Int64 {$/;"	f
negate	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	inline public function negate ():Void {$/;"	f
negate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^	inline public function negate ():Void {$/;"	f
negativeSelf	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec2.hx	/^	public function negativeSelf():Void { x = -x; y = -y; }$/;"	f
negativeSelf	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec3.hx	/^	public function negativeSelf():Void { x = -x; y = -y; z = -z; }$/;"	f
neko	/usr/lib/haxe/std/neko/Boot.hx	/^package neko;$/;"	p
neko	/usr/lib/haxe/std/neko/Lib.hx	/^package neko;$/;"	p
neko	/usr/lib/haxe/std/neko/NativeArray.hx	/^package neko;$/;"	p
neko	/usr/lib/haxe/std/neko/NativeString.hx	/^package neko;$/;"	p
neko	/usr/lib/haxe/std/neko/Random.hx	/^package neko;$/;"	p
neko	/usr/lib/haxe/std/neko/Web.hx	/^package neko;$/;"	p
neko.net	/usr/lib/haxe/std/neko/net/Poll.hx	/^package neko.net;$/;"	p
neko.net	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^package neko.net;$/;"	p
neko.net	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^package neko.net;$/;"	p
neko.net	/usr/lib/haxe/std/neko/net/ThreadRemotingServer.hx	/^package neko.net;$/;"	p
neko.net	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^package neko.net;$/;"	p
neko.vm	/usr/lib/haxe/std/neko/vm/Deque.hx	/^package neko.vm;$/;"	p
neko.vm	/usr/lib/haxe/std/neko/vm/Gc.hx	/^package neko.vm;$/;"	p
neko.vm	/usr/lib/haxe/std/neko/vm/Loader.hx	/^package neko.vm;$/;"	p
neko.vm	/usr/lib/haxe/std/neko/vm/Lock.hx	/^package neko.vm;$/;"	p
neko.vm	/usr/lib/haxe/std/neko/vm/Module.hx	/^package neko.vm;$/;"	p
neko.vm	/usr/lib/haxe/std/neko/vm/Mutex.hx	/^package neko.vm;$/;"	p
neko.vm	/usr/lib/haxe/std/neko/vm/Thread.hx	/^package neko.vm;$/;"	p
neko.vm	/usr/lib/haxe/std/neko/vm/Tls.hx	/^package neko.vm;$/;"	p
neko.vm	/usr/lib/haxe/std/neko/vm/Ui.hx	/^package neko.vm;$/;"	p
neko.zip	/usr/lib/haxe/std/neko/zip/Compress.hx	/^package neko.zip;$/;"	p
neko.zip	/usr/lib/haxe/std/neko/zip/Flush.hx	/^package neko.zip;$/;"	p
neko.zip	/usr/lib/haxe/std/neko/zip/Uncompress.hx	/^package neko.zip;$/;"	p
nekoOutput	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^		var nekoOutput = PathHelper.combine (tempDirectory, name + ".n");$/;"	v
nekoToHaxe	/usr/lib/haxe/std/neko/Lib.hx	/^	public static function nekoToHaxe( v : Dynamic ) : Dynamic untyped {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ContactID.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ContactPoint.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DistanceInput.hx	/^	public function new () {}$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DistanceOutput.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DistanceProxy.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^	public function new () $/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeNode.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreePair.hx	/^	public function new () {}$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Manifold.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ManifoldPoint.hx	/^	public function new ()$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2OBB.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2RayCastInput.hx	/^	public function new (p1:B2Vec2 = null, p2:B2Vec2 = null, maxFraction:Float = 1)$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2RayCastOutput.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^public function new ()$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SimplexCache.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SimplexVertex.hx	/^	public function new () {}$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TOIInput.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2WorldManifold.hx	/^	public function new ()$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/ClipVertex.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/Features.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^	public function new (radius:Float = 0){$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public function new (v1: B2Vec2, v2: B2Vec2){$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2MassData.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	public function new (){$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2Shape.hx	/^	public function new ()$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Color.hx	/^	public function new(rr:Float, gg:Float, bb:Float) {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat22.hx	/^	public function new ()$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat33.hx	/^	public function new(c1:B2Vec3=null, c2:B2Vec3=null, c3:B2Vec3=null)$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Sweep.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Transform.hx	/^	public function new (pos:B2Vec2=null, r:B2Mat22=null) : Void $/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec2.hx	/^	public function new(x_:Float=0, y_:Float=0) : Void {x=x_; y=y_;}$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec3.hx	/^	public function new(x:Float = 0, y:Float = 0, z:Float = 0)$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function new (bd:B2BodyDef, world:B2World) {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2BodyDef.hx	/^	public function new ()$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactFilter.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactImpulse.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactListener.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2FilterData.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public function new ()$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2FixtureDef.hx	/^	public function new ()$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^	public function new ()$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2TimeStep.hx	/^	public function new () {}$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function new (gravity:B2Vec2, doSleep:Bool){$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	public function new ()$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactConstraint.hx	/^	public function new() {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactConstraintPoint.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactEdge.hx	/^	public function new () { }$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactFactory.hx	/^	public function new (allocator:Dynamic)$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactRegister.hx	/^	public function new () { }$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^	public function new()$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PositionSolverManifold.hx	/^	public function new ()$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2ConstantAccelController.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2ConstantForceController.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2ControllerEdge.hx	/^	public function new () {}$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2GravityController.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2TensorDampingController.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^	public function new (def:B2DistanceJointDef){$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJointDef.hx	/^	public function new ()$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^	public function new (def:B2FrictionJointDef){$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJointDef.hx	/^	public function new ()$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^	public function new (def:B2GearJointDef){$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJointDef.hx	/^	public function new ()$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Jacobian.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	public function new (def:B2JointDef) {$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2JointDef.hx	/^	public function new ()$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2JointEdge.hx	/^	public function new () {}$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	public function new (def:B2LineJointDef){$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^	public function new (def:B2MouseJointDef){$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJointDef.hx	/^	public function new ()$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	public function new (def:B2PrismaticJointDef){$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJointDef.hx	/^	public function new ()$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	public function new (def:B2PulleyJointDef){$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJointDef.hx	/^	public function new()$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	public function new (def:B2RevoluteJointDef){$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJointDef.hx	/^	public function new ()$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^	public function new (def:B2WeldJointDef){$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJointDef.hx	/^	public function new()$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/ContactListenerBreakable.hx	/^	public function new(test:TestBreakable)$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/ContactListenerOneSidePlatform.hx	/^	public function new(test:TestOneSidedPlatform)$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Global.hx	/^	public function new() $/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		public function new(stageMc:Sprite){$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Main.hx	/^	public function new() $/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^		public function new(){$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBreakable.hx	/^		public function new(){$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBridge.hx	/^		public function new(){$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBuoyancy.hx	/^		public function new(){$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCCD.hx	/^		public function new(){$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCompound.hx	/^		public function new(){$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^		public function new(){$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestOneSidedPlatform.hx	/^		public function new(){$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRagdoll.hx	/^		public function new(){$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRaycast.hx	/^		public function new()$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestStack.hx	/^		public function new(){$/;"	f
new	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^	public function new(){$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^	public function new (time:Float) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^	public function new( time_ms : Int ){$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^	public function new(timer:Timer):Void {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Hmac.hx	/^	public function new( hashMethod : HashMethod ) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^	public function new() {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^	public function new(val:Dynamic) untyped {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashApplication.hx	/^	public function new (parent:Application):Void {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashRenderer.hx	/^	public function new (parent:Renderer) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashWindow.hx	/^	public function new (parent:Window) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Application.hx	/^	public inline function new (parent:Application) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Renderer.hx	/^	public function new (parent:Renderer) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^	public function new (parent:Window) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public function new (parent:Application):Void {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public function new (type:GamepadEventType = null, id:Int = 0, button:Int = 0, axis:Int = 0, value:Float = 0) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public function new (type:KeyEventType = null, keyCode:Int = 0, modifier:Int = 0) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public function new (type:MouseEventType = null, x:Float = 0, y:Float = 0, button:Int = 0, movementX:Float = 0, movementY:Float = 0) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public function new (type:RenderEventType = null, context:RenderContext = null) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public function new (type:TextEventType = null, text:String = "", start:Int = 0, length:Int = 0) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public function new (type:TouchEventType = null, x:Float = 0, y:Float = 0, id:Int = 0) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public function new (type:UpdateEventType = null, deltaTime:Int = 0) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public function new (type:WindowEventType = null, width:Int = 0, height:Int = 0, x:Int = 0, y:Int = 0) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeRenderer.hx	/^	public function new (parent:Renderer) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	public function new (parent:Window) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Event.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Preloader.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioBuffer.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^	public function new (buffer:AudioBuffer = null, offset:Int = 0, length:Null<Int> = null, loops:Int = 0) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/FlashAudioContext.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/WebAudioContext.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALContext.hx	/^	private function new (handle:Float) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALDevice.hx	/^	private function new (handle:Float) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ConsoleRenderContext.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public function new (buffer:ImageBuffer = null, offsetX:Int = 0, offsetY:Int = 0, width:Int = -1, height:Int = -1, color:Null<Int> = null, type:ImageType = null) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ImageBuffer.hx	/^	public function new (data:UInt8Array = null, width:Int = 0, height:Int = 0, bitsPerPixel:Int = 4, format:PixelFormat = null) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Renderer.hx	/^	public function new (window:Window) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function new (surface:CairoSurface = null):Void {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFont.hx	/^	public function new( font : Font ) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFontOptions.hx	/^	public function new( handle : Dynamic = null  ) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoPattern.hx	/^	public function new (handle) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoSurface.hx	/^	public function new (format:CairoFormat, width:Int, height:Int):CairoSurface {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLObject.hx	/^    public function new (version:Int, id:Dynamic) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLProgram.hx	/^	public function new (version:Int, id:Dynamic) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	public function new (data:Float32Array = null) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public function new (a:Float = 1, b:Float = 0, c:Float = 0, d:Float = 1, tx:Float = 0, ty:Float = 0) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public function new (data:Float32Array = null) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	public function new (x:Float = 0, y:Float = 0, width:Float = 0, height:Float = 0):Void {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector2.hx	/^	public function new (x:Float = 0, y:Float = 0) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	public function new (x:Float = 0., y:Float = 0., z:Float = 0., w:Float = 0.) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URIParser.hx	/^	public function new(uri:String) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^	public function new (request:URLRequest = null) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLRequest.hx	/^	public function new (inURL:String = null) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLRequestHeader.hx	/^	public function new (name:String = "", value:String = "") {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLVariables.hx	/^	public function new (inEncoded:String = null) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthClient.hx	/^	public function new (version:OAuthVersion, consumer:OAuthConsumer) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthConsumer.hx	/^	public function new (key:String, secret:String) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthRequest.hx	/^	public function new (version:OAuthVersion = V1, method:URLRequestMethod, url:String, parameters:Map<String, String>) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthToken.hx	/^	public function new(token:String) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthToken.hx	/^	public function new(token:String, ?expires:Int) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthToken.hx	/^	public function new(token:String, ?secret:String) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthToken.hx	/^	public function new(token:String, secret:String) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Asset.hx	/^	public function new (path:String = "", rename:String = "", type:AssetType = null, embed:Null<Bool> = null, setDefaults:Bool = true) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Dependency.hx	/^	public function new (name:String, path:String) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Haxelib.hx	/^	public function new (name:String, version:String = "") {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Icon.hx	/^	public function new (path:String, size:Int = 0) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Keystore.hx	/^	public function new (path:String = null, password:String = null, alias:String = null, aliasPassword:String = null, identity:String = null) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Library.hx	/^	public function new (sourcePath:String, name:String = "", type:String = null, embed:Null<Bool> = null, preload:Bool = false, generate:Bool = false) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/project/NDLL.hx	/^	public function new (name:String, haxelib:Haxelib = null, type:NDLLType = null, registerStatics:Bool = true) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/project/PlatformTarget.hx	/^	public function new (command:String = null, project:HXProject = null, targetFlags:Map <String, String> = null) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^	public function new (path:String = "", defines:Map <String, Dynamic> = null, includePaths:Array <String> = null, useExtensionPath:Bool = false) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/project/SplashScreen.hx	/^	public function new (path:String, width:Int = 0, height:Int = 0) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	public function new (name:String = null) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Glyph.hx	/^	public function new (i:Int) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/text/GlyphMetrics.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/text/GlyphPosition.hx	/^	public function new (glyph:Glyph, advance:Vector2, offset:Vector2 = null) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextLayout.hx	/^	public function new (text:String = "", font:Font = null, size:Int = 12, direction:TextDirection = LEFT_TO_RIGHT, script:TextScript = COMMON, language:String = "en") {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^	public function new (command:String, _project:HXProject, targetFlags:Map <String, String>) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/BlackBerryPlatform.hx	/^	public function new (command:String, _project:HXProject, targetFlags:Map <String, String>) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/EmscriptenPlatform.hx	/^	public function new (command:String, _project:HXProject, targetFlags:Map <String, String>) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FirefoxPlatform.hx	/^	public function new (command:String, _project:HXProject, targetFlags:Map <String, String>) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FlashPlatform.hx	/^	public function new (command:String, _project:HXProject, targetFlags:Map <String, String>) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/HTML5Platform.hx	/^	public function new (command:String, _project:HXProject, targetFlags:Map <String, String> ) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^	public function new (command:String, _project:HXProject, targetFlags:Map <String, String> ) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^	public function new (command:String, _project:HXProject, targetFlags:Map <String, String> ) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/MacPlatform.hx	/^	public function new (command:String, _project:HXProject, targetFlags:Map <String, String> ) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/TizenPlatform.hx	/^	public function new (command:String, _project:HXProject, targetFlags:Map <String, String> ) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WebOSPlatform.hx	/^	public function new (command:String, _project:HXProject, targetFlags:Map <String, String> ) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WindowsPlatform.hx	/^	public function new (command:String, _project:HXProject, targetFlags:Map <String, String> ) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Gamepad.hx	/^	public function new (id:Int) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public function new (config:Config = null) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function new (size = 0):Void {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/templates/project/Source/Main.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^	public function new(i) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/Frame.hx	/^    public function new(header:FrameHeader, frameData:Bytes) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/FrameHeader.hx	/^    public function new(version:MpegVersion, layer:Layer, hasCrc:Bool, bitrate:Int, samplingFrequency:Int,$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/Info.hx	/^    public function new(header:FrameHeader, startIndex:Int, frameData:Bytes) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudio.hx	/^    public function new(frames:Array<Frame>, encoderDelay:Int, endPadding:Int) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    public function new(input:Input) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	public function new(config:HXProject, javaPath:String, externPath:String)$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	public function new(o) {$/;"	f
new	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	public function new (key:String = null, secret:String = null, devServer:Bool = false) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^	public function new (time:Float) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^	public function new( time_ms : Int ){$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^	public function new(timer:Timer):Void {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public function new (?length:Int, ?fixed:Bool):Void {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public function new (data:VectorData<T>) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public inline function new (?length:Int = 0, ?fixed:Bool = false):Void {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public inline function new (?length:Int, ?fixed:Bool):Void {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public inline function new (length:Int = 0, fixed:Bool = false):Void {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGALTokenizer.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLCompiler.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLParser.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Description.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Destination.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Header.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/OpLUT.hx	/^	public function new (?s:Null<String>, ?flags:Int = 0, ?dest:Bool = false, ?a:Bool = false, ?b:Bool = false, ?matrixwidth:Int = 0, ?matrixheight:Int = 0, ?ndwm:Bool = false, ?scaler:Bool = false, ?dm:Bool = false, ?lod:Bool = false) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Sampler.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Token.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/FS.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Flags.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Opcode.hx	/^	public function new (dest:String, aformat:String, asize:Int, bformat:String, bsize:Int, opcode:Int, simple:Bool, horizontal:Bool = false, fragonly:Bool = false, matrix:Bool = false) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Part.hx	/^	public function new (name:String = "", version:Int = 0) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Reg.hx	/^	public function new (code:Int, desc:String) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Sampler.hx	/^	public function new (shift:Int, mask:Int, value:Int) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/AbstractMaskManager.hx	/^	public function new (renderSession:RenderSession) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/AbstractRenderer.hx	/^	private function new (width:Int, height:Int) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/RenderSession.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoMaskManager.hx	/^	public function new (renderSession:RenderSession) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoRenderer.hx	/^	public function new (width:Int, height:Int, cairo:Cairo) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasMaskManager.hx	/^	public function new (renderSession:RenderSession) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasRenderer.hx	/^	public function new (width:Int, height:Int, context:CanvasRenderContext) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMRenderer.hx	/^	public function new (width:Int, height:Int, element:DOMRenderContext) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	public function new (width:Int = 800, height:Int = 600, gl:GLRenderContext \/*view:Dynamic = null*\/, transparent:Bool = false, antialias:Bool = false, preserveDrawingBuffer:Bool = false) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/AbstractShader.hx	/^	private function new (gl:GLRenderContext) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/ComplexPrimitiveShader.hx	/^	public function new (gl:GLRenderContext) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DefaultShader.hx	/^	public function new (gl:GLRenderContext) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DrawTrianglesShader.hx	/^	public function new(gl:GLRenderContext) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/FastShader.hx	/^	public function new (gl:GLRenderContext) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/FillShader.hx	/^	public function new(gl:GLRenderContext) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/PatternFillShader.hx	/^	public function new(gl:GLRenderContext) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/PrimitiveShader.hx	/^	public function new (gl:GLRenderContext) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/StripShader.hx	/^	public function new (gl:GLRenderContext) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/DefaultShader.hx	/^	public function new(gl:GLRenderContext) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/DrawTrianglesShader.hx	/^	public function new(gl:GLRenderContext) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/FillShader.hx	/^	public function new(gl:GLRenderContext) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/PatternFillShader.hx	/^	public function new(gl:GLRenderContext) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/PrimitiveShader.hx	/^	public function new(gl:GLRenderContext) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/Shader.hx	/^	public function new(gl:GLRenderContext) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/BlendModeManager.hx	/^	public function new (gl:GLRenderContext) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	public function new() {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^	public function new (gl:GLRenderContext, transparent:Bool) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterTexture.hx	/^	public function new (gl:GLRenderContext, width:Int, height:Int, smoothing = true) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GLMaskManager.hx	/^	public function new (gl:GLRenderContext) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GLMaskManager.hx	/^	public function new (renderSession:RenderSession) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public function new (gl:GLRenderContext) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/ShaderManager.hx	/^	public function new(gl:GLRenderContext) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	public function new() { }$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	public function new(gl:GLRenderContext, maxSprites:Int = 2000) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^	public function new (gl:GLRenderContext) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexArray.hx	/^	public function new(attributes:Array<VertexAttribute>, ?size:Int = 0, isStatic:Bool = false) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexAttribute.hx	/^	public function new(components:Int, type:ElementType, normalized:Bool = false, name:String, ?defaultValue:Float32Array) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Bitmap.hx	/^	public function new (bitmapData:BitmapData = null, pixelSnapping:PixelSnapping = null, smoothing:Bool = false):Void {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function new (seed = 123, numOctaves = 4, falloff = 0.5) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function new (width:Int, height:Int, transparent:Bool = true, fillColor:Int = 0xFFFFFFFF, gpuMode:Null<Int> = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DirectRenderer.hx	/^	public function new (type:String = "DirectRenderer") {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public function new (handle:Dynamic, type:String) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^	private function new (handle:Dynamic, type:String) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^	public function new (handle:Dynamic) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsBitmapFill.hx	/^	public function new (bitmapData:BitmapData = null, matrix:Matrix = null, repeat:Bool = true, smooth:Bool = false) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsEndFill.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsGradientFill.hx	/^	public function new (type:GradientType = null, colors:Array<Int> = null, alphas:Array<Float> = null, ratios:Array<Float> = null, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:Float = 0):Void {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsPath.hx	/^	public function new (commands:Array<Int> = null, data:Array<Float> = null, winding:GraphicsPathWinding = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsSolidFill.hx	/^	public function new (color:Int = 0, alpha:Float = 1.0) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsStroke.hx	/^	public function new (thickness:Null<Float> = null, pixelHinting:Bool = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:Float = 3, fill:IGraphicsData = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function new (width:Int, height:Int, color:Null<Int> = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/IGraphicsData.hx	/^	public function new (handle:Dynamic) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/InteractiveObject.hx	/^	public function new (handle:Dynamic, type:String) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Loader.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/LoaderInfo.hx	/^	private function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public function new (width:Int, height:Int, flags:Int = 0) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/MovieClip.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/OpenGLView.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^	public function new() {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Shape.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/SimpleButton.hx	/^	public function new (upState:DisplayObject = null, overState:DisplayObject = null, downState:DisplayObject = null, hitTestState:DisplayObject = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Sprite.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public function new (handle:Dynamic, width:Int, height:Int) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Tilesheet.hx	/^	public function new (image:BitmapData) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public function new (type:String, bubbles:Bool = false, cancelable:Bool = false) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/EventDispatcher.hx	/^	public function new (callback:Dynamic->Void, useCapture:Bool, priority:Int) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/EventDispatcher.hx	/^	public function new (target:IEventDispatcher = null):Void {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/HTTPStatusEvent.hx	/^	public function new (type:String, bubbles:Bool = false, cancelable:Bool = false, status:Int = 0) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/KeyboardEvent.hx	/^	public function new (type:String, bubbles:Bool = false, cancelable:Bool = false, charCodeValue:Int = 0, keyCodeValue:Int = 0, keyLocationValue:Int = 0, ctrlKeyValue:Bool = false, altKeyValue:Bool = false, shiftKeyValue:Bool = false, controlKeyValue:Bool = false, commandKeyValue:Bool = false) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public function new (type:String, bubbles:Bool = true, cancelable:Bool = false, localX:Float = 0, localY:Float = 0, relatedObject:InteractiveObject = null, ctrlKey:Bool = false, altKey:Bool = false, shiftKey:Bool = false, buttonDown:Bool = false, delta:Int = 0, commandKey:Bool = false, clickCount:Int = 0) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/SystemEvent.hx	/^	public function new (type:String, bubbles:Bool = false, cancelable:Bool = false, data:Int = 0) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/TouchEvent.hx	/^	public function new (type:String, bubbles:Bool = true, cancelable:Bool = false, localX:Float = 0, localY:Float = 0, sizeX:Float = 1, sizeY:Float = 1, relatedObject:InteractiveObject = null, ctrlKey:Bool = false, altKey:Bool = false, shiftKey:Bool = false, buttonDown:Bool = false, delta:Int = 0, commandKey:Bool = false, clickCount:Int = 0) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/File.hx	/^	public function new (path:String = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/StorageVolume.hx	/^	public function new (rootDirectory:File, name:String, isWritable:Bool, isRemovable:Bool, fileSystemType:String, drive:String) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/StorageVolumeInfo.hx	/^	private function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/BitmapFilter.hx	/^	public function new (type:String = "") {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/BlurFilter.hx	/^	public function new (blurX:Float = 4.0, blurY:Float = 4.0, quality:Int = 1) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/ColorMatrixFilter.hx	/^	public function new (matrix:Array<Float> = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/DropShadowFilter.hx	/^	public function new (distance:Float = 4.0, angle:Float = 45.0, color:Int = 0, alpha:Float = 1.0, blurX:Float = 4.0, blurY:Float = 4.0, strength:Float = 1.0, quality:Int = 1, inner:Bool = false, knockout:Bool = false, hideObject:Bool = false) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/GlowFilter.hx	/^	public function new (color:Int = 0, alpha:Float = 1.0, blurX:Float = 4.0, blurY:Float = 4.0, strength:Float = 1.0, quality:Int = 1, inner:Bool = false, knockout:Bool = false) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/ColorTransform.hx	/^	public function new (redMultiplier:Float = 1.0, greenMultiplier:Float = 1.0, blueMultiplier:Float = 1.0, alphaMultiplier:Float = 1.0, redOffset:Float = 0.0, greenOffset:Float = 0.0, blueOffset:Float = 0.0, alphaOffset:Float = 0.0) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^	public function new (a:Float = 1, b:Float = 0, c:Float = 0, d:Float = 1, tx:Float = 0, ty:Float = 0) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Point.hx	/^	public function new (x:Float = 0, y:Float = 0) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	public function new (x:Float = 0, y:Float = 0, width:Float = 0, height:Float = 0):Void {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Transform.hx	/^	public function new (parent:DisplayObject) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public inline function new (data:Dynamic) this = data;$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLBuffer.hx	/^	public function new (version:Int, id:Dynamic) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLFramebuffer.hx	/^	public function new (version:Int, id:Dynamic) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLObject.hx	/^	private function new (version:Int, id:Dynamic) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLProgram.hx	/^	public function new (version:Int, id:Dynamic) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLRenderbuffer.hx	/^	public function new (version:Int, id:Dynamic) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLShader.hx	/^	public function new (version:Int, id:Dynamic) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLTexture.hx	/^	public function new (version:Int, id:Dynamic) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^	public function new (stream:URLRequest = null, context:SoundLoaderContext = null, forcePlayAsMusic:Bool = false) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	public function new (handle:Dynamic = null, startTime:Float = 0, loops:Int = 0, soundTransform:SoundTransform = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^	private function new (name:String, localPath:String, data:Dynamic) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	public function new (request:URLRequest = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequest.hx	/^	public function new (url:String = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/XMLSocket.hx	/^	public function new(host:String = null, port:Int = 80):Void {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/sensors/Accelerometer.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/ScreenMode.hx	/^	public function new() {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/AbstractFont.hx	/^	private function new (height:Int, ascent:Int, descent:Int, isRGB:Bool) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	public function new (filename:String = "", style:FontStyle = null, type:FontType = null):Void {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextFormat.hx	/^	public function new (font:String = null, size:Null<Float> = null, color:Null<Int> = null, bold:Null<Bool> = null, italic:Null<Bool> = null, underline:Null<Bool> = null, url:String = null, target:String = null, align:String = null, leftMargin:Null<Float> = null, rightMargin:Null<Float> = null, indent:Null<Float> = null, leading:Null<Float> = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextLineMetrics.hx	/^	public function new(x:Float = 0, width:Float = 0, height:Float = 0, ascent:Float = 0, descent:Float = 0, leading:Float = 0) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ArrayBufferView.hx	/^	private function new (lengthOrBuffer:Dynamic, byteOffset:Int = 0, length:Null<Int> = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function new (size = 0) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Float32Array.hx	/^	public function new (bufferOrArray:Dynamic, start:Int = 0, elements:Null<Int> = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Int16Array.hx	/^	public function new (bufferOrArray:Dynamic, start:Int = 0, elements:Null<Int> = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Int32Array.hx	/^	public function new (bufferOrArray:Dynamic, start:Int = 0, elements:Null<Int> = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	public function new (field:Dynamic) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	public function new (method:Dynamic) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Timer.hx	/^	public function new (delay:Float, repeatCount:Int = 0) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/UInt8Array.hx	/^	public function new (bufferOrArray:Dynamic, start:Int = 0, elements:Null<Int> = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/WeakRef.hx	/^	public function new (object:T, makeWeak:Bool = true) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Bitmap.hx	/^	public function new (bitmapData:BitmapData = null, pixelSnapping:PixelSnapping = null, smoothing:Bool = false) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function new (width:Int, height:Int, transparent:Bool = true, fillColor:UInt = 0xFFFFFFFF) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DOMSprite.hx	/^	public function new (element:#if (js && html5) Element #else Dynamic #end) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DirectRenderer.hx	/^	public function new (type:String = "DirectRenderer") {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	private function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/FPS.hx	/^	public function new (x:Float = 10, y:Float = 10, color:Int = 0x000000) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/FrameLabel.hx	/^	public function new (name:String, frame:Int) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsBitmapFill.hx	/^	public function new (bitmapData:BitmapData = null, matrix:Matrix = null, repeat:Bool = true, smooth:Bool = false) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsEndFill.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsGradientFill.hx	/^	public function new (type:GradientType = null, colors:Array<Int> = null, alphas:Array<Float> = null, ratios:Array<Float> = null, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:Float = 0) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsPath.hx	/^	public function new (commands:Vector<Int> = null, data:Vector<Float> = null, winding:GraphicsPathWinding = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsSolidFill.hx	/^	public function new (color:UInt = 0, alpha:Float = 1) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsStroke.hx	/^	public function new (thickness:Float = 0.0, pixelHinting:Bool = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:Float = 3, fill:IGraphicsFill = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/InteractiveObject.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/JPEGEncoderOptions.hx	/^	public function new (quality:Int = 80) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Loader.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/LoaderInfo.hx	/^	private function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/MovieClip.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/OpenGLView.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/PNGEncoderOptions.hx	/^	public function new (fastCompression:Bool = false) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Preloader.hx	/^	public function new () { super (); }$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Preloader.hx	/^	public function new (display:Sprite = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Shape.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/SimpleButton.hx	/^	public function new (upState:DisplayObject = null, overState:DisplayObject = null, downState:DisplayObject = null, hitTestState:DisplayObject = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Sprite.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function new (width:Int, height:Int, color:Null<Int> = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage3D.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Tilesheet.hx	/^	public function new (image:BitmapData) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function new ():Void {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DBlendFactor.hx	/^	inline function new (a:Int) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DCompareMode.hx	/^	inline function new (a:Int) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DStencilAction.hx	/^	inline function new (a:Int) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DTriangleFace.hx	/^	inline function new (a:Int) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/IndexBuffer3D.hx	/^	public function new (glBuffer:GLBuffer, numIndices:Int) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Program3D.hx	/^	public function new (program:GLProgram) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/VertexBuffer3D.hx	/^	public function new (glBuffer:GLBuffer, numVertices:Int, data32PerVertex:Int) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/CubeTexture.hx	/^	public function new (glTexture:GLTexture, size:Int) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/RectangleTexture.hx	/^	public function new (glTexture:GLTexture, optimize:Bool, width:Int, height:Int) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/Texture.hx	/^	public function new (glTexture:GLTexture, optimize:Bool, width:Int, height:Int) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/TextureBase.hx	/^	public function new (glTexture:GLTexture, width:Int = 0, height:Int = 0) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/errors/ArgumentError.hx	/^	public function new (message:String = "") {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/errors/EOFError.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/errors/Error.hx	/^	public function new (message:String = "", id:Int = 0) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/errors/IOError.hx	/^	public function new (message:String = "") {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/errors/IllegalOperationError.hx	/^	public function new (message:String = "") {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/errors/RangeError.hx	/^	public function new (message:String = "") {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/errors/SecurityError.hx	/^	public function new (message:String = "") {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/errors/TypeError.hx	/^	public function new (message:String = "") {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/AccelerometerEvent.hx	/^	public function new (type:String, bubbles:Bool = false, cancelable:Bool = false, timestamp:Float = 0, accelerationX:Float = 0, accelerationY:Float = 0, accelerationZ:Float = 0):Void {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/AsyncErrorEvent.hx	/^	public function new (type:String, bubbles:Bool = false, cancelable:Bool = false, text:String = "", error:Error = null):Void {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/ContextMenuEvent.hx	/^	public function new (type:String, bubbles:Bool = false, cancelable:Bool = false, mouseTarget:InteractiveObject = null, contextMenuOwner:InteractiveObject = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/DataEvent.hx	/^	public function new (type:String, bubbles:Bool = false, cancelable:Bool = false, data:String = "") {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/ErrorEvent.hx	/^	public function new (type:String, bubbles:Bool = false, cancelable:Bool = false, text:String = "", id:Int = 0):Void {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public function new (type:String, bubbles:Bool = false, cancelable:Bool = false) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/EventDispatcher.hx	/^	public function new (callback:Dynamic->Void, useCapture:Bool, priority:Int) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/EventDispatcher.hx	/^	public function new (target:IEventDispatcher = null):Void {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/FocusEvent.hx	/^	public function new (type:String, bubbles:Bool = false, cancelable:Bool = false, relatedObject:InteractiveObject = null, shiftKey:Bool = false, keyCode:Int = 0) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/GameInputEvent.hx	/^	public function new (type:String, bubbles:Bool = true, cancelable:Bool = false, device:GameInputDevice = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/HTTPStatusEvent.hx	/^	public function new (type:String, bubbles:Bool = false, cancelable:Bool = false, status:Int = 0):Void {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/IOErrorEvent.hx	/^	public function new (type:String, bubbles:Bool = true, cancelable:Bool = false, text:String = "", id:Int = 0) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/JoystickEvent.hx	/^	public function new (type:String, bubbles:Bool = false, cancelable:Bool = false, device:Int = 0, id:Int = 0, x:Float = 0, y:Float = 0, z:Float = 0) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/KeyboardEvent.hx	/^	public function new (type:String, bubbles:Bool = false, cancelable:Bool = false, charCodeValue:Int = 0, keyCodeValue:Int = 0, keyLocationValue:KeyLocation = null, ctrlKeyValue:Bool = false, altKeyValue:Bool = false, shiftKeyValue:Bool = false, controlKeyValue:Bool = false, commandKeyValue:Bool = false) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public function new (type:String, bubbles:Bool = true, cancelable:Bool = false, localX:Float = 0, localY:Float = 0, relatedObject:InteractiveObject = null, ctrlKey:Bool = false, altKey:Bool = false, shiftKey:Bool = false, buttonDown:Bool = false, delta:Int = 0, commandKey:Bool = false, clickCount:Int = 0) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/NetStatusEvent.hx	/^	public function new (type:String, bubbles:Bool = false, cancelable:Bool = false, info:Dynamic = null):Void {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/ProgressEvent.hx	/^	public function new (type:String, bubbles:Bool = false, cancelable:Bool = false, bytesLoaded:Float = 0, bytesTotal:Float = 0) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/SampleDataEvent.hx	/^	public function new (type:String, bubbles:Bool = false, cancelable:Bool = false) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/SecurityErrorEvent.hx	/^	public function new (type:String, bubbles:Bool = false, cancelable:Bool = false, text:String = "", id:Int = 0) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/SystemEvent.hx	/^	function new(type : String, bubbles : Bool = false, cancelable : Bool = false, data : Int = 0) : Void;$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TextEvent.hx	/^	public function new (type:String, bubbles:Bool = false, cancelable:Bool = false, text:String = "") {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TimerEvent.hx	/^	public function new (type:String, bubbles:Bool = false, cancelable:Bool = false):Void {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TouchEvent.hx	/^	public function new (type:String, bubbles:Bool = true, cancelable:Bool = false, localX:Float = 0, localY:Float = 0, sizeX:Float = 1, sizeY:Float = 1, relatedObject:InteractiveObject = null, ctrlKey:Bool = false, altKey:Bool = false, shiftKey:Bool = false, buttonDown:Bool = false, delta:Int = 0, commandKey:Bool = false, clickCount:Int = 0) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/UncaughtErrorEvent.hx	/^	public function new (type:String, bubbles:Bool = true, cancelable:Bool = true, error:Dynamic = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/BitmapFilter.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/BlurFilter.hx	/^	public function new (blurX:Float = 4, blurY:Float = 4, quality:Int = 1) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/ColorMatrixFilter.hx	/^	public function new (matrix:Array<Float> = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/DropShadowFilter.hx	/^	public function new (distance:Float = 4, angle:Float = 45, color:Int = 0, alpha:Float = 1, blurX:Float = 4, blurY:Float = 4, strength:Float = 1, quality:Int = 1, inner:Bool = false, knockout:Bool = false, hideObject:Bool = false) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/GlowFilter.hx	/^	public function new (color:Int = 0, alpha:Float = 1, blurX:Float = 6, blurY:Float = 6, strength:Float = 2, quality:Int = 1, inner:Bool = false, knockout:Bool = false) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/ColorTransform.hx	/^	public function new (redMultiplier:Float = 1, greenMultiplier:Float = 1, blueMultiplier:Float = 1, alphaMultiplier:Float = 1, redOffset:Float = 0, greenOffset:Float = 0, blueOffset:Float = 0, alphaOffset:Float = 0):Void {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^	public function new (a:Float = 1, b:Float = 0, c:Float = 0, d:Float = 1, tx:Float = 0, ty:Float = 0) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public function new (v:Vector<Float> = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public inline function new (v:Vector<Float> = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/PerspectiveProjection.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Point.hx	/^	public function new (x:Float = 0, y:Float = 0) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^	public function new (x:Float = 0, y:Float = 0, width:Float = 0, height:Float = 0):Void {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Transform.hx	/^	public function new (displayObject:DisplayObject) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^	public function new (x:Float = 0, y:Float = 0, z:Float = 0, w:Float = 0) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/ID3Info.hx	/^	public function new ():Void {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public function new (src:String, owner:Dynamic):Void;$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public function new (stream:URLRequest = null, context:SoundLoaderContext = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/SoundChannel.hx	/^	private function new (#if !html5 source:AudioSource #else soundInstance:SoundJSInstance #end = null):Void {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/SoundLoaderContext.hx	/^	public function new (bufferTime:Float = 0, checkPolicyFile:Bool = false) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/SoundTransform.hx	/^	public function new (vol:Float = 1, panning:Float = 0):Void {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Video.hx	/^	public function new (width:Int = 320, height:Int = 240):Void {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/NetConnection.hx	/^	public function new ():Void {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/NetStream.hx	/^	public function new (connection:NetConnection):Void {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/SharedObject.hx	/^	private function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^    public function new(host:String = null, port:Int = 0) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^	public function new (request:URLRequest = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLRequest.hx	/^	public function new (inURL:String = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLRequestHeader.hx	/^	public function new (name:String = "", value:String = "") {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLVariables.hx	/^	public function new (inEncoded:String = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/XMLSocket.hx	/^	public function new (host:String = null, port:Int = 80):Void {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/sensors/Accelerometer.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/ApplicationDomain.hx	/^	public function new (parentDomain:ApplicationDomain = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/LoaderContext.hx	/^	public function new (checkPolicyFile:Bool = false, applicationDomain:ApplicationDomain = null, securityDomain:SecurityDomain = null):Void {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/SecurityDomain.hx	/^	private function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	public function new (name:String = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public function new (format:TextFormat, start:Int, end:Int) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextFormat.hx	/^	public function new (font:String = null, size:Null<Float> = null, color:Null<Int> = null, bold:Null<Bool> = null, italic:Null<Bool> = null, underline:Null<Bool> = null, url:String = null, target:String = null, align:TextFormatAlign = null, leftMargin:Null<Float> = null, rightMargin:Null<Float> = null, indent:Null<Float> = null, leading:Null<Float> = null) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextLineMetrics.hx	/^	public function new (x:Float, width:Float, height:Float, ascent:Float, descent:Float, leading:Float) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInput.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInputControl.hx	/^	private function new (device:GameInputDevice, id:String, minValue:Float, maxValue:Float, value:Float = 0) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public function new ():Void {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/Dictionary.hx	/^	public function new (weakKeys:Bool = false) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/Timer.hx	/^	public function new (delay:Float, repeatCount:Int = 0):Void {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/NMEPreloader.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^	public function new (inHandle:Dynamic, inWidth:Int, inHeight:Int) {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/NMEPreloader.hx	/^	public function new()$/;"	f
new	/usr/lib/haxe/lib/openfl/3,0,8/templates/project/Source/Main.hx	/^	public function new () {$/;"	f
new	/usr/lib/haxe/std/Array.hx	/^	function new() : Void;$/;"	f
new	/usr/lib/haxe/std/Date.hx	/^	function new(year : Int, month : Int, day : Int, hour : Int, min : Int, sec : Int ) : Void;$/;"	f
new	/usr/lib/haxe/std/EReg.hx	/^	public function new( r : String, opt : String ) {$/;"	f
new	/usr/lib/haxe/std/IntIterator.hx	/^	public function new( min : Int, max : Int ) {$/;"	f
new	/usr/lib/haxe/std/List.hx	/^	public function new() {$/;"	f
new	/usr/lib/haxe/std/Map.hx	/^	public function new();$/;"	f
new	/usr/lib/haxe/std/String.hx	/^	function new(string:String) : Void;$/;"	f
new	/usr/lib/haxe/std/StringBuf.hx	/^	public function new() {}$/;"	f
new	/usr/lib/haxe/std/haxe/EnumFlags.hx	/^	public inline function new(i = 0) {$/;"	f
new	/usr/lib/haxe/std/haxe/Http.hx	/^	public function new( url : String ) {$/;"	f
new	/usr/lib/haxe/std/haxe/Int64.hx	/^	inline function new(high, low) {$/;"	f
new	/usr/lib/haxe/std/haxe/Serializer.hx	/^	public function new() {$/;"	f
new	/usr/lib/haxe/std/haxe/Template.hx	/^	public function new( str : String ) {$/;"	f
new	/usr/lib/haxe/std/haxe/Timer.hx	/^	public function new( time_ms : Int ){$/;"	f
new	/usr/lib/haxe/std/haxe/Timer.hx	/^	public function new(timer:Timer):Void {$/;"	f
new	/usr/lib/haxe/std/haxe/Unserializer.hx	/^ 	public function new( buf : String ) {$/;"	f
new	/usr/lib/haxe/std/haxe/Utf8.hx	/^	public function new( ?size : Int ) {$/;"	f
new	/usr/lib/haxe/std/haxe/crypto/Adler32.hx	/^	public function new() {$/;"	f
new	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^	public function new( base : haxe.io.Bytes ) {$/;"	f
new	/usr/lib/haxe/std/haxe/crypto/Crc32.hx	/^	public function new() {$/;"	f
new	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^	function new() {$/;"	f
new	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^	function new() {$/;"	f
new	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^	public function new() { }$/;"	f
new	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^	public function new(l, k, v, r, h = -1) {$/;"	f
new	/usr/lib/haxe/std/haxe/ds/GenericStack.hx	/^	public function new() {$/;"	f
new	/usr/lib/haxe/std/haxe/ds/GenericStack.hx	/^	public function new(elt,next) { this.elt = elt; this.next = next; }$/;"	f
new	/usr/lib/haxe/std/haxe/ds/GenericStack.hx	/^	public function new(head) { current = head; }$/;"	f
new	/usr/lib/haxe/std/haxe/ds/HashMap.hx	/^	public function new() {$/;"	f
new	/usr/lib/haxe/std/haxe/ds/IntMap.hx	/^	public function new() : Void;$/;"	f
new	/usr/lib/haxe/std/haxe/ds/ObjectMap.hx	/^	public function new():Void;$/;"	f
new	/usr/lib/haxe/std/haxe/ds/StringMap.hx	/^	public function new() : Void;$/;"	f
new	/usr/lib/haxe/std/haxe/ds/Vector.hx	/^	public inline function new(length:Int) {$/;"	f
new	/usr/lib/haxe/std/haxe/ds/WeakMap.hx	/^	public function new():Void {$/;"	f
new	/usr/lib/haxe/std/haxe/format/JsonParser.hx	/^	function new( str : String ) {$/;"	f
new	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^	function new(replacer:Dynamic -> Dynamic -> Dynamic, space:String) {$/;"	f
new	/usr/lib/haxe/std/haxe/io/BufferInput.hx	/^	public function new(i, buf, ?pos = 0, ?available = 0) {$/;"	f
new	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^	function new(length,b) {$/;"	f
new	/usr/lib/haxe/std/haxe/io/BytesBuffer.hx	/^	public function new() {$/;"	f
new	/usr/lib/haxe/std/haxe/io/BytesInput.hx	/^	public function new( b : Bytes, ?pos : Int, ?len : Int ) {$/;"	f
new	/usr/lib/haxe/std/haxe/io/BytesOutput.hx	/^	public function new() {$/;"	f
new	/usr/lib/haxe/std/haxe/io/Eof.hx	/^	public function new() {$/;"	f
new	/usr/lib/haxe/std/haxe/io/Path.hx	/^	public function new( path : String ) {$/;"	f
new	/usr/lib/haxe/std/haxe/io/StringInput.hx	/^	public function new( s : String ) {$/;"	f
new	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^	public function new(api) {$/;"	f
new	/usr/lib/haxe/std/haxe/macro/Expr.hx	/^	public function new(m,p) {$/;"	f
new	/usr/lib/haxe/std/haxe/macro/Printer.hx	/^	public function new(?tabString = "\\t") {$/;"	f
new	/usr/lib/haxe/std/haxe/remoting/AMFConnection.hx	/^	function new( data, path ) {$/;"	f
new	/usr/lib/haxe/std/haxe/remoting/AsyncAdapter.hx	/^	function new(cnx,error) {$/;"	f
new	/usr/lib/haxe/std/haxe/remoting/AsyncDebugConnection.hx	/^	function new(path,cnx,data) {$/;"	f
new	/usr/lib/haxe/std/haxe/remoting/AsyncProxy.hx	/^	function new( c ) {$/;"	f
new	/usr/lib/haxe/std/haxe/remoting/Context.hx	/^	public function new() {$/;"	f
new	/usr/lib/haxe/std/haxe/remoting/DelayedConnection.hx	/^	function new(data,path) {$/;"	f
new	/usr/lib/haxe/std/haxe/remoting/ExternalConnection.hx	/^	function new( data, path ) {$/;"	f
new	/usr/lib/haxe/std/haxe/remoting/FlashJsConnection.hx	/^	function new( data, path ) {$/;"	f
new	/usr/lib/haxe/std/haxe/remoting/HttpAsyncConnection.hx	/^	function new(data,path) {$/;"	f
new	/usr/lib/haxe/std/haxe/remoting/HttpConnection.hx	/^	function new(url,path) {$/;"	f
new	/usr/lib/haxe/std/haxe/remoting/LocalConnection.hx	/^	function new(data,path) {$/;"	f
new	/usr/lib/haxe/std/haxe/remoting/Proxy.hx	/^	function new( c ) {$/;"	f
new	/usr/lib/haxe/std/haxe/remoting/SocketConnection.hx	/^	function new(data,path) {$/;"	f
new	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^	public function new( sock, ctx ) {$/;"	f
new	/usr/lib/haxe/std/haxe/remoting/SyncSocketConnection.hx	/^	function new(proto,path) {$/;"	f
new	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	public function new() {$/;"	f
new	/usr/lib/haxe/std/haxe/unit/TestCase.hx	/^	public function new( ) {$/;"	f
new	/usr/lib/haxe/std/haxe/unit/TestResult.hx	/^	public function new() {$/;"	f
new	/usr/lib/haxe/std/haxe/unit/TestRunner.hx	/^	public function new() {$/;"	f
new	/usr/lib/haxe/std/haxe/unit/TestStatus.hx	/^	public function new() 	{$/;"	f
new	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^	public function new() {$/;"	f
new	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^	public function new(url:String, params) {$/;"	f
new	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^	public function new( x : Xml ) {$/;"	f
new	/usr/lib/haxe/std/haxe/xml/Printer.hx	/^	function new() {$/;"	f
new	/usr/lib/haxe/std/haxe/xml/Proxy.hx	/^	public function new(f) {$/;"	f
new	/usr/lib/haxe/std/haxe/zip/Compress.hx	/^	public function new( level : Int ) {$/;"	f
new	/usr/lib/haxe/std/haxe/zip/Huffman.hx	/^	public function new() {$/;"	f
new	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	public function new( i, ?header = true, ?crc = true ) {$/;"	f
new	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	public function new(hasCrc) {$/;"	f
new	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^	public function new(i) {$/;"	f
new	/usr/lib/haxe/std/haxe/zip/Uncompress.hx	/^	public function new( ?windowBits : Int ) {$/;"	f
new	/usr/lib/haxe/std/haxe/zip/Writer.hx	/^	public function new( o : haxe.io.Output ) {$/;"	f
new	/usr/lib/haxe/std/neko/Random.hx	/^	public function new() {$/;"	f
new	/usr/lib/haxe/std/neko/net/Poll.hx	/^	public function new( n : Int ) {$/;"	f
new	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^	public function new( ?newData ) {$/;"	f
new	/usr/lib/haxe/std/neko/net/ThreadRemotingServer.hx	/^	public function new( ?domains ) {$/;"	f
new	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	public function new() {$/;"	f
new	/usr/lib/haxe/std/neko/vm/Deque.hx	/^	public function new() {$/;"	f
new	/usr/lib/haxe/std/neko/vm/Loader.hx	/^	public function new( l ) {$/;"	f
new	/usr/lib/haxe/std/neko/vm/Lock.hx	/^	public function new() {$/;"	f
new	/usr/lib/haxe/std/neko/vm/Module.hx	/^	public function new( m ) {$/;"	f
new	/usr/lib/haxe/std/neko/vm/Mutex.hx	/^	public function new() {$/;"	f
new	/usr/lib/haxe/std/neko/vm/Thread.hx	/^	function new(h) {$/;"	f
new	/usr/lib/haxe/std/neko/vm/Tls.hx	/^	public function new() {$/;"	f
new	/usr/lib/haxe/std/sys/db/Manager.hx	/^	public function new( classval : Class<T> ) {$/;"	f
new	/usr/lib/haxe/std/sys/db/Object.hx	/^	public function new() {$/;"	f
new	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	function new(c) {$/;"	f
new	/usr/lib/haxe/std/sys/io/Process.hx	/^	function new( cmd : String, args : Array<String> ) : Void;$/;"	f
new	/usr/lib/haxe/std/sys/net/Address.hx	/^	public function new() {$/;"	f
new	/usr/lib/haxe/std/sys/net/Host.hx	/^	function new( name : String ) : Void;$/;"	f
new	/usr/lib/haxe/std/sys/net/Socket.hx	/^	function new() : Void;$/;"	f
new	/usr/lib/haxe/std/sys/net/UdpSocket.hx	/^	public function new() {$/;"	f
new	Source/Crate.hx	/^    public function new() $/;"	f
new	Source/Ground.hx	/^    public function new(quota:Float) $/;"	f
new	Source/Main.hx	/^	public function new () {$/;"	f
new1	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/FocusEventTest.hx	/^		var new1 = new Sprite();$/;"	v
new2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/FocusEventTest.hx	/^		var new2 = new Sprite();$/;"	v
newAlpha	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^			var newAlpha:Float = alpha;$/;"	v
newAsset	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^			var newAsset = asset.clone ();$/;"	v
newBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^		var newBuffer = new ImageBuffer (new UInt8Array (newWidth * newHeight * 4), newWidth, newHeight);$/;"	v
newByteView	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var newByteView:Uint8Array = untyped __new__("Uint8Array", len);$/;"	v
newByteView	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^		var newByteView:Uint8Array = untyped __new__("Uint8Array", len);$/;"	v
newContent	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var newContent = "";$/;"	v
newData	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var newData = newBuffer.data;$/;"	v
newData	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^		var newData = new UInt8Array (newWidth * newHeight * 4);$/;"	v
newData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^			var newData = b.getBytes();$/;"	v
newData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^		var newData = ByteArray.__ofBuffer(msg.data);$/;"	v
newData	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^	var newData : Socket -> ClientData;$/;"	v
newDataLength	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^			var newDataLength = _inputBuffer.bytesAvailable;$/;"	v
newFormat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextFormat.hx	/^		var newFormat = new TextFormat (font, size, color, bold, italic, underline, url, target);$/;"	v
newHeight	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^			var newHeight = 1;$/;"	v
newImpulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^		var newImpulse:Float;$/;"	v
newImpulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^		var newImpulse:Float;$/;"	v
newInput	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^			var newInput = new ByteArray( rl + newData.length );$/;"	v
newInput	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^			var newInput = new ByteArray();$/;"	v
newLength	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var newLength = stack.length;$/;"	v
newObject	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var newObject = newLength > 0 ? stack[newLength - 1] : null;$/;"	v
newPath	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function newPath ():Void {$/;"	f
newShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var newShader = renderSession.shaderManager.setShader(shader);$/;"	v
newString	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^		var newString = string;$/;"	v
newWidth	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^			var newWidth = 1;$/;"	v
new_b	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^			var new_b = untyped __dollar__smake (allocated);$/;"	v
new_b	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^			var new_b = untyped __dollar__smake (allocated);$/;"	v
new_tags	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var new_tags = new Array <SWFTag> ();$/;"	v
newarr	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^		var newarr = new cs.NativeArray(len);$/;"	v
newarr	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^		var newarr = new java.NativeArray(len);$/;"	v
newbuf	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^			var newbuf = haxe.io.Bytes.alloc(newsize);$/;"	v
newl	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^	inline function newl ():Void {$/;"	f
newline	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^	inline function newline() {$/;"	f
newline	/usr/lib/haxe/std/haxe/xml/Printer.hx	/^	inline function newline() {$/;"	f
newsize	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^			var newsize = c.buf.length * 2;$/;"	v
next	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^				var next:B2Fixture = f.m_next;$/;"	v
next	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^			var next:B2Fixture = f.m_next;$/;"	v
next	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactEdge.hx	/^	public var next:B2ContactEdge;$/;"	v
next	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2JointEdge.hx	/^	public var next:B2JointEdge;	$/;"	v
next	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public function next ():T {$/;"	f
next	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^			var next = __nextRender - Timer.stamp () - __earlyWakeup;$/;"	v
next	/usr/lib/haxe/std/IntIterator.hx	/^	public function next() {$/;"	f
next	/usr/lib/haxe/std/StdTypes.hx	/^	function next() : T;$/;"	f
next	/usr/lib/haxe/std/haxe/ds/GenericStack.hx	/^	override public function next():T { var result = current.elt; current = current.next; return result; }$/;"	f
next	/usr/lib/haxe/std/haxe/ds/GenericStack.hx	/^	public var next : GenericCell<T>;$/;"	v
next	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^		var next = S.BEGIN;$/;"	v
next	/usr/lib/haxe/std/sys/db/ResultSet.hx	/^	function next() : Dynamic;$/;"	f
next	Source/Main.hx	/^                var next = Env.world.getBodyList();$/;"	v
nextAssetID	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^	private static function nextAssetID () {$/;"	f
nextBody	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2ControllerEdge.hx	/^	public var nextBody:B2ControllerEdge;$/;"	v
nextChar	/usr/lib/haxe/std/haxe/format/JsonParser.hx	/^	inline function nextChar() {$/;"	f
nextController	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2ControllerEdge.hx	/^	public var nextController:B2ControllerEdge;$/;"	v
nextEdge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var nextEdge:Int = edge + 1 < count1 ? edge + 1 : 0;$/;"	v
nextElementSibling	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var nextElementSibling (default, null):Dynamic \/*Element*\/;$/;"	v
nextEvt	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/FocusEventTest.hx	/^			var nextEvt = expect.shift();$/;"	v
nextFrame	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/MovieClip.hx	/^	public function nextFrame ():Void {$/;"	f
nextFrame	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/MovieClip.hx	/^	public function nextFrame ():Void {$/;"	f
nextPointOffset	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^					var nextPointOffset = (nextPointY * image.width + nextPointX) * 4;$/;"	v
nextPointX	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^					var nextPointX = curPointX + dx[i];$/;"	v
nextPointY	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^					var nextPointY = curPointY + dy[i];$/;"	v
nextPowerOfTwo	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public function nextPowerOfTwo(x:Int):Int$/;"	f
nextSepN	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var nextSepN: Number = 0.0;$/;"	v
nextSibling	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var nextSibling (default, null):Dynamic \/*Node*\/;$/;"	v
nextState	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var nextState:State;$/;"	v
nextUpdate	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Application.hx	/^	private var nextUpdate:Float;$/;"	v
nextWake	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var nextWake = Timer.__nextWake (315000000.0);$/;"	v
next_test_caption	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Main.hx	/^		var next_test_caption:TextField = new TextField();$/;"	v
nfields	/usr/lib/haxe/std/neko/vm/Module.hx	/^		var nfields = readInt();$/;"	v
nfields	/usr/lib/haxe/std/sys/db/ResultSet.hx	/^	var nfields(get,null) : Int;$/;"	v
nglobals	/usr/lib/haxe/std/neko/vm/Module.hx	/^		var nglobals = readInt();$/;"	v
nind	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^	var nind:Int;$/;"	v
nl	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^			var nl = setLoop(k, v, node.left);$/;"	v
nlen	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^				var nlen = input.readUInt16();$/;"	v
nlink	/usr/lib/haxe/std/sys/FileStat.hx	/^	var nlink : Int;$/;"	v
nme	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var nme:String;$/;"	v
nmeCallType	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private function nmeCallType(inType)$/;"	f
nmeStage	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^	static public var nmeStage:wx.NMEStage;$/;"	v
nme_path	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^			var nme_path = getHaxelib("openfl") + "\/backends\/native\/templates\/android\/template\/src";$/;"	v
noShutdown	/usr/lib/haxe/std/haxe/Http.hx	/^	public var noShutdown : Bool;$/;"	v
node	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^			var node:B2DynamicTreeNode = m_freeList;$/;"	v
node	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^			var node:B2DynamicTreeNode = m_root;$/;"	v
node	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^			var node:B2DynamicTreeNode = stack[--count];$/;"	v
node	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^		var node:B2DynamicTreeNode = allocateNode();$/;"	v
node	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var node:B2Fixture = m_fixtureList;$/;"	v
node	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Preloader.hx	/^			var node:SpanElement = cast Browser.document.createElement ("span");$/;"	v
node	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/HTML5Helper.hx	/^			var node = PathHelper.findTemplate (templatePaths, "bin\/node\/node" + suffix);$/;"	v
node	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/NodeJSHelper.hx	/^		var node = PathHelper.findTemplate (templatePaths, "bin\/node\/node" + suffix);$/;"	v
node	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^		var node = root;$/;"	v
node	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^	public var node(default,null) : NodeAccess;$/;"	v
node1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^		var node1:B2DynamicTreeNode = node2.parent;$/;"	v
node1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^		var node1:B2DynamicTreeNode = sibling.parent;$/;"	v
node2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^		var node2:B2DynamicTreeNode = allocateNode();$/;"	v
node2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^		var node2:B2DynamicTreeNode = leaf.parent;$/;"	v
nodeName	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var nodeName (default, null):String;$/;"	v
nodeName	/usr/lib/haxe/std/Xml.hx	/^	var nodeName(get,set) : String;$/;"	v
nodeType	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var nodeType (default, null):Int;$/;"	v
nodeType	/usr/lib/haxe/std/Xml.hx	/^	var nodeType(default,null) : XmlType;$/;"	v
nodeValue	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var nodeValue:String;$/;"	v
nodeValue	/usr/lib/haxe/std/Xml.hx	/^	var nodeValue(get,set) : String;$/;"	v
nodeValue	/usr/lib/haxe/std/haxe/xml/Printer.hx	/^			var nodeValue:String = StringTools.trim(value.nodeValue);$/;"	v
nodes	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^	public var nodes(default,null) : NodeListAccess;$/;"	v
noise	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function noise (randomSeed:Int, low:Int = 0, high:Int = 255, channelOptions:Int = 7, grayScale:Bool = false):Void {$/;"	f
noise	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function noise (randomSeed:Int, low:Int = 0, high:Int = 255, channelOptions:Int = 7, grayScale:Bool = false):Void {$/;"	f
norm	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^		var norm = a * d - b * c;$/;"	v
norm	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector2.hx	/^			var norm = thickness \/ Math.sqrt (x * x + y * y);$/;"	v
norm	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^		var norm = a * d - b * c;$/;"	v
norm	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Point.hx	/^			var norm = thickness \/ Math.sqrt (x * x + y * y);$/;"	v
norm	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^		var norm = a * d - b * c;$/;"	v
norm	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Point.hx	/^			var norm = thickness \/ Math.sqrt (x * x + y * y);$/;"	v
norm1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^				var norm1:Float = Math.abs((child1.aabb.lowerBound.x + child1.aabb.upperBound.x) \/ 2 - center.x)$/;"	v
norm2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^				var norm2:Float = Math.abs((child2.aabb.lowerBound.x + child2.aabb.upperBound.x) \/ 2 - center.x)$/;"	v
normal	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^		var normal:B2Vec2 = output.normal;$/;"	v
normal	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var normal:B2Vec2 = s_normal;$/;"	v
normal	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ContactPoint.hx	/^	public var normal:B2Vec2;$/;"	v
normal	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Distance.hx	/^			var normal:B2Vec2 = B2Math.subtractVV(output.pointB, output.pointA);$/;"	v
normal	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2RayCastOutput.hx	/^	public var normal:B2Vec2;$/;"	v
normal	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^		var normal:B2Vec2;$/;"	v
normal	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactConstraint.hx	/^	public var normal:B2Vec2;$/;"	v
normal	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var normal:B2Vec2 = s_psm.m_normal;$/;"	v
normal	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^	public var normal:B2Vec2;$/;"	v
normal1WorldX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var normal1WorldX:Float = (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);$/;"	v
normal1WorldY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var normal1WorldY:Float = (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);$/;"	v
normal1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var normal1X:Float = (tMat.col1.x * normal1WorldX + tMat.col1.y * normal1WorldY);$/;"	v
normal1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var normal1X:Float = (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);$/;"	v
normal1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var normal1Y:Float = (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);$/;"	v
normal1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var normal1Y:Float = (tMat.col2.x * normal1WorldX + tMat.col2.y * normal1WorldY);$/;"	v
normalCalculated	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2EdgeAndCircleContact.hx	/^		var normalCalculated: Boolean = false;$/;"	v
normalImpulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactConstraintPoint.hx	/^	public var normalImpulse:Float;$/;"	v
normalImpulses	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactImpulse.hx	/^	public var normalImpulses:Array <Float>;$/;"	v
normalIndex	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var normalIndex:Int = 0;$/;"	v
normalL	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var normalL:B2Vec2 = B2Math.mulTMV(xf.R, normal);$/;"	v
normalMass	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactConstraint.hx	/^	public var normalMass:B2Mat22;$/;"	v
normalMass	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactConstraintPoint.hx	/^	public var normalMass:Float;$/;"	v
normalX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^		var normalX:Float;$/;"	v
normalX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2WorldManifold.hx	/^		var normalX:Float;$/;"	v
normalX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var normalX:Float = c.normal.x;$/;"	v
normalX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var normalX:Float = s_worldManifold.m_normal.x;$/;"	v
normalY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^		var normalY:Float;$/;"	v
normalY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2WorldManifold.hx	/^		var normalY:Float;$/;"	v
normalY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var normalY:Float = c.normal.y;$/;"	v
normalY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var normalY:Float = s_worldManifold.m_normal.y;$/;"	v
normalize	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec2.hx	/^	public function normalize():Float$/;"	f
normalize	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function normalize ():Void {};$/;"	f
normalize	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector2.hx	/^	public function normalize (thickness:Float):Void {$/;"	f
normalize	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	inline public function normalize ():Float {$/;"	f
normalize	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Point.hx	/^	public function normalize (thickness:Float):Void {$/;"	f
normalize	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Point.hx	/^	public function normalize (thickness:Float):Void {$/;"	f
normalize	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^	inline public function normalize ():Float {$/;"	f
normalize	/usr/lib/haxe/std/haxe/io/Path.hx	/^	public static function normalize(path : String) : String {$/;"	f
normalizeParameters	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthRequest.hx	/^	private function normalizeParameters():String {$/;"	f
normalizeURI	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthRequest.hx	/^	private function normalizeURI():String {$/;"	f
normalizeUVT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^	private static function normalizeUVT (uvt:Vector<Float>, skipT:Bool = false): { max:Float, uvt:Vector<Float> } {$/;"	f
normalizeUVT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^	private static function normalizeUVT (uvt:Vector<Float>, skipT:Bool = false): { max:Float, uvt:Vector<Float> } {$/;"	f
normalized	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexAttribute.hx	/^	public var normalized:Bool = false;$/;"	v
normalizedUVT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^						var normalizedUVT = normalizeUVT (uvtData, skipT);$/;"	v
normalizedUVT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^								var normalizedUVT = normalizeUVT (uvtData, skipT);$/;"	v
normals	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var normals:Array <B2Vec2> = polygon.m_normals;$/;"	v
normals	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var normals: Array = polygon.m_normals;$/;"	v
normals1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var normals1:Array <B2Vec2> = poly1.m_normals;$/;"	v
normals2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var normals2:Array <B2Vec2> = poly2.m_normals;$/;"	v
notImplemented	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Lib.hx	/^	public static function notImplemented (api:String):Void {$/;"	f
notImplemented	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	public static function notImplemented (api:String):Void {$/;"	f
novacomPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^				var novacomPath = webOSLinuxX86NovacomPath;$/;"	v
now	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^		var now = getMS ();$/;"	v
now	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^		var now = getMS ();$/;"	v
now	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^					var now = Lib.getTimer ();$/;"	v
now	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^			var now = Timer.stamp ();$/;"	v
now	/usr/lib/haxe/std/Date.hx	/^	static function now() : Date;$/;"	f
np	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var np:Int;$/;"	v
np	/usr/lib/haxe/std/DateTools.hx	/^			var np = f.indexOf("%", p);$/;"	v
npar	/usr/lib/haxe/std/haxe/Template.hx	/^			var npar = 1;$/;"	v
nr	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^			var nr = setLoop(k, v, node.right);$/;"	v
ns	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^			var ns : Dynamic = Reflect.field(data.NetworkServices,nsname);$/;"	v
nsize	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^			var nsize = buflen * 2;$/;"	v
nsubs	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^		var nsubs = 0;$/;"	v
nthreads	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	public var nthreads : Int;$/;"	v
nullCompare	/usr/lib/haxe/std/sys/db/Manager.hx	/^	public static function nullCompare( a : String, b : String, eq : Bool ) {$/;"	f
nullPad	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Hmac.hx	/^	function nullPad( s : haxe.io.Bytes, chunkLen : Int ) : haxe.io.Bytes {$/;"	f
numBytes	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^		var numBytes = 0;$/;"	v
numBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		var numBytes = 4;$/;"	v
numChannels	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^		var numChannels = stereo ? 2 : 1;$/;"	v
numChars	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^		var numChars = 0;$/;"	v
numChildren	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var numChildren (default, null):Int;$/;"	v
numChildren	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^	public var numChildren (get, null):Int;$/;"	v
numChildren	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^	public var numChildren (get, null):Int;$/;"	v
numControls	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInputDevice.hx	/^	public var numControls (get, never):Int;$/;"	v
numDevices	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInput.hx	/^	public static var numDevices (default, null) = 0;$/;"	v
numGlyphs	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	public var numGlyphs (get, null):Int;$/;"	v
numIndices	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		var numIndices;$/;"	v
numIndices	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/IndexBuffer3D.hx	/^	public var numIndices:Int;$/;"	v
numLines	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public var numLines (get, null):Int;$/;"	v
numLines	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var numLines (get, null):Int;$/;"	v
numLock	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	public var numLock (get, set):Bool;$/;"	v
numLock	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^	public static var numLock (default, null):Bool;$/;"	v
numOut	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var numOut:Int = 0;$/;"	v
numPlanks	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBridge.hx	/^				var numPlanks:Int = 10;$/;"	v
numRemovals	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^		var numRemovals = endIndex - beginIndex;$/;"	v
numRemovals	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^		var numRemovals = endIndex - beginIndex;$/;"	v
numSamples	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^		var numSamples:Int = Std.int(bytes.length \/ blockAlign);$/;"	v
numValues	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var numValues = 3;$/;"	v
numValues	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var numValues = 3;$/;"	v
numValues	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var numValues = 3;$/;"	v
numValues	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^		var numValues = 3;$/;"	v
numVertices	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/VertexBuffer3D.hx	/^	public var numVertices:Int;$/;"	v
num_glyphs	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	var num_glyphs:Int;$/;"	v
num_glyphs	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	var num_glyphs: Int;$/;"	v
numerator	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var numerator:Float = (tVec.x*tX + tVec.y*tY);$/;"	v
o	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	var o : haxe.io.Output;$/;"	v
o	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^		var o = projectionMatrix;$/;"	v
o	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^			var o:Sampler = SamplerMap.map.get (opts[i].toLowerCase ());$/;"	v
o	/usr/lib/haxe/std/haxe/Unserializer.hx	/^			var o : Dynamic = Type.createEmptyInstance(cl);$/;"	v
o	/usr/lib/haxe/std/haxe/Unserializer.hx	/^			var o = Type.createEmptyInstance(cl);$/;"	v
o	/usr/lib/haxe/std/haxe/Unserializer.hx	/^	 		var o = {};$/;"	v
o	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^				var o = {};$/;"	v
o	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^		var o = untyped load("get_display_pos",0)();$/;"	v
o	/usr/lib/haxe/std/haxe/remoting/Context.hx	/^		var o = inf.obj;$/;"	v
o	/usr/lib/haxe/std/haxe/remoting/ContextAll.hx	/^		var o : Dynamic = null;$/;"	v
o	/usr/lib/haxe/std/haxe/remoting/ContextAll.hx	/^		var o = Type.resolveClass(path2.join("."));$/;"	v
o	/usr/lib/haxe/std/haxe/remoting/ContextAll.hx	/^		var o = flash.Lib.eval(path2.join("."));$/;"	v
o	/usr/lib/haxe/std/haxe/remoting/ContextAll.hx	/^		var o = null;$/;"	v
o	/usr/lib/haxe/std/haxe/remoting/ContextAll.hx	/^		var o;$/;"	v
o	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^		var o = socket.output;$/;"	v
o	/usr/lib/haxe/std/haxe/remoting/SocketWrapper.hx	/^		var o = {};$/;"	v
o	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^			var o : Dynamic;$/;"	v
o	/usr/lib/haxe/std/haxe/zip/Writer.hx	/^		var o = this.o;$/;"	v
o	/usr/lib/haxe/std/haxe/zip/Writer.hx	/^	var o : haxe.io.Output;$/;"	v
o	/usr/lib/haxe/std/neko/Lib.hx	/^			var o = __dollar__new(v);$/;"	v
o	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^			var o = {};$/;"	v
o	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var o : T = Type.createEmptyInstance(cast class_proto);$/;"	v
o	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var o = untyped __dollar__new(x);$/;"	v
oMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var oMatrix = object.__worldTransform;$/;"	v
oRawData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var oRawData = rawData.copy ();$/;"	v
oauth	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthClient.hx	/^		var oauth = new OAuthRequest (version, method, url, parameters);$/;"	v
obj	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ObjectHelper.hx	/^			var obj = Type.createEmptyInstance (Type.getClass (v));$/;"	v
obj	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ObjectHelper.hx	/^			var obj:Dynamic = {};$/;"	v
obj	/usr/lib/haxe/std/haxe/format/JsonParser.hx	/^				var obj = {}, field = null, comma : Null<Bool> = null;$/;"	v
obj	/usr/lib/haxe/std/haxe/macro/ExprTools.hx	/^				var obj = {};$/;"	v
obj	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^	var obj : Dynamic;$/;"	v
objString	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^	inline function objString( v : Dynamic ) {$/;"	f
object	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var object = {$/;"	v
object	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^			var object = stack[0];$/;"	v
object	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var object = __findByID (event.id);$/;"	v
object	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var object = __findByID (id);$/;"	v
objectBounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	private static var objectBounds:Rectangle = new Rectangle();$/;"	v
objectEncoding	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public var objectEncoding:Int;$/;"	v
objectEncoding	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/NetStream.hx	/^	public var objectEncoding:Int;$/;"	v
objectEncoding	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^    public var objectEncoding : Int;$/;"	v
objectEncoding	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public var objectEncoding:Int;$/;"	v
objectEncoding	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataInput.hx	/^	var objectEncoding:Int;$/;"	v
objectEncoding	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataOutput.hx	/^	var objectEncoding:Int;$/;"	v
objectID	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/external/ExternalInterface.hx	/^	public static var objectID:String;$/;"	v
objectID	/usr/lib/haxe/lib/openfl/3,0,8/openfl/external/ExternalInterface.hx	/^	public static var objectID:String;$/;"	v
objectPosition	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	private static var objectPosition:Point = new Point();$/;"	v
objectToString	/usr/lib/haxe/std/sys/db/Manager.hx	/^	function objectToString( it : T ) : String {$/;"	f
object_cache	/usr/lib/haxe/std/sys/db/Manager.hx	/^	private static var object_cache : haxe.ds.StringMap<Object> = new haxe.ds.StringMap();$/;"	v
objects	/usr/lib/haxe/std/haxe/remoting/Context.hx	/^	var objects : haxe.ds.StringMap<{ obj : Dynamic, rec : Bool }>;$/;"	v
octFreqPers	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private function octFreqPers (fPersistence:Float):Void {$/;"	f
octaves	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var octaves = octaves;$/;"	v
octaves	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private var octaves:Int;$/;"	v
ofData	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^	public static function ofData( b : BytesData ) {$/;"	f
ofInt	/usr/lib/haxe/std/haxe/Int64.hx	/^	public static inline function ofInt( x : Int ) : Int64 {$/;"	f
ofString	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^	public static function ofString( s : String ) : Bytes {$/;"	f
ofString	/usr/lib/haxe/std/neko/NativeString.hx	/^	public static inline function ofString( s : String ) : NativeString {$/;"	f
off	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public function off (type:String, listener:Dynamic, ?useCapture:Bool):Bool;$/;"	f
offset	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^	public var offset:Float;$/;"	v
offset	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^	public var offset:Int;$/;"	v
offset	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^				var offset:Int;$/;"	v
offset	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var offset = (((y + image.offsetY) * (image.buffer.width * 4)) + ((x + image.offsetX) * 4));$/;"	v
offset	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var offset = Math.round (image.buffer.width * (rect.y + image.offsetX) + (rect.x + image.offsetY));$/;"	v
offset	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var offset:Int = 0;$/;"	v
offset	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var offset:Int;$/;"	v
offset	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^		var offset = (4 * (y + image.offsetY) * image.buffer.width + (x + image.offsetX) * 4);$/;"	v
offset	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	public function offset (dx:Float, dy:Float):Void {$/;"	f
offset	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector2.hx	/^	public function offset (dx:Float, dy:Float):Void {$/;"	f
offset	/usr/lib/haxe/lib/lime/2,4,3/lime/text/GlyphPosition.hx	/^	public var offset:Vector2;$/;"	v
offset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	public var offset:Point;$/;"	v
offset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/Shader.hx	/^		var offset = 0;$/;"	v
offset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^		var offset =  renderSession.offset;$/;"	v
offset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^		var offset = renderSession.offset;$/;"	v
offset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^		var offset = renderSession.offset;$/;"	v
offset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Point.hx	/^	public function offset (dx:Float, dy:Float):Void {$/;"	f
offset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	public function offset (dx:Float, dy:Float):Void {$/;"	f
offset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/IndexBuffer3D.hx	/^		var offset:Int = byteArrayOffset + startOffset * bytesPerIndex;$/;"	v
offset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/VertexBuffer3D.hx	/^		var offset:Int = byteArrayOffset + startOffset * bytesPerVertex;$/;"	v
offset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/VertexBuffer3D.hx	/^		var offset:Int = startVertex;$/;"	v
offset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Point.hx	/^	public function offset (dx:Float, dy:Float):Void {$/;"	f
offset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^	public function offset (dx:Float, dy:Float):Void {$/;"	f
offset4	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Tilesheet.hx	/^				var offset4 = cast (4 * offset6 \/ 6, Int);$/;"	v
offset6	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Tilesheet.hx	/^				var offset6 = vec.length;$/;"	v
offset8	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^			var offset8 = 0;$/;"	v
offsetHeight	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var offsetHeight (default, null):Int;$/;"	v
offsetL	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var offsetL:Float = offset - B2Math.dot(normal, xf.position);$/;"	v
offsetLeft	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var offsetLeft (default, null):Int;$/;"	v
offsetParent	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var offsetParent (default, null):Dynamic \/*Element*\/;$/;"	v
offsetPoint	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	public function offsetPoint (point:Vector2):Void {$/;"	f
offsetPoint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	public function offsetPoint (point:Point):Void {$/;"	f
offsetPoint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^	public function offsetPoint (point:Point):Void {$/;"	f
offsetTop	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var offsetTop (default, null):Int;$/;"	v
offsetVector	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/ComplexPrimitiveShader.hx	/^	public var offsetVector:GLUniformLocation;$/;"	v
offsetVector	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DefaultShader.hx	/^	public var offsetVector:GLUniformLocation;$/;"	v
offsetVector	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DrawTrianglesShader.hx	/^	public var offsetVector:GLUniformLocation;$/;"	v
offsetVector	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/FastShader.hx	/^	public var offsetVector:GLUniformLocation;$/;"	v
offsetVector	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/FillShader.hx	/^	public var offsetVector:GLUniformLocation;$/;"	v
offsetVector	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/PatternFillShader.hx	/^	public var offsetVector:GLUniformLocation;$/;"	v
offsetVector	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/PrimitiveShader.hx	/^	public var offsetVector:GLUniformLocation;$/;"	v
offsetVector	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/StripShader.hx	/^	public var offsetVector:GLUniformLocation;$/;"	v
offsetWidth	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var offsetWidth (default, null):Int;$/;"	v
offsetX	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public var offsetX:Int;$/;"	v
offsetX	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^			var offsetX = 0;$/;"	v
offsetX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^						var offsetX = 2.0;$/;"	v
offsetX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^			var offsetX = 0;$/;"	v
offsetX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^		var offsetX = bounds.x;$/;"	v
offsetX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^				var offsetX = 2.0;$/;"	v
offsetX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^				var offsetX = bounds.x;$/;"	v
offsetX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^			var offsetX = 0;$/;"	v
offsetX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^		var offsetX = bounds.x;$/;"	v
offsetX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^						var offsetX = 0.0;$/;"	v
offsetX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^		var offsetX = 0.0;$/;"	v
offsetX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^	public var offsetX:Float;$/;"	v
offsetX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/ColorMatrixFilter.hx	/^		var offsetX = Std.int (destPoint.x - sourceRect.x);$/;"	v
offsetY	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public var offsetY:Int;$/;"	v
offsetY	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^			var offsetY = 0;$/;"	v
offsetY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^			var offsetY = 0;$/;"	v
offsetY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^			var offsetY = 0;$/;"	v
offsetY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^		var offsetY = bounds.y;$/;"	v
offsetY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^				var offsetY = bounds.y;$/;"	v
offsetY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^			var offsetY = 0;$/;"	v
offsetY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^		var offsetY = bounds.y;$/;"	v
offsetY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^		var offsetY = 0.0;$/;"	v
offsetY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^	public var offsetY:Float;$/;"	v
offsetY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/ColorMatrixFilter.hx	/^		var offsetY = Std.int (destPoint.y - sourceRect.y);$/;"	v
ogl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	private var ogl:OpenGLView;$/;"	v
ok	/usr/lib/haxe/std/haxe/remoting/HttpAsyncConnection.hx	/^			var ok = true;$/;"	v
ok	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^						var ok = false;$/;"	v
old	/usr/lib/haxe/std/haxe/Http.hx	/^		var old = onError;$/;"	v
old	/usr/lib/haxe/std/haxe/Template.hx	/^			var old = buf;$/;"	v
old	/usr/lib/haxe/std/haxe/macro/Printer.hx	/^			var old = tabs;$/;"	v
old	/usr/lib/haxe/std/haxe/macro/Printer.hx	/^		var old = tabs;$/;"	v
old	/usr/lib/haxe/std/haxe/unit/TestRunner.hx	/^		var old = haxe.Log.trace;$/;"	v
old	/usr/lib/haxe/std/neko/Boot.hx	/^		var old = e.__string;$/;"	v
old	/usr/lib/haxe/std/neko/vm/Loader.hx	/^		var old = untyped l.cache;$/;"	v
old1	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/FocusEventTest.hx	/^		var old1 = new Sprite();$/;"	v
old2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/FocusEventTest.hx	/^		var old2 = new Sprite();$/;"	v
oldAABB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^				var oldAABB:B2AABB = node1.aabb;$/;"	v
oldBroadPhase	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var oldBroadPhase:IBroadPhase = m_contactManager.m_broadPhase;$/;"	v
oldByteView	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var oldByteView:Uint8Array = this.byteView;$/;"	v
oldByteView	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^		var oldByteView:Uint8Array = this.byteView;$/;"	v
oldCenter	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var oldCenter:B2Vec2 = m_sweep.c.copy();$/;"	v
oldImpulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^			var oldImpulse:Float = m_angularImpulse;$/;"	v
oldImpulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^			var oldImpulse:Float = m_motorImpulse;$/;"	v
oldImpulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^			var oldImpulse:Float = m_motorImpulse;$/;"	v
oldImpulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var oldImpulse:Float;$/;"	v
oldImpulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^			var oldImpulse:Float = m_motorImpulse;$/;"	v
oldImpulseV	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^			var oldImpulseV:B2Vec2 = m_linearImpulse.copy();$/;"	v
oldImpulseX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^		var oldImpulseX:Float = m_impulse.x;$/;"	v
oldImpulseY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^		var oldImpulseY:Float = m_impulse.y;$/;"	v
oldLength	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var oldLength = __focusOverObjects.length;$/;"	v
oldLength	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var oldLength = prev.length;$/;"	v
oldLimitImpulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var oldLimitImpulse:Float;$/;"	v
oldLimitImpulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var oldLimitImpulse:Float;$/;"	v
oldLimitImpulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^		var oldLimitImpulse:Float;$/;"	v
oldLimitPositionImpulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var oldLimitPositionImpulse:Float;$/;"	v
oldLoaders	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^				var oldLoaders = activeLoaders;$/;"	v
oldObject	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var oldObject = oldLength > 0 ? __focusOverObjects[oldLength - 1] : null;$/;"	v
oldObject	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var oldObject = oldLength > 0 ? prev[oldLength - 1] : null;$/;"	v
oldPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^		var oldPath = "";$/;"	v
oldPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ProcessHelper.hx	/^		var oldPath:String = "";$/;"	v
oldPath	/usr/lib/haxe/lib/lime/2,4,3/tools/RunScript.hx	/^		var oldPath:String = "";$/;"	v
oldPath	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^		var oldPath = "";$/;"	v
oldPosition	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Memory.hx	/^		var oldPosition:Int = gcRef.position;$/;"	v
oldTrace	/usr/lib/haxe/std/haxe/Log.hx	/^			var oldTrace = haxe.Log.trace; \/\/ store old function$/;"	v
oldValue	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^		var oldValue = (untyped Error).prepareStackTrace;$/;"	v
oldValue	/usr/lib/haxe/std/haxe/CallStack.hx	/^			var oldValue = (untyped Error).prepareStackTrace;$/;"	v
oldX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^			var oldX = x;$/;"	v
oldX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^			var oldX = x;$/;"	v
old_constants	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var old_constants = mConstants;$/;"	v
old_loaded	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^			var old_loaded = bytesLoaded;$/;"	v
old_output	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var old_output = mOutput;$/;"	v
old_total	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^			var old_total = bytesTotal;$/;"	v
old_type	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var old_type = mCurrentType;$/;"	v
olda	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^			var olda = a;$/;"	v
olda	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^			var olda = a;$/;"	v
oldb	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^			var oldb = b;$/;"	v
oldb	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^			var oldb = b;$/;"	v
oldc	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^			var oldc = c;$/;"	v
oldc	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^			var oldc = c;$/;"	v
oldd	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^			var oldd = d;$/;"	v
oldd	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^			var oldd = d;$/;"	v
olde	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^			var olde = e;$/;"	v
omega	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^			var omega:Float = 2.0 * Math.PI * m_frequencyHz;$/;"	v
omega	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^		var omega:Float = 2.0 * Math.PI * m_frequencyHz;$/;"	v
on	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public function on (type:String, listener:Dynamic, ?scope:Dynamic, ?once:Bool=false, ?data:Dynamic = null, ?useCapture:Bool=false):Dynamic;$/;"	f
onAddedToStage	Source/Crate.hx	/^    private function onAddedToStage(event:Event)$/;"	f
onAddedToStage	Source/Ground.hx	/^    private function onAddedToStage(event:Event)$/;"	f
onAfterGenerate	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function onAfterGenerate( callback : Void -> Void ) {$/;"	f
onCallback	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	private static function onCallback (object:Dynamic, method:Dynamic, args:Dynamic):Dynamic {$/;"	f
onComplete	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Preloader.hx	/^	public var onComplete:Dynamic;$/;"	v
onComplete	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^	public var onComplete = new Event<Void->Void> ();$/;"	v
onComplete	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^	public var onComplete = new Event<URLLoader->Void> ();$/;"	v
onComplete	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public var onComplete:SoundJSInstance->Void;$/;"	v
onEnterFrame	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Main.hx	/^	function onEnterFrame(e:Event)$/;"	f
onError	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	private function onError (msg:String):Void {$/;"	f
onError	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^	public function onError( e : Dynamic ) {$/;"	f
onGamepadAxisMove	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function onGamepadAxisMove (gamepad:Gamepad, axis:GamepadAxis, value:Float):Void {$/;"	f
onGamepadAxisMove	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function onGamepadAxisMove (gamepad:Gamepad, axis:GamepadAxis, value:Float):Void;$/;"	f
onGamepadAxisMove	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function onGamepadAxisMove (gamepad:Gamepad, axis:GamepadAxis, value:Float):Void { }$/;"	f
onGamepadAxisMove	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var onGamepadAxisMove = new Event<Gamepad->GamepadAxis->Float->Void> ();$/;"	v
onGamepadAxisMove	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function onGamepadAxisMove (gamepad:Gamepad, axis:GamepadAxis, value:Float):Void {$/;"	f
onGamepadAxisMove	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function onGamepadAxisMove (gamepad:Gamepad, axis:GamepadAxis, value:Float):Void {$/;"	f
onGamepadButtonDown	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function onGamepadButtonDown (gamepad:Gamepad, button:GamepadButton):Void {$/;"	f
onGamepadButtonDown	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function onGamepadButtonDown (gamepad:Gamepad, button:GamepadButton):Void;$/;"	f
onGamepadButtonDown	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function onGamepadButtonDown (gamepad:Gamepad, button:GamepadButton):Void { }$/;"	f
onGamepadButtonDown	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var onGamepadButtonDown = new Event<Gamepad->GamepadButton->Void> ();$/;"	v
onGamepadButtonDown	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function onGamepadButtonDown (gamepad:Gamepad, button:GamepadButton):Void {$/;"	f
onGamepadButtonDown	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function onGamepadButtonDown (gamepad:Gamepad, button:GamepadButton):Void {$/;"	f
onGamepadButtonUp	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function onGamepadButtonUp (gamepad:Gamepad, button:GamepadButton):Void {$/;"	f
onGamepadButtonUp	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function onGamepadButtonUp (gamepad:Gamepad, button:GamepadButton):Void;$/;"	f
onGamepadButtonUp	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function onGamepadButtonUp (gamepad:Gamepad, button:GamepadButton):Void { }$/;"	f
onGamepadButtonUp	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var onGamepadButtonUp = new Event<Gamepad->GamepadButton->Void> ();$/;"	v
onGamepadButtonUp	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function onGamepadButtonUp (gamepad:Gamepad, button:GamepadButton):Void {$/;"	f
onGamepadButtonUp	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function onGamepadButtonUp (gamepad:Gamepad, button:GamepadButton):Void {$/;"	f
onGamepadConnect	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function onGamepadConnect (gamepad:Gamepad):Void {$/;"	f
onGamepadConnect	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function onGamepadConnect (gamepad:Gamepad):Void;$/;"	f
onGamepadConnect	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function onGamepadConnect (gamepad:Gamepad):Void { }$/;"	f
onGamepadConnect	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var onGamepadConnect = new Event<Gamepad->Void> ();$/;"	v
onGamepadConnect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function onGamepadConnect (gamepad:Gamepad):Void {$/;"	f
onGamepadConnect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function onGamepadConnect (gamepad:Gamepad):Void {$/;"	f
onGamepadDisconnect	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function onGamepadDisconnect (gamepad:Gamepad):Void {$/;"	f
onGamepadDisconnect	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function onGamepadDisconnect (gamepad:Gamepad):Void;$/;"	f
onGamepadDisconnect	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function onGamepadDisconnect (gamepad:Gamepad):Void { }$/;"	f
onGamepadDisconnect	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var onGamepadDisconnect = new Event<Gamepad->Void> ();$/;"	v
onGamepadDisconnect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function onGamepadDisconnect (gamepad:Gamepad):Void {$/;"	f
onGamepadDisconnect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function onGamepadDisconnect (gamepad:Gamepad):Void {$/;"	f
onGenerate	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function onGenerate( callback : Array<Type> -> Void ) {$/;"	f
onHTTPStatus	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^	public var onHTTPStatus = new Event<URLLoader->Int->Void> ();$/;"	v
onIOError	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^	public var onIOError = new Event<URLLoader->String->Void> ();$/;"	v
onInit	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Preloader.hx	/^	public function onInit ():Void {};$/;"	f
onInit	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/NMEPreloader.hx	/^	public function onInit () {$/;"	f
onInit	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/NMEPreloader.hx	/^	public function onInit()$/;"	f
onKey	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public var onKey:Int -> Bool -> Int -> Int -> Void; $/;"	v
onKeyDown	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function onKeyDown (keyCode:KeyCode, modifier:KeyModifier):Void {$/;"	f
onKeyDown	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function onKeyDown (keyCode:KeyCode, modifier:KeyModifier):Void;$/;"	f
onKeyDown	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function onKeyDown (keyCode:KeyCode, modifier:KeyModifier):Void { }$/;"	f
onKeyDown	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var onKeyDown = new Event<KeyCode->KeyModifier->Void> ();$/;"	v
onKeyDown	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function onKeyDown (keyCode:KeyCode, modifier:KeyModifier):Void {$/;"	f
onKeyDown	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function onKeyDown (keyCode:KeyCode, modifier:KeyModifier):Void {$/;"	f
onKeyUp	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function onKeyUp (keyCode:KeyCode, modifier:KeyModifier):Void {$/;"	f
onKeyUp	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function onKeyUp (keyCode:KeyCode, modifier:KeyModifier):Void;$/;"	f
onKeyUp	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function onKeyUp (keyCode:KeyCode, modifier:KeyModifier):Void { }$/;"	f
onKeyUp	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var onKeyUp = new Event<KeyCode->KeyModifier->Void> ();$/;"	v
onKeyUp	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function onKeyUp (keyCode:KeyCode, modifier:KeyModifier):Void {$/;"	f
onKeyUp	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function onKeyUp (keyCode:KeyCode, modifier:KeyModifier):Void {$/;"	f
onLoaded	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Preloader.hx	/^	public function onLoaded ():Void {};$/;"	f
onLoaded	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/NMEPreloader.hx	/^	public function onLoaded () {$/;"	f
onLoaded	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/NMEPreloader.hx	/^	public function onLoaded()$/;"	f
onLoop	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public var onLoop:SoundJSInstance->Void;$/;"	v
onMacroContextReused	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function onMacroContextReused( callb : Void -> Bool ) {$/;"	f
onMessageHandler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/XMLSocket.hx	/^	private function onMessageHandler(e: ProgressEvent):Void {$/;"	f
onMouseDown	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function onMouseDown (x:Float, y:Float, button:Int):Void {$/;"	f
onMouseDown	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function onMouseDown (x:Float, y:Float, button:Int):Void;$/;"	f
onMouseDown	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function onMouseDown (x:Float, y:Float, button:Int):Void { }$/;"	f
onMouseDown	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var onMouseDown = new Event<Float->Float->Int->Void> ();$/;"	v
onMouseDown	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function onMouseDown (x:Float, y:Float, button:Int):Void {$/;"	f
onMouseDown	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function onMouseDown (x:Float, y:Float, button:Int):Void {$/;"	f
onMouseMove	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function onMouseMove (x:Float, y:Float):Void {$/;"	f
onMouseMove	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function onMouseMove (x:Float, y:Float):Void;$/;"	f
onMouseMove	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function onMouseMove (x:Float, y:Float):Void { }$/;"	f
onMouseMove	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var onMouseMove = new Event<Float->Float->Void> ();$/;"	v
onMouseMove	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function onMouseMove (x:Float, y:Float):Void {$/;"	f
onMouseMove	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function onMouseMove (x:Float, y:Float):Void {$/;"	f
onMouseMoveRelative	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function onMouseMoveRelative (x:Float, y:Float):Void {$/;"	f
onMouseMoveRelative	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function onMouseMoveRelative (x:Float, y:Float):Void;$/;"	f
onMouseMoveRelative	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function onMouseMoveRelative (x:Float, y:Float):Void { }$/;"	f
onMouseMoveRelative	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var onMouseMoveRelative = new Event<Float->Float->Void> ();$/;"	v
onMouseMoveRelative	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function onMouseMoveRelative (x:Float, y:Float):Void {$/;"	f
onMouseMoveRelative	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function onMouseMoveRelative (x:Float, y:Float):Void {$/;"	f
onMouseUp	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function onMouseUp (x:Float, y:Float, button:Int):Void {$/;"	f
onMouseUp	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function onMouseUp (x:Float, y:Float, button:Int):Void;$/;"	f
onMouseUp	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function onMouseUp (x:Float, y:Float, button:Int):Void { }$/;"	f
onMouseUp	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var onMouseUp = new Event<Float->Float->Int->Void> ();$/;"	v
onMouseUp	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function onMouseUp (x:Float, y:Float, button:Int):Void {$/;"	f
onMouseUp	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function onMouseUp (x:Float, y:Float, button:Int):Void {$/;"	f
onMouseWheel	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function onMouseWheel (deltaX:Float, deltaY:Float):Void {$/;"	f
onMouseWheel	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function onMouseWheel (deltaX:Float, deltaY:Float):Void;$/;"	f
onMouseWheel	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function onMouseWheel (deltaX:Float, deltaY:Float):Void { }$/;"	f
onMouseWheel	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var onMouseWheel = new Event<Float->Float->Void> ();$/;"	v
onMouseWheel	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function onMouseWheel (deltaX:Float, deltaY:Float):Void {$/;"	f
onMouseWheel	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function onMouseWheel (deltaX:Float, deltaY:Float):Void {$/;"	f
onOpen	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^	public var onOpen = new Event<URLLoader->Void> ();$/;"	v
onOpenHandler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/XMLSocket.hx	/^	private function onOpenHandler(_):Void {$/;"	f
onPlayFailed	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public var onPlayFailed:SoundJSInstance->Void;$/;"	v
onPlayInterrupted	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public var onPlayInterrupted:SoundJSInstance->Void;$/;"	v
onPlaySucceeded	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public var onPlaySucceeded:SoundJSInstance->Void;$/;"	v
onProgress	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^	public var onProgress = new Event<URLLoader->Int->Int->Void> ();$/;"	v
onQuit	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public var onQuit:Void -> Void; $/;"	v
onReady	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public var onReady:SoundJSInstance->Void;$/;"	v
onRemovedFromStage	Source/Crate.hx	/^    private function onRemovedFromStage(event:Event)$/;"	f
onRender	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Renderer.hx	/^	public var onRender = new Event<RenderContext->Void> ();$/;"	v
onRenderContextLost	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function onRenderContextLost ():Void {$/;"	f
onRenderContextLost	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function onRenderContextLost ():Void;$/;"	f
onRenderContextLost	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function onRenderContextLost ():Void { }$/;"	f
onRenderContextLost	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Renderer.hx	/^	public var onRenderContextLost = new Event<Void->Void> ();$/;"	v
onRenderContextLost	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function onRenderContextLost ():Void {$/;"	f
onRenderContextLost	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function onRenderContextLost ():Void {$/;"	f
onRenderContextRestored	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function onRenderContextRestored (context:RenderContext):Void {$/;"	f
onRenderContextRestored	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function onRenderContextRestored (context:RenderContext):Void;$/;"	f
onRenderContextRestored	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function onRenderContextRestored (context:RenderContext):Void { }$/;"	f
onRenderContextRestored	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Renderer.hx	/^	public var onRenderContextRestored = new Event<RenderContext->Void> ();$/;"	v
onRenderContextRestored	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function onRenderContextRestored (context:RenderContext):Void {$/;"	f
onRenderContextRestored	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function onRenderContextRestored (context:RenderContext):Void {$/;"	f
onRequestError	/usr/lib/haxe/std/haxe/remoting/SyncSocketConnection.hx	/^	public function onRequestError( path : Array<String>, args : Array<Dynamic>, exc : Dynamic ) {$/;"	f
onSecurityError	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^	public var onSecurityError = new Event<URLLoader->String->Void> ();$/;"	v
onStage	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^		var onStage = (stage != null);$/;"	v
onTextEdit	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function onTextEdit (text:String, start:Int, length:Int):Void {$/;"	f
onTextEdit	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function onTextEdit (text:String, start:Int, length:Int):Void;$/;"	f
onTextEdit	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function onTextEdit (text:String, start:Int, length:Int):Void { }$/;"	f
onTextEdit	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var onTextEdit = new Event<String->Int->Int->Void> ();$/;"	v
onTextEdit	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function onTextEdit (text:String, start:Int, length:Int):Void {$/;"	f
onTextEdit	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function onTextEdit (text:String, start:Int, length:Int):Void {$/;"	f
onTextInput	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function onTextInput (text:String):Void {$/;"	f
onTextInput	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function onTextInput (text:String):Void;$/;"	f
onTextInput	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function onTextInput (text:String):Void { }$/;"	f
onTextInput	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var onTextInput = new Event<String->Void> ();$/;"	v
onTextInput	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function onTextInput (text:String):Void {$/;"	f
onTextInput	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function onTextInput (text:String):Void {$/;"	f
onTouchEnd	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function onTouchEnd (x:Float, y:Float, id:Int):Void {$/;"	f
onTouchEnd	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function onTouchEnd (x:Float, y:Float, id:Int):Void;$/;"	f
onTouchEnd	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function onTouchEnd (x:Float, y:Float, id:Int):Void { }$/;"	f
onTouchEnd	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var onTouchEnd = new Event<Float->Float->Int->Void> ();$/;"	v
onTouchEnd	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function onTouchEnd (x:Float, y:Float, id:Int):Void {$/;"	f
onTouchEnd	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function onTouchEnd (x:Float, y:Float, id:Int):Void {$/;"	f
onTouchMove	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function onTouchMove (x:Float, y:Float, id:Int):Void {$/;"	f
onTouchMove	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function onTouchMove (x:Float, y:Float, id:Int):Void;$/;"	f
onTouchMove	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function onTouchMove (x:Float, y:Float, id:Int):Void { }$/;"	f
onTouchMove	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var onTouchMove = new Event<Float->Float->Int->Void> ();$/;"	v
onTouchMove	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function onTouchMove (x:Float, y:Float, id:Int):Void {$/;"	f
onTouchMove	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function onTouchMove (x:Float, y:Float, id:Int):Void {$/;"	f
onTouchStart	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function onTouchStart (x:Float, y:Float, id:Int):Void {$/;"	f
onTouchStart	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function onTouchStart (x:Float, y:Float, id:Int):Void;$/;"	f
onTouchStart	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function onTouchStart (x:Float, y:Float, id:Int):Void { }$/;"	f
onTouchStart	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var onTouchStart = new Event<Float->Float->Int->Void> ();$/;"	v
onTouchStart	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function onTouchStart (x:Float, y:Float, id:Int):Void {$/;"	f
onTouchStart	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function onTouchStart (x:Float, y:Float, id:Int):Void {$/;"	f
onTypeNotFound	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function onTypeNotFound ( callback : String -> TypeDefinition ) {$/;"	f
onUpdate	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public var onUpdate = new Event<Int->Void> ();$/;"	v
onUpdate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Preloader.hx	/^	public function onUpdate (loaded:Int, total:Int):Void {};$/;"	f
onUpdate	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/NMEPreloader.hx	/^	public function onUpdate (bytesLoaded:Int, bytesTotal:Int):Void {$/;"	f
onUpdate	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/NMEPreloader.hx	/^	public function onUpdate(bytesLoaded:Int, bytesTotal:Int)$/;"	f
onWindowActivate	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function onWindowActivate ():Void {$/;"	f
onWindowActivate	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function onWindowActivate ():Void;$/;"	f
onWindowActivate	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function onWindowActivate ():Void { }$/;"	f
onWindowActivate	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var onWindowActivate = new Event<Void->Void> ();$/;"	v
onWindowActivate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function onWindowActivate ():Void {$/;"	f
onWindowActivate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function onWindowActivate ():Void {$/;"	f
onWindowClose	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function onWindowClose ():Void {$/;"	f
onWindowClose	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function onWindowClose ():Void;$/;"	f
onWindowClose	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function onWindowClose ():Void { }$/;"	f
onWindowClose	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var onWindowClose = new Event<Void->Void> ();$/;"	v
onWindowClose	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function onWindowClose ():Void {$/;"	f
onWindowClose	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function onWindowClose ():Void {$/;"	f
onWindowDeactivate	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function onWindowDeactivate ():Void {$/;"	f
onWindowDeactivate	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function onWindowDeactivate ():Void;$/;"	f
onWindowDeactivate	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function onWindowDeactivate ():Void { }$/;"	f
onWindowDeactivate	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var onWindowDeactivate = new Event<Void->Void> ();$/;"	v
onWindowDeactivate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function onWindowDeactivate ():Void {$/;"	f
onWindowDeactivate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function onWindowDeactivate ():Void {$/;"	f
onWindowEnter	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function onWindowEnter ():Void {$/;"	f
onWindowEnter	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function onWindowEnter ():Void;$/;"	f
onWindowEnter	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function onWindowEnter ():Void { }$/;"	f
onWindowEnter	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var onWindowEnter = new Event<Void->Void> ();$/;"	v
onWindowEnter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function onWindowEnter ():Void {$/;"	f
onWindowEnter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function onWindowEnter ():Void {$/;"	f
onWindowFocusIn	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function onWindowFocusIn ():Void {$/;"	f
onWindowFocusIn	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function onWindowFocusIn ():Void;$/;"	f
onWindowFocusIn	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function onWindowFocusIn ():Void { }$/;"	f
onWindowFocusIn	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var onWindowFocusIn = new Event<Void->Void> ();$/;"	v
onWindowFocusIn	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function onWindowFocusIn ():Void {$/;"	f
onWindowFocusIn	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function onWindowFocusIn ():Void {$/;"	f
onWindowFocusOut	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function onWindowFocusOut ():Void {$/;"	f
onWindowFocusOut	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function onWindowFocusOut ():Void;$/;"	f
onWindowFocusOut	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function onWindowFocusOut ():Void { }$/;"	f
onWindowFocusOut	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var onWindowFocusOut = new Event<Void->Void> ();$/;"	v
onWindowFocusOut	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function onWindowFocusOut ():Void {$/;"	f
onWindowFocusOut	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function onWindowFocusOut ():Void {$/;"	f
onWindowFullscreen	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function onWindowFullscreen ():Void {$/;"	f
onWindowFullscreen	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function onWindowFullscreen ():Void;$/;"	f
onWindowFullscreen	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function onWindowFullscreen ():Void { }$/;"	f
onWindowFullscreen	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var onWindowFullscreen = new Event<Void->Void> ();$/;"	v
onWindowFullscreen	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function onWindowFullscreen ():Void {$/;"	f
onWindowFullscreen	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function onWindowFullscreen ():Void {$/;"	f
onWindowLeave	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function onWindowLeave ():Void {$/;"	f
onWindowLeave	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function onWindowLeave ():Void;$/;"	f
onWindowLeave	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function onWindowLeave ():Void { }$/;"	f
onWindowLeave	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var onWindowLeave = new Event<Void->Void> ();$/;"	v
onWindowLeave	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function onWindowLeave ():Void {$/;"	f
onWindowLeave	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function onWindowLeave ():Void {$/;"	f
onWindowMinimize	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function onWindowMinimize ():Void {$/;"	f
onWindowMinimize	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function onWindowMinimize ():Void;$/;"	f
onWindowMinimize	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function onWindowMinimize ():Void { }$/;"	f
onWindowMinimize	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var onWindowMinimize = new Event<Void->Void> ();$/;"	v
onWindowMinimize	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function onWindowMinimize ():Void {$/;"	f
onWindowMinimize	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function onWindowMinimize ():Void {$/;"	f
onWindowMove	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function onWindowMove (x:Float, y:Float):Void {$/;"	f
onWindowMove	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function onWindowMove (x:Float, y:Float):Void;$/;"	f
onWindowMove	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function onWindowMove (x:Float, y:Float):Void { }$/;"	f
onWindowMove	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var onWindowMove = new Event<Float->Float->Void> ();$/;"	v
onWindowMove	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function onWindowMove (x:Float, y:Float):Void {$/;"	f
onWindowMove	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function onWindowMove (x:Float, y:Float):Void {$/;"	f
onWindowResize	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function onWindowResize (width:Int, height:Int):Void {$/;"	f
onWindowResize	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function onWindowResize (width:Int, height:Int):Void;$/;"	f
onWindowResize	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function onWindowResize (width:Int, height:Int):Void { }$/;"	f
onWindowResize	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var onWindowResize = new Event<Int->Int->Void> ();$/;"	v
onWindowResize	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function onWindowResize (width:Int, height:Int):Void {$/;"	f
onWindowResize	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function onWindowResize (width:Int, height:Int):Void {$/;"	f
onWindowRestore	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function onWindowRestore ():Void {$/;"	f
onWindowRestore	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function onWindowRestore ():Void;$/;"	f
onWindowRestore	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function onWindowRestore ():Void { }$/;"	f
onWindowRestore	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var onWindowRestore = new Event<Void->Void> ();$/;"	v
onWindowRestore	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function onWindowRestore ():Void {$/;"	f
onWindowRestore	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function onWindowRestore ():Void {$/;"	f
onabort	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var onabort:Dynamic \/*EventListener*\/;$/;"	v
onbeforecopy	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var onbeforecopy:Dynamic \/*EventListener*\/;$/;"	v
onbeforecut	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var onbeforecut:Dynamic \/*EventListener*\/;$/;"	v
onbeforepaste	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var onbeforepaste:Dynamic \/*EventListener*\/;$/;"	v
onblur	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var onblur:Dynamic \/*EventListener*\/;$/;"	v
onchange	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var onchange:Dynamic \/*EventListener*\/;$/;"	v
onclick	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var onclick:Dynamic \/*EventListener*\/;$/;"	v
oncomplete	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/WebAudioContext.hx	/^	public var oncomplete:Dynamic \/*js.html.EventListener*\/;$/;"	v
oncontextmenu	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var oncontextmenu:Dynamic \/*EventListener*\/;$/;"	v
oncopy	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var oncopy:Dynamic \/*EventListener*\/;$/;"	v
oncut	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var oncut:Dynamic \/*EventListener*\/;$/;"	v
ondblclick	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var ondblclick:Dynamic \/*EventListener*\/;$/;"	v
ondrag	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var ondrag:Dynamic \/*EventListener*\/;$/;"	v
ondragend	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var ondragend:Dynamic \/*EventListener*\/;$/;"	v
ondragenter	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var ondragenter:Dynamic \/*EventListener*\/;$/;"	v
ondragleave	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var ondragleave:Dynamic \/*EventListener*\/;$/;"	v
ondragover	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var ondragover:Dynamic \/*EventListener*\/;$/;"	v
ondragstart	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var ondragstart:Dynamic \/*EventListener*\/;$/;"	v
ondrop	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var ondrop:Dynamic \/*EventListener*\/;$/;"	v
oneMinusSourceAlpha	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^				var oneMinusSourceAlpha:Float;$/;"	v
onerror	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var onerror:Dynamic \/*EventListener*\/;$/;"	v
onfocus	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var onfocus:Dynamic \/*EventListener*\/;$/;"	v
onfullscreenchange	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var onfullscreenchange:Dynamic \/*EventListener*\/;$/;"	v
onfullscreenerror	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var onfullscreenerror:Dynamic \/*EventListener*\/;$/;"	v
oninput	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var oninput:Dynamic \/*EventListener*\/;$/;"	v
oninvalid	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var oninvalid:Dynamic \/*EventListener*\/;$/;"	v
onkeydown	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var onkeydown:Dynamic \/*EventListener*\/;$/;"	v
onkeypress	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var onkeypress:Dynamic \/*EventListener*\/;$/;"	v
onkeyup	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var onkeyup:Dynamic \/*EventListener*\/;$/;"	v
onload	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var onload:Dynamic \/*EventListener*\/;$/;"	v
onmousedown	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var onmousedown:Dynamic \/*EventListener*\/;$/;"	v
onmousemove	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var onmousemove:Dynamic \/*EventListener*\/;$/;"	v
onmouseout	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var onmouseout:Dynamic \/*EventListener*\/;$/;"	v
onmouseover	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var onmouseover:Dynamic \/*EventListener*\/;$/;"	v
onmouseup	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var onmouseup:Dynamic \/*EventListener*\/;$/;"	v
onmousewheel	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var onmousewheel:Dynamic \/*EventListener*\/;$/;"	v
onpaste	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var onpaste:Dynamic \/*EventListener*\/;$/;"	v
onreadystatechange	/usr/lib/haxe/std/haxe/Http.hx	/^		var onreadystatechange = function(_) {$/;"	v
onreset	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var onreset:Dynamic \/*EventListener*\/;$/;"	v
onscroll	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var onscroll:Dynamic \/*EventListener*\/;$/;"	v
onsearch	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var onsearch:Dynamic \/*EventListener*\/;$/;"	v
onselect	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var onselect:Dynamic \/*EventListener*\/;$/;"	v
onselectstart	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var onselectstart:Dynamic \/*EventListener*\/;$/;"	v
onsubmit	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var onsubmit:Dynamic \/*EventListener*\/;$/;"	v
ontouchcancel	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var ontouchcancel:Dynamic \/*EventListener*\/;$/;"	v
ontouchend	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var ontouchend:Dynamic \/*EventListener*\/;$/;"	v
ontouchmove	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var ontouchmove:Dynamic \/*EventListener*\/;$/;"	v
ontouchstart	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var ontouchstart:Dynamic \/*EventListener*\/;$/;"	v
op	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^				var op:Opcode = OpcodeMap.map.get (tokens[0]);$/;"	v
opaqueBackground	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var opaqueBackground:Null<UInt>;$/;"	v
opaqueBackground	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public var opaqueBackground (get, set):Null <Int>;$/;"	v
opaqueBackground	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	public var opaqueBackground:Null <Int>;$/;"	v
opcode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Token.hx	/^	public var opcode:Int;$/;"	v
opcode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Opcode.hx	/^	public var opcode:Int;$/;"	v
open	/usr/lib/haxe/std/sys/db/Sqlite.hx	/^	public static function open( file : String ) : Connection {$/;"	f
openDevice	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public function openDevice (deviceName:String = null):ALDevice {$/;"	f
openDevice	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static function openDevice (deviceName:String = null):ALDevice {$/;"	f
openFLDirectory	/usr/lib/haxe/lib/openfl/3,0,8/script/RunScript.hx	/^		var openFLDirectory = PathHelper.getHaxelib (new Haxelib ("openfl"), true);$/;"	v
openFile	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ProcessHelper.hx	/^	public static function openFile (workingDirectory:String, targetPath:String, executable:String = ""):Void {$/;"	f
openGLView	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/OpenGLViewTest.hx	/^		var openGLView = new OpenGLView ();$/;"	v
openURL	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ProcessHelper.hx	/^	public static function openURL (url:String):Void {$/;"	f
openURL	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static function openURL (url:String):Void {$/;"	f
openfl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^package openfl; #if (!openfl_legacy || (openfl_legacy && lime_hybrid))$/;"	p
openfl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Lib.hx	/^package openfl; #if !openfl_legacy$/;"	p
openfl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Memory.hx	/^package openfl; #if !flash #if !openfl_legacy$/;"	p
openfl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^package openfl; #if !flash$/;"	p
openfl	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/AssetsTest.hx	/^package openfl;$/;"	p
openfl	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/LibTest.hx	/^package openfl;$/;"	p
openfl	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/MemoryTest.hx	/^package openfl;$/;"	p
openfl	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/VectorTest.hx	/^package openfl;$/;"	p
openfl._internal.aglsl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGALTokenizer.hx	/^package openfl._internal.aglsl;$/;"	p
openfl._internal.aglsl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLCompiler.hx	/^package openfl._internal.aglsl; $/;"	p
openfl._internal.aglsl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLParser.hx	/^package openfl._internal.aglsl;$/;"	p
openfl._internal.aglsl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Context3D.hx	/^package openfl._internal.aglsl;$/;"	p
openfl._internal.aglsl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Description.hx	/^package openfl._internal.aglsl;$/;"	p
openfl._internal.aglsl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Destination.hx	/^package openfl._internal.aglsl;$/;"	p
openfl._internal.aglsl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Header.hx	/^package openfl._internal.aglsl;$/;"	p
openfl._internal.aglsl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Mapping.hx	/^package openfl._internal.aglsl;$/;"	p
openfl._internal.aglsl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/OpLUT.hx	/^package openfl._internal.aglsl;$/;"	p
openfl._internal.aglsl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Sampler.hx	/^package openfl._internal.aglsl;$/;"	p
openfl._internal.aglsl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Token.hx	/^package openfl._internal.aglsl;$/;"	p
openfl._internal.aglsl.assembler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/FS.hx	/^package openfl._internal.aglsl.assembler;$/;"	p
openfl._internal.aglsl.assembler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Flags.hx	/^package openfl._internal.aglsl.assembler;$/;"	p
openfl._internal.aglsl.assembler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Opcode.hx	/^package openfl._internal.aglsl.assembler;$/;"	p
openfl._internal.aglsl.assembler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/OpcodeMap.hx	/^package openfl._internal.aglsl.assembler;$/;"	p
openfl._internal.aglsl.assembler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Part.hx	/^package openfl._internal.aglsl.assembler;$/;"	p
openfl._internal.aglsl.assembler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Reg.hx	/^package openfl._internal.aglsl.assembler;$/;"	p
openfl._internal.aglsl.assembler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/RegMap.hx	/^package openfl._internal.aglsl.assembler;$/;"	p
openfl._internal.aglsl.assembler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Sampler.hx	/^package openfl._internal.aglsl.assembler;$/;"	p
openfl._internal.aglsl.assembler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/SamplerMap.hx	/^package openfl._internal.aglsl.assembler;$/;"	p
openfl._internal.renderer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/AbstractMaskManager.hx	/^package openfl._internal.renderer;$/;"	p
openfl._internal.renderer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/AbstractRenderer.hx	/^package openfl._internal.renderer;$/;"	p
openfl._internal.renderer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/RenderSession.hx	/^package openfl._internal.renderer; #if !flash$/;"	p
openfl._internal.renderer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^package openfl._internal.renderer;$/;"	p
openfl._internal.renderer.cairo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoBitmap.hx	/^package openfl._internal.renderer.cairo;$/;"	p
openfl._internal.renderer.cairo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^package openfl._internal.renderer.cairo;$/;"	p
openfl._internal.renderer.cairo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoMaskManager.hx	/^package openfl._internal.renderer.cairo;$/;"	p
openfl._internal.renderer.cairo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoRenderer.hx	/^package openfl._internal.renderer.cairo;$/;"	p
openfl._internal.renderer.cairo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoShape.hx	/^package openfl._internal.renderer.cairo;$/;"	p
openfl._internal.renderer.cairo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^package openfl._internal.renderer.cairo;$/;"	p
openfl._internal.renderer.canvas	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasBitmap.hx	/^package openfl._internal.renderer.canvas;$/;"	p
openfl._internal.renderer.canvas	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^package openfl._internal.renderer.canvas;$/;"	p
openfl._internal.renderer.canvas	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasMaskManager.hx	/^package openfl._internal.renderer.canvas;$/;"	p
openfl._internal.renderer.canvas	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasRenderer.hx	/^package openfl._internal.renderer.canvas;$/;"	p
openfl._internal.renderer.canvas	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasShape.hx	/^package openfl._internal.renderer.canvas;$/;"	p
openfl._internal.renderer.canvas	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^package openfl._internal.renderer.canvas;$/;"	p
openfl._internal.renderer.dom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMBitmap.hx	/^package openfl._internal.renderer.dom;$/;"	p
openfl._internal.renderer.dom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMRenderer.hx	/^package openfl._internal.renderer.dom;$/;"	p
openfl._internal.renderer.dom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMShape.hx	/^package openfl._internal.renderer.dom;$/;"	p
openfl._internal.renderer.dom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMTextField.hx	/^package openfl._internal.renderer.dom;$/;"	p
openfl._internal.renderer.opengl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLBitmap.hx	/^package openfl._internal.renderer.opengl;$/;"	p
openfl._internal.renderer.opengl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^package openfl._internal.renderer.opengl;$/;"	p
openfl._internal.renderer.opengl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLTextField.hx	/^package openfl._internal.renderer.opengl;$/;"	p
openfl._internal.renderer.opengl.shaders	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/AbstractShader.hx	/^package openfl._internal.renderer.opengl.shaders;$/;"	p
openfl._internal.renderer.opengl.shaders	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/ComplexPrimitiveShader.hx	/^package openfl._internal.renderer.opengl.shaders;$/;"	p
openfl._internal.renderer.opengl.shaders	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DefaultShader.hx	/^package openfl._internal.renderer.opengl.shaders;$/;"	p
openfl._internal.renderer.opengl.shaders	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DrawTrianglesShader.hx	/^package openfl._internal.renderer.opengl.shaders;$/;"	p
openfl._internal.renderer.opengl.shaders	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/FastShader.hx	/^package openfl._internal.renderer.opengl.shaders;$/;"	p
openfl._internal.renderer.opengl.shaders	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/FillShader.hx	/^package openfl._internal.renderer.opengl.shaders;$/;"	p
openfl._internal.renderer.opengl.shaders	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/PatternFillShader.hx	/^package openfl._internal.renderer.opengl.shaders;$/;"	p
openfl._internal.renderer.opengl.shaders	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/PrimitiveShader.hx	/^package openfl._internal.renderer.opengl.shaders;$/;"	p
openfl._internal.renderer.opengl.shaders	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/StripShader.hx	/^package openfl._internal.renderer.opengl.shaders;$/;"	p
openfl._internal.renderer.opengl.shaders2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/DefaultShader.hx	/^package openfl._internal.renderer.opengl.shaders2;$/;"	p
openfl._internal.renderer.opengl.shaders2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/DrawTrianglesShader.hx	/^package openfl._internal.renderer.opengl.shaders2;$/;"	p
openfl._internal.renderer.opengl.shaders2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/FillShader.hx	/^package openfl._internal.renderer.opengl.shaders2;$/;"	p
openfl._internal.renderer.opengl.shaders2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/PatternFillShader.hx	/^package openfl._internal.renderer.opengl.shaders2;$/;"	p
openfl._internal.renderer.opengl.shaders2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/PrimitiveShader.hx	/^package openfl._internal.renderer.opengl.shaders2;$/;"	p
openfl._internal.renderer.opengl.shaders2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/Shader.hx	/^package openfl._internal.renderer.opengl.shaders2;$/;"	p
openfl._internal.renderer.opengl.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/BlendModeManager.hx	/^package openfl._internal.renderer.opengl.utils;$/;"	p
openfl._internal.renderer.opengl.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^package openfl._internal.renderer.opengl.utils;$/;"	p
openfl._internal.renderer.opengl.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^package openfl._internal.renderer.opengl.utils;$/;"	p
openfl._internal.renderer.opengl.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterTexture.hx	/^package openfl._internal.renderer.opengl.utils ;$/;"	p
openfl._internal.renderer.opengl.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GLMaskManager.hx	/^package openfl._internal.renderer.opengl.utils;$/;"	p
openfl._internal.renderer.opengl.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^package openfl._internal.renderer.opengl.utils;$/;"	p
openfl._internal.renderer.opengl.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/ShaderManager.hx	/^package openfl._internal.renderer.opengl.utils;$/;"	p
openfl._internal.renderer.opengl.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^package openfl._internal.renderer.opengl.utils;$/;"	p
openfl._internal.renderer.opengl.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^package openfl._internal.renderer.opengl.utils;$/;"	p
openfl._internal.renderer.opengl.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexArray.hx	/^package openfl._internal.renderer.opengl.utils;$/;"	p
openfl._internal.renderer.opengl.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexAttribute.hx	/^package openfl._internal.renderer.opengl.utils;$/;"	p
openfl._legacy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^package openfl._legacy; #if openfl_legacy$/;"	p
openfl._legacy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^package openfl._legacy; #if openfl_legacy$/;"	p
openfl._legacy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Memory.hx	/^package openfl._legacy; #if openfl_legacy$/;"	p
openfl._legacy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Vector.hx	/^package openfl._legacy; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Bitmap.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BlendMode.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/CapsStyle.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DirectRenderer.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Graphics.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsBitmapFill.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsEndFill.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsGradientFill.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsPath.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsSolidFill.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsStroke.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^package openfl._legacy.display; #if (openfl_legacy && lime_hybrid)$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/IBitmapDrawable.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/IGraphicsData.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/IGraphicsFill.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/InteractiveObject.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/JointStyle.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/LineScaleMode.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Loader.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/LoaderInfo.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/MovieClip.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/OpenGLView.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3D.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Shape.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/SimpleButton.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/SpreadMethod.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Sprite.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/StageQuality.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Tilesheet.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/TriangleCulling.hx	/^package openfl._legacy.display; #if openfl_legacy$/;"	p
openfl._legacy.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^package openfl._legacy.events; #if openfl_legacy$/;"	p
openfl._legacy.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/EventDispatcher.hx	/^package openfl._legacy.events; #if openfl_legacy$/;"	p
openfl._legacy.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/HTTPStatusEvent.hx	/^package openfl._legacy.events; #if openfl_legacy$/;"	p
openfl._legacy.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/IEventDispatcher.hx	/^package openfl._legacy.events; #if openfl_legacy$/;"	p
openfl._legacy.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/KeyboardEvent.hx	/^package openfl._legacy.events; #if openfl_legacy$/;"	p
openfl._legacy.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^package openfl._legacy.events; #if openfl_legacy$/;"	p
openfl._legacy.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/SystemEvent.hx	/^package openfl._legacy.events; #if openfl_legacy$/;"	p
openfl._legacy.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/TouchEvent.hx	/^package openfl._legacy.events; #if openfl_legacy$/;"	p
openfl._legacy.external	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/external/ExternalInterface.hx	/^package openfl._legacy.external; #if openfl_legacy$/;"	p
openfl._legacy.feedback	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/feedback/Haptic.hx	/^package openfl._legacy.feedback; #if openfl_legacy$/;"	p
openfl._legacy.filesystem	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/File.hx	/^package openfl._legacy.filesystem; #if openfl_legacy$/;"	p
openfl._legacy.filesystem	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/StorageVolume.hx	/^package openfl._legacy.filesystem; #if openfl_legacy$/;"	p
openfl._legacy.filesystem	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/StorageVolumeInfo.hx	/^package openfl._legacy.filesystem; #if openfl_legacy$/;"	p
openfl._legacy.filters	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/BitmapFilter.hx	/^package openfl._legacy.filters; #if openfl_legacy$/;"	p
openfl._legacy.filters	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/BlurFilter.hx	/^package openfl._legacy.filters; #if openfl_legacy$/;"	p
openfl._legacy.filters	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/ColorMatrixFilter.hx	/^package openfl._legacy.filters; #if openfl_legacy$/;"	p
openfl._legacy.filters	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/DropShadowFilter.hx	/^package openfl._legacy.filters; #if openfl_legacy$/;"	p
openfl._legacy.filters	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/GlowFilter.hx	/^package openfl._legacy.filters; #if openfl_legacy$/;"	p
openfl._legacy.geom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/ColorTransform.hx	/^package openfl._legacy.geom; #if openfl_legacy$/;"	p
openfl._legacy.geom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^package openfl._legacy.geom; #if openfl_legacy$/;"	p
openfl._legacy.geom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Point.hx	/^package openfl._legacy.geom; #if openfl_legacy$/;"	p
openfl._legacy.geom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^package openfl._legacy.geom; #if openfl_legacy$/;"	p
openfl._legacy.geom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Transform.hx	/^package openfl._legacy.geom; #if openfl_legacy$/;"	p
openfl._legacy.gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^package openfl._legacy.gl; #if openfl_legacy$/;"	p
openfl._legacy.gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLActiveInfo.hx	/^package openfl._legacy.gl; #if openfl_legacy$/;"	p
openfl._legacy.gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLBuffer.hx	/^package openfl._legacy.gl; #if openfl_legacy$/;"	p
openfl._legacy.gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLContextAttributes.hx	/^package openfl._legacy.gl; #if openfl_legacy$/;"	p
openfl._legacy.gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLFramebuffer.hx	/^package openfl._legacy.gl; #if openfl_legacy$/;"	p
openfl._legacy.gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLObject.hx	/^package openfl._legacy.gl; #if openfl_legacy$/;"	p
openfl._legacy.gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLProgram.hx	/^package openfl._legacy.gl; #if openfl_legacy$/;"	p
openfl._legacy.gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLRenderbuffer.hx	/^package openfl._legacy.gl; #if openfl_legacy$/;"	p
openfl._legacy.gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLShader.hx	/^package openfl._legacy.gl; #if openfl_legacy$/;"	p
openfl._legacy.gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLTexture.hx	/^package openfl._legacy.gl; #if openfl_legacy$/;"	p
openfl._legacy.gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLUniformLocation.hx	/^package openfl._legacy.gl; #if openfl_legacy$/;"	p
openfl._legacy.media	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^package openfl._legacy.media; #if (openfl_legacy && !disable_legacy_audio)$/;"	p
openfl._legacy.media	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^package openfl._legacy.media; #if (openfl_legacy && !disable_legacy_audio)$/;"	p
openfl._legacy.net	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^package openfl._legacy.net; #if openfl_legacy$/;"	p
openfl._legacy.net	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^package openfl._legacy.net; #if (openfl_legacy && !disable_legacy_networking)$/;"	p
openfl._legacy.net	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequest.hx	/^package openfl._legacy.net; #if (openfl_legacy && !disable_legacy_networking)$/;"	p
openfl._legacy.net	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequestMethod.hx	/^package openfl._legacy.net; #if (openfl_legacy && !disable_legacy_networking)$/;"	p
openfl._legacy.net	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/XMLSocket.hx	/^package openfl._legacy.net; #if (openfl_legacy && !disable_legacy_networking)$/;"	p
openfl._legacy.sensors	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/sensors/Accelerometer.hx	/^package openfl._legacy.sensors; #if openfl_legacy$/;"	p
openfl._legacy.system	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^package openfl._legacy.system; #if openfl_legacy$/;"	p
openfl._legacy.system	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/PixelFormat.hx	/^package openfl._legacy.system; #if openfl_legacy$/;"	p
openfl._legacy.system	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/ScreenMode.hx	/^package openfl._legacy.system; #if openfl_legacy$/;"	p
openfl._legacy.system	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/System.hx	/^package openfl._legacy.system; #if openfl_legacy$/;"	p
openfl._legacy.text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/AbstractFont.hx	/^package openfl._legacy.text; #if openfl_legacy$/;"	p
openfl._legacy.text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^package openfl._legacy.text; #if openfl_legacy$/;"	p
openfl._legacy.text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/FontStyle.hx	/^package openfl._legacy.text; #if openfl_legacy$/;"	p
openfl._legacy.text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/FontType.hx	/^package openfl._legacy.text; #if openfl_legacy$/;"	p
openfl._legacy.text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^package openfl._legacy.text; #if openfl_legacy$/;"	p
openfl._legacy.text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextFormat.hx	/^package openfl._legacy.text; #if openfl_legacy$/;"	p
openfl._legacy.text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextFormatAlign.hx	/^package openfl._legacy.text; #if openfl_legacy$/;"	p
openfl._legacy.text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextLineMetrics.hx	/^package openfl._legacy.text; #if openfl_legacy$/;"	p
openfl._legacy.ui	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Acceleration.hx	/^package openfl._legacy.ui; #if openfl_legacy$/;"	p
openfl._legacy.ui	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Accelerometer.hx	/^package openfl._legacy.ui; #if openfl_legacy$/;"	p
openfl._legacy.ui	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Keyboard.hx	/^package openfl._legacy.ui; #if (openfl_legacy && !lime_hybrid)$/;"	p
openfl._legacy.ui	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Mouse.hx	/^package openfl._legacy.ui; #if (openfl_legacy && !lime_hybrid)$/;"	p
openfl._legacy.ui	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Multitouch.hx	/^package openfl._legacy.ui; #if openfl_legacy$/;"	p
openfl._legacy.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ArrayBuffer.hx	/^package openfl._legacy.utils; #if openfl_legacy$/;"	p
openfl._legacy.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ArrayBufferView.hx	/^package openfl._legacy.utils; #if openfl_legacy$/;"	p
openfl._legacy.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^package openfl._legacy.utils; #if (openfl_legacy && !lime_hybrid)$/;"	p
openfl._legacy.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/CompressionAlgorithm.hx	/^package openfl._legacy.utils; #if openfl_legacy$/;"	p
openfl._legacy.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Float32Array.hx	/^package openfl._legacy.utils; #if openfl_legacy$/;"	p
openfl._legacy.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IDataInput.hx	/^package openfl._legacy.utils; #if openfl_legacy$/;"	p
openfl._legacy.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IDataOutput.hx	/^package openfl._legacy.utils; #if openfl_legacy$/;"	p
openfl._legacy.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IMemoryRange.hx	/^package openfl._legacy.utils; #if openfl_legacy$/;"	p
openfl._legacy.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Int16Array.hx	/^package openfl._legacy.utils; #if openfl_legacy$/;"	p
openfl._legacy.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Int32Array.hx	/^package openfl._legacy.utils; #if openfl_legacy$/;"	p
openfl._legacy.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^package openfl._legacy.utils; #if openfl_legacy$/;"	p
openfl._legacy.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/SystemPath.hx	/^package openfl._legacy.utils; #if openfl_legacy$/;"	p
openfl._legacy.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Timer.hx	/^package openfl._legacy.utils; #if openfl_legacy$/;"	p
openfl._legacy.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/UInt8Array.hx	/^package openfl._legacy.utils; #if openfl_legacy$/;"	p
openfl._legacy.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/WeakRef.hx	/^package openfl._legacy.utils; #if openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Bitmap.hx	/^package openfl.display; #if !flash #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^package openfl.display; #if !flash #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapDataChannel.hx	/^package openfl.display; #if !flash$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BlendMode.hx	/^package openfl.display; #if !flash #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/CapsStyle.hx	/^package openfl.display; #if !flash #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DOMSprite.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DirectRenderer.hx	/^package openfl.display; #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^package openfl.display; #if !flash #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^package openfl.display; #if !flash #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/FPS.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/FrameLabel.hx	/^package openfl.display; #if !flash$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GradientType.hx	/^package openfl.display; #if !flash$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^package openfl.display; #if !flash #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsBitmapFill.hx	/^package openfl.display; #if !flash #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsEndFill.hx	/^package openfl.display; #if !flash #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsGradientFill.hx	/^package openfl.display; #if !flash #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsPath.hx	/^package openfl.display; #if !flash #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsPathCommand.hx	/^package openfl.display; #if !flash$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsPathWinding.hx	/^package openfl.display; #if !flash$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsSolidFill.hx	/^package openfl.display; #if !flash #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsStroke.hx	/^package openfl.display; #if !flash #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/IBitmapDrawable.hx	/^package openfl.display; #if !flash #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/IGraphicsData.hx	/^package openfl.display; #if !flash #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/IGraphicsFill.hx	/^package openfl.display; #if !flash #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/IGraphicsPath.hx	/^package openfl.display; #if !flash$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/IGraphicsStroke.hx	/^package openfl.display; #if !flash$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/InteractiveObject.hx	/^package openfl.display; #if !flash #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/InterpolationMethod.hx	/^package openfl.display; #if !flash$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/JPEGEncoderOptions.hx	/^package openfl.display; #if !flash$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/JointStyle.hx	/^package openfl.display; #if !flash #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/LineScaleMode.hx	/^package openfl.display; #if !flash #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Loader.hx	/^package openfl.display; #if !flash #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/LoaderInfo.hx	/^package openfl.display; #if !flash #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/ManagedStage.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/MovieClip.hx	/^package openfl.display; #if !flash #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/OpenGLView.hx	/^package openfl.display; #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/PNGEncoderOptions.hx	/^package openfl.display; #if !flash$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/PixelSnapping.hx	/^package openfl.display; #if !flash$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Preloader.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/S3D.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/S3DView.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Shape.hx	/^package openfl.display; #if !flash #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/SimpleButton.hx	/^package openfl.display; #if !flash #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/SpreadMethod.hx	/^package openfl.display; #if !flash #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Sprite.hx	/^package openfl.display; #if !flash #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^package openfl.display; #if !flash #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage3D.hx	/^package openfl.display; #if !flash$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/StageAlign.hx	/^package openfl.display; #if !flash$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/StageDisplayState.hx	/^package openfl.display; #if !flash$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/StageQuality.hx	/^package openfl.display; #if !flash #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/StageScaleMode.hx	/^package openfl.display; #if !flash$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Tilesheet.hx	/^package openfl.display; #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/TriangleCulling.hx	/^package openfl.display; #if !flash #if !openfl_legacy$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataChannelTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BlendModeTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/CapsStyleTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DirectRendererTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectContainerTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/FPSTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GradientTypeTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsBitmapFillTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsEndFillTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsGradientFillTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsPathCommandTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsPathTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsPathWindingTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsSolidFillTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsStrokeTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/InteractiveObjectTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/InterpolationMethodTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/JointStyleTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/LineScaleModeTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/LoaderInfoTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/LoaderTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/MovieClipTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/OpenGLViewTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/PixelSnappingTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/ShapeTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/SimpleButtonTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/SpreadMethodTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/SpriteTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/StageAlignTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/StageDisplayStateTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/StageQualityTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/StageScaleModeTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/StageTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/TilesheetTest.hx	/^package openfl.display;$/;"	p
openfl.display	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/TriangleCullingTest.hx	/^package openfl.display;$/;"	p
openfl.display3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^package openfl.display3D; #if !flash$/;"	p
openfl.display3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DBlendFactor.hx	/^package openfl.display3D; #if !flash$/;"	p
openfl.display3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DClearMask.hx	/^package openfl.display3D; #if !flash$/;"	p
openfl.display3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DCompareMode.hx	/^package openfl.display3D; #if !flash$/;"	p
openfl.display3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DMipFilter.hx	/^package openfl.display3D; #if !flash$/;"	p
openfl.display3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DProfile.hx	/^package openfl.display3D; #if !flash$/;"	p
openfl.display3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DProgramType.hx	/^package openfl.display3D; #if !flash$/;"	p
openfl.display3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DRenderMode.hx	/^package openfl.display3D; #if !flash$/;"	p
openfl.display3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DStencilAction.hx	/^package openfl.display3D; #if !flash$/;"	p
openfl.display3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DTextureFilter.hx	/^package openfl.display3D; #if !flash$/;"	p
openfl.display3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DTextureFormat.hx	/^package openfl.display3D; #if !flash$/;"	p
openfl.display3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DTriangleFace.hx	/^package openfl.display3D; #if !flash$/;"	p
openfl.display3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DVertexBufferFormat.hx	/^package openfl.display3D; #if !flash$/;"	p
openfl.display3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DWrapMode.hx	/^package openfl.display3D; #if !flash$/;"	p
openfl.display3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/IndexBuffer3D.hx	/^package openfl.display3D; #if !flash$/;"	p
openfl.display3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Program3D.hx	/^package openfl.display3D; #if !flash$/;"	p
openfl.display3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/VertexBuffer3D.hx	/^package openfl.display3D; #if !flash$/;"	p
openfl.display3D._shaders	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/_shaders/AGLSLShaderUtils.hx	/^package openfl.display3D._shaders;$/;"	p
openfl.display3D._shaders	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/_shaders/Shader.hx	/^package openfl.display3D._shaders;$/;"	p
openfl.display3D.textures	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/CubeTexture.hx	/^package openfl.display3D.textures; #if !flash$/;"	p
openfl.display3D.textures	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/RectangleTexture.hx	/^package openfl.display3D.textures; #if !flash$/;"	p
openfl.display3D.textures	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/Texture.hx	/^package openfl.display3D.textures; #if !flash$/;"	p
openfl.display3D.textures	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/TextureBase.hx	/^package openfl.display3D.textures; #if !flash$/;"	p
openfl.errors	/usr/lib/haxe/lib/openfl/3,0,8/openfl/errors/ArgumentError.hx	/^package openfl.errors; #if !flash$/;"	p
openfl.errors	/usr/lib/haxe/lib/openfl/3,0,8/openfl/errors/EOFError.hx	/^package openfl.errors; #if !flash$/;"	p
openfl.errors	/usr/lib/haxe/lib/openfl/3,0,8/openfl/errors/Error.hx	/^package openfl.errors; #if !flash$/;"	p
openfl.errors	/usr/lib/haxe/lib/openfl/3,0,8/openfl/errors/IOError.hx	/^package openfl.errors; #if !flash$/;"	p
openfl.errors	/usr/lib/haxe/lib/openfl/3,0,8/openfl/errors/IllegalOperationError.hx	/^package openfl.errors; #if !flash$/;"	p
openfl.errors	/usr/lib/haxe/lib/openfl/3,0,8/openfl/errors/RangeError.hx	/^package openfl.errors; #if !flash$/;"	p
openfl.errors	/usr/lib/haxe/lib/openfl/3,0,8/openfl/errors/SecurityError.hx	/^package openfl.errors; #if !flash$/;"	p
openfl.errors	/usr/lib/haxe/lib/openfl/3,0,8/openfl/errors/TypeError.hx	/^package openfl.errors; #if !flash$/;"	p
openfl.errors	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/ArgumentErrorTest.hx	/^package openfl.errors;$/;"	p
openfl.errors	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/EOFErrorTest.hx	/^package openfl.errors;$/;"	p
openfl.errors	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/ErrorTest.hx	/^package openfl.errors;$/;"	p
openfl.errors	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/IllegalOperationErrorTest.hx	/^package openfl.errors;$/;"	p
openfl.errors	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/RangeErrorTest.hx	/^package openfl.errors;$/;"	p
openfl.errors	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/SecurityErrorTest.hx	/^package openfl.errors;$/;"	p
openfl.errors	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/TypeErrorTest.hx	/^package openfl.errors;$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/AccelerometerEvent.hx	/^package openfl.events; #if !flash$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/AsyncErrorEvent.hx	/^package openfl.events; #if !flash$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/ContextMenuEvent.hx	/^package openfl.events; #if !flash$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/DataEvent.hx	/^package openfl.events; #if !flash$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/ErrorEvent.hx	/^package openfl.events; #if !flash$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^package openfl.events; #if !flash #if !openfl_legacy$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/EventDispatcher.hx	/^package openfl.events; #if !flash #if !openfl_legacy$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/EventPhase.hx	/^package openfl.events; #if !flash$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/FocusEvent.hx	/^package openfl.events; #if !flash$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/GameInputEvent.hx	/^package openfl.events; #if !flash$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/HTTPStatusEvent.hx	/^package openfl.events; #if !flash #if !openfl_legacy$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/IEventDispatcher.hx	/^package openfl.events; #if !flash #if !openfl_legacy$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/IOErrorEvent.hx	/^package openfl.events; #if !flash$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/JoystickEvent.hx	/^package openfl.events;$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/KeyboardEvent.hx	/^package openfl.events; #if !flash #if !openfl_legacy$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^package openfl.events; #if !flash #if !openfl_legacy$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/NetStatusEvent.hx	/^package openfl.events; #if !flash$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/ProgressEvent.hx	/^package openfl.events; #if !flash$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/SampleDataEvent.hx	/^package openfl.events; #if !flash$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/SecurityErrorEvent.hx	/^package openfl.events; #if !flash$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/SystemEvent.hx	/^package openfl.events;$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TextEvent.hx	/^package openfl.events; #if !flash$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TimerEvent.hx	/^package openfl.events; #if !flash$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TouchEvent.hx	/^package openfl.events; #if !flash #if !openfl_legacy$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/UncaughtErrorEvent.hx	/^package openfl.events; #if !flash$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/UncaughtErrorEvents.hx	/^package openfl.events; #if !flash$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/AccelerometerEventTest.hx	/^package openfl.events;$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/ErrorEventTest.hx	/^package openfl.events;$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventDispatcherTest.hx	/^package openfl.events;$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventPhaseTest.hx	/^package openfl.events;$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventTest.hx	/^package openfl.events;$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/FocusEventTest.hx	/^package openfl.events;$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/HTTPStatusEventTest.hx	/^package openfl.events;$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/IOErrorEventTest.hx	/^package openfl.events;$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/JoystickEventTest.hx	/^package openfl.events;$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/KeyboardEventTest.hx	/^package openfl.events;$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/MouseEventTest.hx	/^package openfl.events;$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/ProgressEventTest.hx	/^package openfl.events;$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/SampleDataEventTest.hx	/^package openfl.events;$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/SecurityErrorEventTest.hx	/^package openfl.events;$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/SystemEventTest.hx	/^package openfl.events;$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/TextEventTest.hx	/^package openfl.events;$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/TimerEventTest.hx	/^package openfl.events;$/;"	p
openfl.events	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/TouchEventTest.hx	/^package openfl.events;$/;"	p
openfl.external	/usr/lib/haxe/lib/openfl/3,0,8/openfl/external/ExternalInterface.hx	/^package openfl.external; #if !flash #if !openfl_legacy$/;"	p
openfl.external	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/external/ExternalInterfaceTest.hx	/^package openfl.external;$/;"	p
openfl.feedback	/usr/lib/haxe/lib/openfl/3,0,8/openfl/feedback/Haptic.hx	/^package openfl.feedback;$/;"	p
openfl.filesystem	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filesystem/File.hx	/^package openfl.filesystem;$/;"	p
openfl.filesystem	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filesystem/StorageVolume.hx	/^package openfl.filesystem;$/;"	p
openfl.filesystem	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filesystem/StorageVolumeInfo.hx	/^package openfl.filesystem;$/;"	p
openfl.filters	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/BitmapFilter.hx	/^package openfl.filters; #if !flash #if !openfl_legacy$/;"	p
openfl.filters	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/BitmapFilterQuality.hx	/^package openfl.filters; #if !flash$/;"	p
openfl.filters	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/BitmapFilterType.hx	/^package openfl.filters; #if !flash$/;"	p
openfl.filters	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/BlurFilter.hx	/^package openfl.filters; #if !flash #if !openfl_legacy$/;"	p
openfl.filters	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/ColorMatrixFilter.hx	/^package openfl.filters; #if !flash #if !openfl_legacy$/;"	p
openfl.filters	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/DropShadowFilter.hx	/^package openfl.filters; #if !flash #if !openfl_legacy$/;"	p
openfl.filters	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/GlowFilter.hx	/^package openfl.filters; #if !flash #if !openfl_legacy$/;"	p
openfl.filters	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/BitmapFilterQuality.hx	/^package openfl.filters;$/;"	p
openfl.filters	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/BitmapFilterTest.hx	/^package openfl.filters;$/;"	p
openfl.filters	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/BitmapFilterTypeTest.hx	/^package openfl.filters;$/;"	p
openfl.filters	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/BlurFilterTest.hx	/^package openfl.filters;$/;"	p
openfl.filters	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/ColorMatrixFilterTest.hx	/^package openfl.filters;$/;"	p
openfl.filters	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/DropShadowFilterTest.hx	/^package openfl.filters;$/;"	p
openfl.filters	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/filters/GlowFilterTest.hx	/^package openfl.filters;$/;"	p
openfl.geom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/ColorTransform.hx	/^package openfl.geom; #if !flash #if !openfl_legacy$/;"	p
openfl.geom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^package openfl.geom; #if !flash #if !openfl_legacy$/;"	p
openfl.geom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^package openfl.geom; #if !flash$/;"	p
openfl.geom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Orientation3D.hx	/^package openfl.geom; #if !flash$/;"	p
openfl.geom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/PerspectiveProjection.hx	/^package openfl.geom; #if !flash$/;"	p
openfl.geom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Point.hx	/^package openfl.geom; #if !flash #if !openfl_legacy$/;"	p
openfl.geom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^package openfl.geom; #if !flash #if !openfl_legacy$/;"	p
openfl.geom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Transform.hx	/^package openfl.geom; #if !flash #if !openfl_legacy$/;"	p
openfl.geom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Utils3D.hx	/^package openfl.geom; #if !flash$/;"	p
openfl.geom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^package openfl.geom; #if !flash$/;"	p
openfl.geom	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/ColorTransformTest.hx	/^package openfl.geom;$/;"	p
openfl.geom	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^package openfl.geom;$/;"	p
openfl.geom	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/MatrixTest.hx	/^package openfl.geom;$/;"	p
openfl.geom	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Orientation3DTest.hx	/^package openfl.geom;$/;"	p
openfl.geom	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/PointTest.hx	/^package openfl.geom;$/;"	p
openfl.geom	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/RectangleTest.hx	/^package openfl.geom;$/;"	p
openfl.geom	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/TransformTest.hx	/^package openfl.geom;$/;"	p
openfl.geom	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Vector3DTest.hx	/^package openfl.geom;$/;"	p
openfl.gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/gl/GL.hx	/^package openfl.gl;$/;"	p
openfl.gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/gl/GLActiveInfo.hx	/^package openfl.gl;$/;"	p
openfl.gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/gl/GLBuffer.hx	/^package openfl.gl;$/;"	p
openfl.gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/gl/GLContextAttributes.hx	/^package openfl.gl;$/;"	p
openfl.gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/gl/GLFramebuffer.hx	/^package openfl.gl;$/;"	p
openfl.gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/gl/GLObject.hx	/^package openfl.gl;$/;"	p
openfl.gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/gl/GLProgram.hx	/^package openfl.gl;$/;"	p
openfl.gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/gl/GLRenderbuffer.hx	/^package openfl.gl;$/;"	p
openfl.gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/gl/GLShader.hx	/^package openfl.gl;$/;"	p
openfl.gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/gl/GLShaderPrecisionFormat.hx	/^package openfl.gl;$/;"	p
openfl.gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/gl/GLTexture.hx	/^package openfl.gl;$/;"	p
openfl.gl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/gl/GLUniformLocation.hx	/^package openfl.gl;$/;"	p
openfl.gl	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLActiveInfoTest.hx	/^package openfl.gl;$/;"	p
openfl.gl	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLBufferTest.hx	/^package openfl.gl;$/;"	p
openfl.gl	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLContextAttributesTest.hx	/^package openfl.gl;$/;"	p
openfl.gl	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLFramebufferTest.hx	/^package openfl.gl;$/;"	p
openfl.gl	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLObjectTest.hx	/^package openfl.gl;$/;"	p
openfl.gl	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLProgramTest.hx	/^package openfl.gl;$/;"	p
openfl.gl	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLRenderbufferTest.hx	/^package openfl.gl;$/;"	p
openfl.gl	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLShaderTest.hx	/^package openfl.gl;$/;"	p
openfl.gl	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^package openfl.gl;$/;"	p
openfl.gl	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTextureTest.hx	/^package openfl.gl;$/;"	p
openfl.gl	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLUniformLocationTest.hx	/^package openfl.gl;$/;"	p
openfl.media	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/ID3Info.hx	/^package openfl.media; #if !flash$/;"	p
openfl.media	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^package openfl.media; #if !flash #if (!openfl_legacy || disable_legacy_audio)$/;"	p
openfl.media	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/SoundChannel.hx	/^package openfl.media; #if !flash #if (!openfl_legacy || disable_legacy_audio)$/;"	p
openfl.media	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/SoundLoaderContext.hx	/^package openfl.media; #if !flash$/;"	p
openfl.media	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/SoundTransform.hx	/^package openfl.media; #if !flash$/;"	p
openfl.media	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Video.hx	/^package openfl.media; #if !flash #if !openfl_legacy$/;"	p
openfl.media	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/ID3InfoTest.hx	/^package openfl.media;$/;"	p
openfl.media	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/SoundChannelTest.hx	/^package openfl.media;$/;"	p
openfl.media	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/SoundLoaderContextTest.hx	/^package openfl.media;$/;"	p
openfl.media	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/SoundTest.hx	/^package openfl.media;$/;"	p
openfl.media	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/SoundTransformTest.hx	/^package openfl.media;$/;"	p
openfl.net	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/NetConnection.hx	/^package openfl.net; #if !flash$/;"	p
openfl.net	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/NetStream.hx	/^package openfl.net; #if !flash$/;"	p
openfl.net	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/SharedObject.hx	/^package openfl.net; #if !flash #if !openfl_legacy$/;"	p
openfl.net	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/SharedObjectFlushStatus.hx	/^package openfl.net; #if !flash$/;"	p
openfl.net	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^package openfl.net; #if !flash$/;"	p
openfl.net	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^package openfl.net; #if !flash #if (!openfl_legacy || disable_legacy_networking)$/;"	p
openfl.net	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoaderDataFormat.hx	/^package openfl.net; #if !flash$/;"	p
openfl.net	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLRequest.hx	/^package openfl.net; #if !flash #if (!openfl_legacy || disable_legacy_networking)$/;"	p
openfl.net	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLRequestHeader.hx	/^package openfl.net; #if !flash$/;"	p
openfl.net	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLRequestMethod.hx	/^package openfl.net; #if !flash #if (!openfl_legacy || disable_legacy_networking)$/;"	p
openfl.net	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLVariables.hx	/^package openfl.net; #if !flash$/;"	p
openfl.net	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/XMLSocket.hx	/^package openfl.net; #if !flash #if (!openfl_legacy || disable_legacy_networking)$/;"	p
openfl.net	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/SharedObjectFlushStatusTest.hx	/^package openfl.net;$/;"	p
openfl.net	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/SharedObjectTest.hx	/^package openfl.net;$/;"	p
openfl.net	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLLoaderDataFormatTest.hx	/^package openfl.net;$/;"	p
openfl.net	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLLoaderTest.hx	/^package openfl.net;$/;"	p
openfl.net	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLRequestHeaderTest.hx	/^package openfl.net;$/;"	p
openfl.net	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLRequestMethodTest.hx	/^package openfl.net;$/;"	p
openfl.net	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLRequestTest.hx	/^package openfl.net;$/;"	p
openfl.net	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLVariablesTest.hx	/^package openfl.net;$/;"	p
openfl.sensors	/usr/lib/haxe/lib/openfl/3,0,8/openfl/sensors/Accelerometer.hx	/^package openfl.sensors; #if !flash #if !openfl_legacy$/;"	p
openfl.sensors	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/sensors/AccelerometerTest.hx	/^package openfl.sensors;$/;"	p
openfl.system	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/ApplicationDomain.hx	/^package openfl.system; #if !flash$/;"	p
openfl.system	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^package openfl.system; #if !flash #if !openfl_legacy$/;"	p
openfl.system	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/LoaderContext.hx	/^package openfl.system; #if !flash$/;"	p
openfl.system	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/PixelFormat.hx	/^package openfl.system;$/;"	p
openfl.system	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/ScreenMode.hx	/^package openfl.system;$/;"	p
openfl.system	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Security.hx	/^package openfl.system; #if !flash$/;"	p
openfl.system	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/SecurityDomain.hx	/^package openfl.system; #if !flash$/;"	p
openfl.system	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/System.hx	/^package openfl.system; #if !flash #if !openfl_legacy$/;"	p
openfl.system	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/TouchscreenType.hx	/^package openfl.system; #if !flash$/;"	p
openfl.system	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/ApplicationDomainTest.hx	/^package openfl.system;$/;"	p
openfl.system	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/CapabilitiesTest.hx	/^package openfl.system;$/;"	p
openfl.system	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/LoaderContextTest.hx	/^package openfl.system;$/;"	p
openfl.system	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/SecurityDomainTest.hx	/^package openfl.system;$/;"	p
openfl.system	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/system/SystemTest.hx	/^package openfl.system;$/;"	p
openfl.text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/AbstractFont.hx	/^package openfl.text;$/;"	p
openfl.text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/AntiAliasType.hx	/^package openfl.text; #if !flash$/;"	p
openfl.text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^package openfl.text; #if !flash #if !openfl_legacy$/;"	p
openfl.text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^package openfl.text;$/;"	p
openfl.text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/FontStyle.hx	/^package openfl.text; #if !flash #if !openfl_legacy$/;"	p
openfl.text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/FontType.hx	/^package openfl.text; #if !flash #if !openfl_legacy$/;"	p
openfl.text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/GridFitType.hx	/^package openfl.text; #if !flash$/;"	p
openfl.text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^package openfl.text; #if !flash #if !openfl_legacy$/;"	p
openfl.text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextFieldAutoSize.hx	/^package openfl.text; #if !flash$/;"	p
openfl.text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextFieldType.hx	/^package openfl.text; #if !flash$/;"	p
openfl.text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextFormat.hx	/^package openfl.text; #if !flash #if !openfl_legacy$/;"	p
openfl.text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextFormatAlign.hx	/^package openfl.text; #if !flash #if !openfl_legacy$/;"	p
openfl.text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextLineMetrics.hx	/^package openfl.text; #if !flash #if !openfl_legacy$/;"	p
openfl.text	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/AntiAliasTypeTest.hx	/^package openfl.text;$/;"	p
openfl.text	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/FontStyleTest.hx	/^package openfl.text;$/;"	p
openfl.text	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/FontTest.hx	/^package openfl.text;$/;"	p
openfl.text	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/FontTypeTest.hx	/^package openfl.text;$/;"	p
openfl.text	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/GridFitTypeTest.hx	/^package openfl.text;$/;"	p
openfl.text	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFieldAutoSizeTest.hx	/^package openfl.text;$/;"	p
openfl.text	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFieldTest.hx	/^package openfl.text;$/;"	p
openfl.text	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFieldTypeTest.hx	/^package openfl.text;$/;"	p
openfl.text	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFormatAlignTest.hx	/^package openfl.text;$/;"	p
openfl.text	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFormatTest.hx	/^package openfl.text;$/;"	p
openfl.text	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextLineMetricsTest.hx	/^package openfl.text;$/;"	p
openfl.ui	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Acceleration.hx	/^package openfl.ui;$/;"	p
openfl.ui	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Accelerometer.hx	/^package openfl.ui;$/;"	p
openfl.ui	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInput.hx	/^package openfl.ui; #if !flash$/;"	p
openfl.ui	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInputControl.hx	/^package openfl.ui; #if !flash$/;"	p
openfl.ui	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInputDevice.hx	/^package openfl.ui; #if !flash$/;"	p
openfl.ui	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/KeyLocation.hx	/^package openfl.ui; #if !flash$/;"	p
openfl.ui	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Keyboard.hx	/^package openfl.ui; #if !flash #if (!openfl_legacy || lime_hybrid)$/;"	p
openfl.ui	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Mouse.hx	/^package openfl.ui; #if !flash #if (!openfl_legacy || lime_hybrid)$/;"	p
openfl.ui	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Multitouch.hx	/^package openfl.ui; #if !flash #if !openfl_legacy$/;"	p
openfl.ui	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/MultitouchInputMode.hx	/^package openfl.ui; #if !flash$/;"	p
openfl.ui	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/ui/KeyboardTest.hx	/^package openfl.ui;$/;"	p
openfl.ui	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/ui/MouseTest.hx	/^package openfl.ui;$/;"	p
openfl.ui	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/ui/MultitouchInputModeTest.hx	/^package openfl.ui;$/;"	p
openfl.ui	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/ui/MultitouchTest.hx	/^package openfl.ui;$/;"	p
openfl.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^package openfl.utils;$/;"	p
openfl.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ArrayBuffer.hx	/^package openfl.utils;$/;"	p
openfl.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ArrayBufferView.hx	/^package openfl.utils;$/;"	p
openfl.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^package openfl.utils;$/;"	p
openfl.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/CompressionAlgorithm.hx	/^package openfl.utils;$/;"	p
openfl.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/Dictionary.hx	/^package openfl.utils; #if !flash$/;"	p
openfl.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/Endian.hx	/^package openfl.utils; #if !flash$/;"	p
openfl.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/Float32Array.hx	/^package openfl.utils;$/;"	p
openfl.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataInput.hx	/^package openfl.utils; #if !flash #if !openfl_legacy$/;"	p
openfl.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataOutput.hx	/^package openfl.utils; #if !flash #if !openfl_legacy$/;"	p
openfl.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IExternalizable.hx	/^package openfl.utils; #if !flash$/;"	p
openfl.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IMemoryRange.hx	/^package openfl.utils; #if !openfl_legacy$/;"	p
openfl.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/Int16Array.hx	/^package openfl.utils;$/;"	p
openfl.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/Int32Array.hx	/^package openfl.utils;$/;"	p
openfl.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/JNI.hx	/^package openfl.utils;$/;"	p
openfl.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/Object.hx	/^package openfl.utils; #if !flash$/;"	p
openfl.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/SystemPath.hx	/^package openfl.utils;$/;"	p
openfl.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/Timer.hx	/^package openfl.utils; #if !flash #if !openfl_legacy$/;"	p
openfl.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/UInt8Array.hx	/^package openfl.utils;$/;"	p
openfl.utils	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/WeakRef.hx	/^package openfl.utils;$/;"	p
openfl.utils	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/ArrayBufferTest.hx	/^package openfl.utils;$/;"	p
openfl.utils	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/ArrayBufferViewTest.hx	/^package openfl.utils;$/;"	p
openfl.utils	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/ByteArrayTest.hx	/^package openfl.utils;$/;"	p
openfl.utils	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/CompressionAlgorithmTest.hx	/^package openfl.utils;$/;"	p
openfl.utils	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/EndianTest.hx	/^package openfl.utils;$/;"	p
openfl.utils	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/Float32ArrayTest.hx	/^package openfl.utils;$/;"	p
openfl.utils	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/Int16ArrayTest.hx	/^package openfl.utils;$/;"	p
openfl.utils	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/Int32ArrayTest.hx	/^package openfl.utils;$/;"	p
openfl.utils	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/TimerTest.hx	/^package openfl.utils;$/;"	p
openfl.utils	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/UInt8ArrayTest.hx	/^package openfl.utils;$/;"	p
operator	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public var operator (get, set):CairoOperator;$/;"	v
opos	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var opos = position;$/;"	v
opos	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var opos = position;$/;"	v
opt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		inline function opt(data:Array<GLBucketData>, type:BucketDataType) {$/;"	f
opt	/usr/lib/haxe/std/haxe/macro/ExprTools.hx	/^	static inline function opt(e:Null<Expr>, f : Expr -> Expr):Expr$/;"	f
opt	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^				var opt = false;$/;"	v
opt	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^				var opt = f.meta.has(":optional");$/;"	v
opt	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var opt = inst.buildOptions(eopt);$/;"	v
opt	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var opt = { limit : null, orderBy : null, forceIndex : null };$/;"	v
opt2	/usr/lib/haxe/std/haxe/macro/ExprTools.hx	/^	static inline function opt2(e:Null<Expr>, f : Expr -> Void):Void$/;"	f
optimizationUsed	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^					var optimizationUsed = false;$/;"	v
optimize	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public function optimize() {$/;"	f
optimize if the rect is the same as the full buffer size	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			\/\/ TODO: optimize if the rect is the same as the full buffer size$/;"	i
optimize when rect is the same as the buffer size	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			\/\/ TODO: optimize when rect is the same as the buffer size$/;"	i
optimizeForRenderToTexture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/RectangleTexture.hx	/^	public var optimizeForRenderToTexture:Bool;$/;"	v
optimizeForRenderToTexture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/Texture.hx	/^	public var optimizeForRenderToTexture:Bool;$/;"	v
optionalDefines	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^			var optionalDefines = value.split ("||");$/;"	v
options	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Renderer.hx	/^			var options = {$/;"	v
options	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CPPHelper.hx	/^				var options = PathHelper.combine (path, "Options.txt");$/;"	v
options	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^			var options = new CairoFontOptions ();$/;"	v
options	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	public var options:Dynamic;$/;"	v
opts	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^		var opts = null;$/;"	v
opts	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var opts = new haxe.ds.StringMap();$/;"	v
optsb	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^		var optsb = r.match (line); \/\/ split of options part <*> if there$/;"	v
optsi	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^			var optsi = r.matchedPos ().pos;$/;"	v
or	/usr/lib/haxe/std/haxe/Int64.hx	/^	public static inline function or( a : Int64, b : Int64 ) : Int64 {$/;"	f
orderField	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	function orderField(e) {$/;"	f
orientation	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^					var orientation = Reflect.field (Orientation, Std.string (value).toUpperCase ());$/;"	v
original	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/FrameHeader.hx	/^    public var original(default, null):Bool;$/;"	v
original	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var original = (b >> 2) & 1 == 1;$/;"	v
os	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var os (get, null):String;$/;"	v
os	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var os (get, null):String;$/;"	v
osInitialize	/usr/lib/haxe/std/neko/vm/Thread.hx	/^	public static function osInitialize() {$/;"	f
osLoop	/usr/lib/haxe/std/neko/vm/Thread.hx	/^	public static function osLoop() {$/;"	f
os_loop	/usr/lib/haxe/std/neko/vm/Thread.hx	/^	static var os_loop = null;$/;"	v
os_loop_stop	/usr/lib/haxe/std/neko/vm/Thread.hx	/^	static var os_loop_stop = null;$/;"	v
os_sync	/usr/lib/haxe/std/neko/vm/Thread.hx	/^	static var os_sync = null;$/;"	v
other	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^				var other:B2Body;$/;"	v
other	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactEdge.hx	/^	public var other:B2Body;$/;"	v
other	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2JointEdge.hx	/^	public var other:B2Body;$/;"	v
other2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^			var other2:B2CircleShape = cast (other, B2CircleShape);$/;"	v
other2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var other2:B2PolygonShape = cast (other, B2PolygonShape);$/;"	v
othis	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var othis = new Float32Array (this);$/;"	v
othis	/usr/lib/haxe/std/sys/db/Manager.hx	/^			var othis = untyped __this__;$/;"	v
out	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^		var out = haxe.io.Bytes.alloc(32);$/;"	v
out	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^		var out = new BytesOutput ();$/;"	v
out	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^				var out = new haxe.io.BytesBuffer();$/;"	v
out	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var out = File.write (localPath, true);$/;"	v
out	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^		var out = new Array<Array<Int>>();$/;"	v
out	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^		var out = new Array<ScreenMode> ();$/;"	v
out	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^		var out = haxe.io.Bytes.alloc(size + (((b.length * 8) % nbits == 0) ? 0 : 1) );$/;"	v
out	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^		var out = haxe.io.Bytes.alloc(size);$/;"	v
out	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^			var out = haxe.io.Bytes.alloc(16);$/;"	v
out	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^		var out = haxe.io.Bytes.alloc(20);$/;"	v
out	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^					var out = new haxe.io.BytesBuffer();$/;"	v
outA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^				var outA:Float;$/;"	v
outerHTML	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var outerHTML:String;$/;"	v
outerText	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var outerText:String;$/;"	v
outline	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/NMEPreloader.hx	/^	private var outline:Sprite;$/;"	v
outline	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/NMEPreloader.hx	/^	private var outline:Sprite;$/;"	v
outoIndex	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var outoIndex:Int = -1;$/;"	v
outoIndex2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var outoIndex2:Int = (outoIndex + 1) % m_vertexCount;$/;"	v
outoLamdda	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var outoLamdda:Float = (0 - depths[outoIndex]) \/ (depths[outoIndex2] - depths[outoIndex]);$/;"	v
outoVec	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var outoVec:B2Vec2 = new B2Vec2(m_vertices[outoIndex].x * (1 - outoLamdda) + m_vertices[outoIndex2].x * outoLamdda,$/;"	v
outpos	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	var outpos : Int;$/;"	v
output	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2Shape.hx	/^		var output:B2DistanceOutput = new B2DistanceOutput();$/;"	v
output	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var output:B2RayCastOutput = new B2RayCastOutput ();$/;"	v
output	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRaycast.hx	/^				var output:B2RayCastOutput = new B2RayCastOutput();$/;"	v
output	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/format/PNG.hx	/^				var output = new BytesOutput ();$/;"	v
output	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^				var output = File.getContent (outputPath);$/;"	v
output	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^			var output = "";$/;"	v
output	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^				var output = File.getContent (tempFile);$/;"	v
output	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^		var output = "";$/;"	v
output	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^		var output = ProcessHelper.runProcess (androidPath, androidName, [ "list", "avd" ]);$/;"	v
output	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AssetHelper.hx	/^						var output = File.getContent (outputFile);$/;"	v
output	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^					var output = File.write (targetPath, true);$/;"	v
output	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^			var output = File.write (destination + "\/assets.swf", true);$/;"	v
output	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^		var output = ProcessHelper.runProcess ("", "sw_vers", [ "-productVersion" ]);$/;"	v
output	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^		var output = ProcessHelper.runProcess ("", "xcodebuild", [ "-version" ]);$/;"	v
output	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/LogHelper.hx	/^			var output = "";$/;"	v
output	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/LogHelper.hx	/^			var output;$/;"	v
output	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/NekoHelper.hx	/^		var output = File.write (target, true);$/;"	v
output	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^			var output = "";$/;"	v
output	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PlatformHelper.hx	/^					var output = process.stdout.readAll ().toString ();$/;"	v
output	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ProcessHelper.hx	/^				var output = runProcess ("", "\/usr\/sbin\/system_profiler", [ "-detailLevel", "full", "SPHardwareDataType" ]);$/;"	v
output	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ProcessHelper.hx	/^		var output = "";$/;"	v
output	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^		var output = "[ ";$/;"	v
output	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ZipHelper.hx	/^			var output = File.write (targetPath, true);$/;"	v
output	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^			var output = process.stdout.readAll ().toString ();$/;"	v
output	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^					var output = File.write (versionFile, false);$/;"	v
output	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private function output(str:String)$/;"	f
output	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var output = File.write (path, false);$/;"	v
output	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^		var output = "";$/;"	v
output	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^		var output = File.write (filePath, false);$/;"	v
output	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/ByteArrayTest.hx	/^		var output = new ByteArray();$/;"	v
output	/usr/lib/haxe/std/haxe/Http.hx	/^		var output = new haxe.io.BytesOutput();$/;"	v
output	/usr/lib/haxe/std/haxe/Http.hx	/^	var output(default,null) : haxe.io.Output;$/;"	v
output	/usr/lib/haxe/std/haxe/xml/Printer.hx	/^	var output:StringBuf;$/;"	v
output	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^		var output = new haxe.io.BytesBuffer();$/;"	v
output	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	var output : haxe.io.Bytes;$/;"	v
output	/usr/lib/haxe/std/sys/net/Socket.hx	/^	var output(default,null) : haxe.io.Output;$/;"	v
outputBase	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var outputBase = externPath;$/;"	v
outputClass	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private function outputClass(cid:Int, lastOnly:Bool)$/;"	f
outputDirectory	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var outputDirectory = project.app.path + "\/firefox";$/;"	v
outputFile	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AssetHelper.hx	/^				var outputFile = PathHelper.getTemporaryFile ();$/;"	v
outputFile	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/BlackBerryPlatform.hx	/^	private var outputFile:String;$/;"	v
outputFile	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/EmscriptenPlatform.hx	/^	private var outputFile:String;$/;"	v
outputFile	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/HTML5Platform.hx	/^	private var outputFile:String;$/;"	v
outputFile	/usr/lib/haxe/std/haxe/macro/JSGenApi.hx	/^	var outputFile : String;$/;"	v
outputFunctionArgs	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private function outputFunctionArgs()$/;"	f
outputName	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^		var outputName = "SampleProject";$/;"	v
outputPackage	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private function outputPackage(cid:Int)$/;"	f
outputPath	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^			var outputPath = PathHelper.combine (tempDirectory, "output.dat");$/;"	v
outputPath	/usr/lib/haxe/lib/lime/2,4,3/tools/SVGExport.hx	/^				var outputPath = words[4];$/;"	v
outputPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^		var outputPath = null;$/;"	v
outputPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^					var outputPath:String = null;$/;"	v
outputTexture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^			var outputTexture:FilterTexture = texturePool.pop ();$/;"	v
outputType	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private function outputType(inType:JNIType)$/;"	f
overState	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/SimpleButton.hx	/^	public var overState (default, set):DisplayObject;$/;"	v
overState	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/SimpleButton.hx	/^	public var overState (default, set):DisplayObject;$/;"	v
overlap	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^			var overlap:Bool = m_broadPhase.testOverlap(proxyA, proxyB);$/;"	v
overloads	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	var overloads : Null<List<ClassField>>;$/;"	v
overloads	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		var overloads = null;$/;"	v
overrideMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	private static var overrideMatrix:Matrix;$/;"	v
overrideMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var overrideMatrix:Matrix;$/;"	v
overrides	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	private var overrides:HXProject;$/;"	v
overrides	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var overrides : Array<Ref<ClassField>>;$/;"	v
ownerDocument	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var ownerDocument (default, null):Dynamic \/*Document*\/;$/;"	v
ox	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var ox = 0.0, oy = 0.0;$/;"	v
ox	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^						var ox = tilePoint.x * tw;$/;"	v
ox	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^					var ox = tilePoint.x * tw;$/;"	v
ox	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^				var ox:Float = 0; $/;"	v
ox_	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^						var ox_ = ox * t0 + oy * t2;$/;"	v
ox_	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^					var ox_ = ox * t0 + oy * t2;$/;"	v
oy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^						var oy = tilePoint.y * th;$/;"	v
oy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^					var oy = tilePoint.y * th;$/;"	v
oy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^				var oy:Float = 0;$/;"	v
p	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Distance.hx	/^	var p:B2Vec2;$/;"	v
p	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^		var p:B2Vec2 = B2Math.mulX(xf, m_p);$/;"	v
p	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var p:Array <B2Vec2> = new Array <B2Vec2> ();$/;"	v
p	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var p:B2Vec2 = m_bodyA.getWorldPoint(m_localAnchor1);$/;"	v
p	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var p:B2Vec2 = m_bodyB.getWorldPoint(m_localAnchor2);$/;"	v
p	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^				var p:B2Proxy = bp.m_proxyPool[ i ];$/;"	v
p	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^			var p = i >> 2;$/;"	v
p	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^		var p = 0;$/;"	v
p	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^		var p = i >> 2;$/;"	v
p	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^			var p = pivotPoint;$/;"	v
p	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var p = position;$/;"	v
p	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^					var p = bufSize - buf.available;$/;"	v
p	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^			var p = new Path (path);$/;"	v
p	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var p = new Path (path);$/;"	v
p	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var p = P;$/;"	v
p	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var p = position;$/;"	v
p	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/RectangleTexture.hx	/^		var p = @:privateAccess (bitmapData.__image).data.buffer;$/;"	v
p	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/RectangleTexture.hx	/^		var p = BitmapData.getRGBAPixels (bitmapData);$/;"	v
p	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/RectangleTexture.hx	/^		var p = ByteArray.__ofBuffer (@:privateAccess (bitmapData.__image).data.buffer);$/;"	v
p	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^			var p = pivotPoint;$/;"	v
p	/usr/lib/haxe/std/DateTools.hx	/^		var p = 0;$/;"	v
p	/usr/lib/haxe/std/haxe/Http.hx	/^				var p = chunk_re.matchedPos();$/;"	v
p	/usr/lib/haxe/std/haxe/Http.hx	/^			var p = sock.input.readBytes(s,0,k);$/;"	v
p	/usr/lib/haxe/std/haxe/Resource.hx	/^		var p = new haxe.ds.StringMap();$/;"	v
p	/usr/lib/haxe/std/haxe/Template.hx	/^			var p = expr_splitter.matched(0);$/;"	v
p	/usr/lib/haxe/std/haxe/Template.hx	/^			var p = expr_splitter.matchedPos();$/;"	v
p	/usr/lib/haxe/std/haxe/Template.hx	/^			var p = l.pop();$/;"	v
p	/usr/lib/haxe/std/haxe/Template.hx	/^			var p = splitter.matchedPos();$/;"	v
p	/usr/lib/haxe/std/haxe/Template.hx	/^		var p = l.first();$/;"	v
p	/usr/lib/haxe/std/haxe/Template.hx	/^		var p = l.pop();$/;"	v
p	/usr/lib/haxe/std/haxe/Template.hx	/^		var p = t.p;$/;"	v
p	/usr/lib/haxe/std/haxe/Template.hx	/^	var p : String;$/;"	v
p	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^			var p = 0;$/;"	v
p	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^			var p = i >> 2;$/;"	v
p	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^		var p = 0;$/;"	v
p	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^		var p = i >> 2;$/;"	v
p	/usr/lib/haxe/std/haxe/ds/ListSort.hx	/^		var p, q, e, tail : T = null;$/;"	v
p	/usr/lib/haxe/std/haxe/ds/ListSort.hx	/^		var p, q, e, tail : T;$/;"	v
p	/usr/lib/haxe/std/haxe/io/Input.hx	/^		var p = 0;$/;"	v
p	/usr/lib/haxe/std/haxe/io/Output.hx	/^				var p = 0;$/;"	v
p	/usr/lib/haxe/std/haxe/io/Output.hx	/^		var p = 0;$/;"	v
p	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^					var p = r.split(".");$/;"	v
p	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^					var p = type.split(".");$/;"	v
p	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^				var p = b.pack.join(".");$/;"	v
p	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^		var p = Context.currentPos();$/;"	v
p	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^				var p = prev + field(x);$/;"	v
p	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^		var p = getPath(c);$/;"	v
p	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^		var p = getPath(e);$/;"	v
p	/usr/lib/haxe/std/haxe/macro/Format.hx	/^			var p = Context.makePosition(pos);$/;"	v
p	/usr/lib/haxe/std/haxe/remoting/AMFConnection.hx	/^		var p = params.copy();$/;"	v
p	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		var p = new List();$/;"	v
p	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^		var p = Context.currentPos();$/;"	v
p	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^		var p = obj.pos;$/;"	v
p	/usr/lib/haxe/std/haxe/zip/Huffman.hx	/^			var p = lengths[i+pos];$/;"	v
p	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^						var p = bufSize - buf.available;$/;"	v
p	/usr/lib/haxe/std/neko/Web.hx	/^		var p = _get_cookies();$/;"	v
p	/usr/lib/haxe/std/neko/Web.hx	/^		var p = _get_params();$/;"	v
p	/usr/lib/haxe/std/neko/Web.hx	/^		var p = _get_params_string();$/;"	v
p	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^				var p = detectFF(ffdir);$/;"	v
p	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^			var p = detectOSX();$/;"	v
p	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^		var p = 0;$/;"	v
p	/usr/lib/haxe/std/neko/net/ThreadRemotingServer.hx	/^			var p = pos;$/;"	v
p	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	var p : neko.net.Poll;$/;"	v
p	/usr/lib/haxe/std/neko/vm/Loader.hx	/^		var p = untyped l.path;$/;"	v
p	/usr/lib/haxe/std/neko/vm/Module.hx	/^		var p = null;$/;"	v
p	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^								var p = t.pack.copy();$/;"	v
p	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^					var p = f.expr.pos;$/;"	v
p	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var p = inst.pos;$/;"	v
p	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var p = cond.pos;$/;"	v
p	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var p = econd.pos;$/;"	v
p	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var p = eopt.pos;$/;"	v
p	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var p = switch( ft ) {$/;"	v
p00	/usr/lib/haxe/std/haxe/Int64.hx	/^		var p00 = al * bl;$/;"	v
p01	/usr/lib/haxe/std/haxe/Int64.hx	/^		var p01 = al * bh;$/;"	v
p1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^		var p1:B2Vec2 = input.p1;$/;"	v
p1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2RayCastInput.hx	/^	public var p1:B2Vec2;$/;"	v
p1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var p1:B2Vec2 = joint.getAnchorA();$/;"	v
p1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^		var p1:B2Vec2 = new B2Vec2();$/;"	v
p1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2GravityController.hx	/^		var p1:B2Vec2 = null;$/;"	v
p1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var p1:B2Vec2 = bA.getWorldPoint(m_localAnchor1);$/;"	v
p1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var p1:B2Vec2 = bA.getWorldPoint(m_localAnchor1);$/;"	v
p1	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^					var p1:B2Proxy = bp.m_proxyPool[ pair.proxyId1 ];$/;"	v
p1	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^			var p1:B2Vec2 = joint.GetAnchor1();$/;"	v
p1	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRaycast.hx	/^			var p1:B2Vec2 = laser.getWorldPoint(new B2Vec2(30.1 \/ m_physScale, 0));$/;"	v
p1	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^		var p1:B2Vec2 = new B2Vec2(162 * s\/tScale, 183\/tScale);$/;"	v
p1	/usr/lib/haxe/std/haxe/Unserializer.hx	/^ 			var p1 = pos;$/;"	v
p1	/usr/lib/haxe/std/haxe/ds/ArraySort.hx	/^			var p1 = from + n, p2 = from + n + shift;$/;"	v
p1	/usr/lib/haxe/std/haxe/ds/EnumValueMap.hx	/^		var p1 = k1.getParameters();$/;"	v
p10	/usr/lib/haxe/std/haxe/Int64.hx	/^		var p10 = ah * bl;$/;"	v
p11	/usr/lib/haxe/std/haxe/Int64.hx	/^		var p11 = ah * bh;$/;"	v
p1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var p1X:Float = xf1.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);$/;"	v
p1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var p1X:Float = (tX * tMat.col1.x + tY * tMat.col1.y);$/;"	v
p1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var p1X:Float = 0.0;$/;"	v
p1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var p1X:Float = bA.m_sweep.c.x + r1X;$/;"	v
p1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var p1X:Float = bA.m_sweep.c.x + r1X;$/;"	v
p1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var p1X:Float = bA.m_sweep.c.x + r1X;$/;"	v
p1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var p1X:Float;$/;"	v
p1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var p1Y:Float = xf1.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);$/;"	v
p1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var p1Y:Float = (tX * tMat.col2.x + tY * tMat.col2.y);$/;"	v
p1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var p1Y:Float = 0.0;$/;"	v
p1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var p1Y:Float = bA.m_sweep.c.y + r1Y;$/;"	v
p1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var p1Y:Float = bA.m_sweep.c.y + r1Y;$/;"	v
p1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var p1Y:Float = bA.m_sweep.c.y + r1Y;$/;"	v
p1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var p1Y:Float;$/;"	v
p1x	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^							var p1x = native_glyph.points[i++];$/;"	v
p1y	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^							var p1y = native_glyph.points[i++];$/;"	v
p2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^		var p2:B2Vec2 = input.p2;$/;"	v
p2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2RayCastInput.hx	/^	public var p2:B2Vec2;$/;"	v
p2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var p2:B2Vec2 = m_vertices[i];$/;"	v
p2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var p2:B2Vec2 = vs[i];$/;"	v
p2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var p2:B2Vec2 = m_vertices[intoIndex2];$/;"	v
p2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var p2:B2Vec2 = joint.getAnchorB();$/;"	v
p2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^		var p2:B2Vec2 = new B2Vec2();$/;"	v
p2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2GravityController.hx	/^		var p2:B2Vec2 = null;$/;"	v
p2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var p2:B2Vec2 = bB.getWorldPoint(m_localAnchor2);$/;"	v
p2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var p2:B2Vec2 = bB.getWorldPoint(m_localAnchor2);$/;"	v
p2	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^					var p2:B2Proxy = bp.m_proxyPool[ pair.proxyId2 ];$/;"	v
p2	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^				var p2:B2Vec2 = new B2Vec2(mouseXWorldPhys, mouseYWorldPhys);$/;"	v
p2	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^			var p2:B2Vec2 = joint.GetAnchor2();$/;"	v
p2	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRaycast.hx	/^			var p2:B2Vec2 = laser.getWorldPoint(new B2Vec2(130.1 \/ m_physScale, 0));$/;"	v
p2	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^		var p2:B2Vec2 = new B2Vec2(216 * s\/tScale, 36 \/tScale);$/;"	v
p2	/usr/lib/haxe/std/haxe/Template.hx	/^			var p2 = l.pop();$/;"	v
p2	/usr/lib/haxe/std/haxe/ds/EnumValueMap.hx	/^		var p2 = k2.getParameters();$/;"	v
p2X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var p2X:Float = xf2.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);$/;"	v
p2X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var p2X:Float = (tX * tMat.col1.x + tY * tMat.col1.y);$/;"	v
p2X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var p2X:Float = bB.m_sweep.c.x + r2X;$/;"	v
p2X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var p2X:Float = bB.m_sweep.c.x + r2X;$/;"	v
p2X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var p2X:Float = bB.m_sweep.c.x + r2X;$/;"	v
p2X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var p2X:Float;$/;"	v
p2Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var p2Y:Float = xf2.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);$/;"	v
p2Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var p2Y:Float = (tX * tMat.col2.x + tY * tMat.col2.y);$/;"	v
p2Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var p2Y:Float = bB.m_sweep.c.y + r2Y;$/;"	v
p2Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var p2Y:Float = bB.m_sweep.c.y + r2Y;$/;"	v
p2Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var p2Y:Float = bB.m_sweep.c.y + r2Y;$/;"	v
p2Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var p2Y:Float;$/;"	v
p2x	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^							var p2x = native_glyph.points[i++];$/;"	v
p2y	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^							var p2y = native_glyph.points[i++];$/;"	v
p3	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var p3:B2Vec2 = i + 1 < count ? vs[Std.int(i+1)] : vs[0];$/;"	v
p3	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var p3:B2Vec2 = i + 1 < m_vertexCount ? m_vertices[Std.int(i+1)] : m_vertices[0];$/;"	v
p3	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var p3:B2Vec2;$/;"	v
p3	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^		var p3:B2Vec2 = new B2Vec2(129 * s\/tScale, 57 \/tScale);$/;"	v
p3x	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^							var p3x = native_glyph.points[i++];$/;"	v
p3y	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^							var p3y = native_glyph.points[i++];$/;"	v
p4	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^		var p4:B2Vec2 = new B2Vec2( 93 * s\/tScale, -24  \/tScale);$/;"	v
p5	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^		var p5:B2Vec2 = new B2Vec2(180 * s\/tScale, -45  \/tScale);$/;"	v
p6	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^		var p6:B2Vec2 = new B2Vec2( 75 * s\/tScale, -111 \/tScale);$/;"	v
pA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^			var pA:B2Vec2 = B2Math.mulX(transformA, localPointA);$/;"	v
pB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^			var pB:B2Vec2 = B2Math.mulX(transformB, localPointB);$/;"	v
pLocalX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var pLocalX:Float = (tX*tMat.col1.x + tY*tMat.col1.y);$/;"	v
pLocalY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var pLocalY:Float = (tX*tMat.col2.x + tY*tMat.col2.y);$/;"	v
pMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^				var pMatrix:Matrix;$/;"	v
pX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^		var pX:Float = input.p1.x;$/;"	v
pX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^		var pX:Float = transform.position.x + (tMat.col1.x * m_p.x + tMat.col2.x * m_p.y);$/;"	v
pY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^		var pY:Float = input.p1.y;$/;"	v
pY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^		var pY:Float = transform.position.y + (tMat.col1.y * m_p.x + tMat.col2.y * m_p.y);$/;"	v
p_nFovY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/PerspectiveProjection.hx	/^		var p_nFovY = fieldOfView * TO_RADIAN;$/;"	v
pack	/usr/lib/haxe/std/haxe/macro/Expr.hx	/^	var pack : Array<String>;$/;"	v
pack	/usr/lib/haxe/std/haxe/macro/MacroStringTools.hx	/^		var pack = path.split(".");$/;"	v
pack	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var pack : Array<String>;$/;"	v
pack	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		var pack = inf.path.split(".");$/;"	v
pack	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^				var pack = p.pack.copy();$/;"	v
pack	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var pack = [];$/;"	v
packBits	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^	private static function packBits (data:ByteArray, offset:Int, len:Int):Bytes {$/;"	f
packageDirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^		var packageDirectory = project.meta.packageName;$/;"	v
packageName	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^		var packageName = "";$/;"	v
packageName	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/TizenHelper.hx	/^		var packageName = getUUID (project) + "-" + project.meta.version + "-";$/;"	v
packageName	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^				var packageName = id.join (".").toLowerCase ();$/;"	v
packageName	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	static public var packageName (default, null):String;$/;"	v
packagedFile	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var packagedFile = compress (project);$/;"	v
packagedFile	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var packagedFile = project.app.file + ".zip";$/;"	v
packages	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^					var packages = [];$/;"	v
packages	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var packages = isSaucy ? linuxUbuntuSaucyPackages : linuxAptPackages;$/;"	v
packages	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^	var packages : haxe.ds.StringMap<Bool>;$/;"	v
padding	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^		var padding = filter.padding;$/;"	v
padding	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/NMEPreloader.hx	/^		var padding = 2;$/;"	v
padding	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/NMEPreloader.hx	/^		var padding = 3;$/;"	v
paint	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function paint ():Void {$/;"	f
paintWithAlpha	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function paintWithAlpha (alpha:Float):Void {$/;"	f
pair	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^					var pair:B2DynamicTreePair = m_pairBuffer[i];$/;"	v
pair	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^				var pair:B2DynamicTreePair = m_pairBuffer[m_pairCount];$/;"	v
pair	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^					var pair:B2Pair = bp.m_pairManager.m_pairs[ index ];$/;"	v
pairing	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^		var pairing = true;$/;"	v
paletteMap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function paletteMap (sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, redArray:Array<Int> = null, greenArray:Array<Int> = null, blueArray:Array<Int> = null, alphaArray:Array<Int> = null):Void {$/;"	f
paletteMap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function paletteMap (sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, redArray:Array<Int> = null, greenArray:Array<Int> = null, blueArray:Array<Int> = null, alphaArray:Array<Int> = null):Void {$/;"	f
pan	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public var pan:Float;$/;"	v
pan	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/SoundChannel.hx	/^		\/\/ TODO: pan$/;"	i
pan	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/SoundTransform.hx	/^	public var pan:Float;$/;"	v
panNode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public var panNode:Dynamic;$/;"	v
param	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^						var param = "-cp " + path;$/;"	v
param	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CLIHelper.hx	/^	public static function param (name:String, passwd:Bool = false):String {$/;"	f
param	/usr/lib/haxe/std/haxe/Http.hx	/^		var param = false;$/;"	v
param	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var param = null;$/;"	v
parameters	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthClient.hx	/^		var parameters = new Map<String, String>();$/;"	v
parameters	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthRequest.hx	/^	public var parameters:Map<String, String>;$/;"	v
parameters	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var parameters = [ "apt-get", "install" ].concat (packages.split (" "));$/;"	v
parameters	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var parameters = [ "pacman", "-S", "--needed" ];$/;"	v
parameters	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var parameters = [ "yum", "install" ].concat (linuxYumPackages.split (" "));$/;"	v
parameters	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/LoaderInfo.hx	/^	public var parameters (default, null):Dynamic <String>;$/;"	v
parameters	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/LoaderInfo.hx	/^	public var parameters (default, null):Dynamic<String>;$/;"	v
parameters	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		var parameters:SamplerState = samplerParameters[textureIndex];$/;"	v
params	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^		var params = "";$/;"	v
params	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^						var params = [ "-cskpass", cskPassword, "-keystore", keystorePath, "-storepass", keystorePassword ];$/;"	v
params	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/external/ExternalInterface.hx	/^		var params = new Array<Dynamic>();$/;"	v
params	/usr/lib/haxe/std/haxe/Http.hx	/^	var params : List<{ param:String, value:String }>;$/;"	v
params	/usr/lib/haxe/std/haxe/Template.hx	/^			var params = [];$/;"	v
params	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var params : Array<TypeParameter>;$/;"	v
params	/usr/lib/haxe/std/haxe/remoting/ExternalConnection.hx	/^			var params = new haxe.Unserializer(params).unserialize();$/;"	v
params	/usr/lib/haxe/std/haxe/remoting/ExternalConnection.hx	/^		var params = escapeString(s.toString());$/;"	v
params	/usr/lib/haxe/std/haxe/remoting/FlashJsConnection.hx	/^			var params = new haxe.Unserializer(params).unserialize();$/;"	v
params	/usr/lib/haxe/std/haxe/remoting/FlashJsConnection.hx	/^		var params = escapeString(s.toString());$/;"	v
params	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	var params : List<CType>;$/;"	v
params	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	var params : TypeParams;$/;"	v
params	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		var params = new List();$/;"	v
params	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^			var params = [];$/;"	v
params	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^	public var params : haxe.ds.StringMap<String>;$/;"	v
params	/usr/lib/haxe/std/haxe/web/Request.hx	/^		var params = new haxe.ds.StringMap();$/;"	v
params	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^						var params = [];$/;"	v
params	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	var params : Array<RecordType>;$/;"	v
parent	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeNode.hx	/^	public var parent:B2DynamicTreeNode;$/;"	v
parent	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashApplication.hx	/^	private var parent:Application;$/;"	v
parent	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashRenderer.hx	/^	private var parent:Renderer;$/;"	v
parent	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashWindow.hx	/^	private var parent:Window;$/;"	v
parent	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Application.hx	/^	private var parent:Application;$/;"	v
parent	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Renderer.hx	/^	private var parent:Renderer;$/;"	v
parent	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^	private var parent:Window;$/;"	v
parent	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private var parent:Application;$/;"	v
parent	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeRenderer.hx	/^	private var parent:Renderer;$/;"	v
parent	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	private var parent:Window;$/;"	v
parent	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var parent (default, null):Dynamic \/*DisplayObjectContainer*\/;$/;"	v
parent	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/DeploymentHelper.hx	/^			var parent = targetFlags.get ("parent");$/;"	v
parent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var parent:GLBucket;$/;"	v
parent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public var parent (get, null):DisplayObjectContainer;$/;"	v
parent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^				var parent = __dragObject.parent;$/;"	v
parent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var parent = __dragObject.parent;$/;"	v
parent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	public var parent (default, null):DisplayObjectContainer;$/;"	v
parent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^				var parent = __dragObject.parent;$/;"	v
parent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^		var parent = __dragObject.parent;$/;"	v
parent	/usr/lib/haxe/std/Xml.hx	/^	var parent(get,null) : Xml;$/;"	v
parentAllowsChild	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/LoaderInfo.hx	/^	public var parentAllowsChild (default, null):Bool;$/;"	v
parentAllowsChild	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/LoaderInfo.hx	/^	public var parentAllowsChild (default, null):Bool;$/;"	v
parentDomain	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/ApplicationDomain.hx	/^	public var parentDomain (default, null):ApplicationDomain;$/;"	v
parentElement	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var parentElement (default, null):Dynamic \/*Element*\/;$/;"	v
parentNode	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var parentNode (default, null):Dynamic \/*Node*\/;$/;"	v
parentTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^			var parentTransform = parent.__worldTransform;$/;"	v
parp	/usr/lib/haxe/std/haxe/Template.hx	/^			var parp = p.pos + p.len;$/;"	v
parse	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^	public function parse (elem:Fast):Void {$/;"	f
parse	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private function parse(src:Input, inMembers:Map<String, String>)$/;"	f
parse	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLParser.hx	/^	public function parse (desc:Description):String {$/;"	f
parse	/usr/lib/haxe/std/DateTools.hx	/^	public static function parse( t : Float ) {$/;"	f
parse	/usr/lib/haxe/std/Xml.hx	/^	static function parse( str : String ) : Xml;$/;"	f
parse	/usr/lib/haxe/std/haxe/Json.hx	/^	public static inline function parse( text : String ) : Dynamic {$/;"	f
parse	/usr/lib/haxe/std/haxe/Template.hx	/^	function parse( tokens : List<Token> ) {$/;"	f
parse	/usr/lib/haxe/std/haxe/format/JsonParser.hx	/^	static public inline function parse(str : String) : Dynamic {$/;"	f
parse	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function parse( expr : String, pos : Position ) : Expr {$/;"	f
parse	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^	static public function parse(str:String)$/;"	f
parseAppElement	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^	private function parseAppElement (element:Fast):Void {$/;"	f
parseAssetsElement	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^	private function parseAssetsElement (element:Fast, basePath:String = "", isTemplate:Bool = false):Void {$/;"	f
parseAssetsElementDirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^	private function parseAssetsElementDirectory (path:String, targetPath:String, include:String, exclude:String, type:AssetType, embed:Null<Bool>, glyphs:String, recursive:Bool):Void {$/;"	f
parseAttributes	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^	private function parseAttributes (elem:Fast, bucket:Dynamic):Void {$/;"	f
parseBlock	/usr/lib/haxe/std/haxe/Template.hx	/^	function parseBlock( tokens : List<Token> ) {$/;"	f
parseChildren	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^	private function parseChildren (elem:Fast, bucket:Dynamic, depth:Int = 0):Void {$/;"	f
parseExpr	/usr/lib/haxe/std/haxe/Template.hx	/^	function parseExpr( data : String ) {$/;"	f
parseFloat	/usr/lib/haxe/std/Std.hx	/^	public static function parseFloat( x : String ) : Float;$/;"	f
parseInlineString	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function parseInlineString( expr : String, pos : Position ) : Expr {$/;"	f
parseInt	/usr/lib/haxe/std/Std.hx	/^	public static function parseInt( x : String ) : Null<Int>;$/;"	f
parseMetaElement	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^	private function parseMetaElement (element:Fast):Void {$/;"	f
parseMultipart	/usr/lib/haxe/std/neko/Web.hx	/^	public static function parseMultipart( onPart : String -> String -> Void, onData : haxe.io.Bytes -> Int -> Int -> Void ) : Void {$/;"	f
parseNumber	/usr/lib/haxe/std/haxe/format/JsonParser.hx	/^	inline function parseNumber( c : Int ) : Dynamic {$/;"	f
parseOSXConfiguration	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^	static function parseOSXConfiguration(xml : Xml) : Dynamic {$/;"	f
parseOutputElement	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^	private function parseOutputElement (element:Fast):Void {$/;"	f
parseQuery	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URIParser.hx	/^	public static function parseQuery(query:String):Array<KVPair> {$/;"	f
parseRec	/usr/lib/haxe/std/haxe/format/JsonParser.hx	/^	function parseRec() : Dynamic {$/;"	f
parseSettings	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^	static function parseSettings( settings : String ) {$/;"	f
parseString	/usr/lib/haxe/std/haxe/format/JsonParser.hx	/^	function parseString() {$/;"	f
parseTokens	/usr/lib/haxe/std/haxe/Template.hx	/^	function parseTokens( data : String ) {$/;"	f
parseTypes	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private function parseTypes(type:String, inArrayCount:Int)$/;"	f
parseValue	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^	private function parseValue (elem:Fast, bucket:Dynamic):Void {$/;"	f
parseWindowElement	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^	private function parseWindowElement (element:Fast):Void {$/;"	f
parseXML	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^	private function parseXML (xml:Fast, section:String, extensionPath:String = ""):Void {$/;"	f
parsedIsObj	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private var parsedIsObj:Array<Bool>;$/;"	v
parsedTypes	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private var parsedTypes:Array<JNIType>;$/;"	v
parser	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLCompiler.hx	/^		var parser = new AGLSLParser ();$/;"	v
part	/usr/lib/haxe/std/haxe/Template.hx	/^			var part = "";$/;"	v
parts	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^		var parts = directory.split("\/");$/;"	v
parts	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^			var parts = mCurrentType.split(".");$/;"	v
parts	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var parts = Path.withoutExtension (inClass).split("\/");$/;"	v
parts	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var parts = name.split("\/");$/;"	v
parts	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^		var parts = directory.split("\/");$/;"	v
parts	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Loader.hx	/^		var parts = request.url.split (".");$/;"	v
parts	/usr/lib/haxe/std/haxe/io/Path.hx	/^		var parts;$/;"	v
parts	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^	public var parts : Array<String>;$/;"	v
parts	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^						var parts = f.sql.split("$");$/;"	v
pass	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^		var pass : String;$/;"	v
password	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URIParser.hx	/^	public var password:String;$/;"	v
password	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Keystore.hx	/^	public var password:String;$/;"	v
password	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^			var password = project.certificate.password;$/;"	v
password	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^		var password = null;$/;"	v
password	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/TizenHelper.hx	/^		var password = null;$/;"	v
patchAssetLibrary	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CompatibilityHelper.hx	/^	public static function patchAssetLibrary (project:HXProject, haxelib:Haxelib, targetPath:String, context:Dynamic):Void {$/;"	f
patchProject	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CompatibilityHelper.hx	/^	public static function patchProject (project:HXProject, haxelib:Haxelib, version:String):Void {$/;"	f
patchTypes	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^	public static function patchTypes( file : String ) : Void {$/;"	f
path	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^						var path = rie10.matched(1).split(".");$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/legacy/templates/haxe/lime/AssetData.hx	/^	public static var path = new #if haxe3 Map <String, #else Hash <#end String> ();$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/legacy/templates/html5/haxe/lime/AssetData.hx	/^	public static var path = new #if haxe3 Map <String, #else Hash <#end String> ();$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^							var path = filePath;$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^		var path = "";$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URIParser.hx	/^	public var path:String;$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthRequest.hx	/^		var path = uri.path;$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Dependency.hx	/^	public var path:String;$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^							var path = PathHelper.getHaxelib (haxelib);$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^						var path = PathHelper.standardize (arg);$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^			var path = PathHelper.combine (templatePath, hxml);$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^		var path = FileSystem.fullPath (Path.withoutDirectory (projectFile));$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^		var path = PathHelper.getHaxelib (haxelib, false, clearCache);$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public function path (value:String):Void {$/;"	f
path	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Icon.hx	/^	public var path:String;$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Keystore.hx	/^	public var path:String;$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/project/NDLL.hx	/^	public var path:String;$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^								var path = PathHelper.combine (extensionPath, substitute (element.att.path));$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^								var path = PathHelper.combine (haxelibPath, substitute (element.att.path));$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^							var path = PathHelper.combine (extensionPath, substitute (element.att.path));$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^						var path = "";$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^						var path;$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^				var path = PathHelper.getHaxelib (new Haxelib (substring.substr (8)), true);$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^		var path = "";$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/project/SplashScreen.hx	/^	public var path:String;$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^		var path = PathHelper.findTemplate (templatePaths, source);$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^		var path = PathHelper.getLibraryPath (ndll, directoryName, namePrefix, nameSuffix, allowDebug);$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^		var path = inAsset.sourcePath;$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^		var path = PathHelper.expand ("~\/Library\/MobileDevice\/Provisioning Profiles");$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^				var path = directory + "\/" + file;$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^		var path = "";$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^		var path = getTemporaryFile ();$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^			var path = targetDirectory + "\/bin\/libs\/armeabi";$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/EmscriptenPlatform.hx	/^			var path = PathHelper.combine (destination, asset.targetPath);$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/EmscriptenPlatform.hx	/^			var path = PathHelper.combine (targetDirectory + "\/obj\/assets", asset.targetPath);$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/EmscriptenPlatform.hx	/^			var path = PathHelper.getLibraryPath (ndll, "Emscripten", "lib", ".a", project.debug);$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FlashPlatform.hx	/^				var path = PathHelper.combine (destination, asset.targetPath);$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/HTML5Platform.hx	/^			var path = PathHelper.combine (destination, asset.targetPath);$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^			var path = destination + "\/" + splitPath[splitPath.length - 1];$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^			var path = null;$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^			var path = PathHelper.combine (applicationDirectory, asset.targetPath);$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/TizenPlatform.hx	/^			var path = PathHelper.combine (destination + "res\/", asset.targetPath);$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WebOSPlatform.hx	/^			var path = PathHelper.combine (destination, asset.targetPath);$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WindowsPlatform.hx	/^				var path = PathHelper.combine (applicationDirectory, asset.targetPath);$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^				var path = FileSystem.fullPath ("manifest");$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^	public var path (default, null) = new Map <String, String> ();$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^				var path = FileSystem.fullPath ("manifest");$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^	public var path (default, null) = new Map <String, String> ();$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^				var path = PathHelper.combine (path, file);$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^				var path = null;$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^		var path = "";$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^		var path = PathHelper.getHaxelib (haxelib);$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/tools/SVGExport.hx	/^		var path = "";$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^						var path = PathHelper.tryFullPath (samplePath);$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^			var path = Path.withoutExtension (javaPath);$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^						var path = "";$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^				var path = PathHelper.getHaxelib (lib, false, true);$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var path = unescapePath (CLIHelper.param ("Output directory [" + defaultInstallPath + "]"));$/;"	v
path	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var path = "";$/;"	v
path	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^							var path = filePath;$/;"	v
path	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^		var path = "";$/;"	v
path	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^		var path = LimeAssets.getPath (id);$/;"	v
path	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^			var path = graphics.__drawPaths[i];$/;"	v
path	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^							var path = filePath;$/;"	v
path	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^		var path = "";$/;"	v
path	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public var path:String;$/;"	v
path	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^		var path = openfl._legacy.filesystem.File.applicationStorageDirectory.nativePath;$/;"	v
path	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^				var path = FileSystem.fullPath ("manifest");$/;"	v
path	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^	public var path (default, null) = new Map <String, String> ();$/;"	v
path	/usr/lib/haxe/std/haxe/Resource.hx	/^			var path = all[i];$/;"	v
path	/usr/lib/haxe/std/haxe/Resource.hx	/^		var path = getPaths().get(name);$/;"	v
path	/usr/lib/haxe/std/haxe/io/Path.hx	/^		var path = paths[0];$/;"	v
path	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^			var path = pack == '' ? cp : cp + "\/" + pack.split(".").join("\/");$/;"	v
path	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^	static var path = ~\/^[A-Za-z_][A-Za-z0-9_.]*$\/;$/;"	v
path	/usr/lib/haxe/std/haxe/macro/Context.hx	/^		declared class path has priority.$/;"	c
path	/usr/lib/haxe/std/haxe/remoting/HttpConnection.hx	/^			var path = u.unserialize();$/;"	v
path	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^		var path : Array<String> = s.unserialize();$/;"	v
path	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	var path : Path;$/;"	v
path	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		var path = mkPath(x.att.path);$/;"	v
path	/usr/lib/haxe/std/neko/vm/Loader.hx	/^		var path = new Array<String>();$/;"	v
path	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^					var path = r.type.split(".");$/;"	v
path	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var path = inst.pack.copy().concat([inst.name]).join(".");$/;"	v
path2	/usr/lib/haxe/std/haxe/remoting/ContextAll.hx	/^		var path2 = path.copy();$/;"	v
paths	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^		var paths = PathHelper.findTemplates (templatePaths, source, warnIfNotFound);$/;"	v
paths	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var paths = new Array <String> ();$/;"	v
paths	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Lib.hx	/^			var paths = Context.getClassPath();$/;"	v
paths	/usr/lib/haxe/std/haxe/Resource.hx	/^	static var paths : haxe.ds.StringMap<String>;$/;"	v
paths	/usr/lib/haxe/std/haxe/io/Path.hx	/^		var paths = paths.filter(function(s) return s != null && s != "");$/;"	v
pattern	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^		var pattern : CairoPattern = null;$/;"	v
pattern	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^		var pattern = CairoPattern.createForSurface (bitmapFill.getSurface ());$/;"	v
pattern	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var pattern:CanvasElement = null;$/;"	v
patternBR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DrawTrianglesShader.hx	/^	public var patternBR:GLUniformLocation;$/;"	v
patternBR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/PatternFillShader.hx	/^	public var patternBR:GLUniformLocation;$/;"	v
patternFillShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/ShaderManager.hx	/^	public var patternFillShader:PatternFillShader;$/;"	v
patternMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/PatternFillShader.hx	/^	public var patternMatrix:GLUniformLocation;$/;"	v
patternTL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DrawTrianglesShader.hx	/^	public var patternTL:GLUniformLocation;$/;"	v
patternTL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/PatternFillShader.hx	/^	public var patternTL:GLUniformLocation;$/;"	v
pause	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^	public function pause ():Void {$/;"	f
pause	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function pause (buffer:AudioBuffer):Void {$/;"	f
pause	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLEasy.hx	/^	public static function pause (handle:CURL, bitMask:Int):CURLCode {$/;"	f
pause	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	public static function pause ():Void {$/;"	f
pause	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public function pause ():Bool;$/;"	f
pause	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/NetStream.hx	/^	public function pause ():Void {$/;"	f
pause	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/System.hx	/^	public static function pause ():Void {$/;"	f
pauseTime	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^	private var pauseTime:Int;$/;"	v
pauseWhenDeactivated	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public var pauseWhenDeactivated:Bool;$/;"	v
pbdtFile	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^						var pbdtFile = unescapePath (CLIHelper.param ("Path to client-PBDT-*.csj file"));$/;"	v
pd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^		var pd:B2PolygonShape;$/;"	v
pd1	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCompound.hx	/^				var pd1:B2PolygonShape = new B2PolygonShape();$/;"	v
pd2	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCompound.hx	/^				var pd2:B2PolygonShape = new B2PolygonShape();$/;"	v
pe	/usr/lib/haxe/std/haxe/Template.hx	/^			var pe = new List();$/;"	v
pedanticBitmapCaching	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public var pedanticBitmapCaching (get, set):Bool;$/;"	v
peer	/usr/lib/haxe/std/sys/net/Socket.hx	/^	function peer() : { host : Host, port : Int };$/;"	f
pendingMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^	private static var pendingMatrix:Matrix;$/;"	v
pendingMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^	private static var pendingMatrix:Matrix;$/;"	v
perceivedLuminosity	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/NMEPreloader.hx	/^		var perceivedLuminosity = (0.299 * r + 0.587 * g + 0.114 * b);$/;"	v
perceivedLuminosity	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/NMEPreloader.hx	/^		var perceivedLuminosity = (0.299 * r + 0.587 * g + 0.114 * b);$/;"	v
percent	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CLIHelper.hx	/^		var percent = Math.floor ((now \/ total) * 100);$/;"	v
percentLoaded	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/NMEPreloader.hx	/^		var percentLoaded = bytesLoaded \/ bytesTotal;$/;"	v
percentLoaded	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/NMEPreloader.hx	/^		var percentLoaded = bytesLoaded \/ bytesTotal;$/;"	v
perform	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLEasy.hx	/^	public static function perform (handle:CURL):CURLCode {$/;"	f
perlin	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var perlin = new OptimizedPerlin (randomSeed, numOctaves);$/;"	v
perlinNoise	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function perlinNoise (baseX:Float, baseY:Float, numOctaves:Int, randomSeed:Int, stitch:Bool, fractalNoise:Bool, channelOptions:Int = 7, grayScale:Bool = false, ?offsets:Array<Point>):Void {$/;"	f
perlinNoise	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function perlinNoise (baseX:Float, baseY:Float, numOctaves:UInt, randomSeed:Int, stitch:Bool, fractalNoise:Bool, channelOptions:UInt = 7, grayScale:Bool = false, offsets:Array<Point> = null):Void {$/;"	f
permissions	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^									var permissions = config.getArrayString ("android.permission");$/;"	v
perpx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var perpx:Float, perpy:Float, perp2x:Float, perp2y:Float, perp3x:Float, perp3y:Float;$/;"	v
physStart	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^			var physStart:UInt = Lib.getTimer();$/;"	v
physicsScale	Source/Env.hx	/^    public static var physicsScale = 1\/crateWidthInPixels; \/\/ Crate area is 1x1 m²$/;"	v
pin	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^						var pin = CLIHelper.param ("Device PIN");$/;"	v
pin	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^		var pin = 0;$/;"	v
pitch	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	public var pitch (get, set):Float;$/;"	v
pivot	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^		var pivot:B2Vec2 = new B2Vec2(0.0, -24.0\/tScale);$/;"	v
pix	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^		var pix:Int;$/;"	v
pixel	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^		var pixel;$/;"	v
pixel	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var pixel : Int;$/;"	v
pixel	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var pixel = bitmapData.getPixel32 (1, 1);$/;"	v
pixel	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var pixel:Int = bitmapData.getPixel32 (1, 1);$/;"	v
pixel	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var pixel = test.getPixel (1, 1);$/;"	v
pixel	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var pixel = test.getPixel32 (1, 0);$/;"	v
pixel2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var pixel2 = test.getPixel (50, 50);$/;"	v
pixel2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var pixel2 = test.getPixel32 (128, 1);$/;"	v
pixel3	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var pixel3 = test.getPixel (50, 20);$/;"	v
pixel3	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var pixel3 = test.getPixel32 (255, 1);$/;"	v
pixelAspectRatio	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var pixelAspectRatio (get, null):Float;$/;"	v
pixelAspectRatio	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var pixelAspectRatio (get, null):Float;$/;"	v
pixelBounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Transform.hx	/^	public var pixelBounds (get, null):Rectangle;$/;"	v
pixelBounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Transform.hx	/^	public var pixelBounds:Rectangle;$/;"	v
pixelHinting	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsStroke.hx	/^	public var pixelHinting:Bool;$/;"	v
pixelHinting	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsStroke.hx	/^	public var pixelHinting:Bool;$/;"	v
pixelSizeUniform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^	private static var pixelSizeUniform:GLUniformLocation;$/;"	v
pixelSizeX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^	private static var pixelSizeX:Float;$/;"	v
pixelSizeY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^	private static var pixelSizeY:Float;$/;"	v
pixelSnapping	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Bitmap.hx	/^	public var pixelSnapping (get, set):PixelSnapping;$/;"	v
pixelSnapping	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Bitmap.hx	/^	public var pixelSnapping:PixelSnapping;$/;"	v
pixelStorei	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function pixelStorei (pname:Int, param:Int):Void;$/;"	f
pixelStorei	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function pixelStorei (pname:Int, param:Int):Void {$/;"	f
pixelStorei	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function pixelStorei (pname:Int, param:Int):Void {$/;"	f
pixelStorei	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function pixelStorei(pname:Int, param:Int):Void $/;"	f
pixelStorei	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function pixelStorei(pname:Int, param:Int):Void;$/;"	f
pixelValue	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var pixelValue:Int, r:Int, g:Int, b:Int, a:Int, color:Int, c1:Int, c2:Int, c3:Int, c4:Int;$/;"	v
pixelValue	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var pixelValue:Int, r:Int, g:Int, b:Int, a:Int, color:Int, c1:Int, c2:Int, c3:Int, c4:Int;$/;"	v
pixelValuesLength	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/format/BMP.hx	/^		var pixelValuesLength = (image.width * image.height * 4);$/;"	v
pixels	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^				var pixels = buffer.__srcBitmapData.getPixels (buffer.__srcBitmapData.rect);$/;"	v
pixels	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/format/BMP.hx	/^		var pixels = image.getPixels (new Rectangle (0, 0, image.width, image.height), ARGB);$/;"	v
pixels	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^				var pixels = image.getPixels (new Rectangle (0, 0, s, s), ARGB);$/;"	v
pixels	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^			var pixels = bitmapData.getPixels (sourceRect);$/;"	v
pixels	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^			var pixels = getPixels (new Rectangle (x, y, 1, 1));$/;"	v
pixels	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var pixels = Std.int (rect.width * rect.height);$/;"	v
pixels	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var pixels = sourceBitmapData.getPixels (sourceRect);$/;"	v
pixels	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^			var pixels = bitmapData.getPixels (sourceRect);$/;"	v
pixels	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var pixels = getPixels (rect);$/;"	v
pixels	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var pixels = getPixels (sourceRect);$/;"	v
pixels	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/Texture.hx	/^		var pixels = BitmapData.getRGBAPixels (bitmapData);$/;"	v
pixels	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var pixels = bitmapData.getPixels (bitmapData.rect);$/;"	v
pjd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^				var pjd:B2PrismaticJointDef = new B2PrismaticJointDef();$/;"	v
pk	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^				var pk = new Array();$/;"	v
pl	/usr/lib/haxe/std/haxe/Serializer.hx	/^			var pl : Array<Dynamic> = v.__EnumParams();$/;"	v
pl	/usr/lib/haxe/std/haxe/Serializer.hx	/^			var pl : Array<Dynamic> = v.params;$/;"	v
pl	/usr/lib/haxe/std/haxe/Template.hx	/^			var pl = new Array<Dynamic>();$/;"	v
pl	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^			var pl = [];$/;"	v
pl	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		var pl = p.split(":");$/;"	v
pl	/usr/lib/haxe/std/haxe/web/Request.hx	/^			var pl = p.split("=");$/;"	v
planePoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var planePoint:B2Vec2 = s_planePoint;$/;"	v
planePointX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2WorldManifold.hx	/^		var planePointX:Float;$/;"	v
planePointX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PositionSolverManifold.hx	/^		var planePointX:Float;$/;"	v
planePointY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2WorldManifold.hx	/^		var planePointY:Float;$/;"	v
planePointY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PositionSolverManifold.hx	/^		var planePointY:Float;$/;"	v
platform	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^			var platform:PlatformTarget = null;$/;"	v
platformName	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^		var platformName = "iPhoneOS";$/;"	v
platformName	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^		var platformName = "iphoneos";$/;"	v
platformSetup	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	private function platformSetup ():Void {$/;"	f
platformType	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public var platformType:PlatformType;$/;"	v
platforms	/usr/lib/haxe/lib/lime/2,4,3/tools/RunScript.hx	/^		var platforms = [ "Windows", "Mac", "Mac64", "Linux", "Linux64" ];$/;"	v
platforms	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	var platforms : Platforms;$/;"	v
platformsDirectory	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^			var platformsDirectory = config.environment.get("ANDROID_SDK") + "\/platforms";$/;"	v
play	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^	public function play ():Void {$/;"	f
play	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/FlashAudioContext.hx	/^	public function play (buffer:AudioBuffer, startTime:Float = 0, loops:Int = 0, sndTransform:Dynamic \/*SoundTransform*\/ = null):Dynamic \/*SoundChannel*\/ {$/;"	f
play	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function play (buffer:AudioBuffer):Void {$/;"	f
play	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/MovieClip.hx	/^	public function play ():Void {$/;"	f
play	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^	public function play (startTime:Float = 0, loops:Int = 0, soundTransform:SoundTransform = null):SoundChannel {$/;"	f
play	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/MovieClip.hx	/^	public function play ():Void {$/;"	f
play	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public function play (?interrupt:String = Sound.INTERRUPT_NONE, ?delay:Int = 0, ?offset:Int = 0, ?loop:Int = 0, ?volume:Float = 1, ?pan:Float = 0):Void;$/;"	f
play	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public function play (startTime:Float = 0.0, loops:Int = 0, sndTransform:SoundTransform = null):SoundChannel {$/;"	f
play	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static function play (src:String, ?interrupt:String = INTERRUPT_NONE, ?delay:Int = 0, ?offset:Int = 0, ?loop:Int = 0, ?volume:Float = 1, ?pan:Float = 0):SoundJSInstance;$/;"	f
play	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/NetStream.hx	/^	public function play (url:String, ?_, ?_, ?_, ?_, ?_):Void {$/;"	f
playCommands	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^	private static function playCommands (commands:Array<DrawCommand>, stroke:Bool = false):Void {$/;"	f
playCommands	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^	private static function playCommands (commands:Array<DrawCommand>, stroke:Bool = false):Void {$/;"	f
playState	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public var playState:String;$/;"	v
player	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^		var player:String = null;$/;"	v
playerType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var playerType (default, null) = "OpenFL";$/;"	v
playerType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var playerType (default, null) = "OpenFL";$/;"	v
playing	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^	private var playing:Bool;$/;"	v
plstr	/usr/lib/haxe/std/haxe/Template.hx	/^				var plstr = try pl.join(",") catch( e : Dynamic ) "???";$/;"	v
png	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^					var png = new Reader (input).read ();$/;"	v
png	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/format/PNG.hx	/^				var png = new Writer (output);$/;"	v
png	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var png = bitmapData.encode ("png");$/;"	v
po	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^			var po:B2Vec2 = pivot.copy();$/;"	v
po	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^		var po = { };$/;"	v
point	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^				var point:B2Vec2 = new B2Vec2($/;"	v
point	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var point:B2Vec2 = s_psm.m_points[j];$/;"	v
point	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^				var point = matrix.transformPoint (new Point (1638.4, 0));$/;"	v
point	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^				var point = matrix.transformPoint (new Point (1638.4, 0));$/;"	v
point	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var point = new Point (0, 0);$/;"	v
point	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Bitmap.hx	/^		var point = globalToLocal (new Point (x, y));$/;"	v
point	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^					var point = new Vector2 (0, 0);$/;"	v
point	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^		var point = new Point ((touch.pageX - rect.left) * (stageWidth \/ rect.width), (touch.pageY - rect.top) * (stageHeight \/ rect.height));$/;"	v
point	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^		var point = new Point (x, y);$/;"	v
point	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Video.hx	/^		var point = globalToLocal (new Point (x, y));$/;"	v
point	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^		var point = globalToLocal (new Point (x, y));$/;"	v
point	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/PointTest.hx	/^		var point = new Point ();$/;"	v
point	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/PointTest.hx	/^		var point = new Point (-200, 100);$/;"	v
point	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/PointTest.hx	/^		var point = new Point (-40, 100);$/;"	v
point	/usr/lib/haxe/std/haxe/format/JsonParser.hx	/^		var point = false, e = false, pm = false, end = false;$/;"	v
point1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var point1:B2ManifoldPoint = m.m_points[j];$/;"	v
point1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^				var point1 = matrix.transformPoint (new Point (-819.2, 0));$/;"	v
point1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^				var point1 = matrix.transformPoint (new Point (-819.2, 0));$/;"	v
point2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var point2:B2ContactConstraintPoint = c.points[j];$/;"	v
point2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^				var point2 = matrix.transformPoint (new Point (819.2, 0));$/;"	v
point2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^				var point2 = matrix.transformPoint (new Point (819.2, 0));$/;"	v
pointA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^		var pointA:B2Vec2;$/;"	v
pointAX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^		var pointAX:Float;$/;"	v
pointAX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2WorldManifold.hx	/^				var pointAX:Float = xfA.position.x + tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;$/;"	v
pointAX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PositionSolverManifold.hx	/^				var pointAX:Float = cc.bodyA.m_xf.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);$/;"	v
pointAY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^		var pointAY:Float;$/;"	v
pointAY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2WorldManifold.hx	/^				var pointAY:Float = xfA.position.y + tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;$/;"	v
pointAY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PositionSolverManifold.hx	/^				var pointAY:Float = cc.bodyA.m_xf.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);$/;"	v
pointAt	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public function pointAt (pos:Vector4, at:Vector4 = null, up:Vector4 = null):Void {$/;"	f
pointAt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public function pointAt (pos:Vector3D, at:Vector3D = null, up:Vector3D = null):Void {$/;"	f
pointB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^		var pointB:B2Vec2;$/;"	v
pointBX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^		var pointBX:Float;$/;"	v
pointBX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2WorldManifold.hx	/^				var pointBX:Float = xfB.position.x + tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;$/;"	v
pointBX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PositionSolverManifold.hx	/^				var pointBX:Float = cc.bodyB.m_xf.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);$/;"	v
pointBY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^		var pointBY:Float;$/;"	v
pointBY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2WorldManifold.hx	/^				var pointBY:Float = xfB.position.y + tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;$/;"	v
pointBY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PositionSolverManifold.hx	/^				var pointBY:Float = cc.bodyB.m_xf.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);$/;"	v
pointCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var pointCount:Int = 0;$/;"	v
pointCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactConstraint.hx	/^	public var pointCount:Int = 0;$/;"	v
points	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactConstraint.hx	/^	public var points:Array <B2ContactConstraintPoint>;$/;"	v
points	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	var points:Array<Int>;$/;"	v
points	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^		var points = __currentPath.points;$/;"	v
points	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	public var points:Array<Float> = [];$/;"	v
points	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^			var points = path.points.copy();$/;"	v
points	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var points = [];$/;"	v
points	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var points = path.points.copy();$/;"	v
points	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var points = path.points;$/;"	v
points	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	var points: Array<Int>;$/;"	v
polar	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector2.hx	/^	public static function polar (len:Float, angle:Float):Vector2 {$/;"	f
polar	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Point.hx	/^	public static function polar (len:Float, angle:Float):Point {$/;"	f
polar	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Point.hx	/^	public static function polar (len:Float, angle:Float):Point {$/;"	f
poll	/usr/lib/haxe/std/neko/net/Poll.hx	/^	public function poll( a : Array<Socket>, ?t : Float ) : Array<Socket> {$/;"	f
poly	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^				var poly:B2PolygonShape = cast (shape, B2PolygonShape);$/;"	v
poly	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^					var poly:B2PolyShape = shape as B2PolyShape;$/;"	v
poly1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var poly1:B2PolygonShape;	\/\/ reference poly$/;"	v
poly2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var poly2:B2PolygonShape;	\/\/ incident poly$/;"	v
polyDef	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBuoyancy.hx	/^				var polyDef:B2PolygonShape = new B2PolygonShape();$/;"	v
polyShape	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBridge.hx	/^				var polyShape:B2PolygonShape = new B2PolygonShape();$/;"	v
polygon	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DistanceProxy.hx	/^				var polygon:B2PolygonShape =  cast (shape, B2PolygonShape);$/;"	v
polygon	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestOneSidedPlatform.hx	/^				var polygon:B2PolygonShape = B2PolygonShape.asBox(3.0, 0.5);$/;"	v
polygon	Source/Crate.hx	/^        var polygon = new B2PolygonShape ();$/;"	v
polygon	Source/Ground.hx	/^        var polygon = new B2PolygonShape ();$/;"	v
polygonOffset	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function polygonOffset (factor:Float, units:Float):Void;$/;"	f
polygonOffset	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function polygonOffset (factor:Float, units:Float):Void {$/;"	f
polygonOffset	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function polygonOffset (factor:Float, units:Float):Void {$/;"	f
polygonOffset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function polygonOffset(factor:Float, units:Float):Void $/;"	f
polygonOffset	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function polygonOffset(factor:Float, units:Float):Void;$/;"	f
polygonShape	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var polygonShape:B2PolygonShape = new B2PolygonShape();$/;"	v
pool	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactRegister.hx	/^	public var pool:B2Contact;$/;"	v
poolCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactRegister.hx	/^	public var poolCount:Int = 0;$/;"	v
pop	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public inline function pop ():Null<T> {$/;"	f
pop	/usr/lib/haxe/std/Array.hx	/^	function pop() : Null<T>;$/;"	f
pop	/usr/lib/haxe/std/List.hx	/^	public function pop() : Null<T> {$/;"	f
pop	/usr/lib/haxe/std/haxe/ds/GenericStack.hx	/^	public inline function pop() : Null<T> {$/;"	f
pop	/usr/lib/haxe/std/neko/vm/Deque.hx	/^	public function pop( block : Bool ) : T {$/;"	f
popBucket	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^	public function popBucket (object:DisplayObject, bucket:GLBucket, renderSession:RenderSession):Void {$/;"	f
popFilter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^	public function popFilter ():Void {$/;"	f
popGroup	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function popGroup ():CairoPattern {$/;"	f
popGroupToSource	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function popGroupToSource ():Void {$/;"	f
popMask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/AbstractMaskManager.hx	/^	public function popMask ():Void {$/;"	f
popMask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoMaskManager.hx	/^	public override function popMask ():Void {$/;"	f
popMask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasMaskManager.hx	/^	public override function popMask ():Void {$/;"	f
popMask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GLMaskManager.hx	/^	public function popMask ():Void {$/;"	f
popMask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GLMaskManager.hx	/^	public function popMask (maskData:Dynamic, renderSession:RenderSession):Void {$/;"	f
popMask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GLMaskManager.hx	/^	public override function popMask () {$/;"	f
popMask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^	public function popMask(object:DisplayObject, renderSession:RenderSession) {$/;"	f
popStencil	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^	public function popStencil (object:DisplayObject, glData:GLGraphicsData, renderSession:RenderSession):Void {$/;"	f
port	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URIParser.hx	/^	public var port:String;$/;"	v
port	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthRequest.hx	/^		var port = (scheme == "https" || scheme == "http") ? null : uri.port;$/;"	v
port	/usr/lib/haxe/std/haxe/Http.hx	/^		var port = if ( portString == null || portString == "" ) secure ? 443 : 80 else Std.parseInt(portString.substr(1, portString.length - 1));$/;"	v
port	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^		var port = r.matched(1);$/;"	v
port	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^	var port : Int;$/;"	v
port	/usr/lib/haxe/std/neko/net/ThreadRemotingServer.hx	/^	var port : Int;$/;"	v
port	/usr/lib/haxe/std/sys/net/Address.hx	/^	public var port : Int;$/;"	v
portString	/usr/lib/haxe/std/haxe/Http.hx	/^		var portString = url_regexp.matched(3);$/;"	v
portrait	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^			var portrait = img.width >= MIN_WH_SCREENSHOT.width && img.height >= MIN_WH_SCREENSHOT.height;$/;"	v
pos	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^					var pos:B2Vec2 = circle.m_position;$/;"	v
pos	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var pos = offset * 4;$/;"	v
pos	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var pos = new Vector4 (mr[12], mr[13], mr[14]);$/;"	v
pos	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var pos = new Vector3D (mr[12], mr[13], mr[14]);$/;"	v
pos	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^		var pos = text.length;$/;"	v
pos	/usr/lib/haxe/std/haxe/Unserializer.hx	/^ 	var pos : Int;$/;"	v
pos	/usr/lib/haxe/std/haxe/format/JsonParser.hx	/^	var pos : Int;$/;"	v
pos	/usr/lib/haxe/std/haxe/io/BufferInput.hx	/^	public var pos : Int;$/;"	v
pos	/usr/lib/haxe/std/haxe/io/BytesInput.hx	/^	var pos : Int;$/;"	v
pos	/usr/lib/haxe/std/haxe/macro/Expr.hx	/^	public var pos : Expr.Position;$/;"	v
pos	/usr/lib/haxe/std/haxe/macro/Expr.hx	/^	var pos : Position;$/;"	v
pos	/usr/lib/haxe/std/haxe/macro/Format.hx	/^		var pos = Context.getPosInfos(estr.pos);$/;"	v
pos	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var pos : Expr.Position;$/;"	v
pos	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	public var pos : Int;$/;"	v
pos	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^		var pos = 0;$/;"	v
pos	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^		var pos = 0;$/;"	v
pos	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^						var pos = f.pos;$/;"	v
pos	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^				var pos = fieldsPos.get(f.name);$/;"	v
pos	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var pos = Context.currentPos();$/;"	v
pos	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var pos = f.pos;$/;"	v
pos2	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^					var pos2:B2Vec2 = new B2Vec2(pos.x + r * ax.x, pos.y + r * ax.y);$/;"	v
posInfos	/usr/lib/haxe/std/haxe/unit/TestStatus.hx	/^	public var posInfos : PosInfos;$/;"	v
position	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ContactPoint.hx	/^	public var position:B2Vec2;$/;"	v
position	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Transform.hx	/^	public var position:B2Vec2;$/;"	v
position	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2BodyDef.hx	/^	public var position:B2Vec2;$/;"	v
position	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/ContactListenerOneSidePlatform.hx	/^		var position:B2Vec2 = test.m_character.getBody().getPosition();$/;"	v
position	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^		var position = Context.currentPos();$/;"	v
position	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public var position (get, set):Vector4;$/;"	v
position	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public var position:Int = 0;$/;"	v
position	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^		var position = Context.currentPos();$/;"	v
position	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^		var position = Context.currentPos();$/;"	v
position	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^			var position:Int, pixelMask:Int, pixelValue, i, test;$/;"	v
position	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Sprite.hx	/^		var position = type.lastIndexOf (".");$/;"	v
position	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	public var position (get, set):Float;$/;"	v
position	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public var position:Int;$/;"	v
position	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^			var position:Int, pixelMask:Int, pixelValue, i, test;$/;"	v
position	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/SampleDataEvent.hx	/^	public var position:Float;$/;"	v
position	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public var position (get, set):Vector3D;$/;"	v
position	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/SoundChannel.hx	/^	public var position (get, set):Float;$/;"	v
position	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public var position:Int = 0;$/;"	v
position	/usr/lib/haxe/std/haxe/io/BytesInput.hx	/^	public var position(get,set) : Int;$/;"	v
positionError	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^		var positionError:Float = 0.0;$/;"	v
positionError	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^		var positionError:Float = Math.sqrt(C1X * C1X + C1Y * C1Y);$/;"	v
positionIterations	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2TimeStep.hx	/^	public var positionIterations:Int = 0;$/;"	v
positionX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var positionX:Float;$/;"	v
positionX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^		var positionX:Float = transform.position.x + (tMat.col1.x * m_p.x + tMat.col2.x * m_p.y);$/;"	v
positionX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^			var positionX = 0.0;$/;"	v
positionX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^		var positionX = 0.0;$/;"	v
positionX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^			var positionX = 0.0;$/;"	v
positionX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^		var positionX = 0.0;$/;"	v
positionY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var positionY:Float;$/;"	v
positionY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^		var positionY:Float = transform.position.y + (tMat.col1.y * m_p.x + tMat.col2.y * m_p.y);$/;"	v
positionY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^			var positionY = 0.0;$/;"	v
positionY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^		var positionY = 0.0;$/;"	v
positionY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^			var positionY = 0.0;$/;"	v
positionY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^		var positionY = 0.0;$/;"	v
positions	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	var positions:Float32Array;$/;"	v
postData	/usr/lib/haxe/std/haxe/Http.hx	/^	var postData : String;$/;"	v
postSolve	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactListener.hx	/^	public function postSolve(contact:B2Contact, impulse:B2ContactImpulse):Void { }$/;"	f
postSolve	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/ContactListenerBreakable.hx	/^	override public function postSolve(contact:B2Contact, impulse:B2ContactImpulse):Void $/;"	f
postUICallback	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	public static function postUICallback (inCallback:Void->Void):Void {$/;"	f
pout	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^		var pout = 0;$/;"	v
pow	/usr/lib/haxe/std/Math.hx	/^	static function pow(v:Float, exp:Float):Float;$/;"	f
powerOfTwo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public var powerOfTwo (get, set):Bool;$/;"	v
ppF	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var ppF:B2Fixture = null; \/\/ Fix pointer-pointer stuff$/;"	v
preSolve	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactListener.hx	/^	public function preSolve(contact:B2Contact, oldManifold:B2Manifold):Void {}$/;"	f
preSolve	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/ContactListenerOneSidePlatform.hx	/^	override public function preSolve(contact:B2Contact, oldManifold:B2Manifold):Void $/;"	f
pref	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^		var pref = request.url.substr (0, 7);$/;"	v
prefix	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var prefix:String;$/;"	v
prefix	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/EmscriptenPlatform.hx	/^		var prefix = "";$/;"	v
prefix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMRenderer.hx	/^		var prefix = untyped __js__ ("(function () {$/;"	v
prefix	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^		var prefix = pack == '' ? '' : pack + '.';$/;"	v
prefix	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^				var prefix = cl[0];$/;"	v
prefs	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^		var prefs = sys.io.File.getContent("\/Library\/Preferences\/SystemConfiguration\/preferences.plist");$/;"	v
prefs	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^		var prefs = sys.io.File.getContent(basedir+"\/"+profile+"\/prefs.js");$/;"	v
preload	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Library.hx	/^	public var preload:Bool;$/;"	v
preload	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^							var preload = false;$/;"	v
preloader	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/ApplicationMain.hx	/^	public static var preloader:lime.app.Preloader;$/;"	v
preloader	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/ApplicationMain.hx	/^	public static var preloader:openfl.display.Preloader;$/;"	v
preloader	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^	public static var preloader:openfl.display.Preloader;$/;"	v
premultiplied	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public var premultiplied (get, set):Bool;$/;"	v
premultiplied	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ImageBuffer.hx	/^	public var premultiplied:Bool;$/;"	v
premultipliedAlpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public var premultipliedAlpha (get, set):Bool;$/;"	v
prepare	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	public override function prepare(m) {$/;"	f
prepare	/usr/lib/haxe/std/haxe/io/BytesOutput.hx	/^	override function prepare( size : Int ) {$/;"	f
prepare	/usr/lib/haxe/std/haxe/io/Output.hx	/^	public function prepare( nbytes : Int ) {$/;"	f
prepare	/usr/lib/haxe/std/neko/net/Poll.hx	/^	public function prepare( read : Array<Socket>, write : Array<Socket> ) {$/;"	f
prepareBucket	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	private static function prepareBucket(path:DrawPath, glStack:GLStack):GLBucket {$/;"	f
prepareData	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^	private function prepareData(data:Dynamic):ByteArray {$/;"	f
prepareData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^	private function prepareData (data:Dynamic):ByteArray {$/;"	f
prepareGraphics	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^	public inline function prepareGraphics(fill:GLBucketData, renderSession:RenderSession, translationMatrix:Float32Array):Void {$/;"	f
prepareShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	private static function prepareShader(bucket:GLBucket, renderSession:RenderSession, object:DisplayObject, translationMatrix:Float32Array) {$/;"	f
prepend	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public function prepend (rhs:Matrix4):Void {$/;"	f
prepend	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public inline function prepend (rhs:Matrix3D):Void {$/;"	f
prependRotation	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public function prependRotation (degrees:Float, axis:Vector4, pivotPoint:Vector4 = null):Void {$/;"	f
prependRotation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public inline function prependRotation (degrees:Float, axis:Vector3D, pivotPoint:Vector3D = null):Void {$/;"	f
prependScale	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public function prependScale (xScale:Float, yScale:Float, zScale:Float):Void {$/;"	f
prependScale	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public inline function prependScale (xScale:Float, yScale:Float, zScale:Float):Void {$/;"	f
prependTranslation	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public function prependTranslation (x:Float, y:Float, z:Float):Void {$/;"	f
prependTranslation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public inline function prependTranslation (x:Float, y:Float, z:Float):Void {$/;"	f
present	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function present ():Void {$/;"	f
preserveDrawingBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	public var preserveDrawingBuffer:Bool;$/;"	v
pressed_count	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Main.hx	/^	var pressed_count:UInt = 0;$/;"	v
pressure	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/TouchEvent.hx	/^	public var pressure:Float;$/;"	v
pressure	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TouchEvent.hx	/^	public var pressure:Float;$/;"	v
pretty	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^	var pretty:Bool;$/;"	v
prev	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var prev:B2Fixture = null;$/;"	v
prev	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactEdge.hx	/^	public var prev:B2ContactEdge;$/;"	v
prev	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2JointEdge.hx	/^	public var prev:B2JointEdge;$/;"	v
prev	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var prev = (touchInfo == null ? __mouseOverObjects : touchInfo.touchOverObjects);$/;"	v
prev	/usr/lib/haxe/std/List.hx	/^		var prev = null;$/;"	v
prev	/usr/lib/haxe/std/haxe/ds/GenericStack.hx	/^		var prev = null;$/;"	v
prev	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^			var prev = full;$/;"	v
prev	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		var prev = null;$/;"	v
prev	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^		var prev = 0;$/;"	v
prevBody	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2ControllerEdge.hx	/^	public var prevBody:B2ControllerEdge;$/;"	v
prevBody	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBridge.hx	/^				var prevBody:B2Body = ground;$/;"	v
prevBody	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^				var prevBody:B2Body = ground;$/;"	v
prevController	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2ControllerEdge.hx	/^	public var prevController:B2ControllerEdge;$/;"	v
prevEdge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var prevEdge:Int = edge - 1 >= 0 ? edge - 1 : count1 - 1;$/;"	v
prevFrame	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/MovieClip.hx	/^	public function prevFrame ():Void {$/;"	f
prevFrame	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/MovieClip.hx	/^	public function prevFrame ():Void {$/;"	f
prevLen	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Tilesheet.hx	/^			var prevLen = vec.length;$/;"	v
prevSepN	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var prevSepN: Number = 0.0;$/;"	v
preventDefault	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public function preventDefault ():Void {$/;"	f
preventDefaultTouchMove	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Lib.hx	/^	public static function preventDefaultTouchMove ():Void {$/;"	f
previousElementSibling	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var previousElementSibling (default, null):Dynamic \/*Element*\/;$/;"	v
previousSibling	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var previousSibling (default, null):Dynamic \/*Node*\/;$/;"	v
previousTileID	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var previousTileID = -1;$/;"	v
previousTileID	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var previousTileID = -1;$/;"	v
previousVersion	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^					var previousVersion = Std.parseInt (File.getBytes (versionFile).toString ());$/;"	v
primary	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactRegister.hx	/^	public var primary:Bool;$/;"	v
primaryPair	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^				var primaryPair:B2DynamicTreePair = m_pairBuffer[i];$/;"	v
primarySurface	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeRenderer.hx	/^	private var primarySurface:CairoSurface;$/;"	v
primitiveShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/ShaderManager.hx	/^	public var primitiveShader:PrimitiveShader;$/;"	v
primitiveVertexAttributes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public static var primitiveVertexAttributes = [$/;"	v
print	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/LogHelper.hx	/^	public static function print (message:String):Void {$/;"	f
print	/usr/lib/haxe/std/Sys.hx	/^	static function print( v : Dynamic ) : Void;$/;"	f
print	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^	static public function print(o:Dynamic, ?replacer:Dynamic -> Dynamic -> Dynamic, ?space:String) : String {$/;"	f
print	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^	inline function print(str) {$/;"	f
print	/usr/lib/haxe/std/haxe/unit/TestCase.hx	/^	function print( v : Dynamic ) {$/;"	f
print	/usr/lib/haxe/std/haxe/xml/Printer.hx	/^	static public function print(xml:Xml) {$/;"	f
print	/usr/lib/haxe/std/neko/Lib.hx	/^	public static function print( v : Dynamic ) : Void {$/;"	f
printAccess	/usr/lib/haxe/std/haxe/macro/Printer.hx	/^	public function printAccess(access:Access) return switch(access) {$/;"	f
printBinop	/usr/lib/haxe/std/haxe/macro/Printer.hx	/^	public function printBinop(op:Binop) return switch(op) {$/;"	f
printComplexType	/usr/lib/haxe/std/haxe/macro/Printer.hx	/^	public function printComplexType(ct:ComplexType) return switch(ct) {$/;"	f
printConstant	/usr/lib/haxe/std/haxe/macro/Printer.hx	/^	public function printConstant(c:Constant) return switch(c) {$/;"	f
printExpr	/usr/lib/haxe/std/haxe/macro/Printer.hx	/^	public function printExpr(e:Expr) return e == null ? "#NULL" : switch(e.expr) {$/;"	f
printExprs	/usr/lib/haxe/std/haxe/macro/Printer.hx	/^	public function printExprs(el:Array<Expr>, sep:String) {$/;"	f
printExtension	/usr/lib/haxe/std/haxe/macro/Printer.hx	/^	function printExtension(tpl:Array<TypePath>, fields: Array<Field>) {$/;"	f
printField	/usr/lib/haxe/std/haxe/macro/Printer.hx	/^	public function printField(field:Field) return$/;"	f
printFunction	/usr/lib/haxe/std/haxe/macro/Printer.hx	/^	public function printFunction(func:Function) return$/;"	f
printFunctionArg	/usr/lib/haxe/std/haxe/macro/Printer.hx	/^	public function printFunctionArg(arg:FunctionArg) return$/;"	f
printMetadata	/usr/lib/haxe/std/haxe/macro/Printer.hx	/^	public function printMetadata(meta:MetadataEntry) return$/;"	f
printString	/usr/lib/haxe/std/haxe/macro/Printer.hx	/^	public function printString(s:String) {$/;"	f
printStructure	/usr/lib/haxe/std/haxe/macro/Printer.hx	/^	function printStructure(fields:Array<Field>) {$/;"	f
printTypeDefinition	/usr/lib/haxe/std/haxe/macro/Printer.hx	/^	public function printTypeDefinition(t:TypeDefinition, printPackage = true):String {$/;"	f
printTypeParam	/usr/lib/haxe/std/haxe/macro/Printer.hx	/^	public function printTypeParam(param:TypeParam) return switch(param) {$/;"	f
printTypeParamDecl	/usr/lib/haxe/std/haxe/macro/Printer.hx	/^	public function printTypeParamDecl(tpd:TypeParamDecl) return$/;"	f
printTypePath	/usr/lib/haxe/std/haxe/macro/Printer.hx	/^	public function printTypePath(tp:TypePath) return$/;"	f
printUnop	/usr/lib/haxe/std/haxe/macro/Printer.hx	/^	public function printUnop(op:Unop) return switch(op) {$/;"	f
printVar	/usr/lib/haxe/std/haxe/macro/Printer.hx	/^	public function printVar(v:Var) return$/;"	f
printer	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^		var printer = new JsonPrinter(replacer, space);$/;"	v
printer	/usr/lib/haxe/std/haxe/xml/Printer.hx	/^		var printer = new Printer();$/;"	v
println	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/LogHelper.hx	/^	public static function println (message:String):Void {$/;"	f
println	/usr/lib/haxe/std/Sys.hx	/^	static function println( v : Dynamic ) : Void;$/;"	f
println	/usr/lib/haxe/std/neko/Lib.hx	/^	public static function println( v : Dynamic ) : Void {$/;"	f
priorities	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Event.hx	/^	private var priorities:Array<Int>;$/;"	v
priority	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/EventDispatcher.hx	/^	public var priority:Int;$/;"	v
priority	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/EventDispatcher.hx	/^	public var priority:Int;$/;"	v
privateBit	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/FrameHeader.hx	/^    public var privateBit(default, null):Bool;$/;"	v
privateBit	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var privateBit = b & 1 == 1;$/;"	v
proc	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^				var proc = new Process ("haxelib", [ "path", library ]);$/;"	v
proc	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^				var proc = new Process("xcode-select", ["--print-path"]);$/;"	v
proc	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var proc = new Process("haxelib", ["path", library ]);$/;"	v
proc	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^			var proc = new Process ("haxelib", [ "path", library ]);$/;"	v
proceed	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^					var proceed:Bool = callbackMethod(node);$/;"	v
process	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^	public function process (projectFile:String, useExtensionPath:Bool):Void {$/;"	f
process	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^			var process = new Process (exe, [ "-listmanifest", PathHelper.escape (PathHelper.tryFullPath (project.environment.get ("BLACKBERRY_DEBUG_TOKEN"))) ]);$/;"	v
process	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^		var process = new Process ("xcode-select", [ "--print-path" ]);$/;"	v
process	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/LogHelper.hx	/^					var process = new Process ("tput", [ "colors" ]);$/;"	v
process	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PlatformHelper.hx	/^					var process = new Process ("uname", [ "-m" ]);$/;"	v
process	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ProcessHelper.hx	/^			var process = new Process (command, args);$/;"	v
process	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^			var process = new Process ("uname", [ "-a" ]);$/;"	v
process	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^		var process = new Process ("haxelib", [ "path", "lime" ]);$/;"	v
process	/usr/lib/haxe/lib/lime/2,4,3/tools/SVGExport.hx	/^		var process = new Process (command, [ "path", "lime" ]);$/;"	v
process	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^						var process = new Process("hdiutil", [ "unmount", path ]);$/;"	v
process	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^				var process = new Process("hdiutil", [ "mount", path ]);$/;"	v
process	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^				var process = new Process("uname", ["-m"]);$/;"	v
process	/usr/lib/haxe/std/haxe/remoting/DelayedConnection.hx	/^	static function process( d : DelayedConnection ) {$/;"	f
process	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	public function process( x : Xml, platform ) {$/;"	f
processAnswer	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^	public function processAnswer( data : String ) : Dynamic {$/;"	f
processArguments	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	private function processArguments ():Void {$/;"	f
processClientData	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^	public function processClientData( d : ClientData, buf : haxe.io.Bytes, bufpos : Int, buflen : Int ) {$/;"	f
processContext	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public function processContext (context:ALContext):Void {$/;"	f
processContext	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static function processContext (context:ALContext):Void {$/;"	f
processData	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^	function processData( cl : ServerClient<ClientData> ) {$/;"	f
processDebugToken	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^	public static function processDebugToken (project:HXProject, workingDirectory:String = ""):BlackBerryDebugToken {$/;"	f
processElement	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	public function processElement( x : Xml ) {$/;"	f
processLibraries	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AssetHelper.hx	/^	public static function processLibraries (project:HXProject, targetDirectory:String = null):Void {$/;"	f
processLine	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^	private function processLine (line:String, linenr:UInt):Void {$/;"	f
processMessage	/usr/lib/haxe/std/haxe/remoting/SocketConnection.hx	/^	public function processMessage( data : String ) {$/;"	f
processObjectArg	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private function processObjectArg(inObj:String, inArrayCount:Int)$/;"	f
processRequest	/usr/lib/haxe/std/haxe/remoting/HttpConnection.hx	/^	public static function processRequest( requestData : String, ctx : Context ) : String {$/;"	f
processRequest	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^	public function processRequest( data : String, ?onError : Array<String> -> Array<Dynamic> -> Dynamic -> Void ) {$/;"	f
processRequest	/usr/lib/haxe/std/haxe/remoting/SyncSocketConnection.hx	/^	public function processRequest() {$/;"	f
processorCores	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ProcessHelper.hx	/^	public static var processorCores (get_processorCores, null):Int;$/;"	v
profile	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^		var profile = null;$/;"	v
progid	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Header.hx	/^	public var progid:Int;$/;"	v
program	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/GLUtils.hx	/^		var program = GL.createProgram ();$/;"	v
program	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/AbstractShader.hx	/^		var program = AbstractShader.compileProgram (gl, vertexSrc, fragmentSrc);$/;"	v
program	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/AbstractShader.hx	/^	public var program:GLProgram;$/;"	v
program	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/Shader.hx	/^		var program = gl.createProgram();$/;"	v
program	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/Shader.hx	/^	public var program:GLProgram;$/;"	v
program	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		var program = new Program3D (GL.createProgram ());$/;"	v
programsCreated	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	private var programsCreated:Array<Program3D>; \/\/ to keep track of stuff to dispose when calling dispose$/;"	v
progress	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CLIHelper.hx	/^	public static function progress (prefix:String, now:Int, total:Int):Void {$/;"	f
progress	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var progress = new Progress (out);$/;"	v
progress	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/NMEPreloader.hx	/^	private var progress:Sprite;$/;"	v
progress	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/NMEPreloader.hx	/^	private var progress:Sprite;$/;"	v
progressEvent	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/ProgressEventTest.hx	/^		var progressEvent = new ProgressEvent (ProgressEvent.PROGRESS);$/;"	v
progressFunction	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^	private function progressFunction (dltotal:Float, dlnow:Float, uptotal:Float, upnow:Float):Int {$/;"	f
progressFunction	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^	private function progressFunction (dltotal:Float, dlnow:Float, uptotal:Float, upnow:Float):Int {$/;"	f
project	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	inline public function project ():Void {$/;"	f
project	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^			var project = new ProjectXMLParser (projectFile, userDefines);$/;"	v
project	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^		var project = new HXProject ();$/;"	v
project	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^		var project:HXProject = null;$/;"	v
project	/usr/lib/haxe/lib/lime/2,4,3/lime/project/PlatformTarget.hx	/^	public var project:HXProject;$/;"	v
project	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^		var project = project.clone ();$/;"	v
project	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^					var project = HXProject.fromHaxelib (new Haxelib (defaultLibrary), defines);$/;"	v
project	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^					var project = null;$/;"	v
project	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^				var project = initializeProject ();$/;"	v
project	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^				var project = initializeProject (null, "firefox");$/;"	v
project	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^				var project = null;$/;"	v
project	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	private var project:HXProject;$/;"	v
project	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^			var project = HXProject.fromHaxelib (new Haxelib (projectName), defines);$/;"	v
project	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^		var project = HXProject.fromHaxelib (new Haxelib (projectName), defines);$/;"	v
project	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var project = HXProject.fromHaxelib (haxelib, defines, true);$/;"	v
project	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^	inline public function project ():Void {$/;"	f
projectData	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AssetHelper.hx	/^			var projectData = Serializer.run (project);$/;"	v
projectData	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^			var projectData = Serializer.run (project);$/;"	v
projectDefines	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	private var projectDefines:Map <String, String>;$/;"	v
projectDirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^		var projectDirectory = targetDirectory + "\/" + project.app.file + "\/";$/;"	v
projectFile	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^		var projectFile = null;$/;"	v
projectFile	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^		var projectFile = "";$/;"	v
projectName	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^			var projectName = null;$/;"	v
projectName	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^		var projectName = null;$/;"	v
projectTemplate	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^				var projectTemplate = PathHelper.findTemplate (project.templatePaths, "project", false);$/;"	v
projectVector	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Utils3D.hx	/^	public static function projectVector (m:Matrix3D, v:Vector3D):Vector3D {$/;"	f
projection	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	public var projection:Point;$/;"	v
projection	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^		var projection = renderSession.projection;$/;"	v
projection	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^		var projection = renderSession.projection;$/;"	v
projectionCenter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/PerspectiveProjection.hx	/^	public var projectionCenter:Point; \/\/ FIXME: does this do anything at all?$/;"	v
projectionMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/RenderSession.hx	/^	public var projectionMatrix:Matrix;$/;"	v
projectionMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	public var projectionMatrix:Matrix;$/;"	v
projectionMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^		var projectionMatrix = Matrix3D.createOrtho (0, rect.width, rect.height, 0, 1000, -1000);$/;"	v
projectionMatrixUniform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^	private static var projectionMatrixUniform:GLUniformLocation;$/;"	v
projectionVector	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/AbstractShader.hx	/^	public var projectionVector:GLUniformLocation;$/;"	v
prompt	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^	private static function prompt (name:String, ?passwd:Bool):String {$/;"	f
prompt	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CordovaHelper.hx	/^	private static function prompt (name:String, ?passwd:Bool):String {$/;"	f
prompt	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/TizenHelper.hx	/^	private static function prompt (name:String, ?passwd:Bool):String {$/;"	f
prop	/usr/lib/haxe/std/sys/db/RecordInfos.hx	/^	var prop : String;$/;"	v
property	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^						var property = split[1];$/;"	v
propertyReference	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^							var propertyReference = Reflect.field (fieldReference, property);$/;"	v
proto	/usr/lib/haxe/std/haxe/remoting/SocketConnection.hx	/^		var proto = __data.protocol;$/;"	v
proto	/usr/lib/haxe/std/haxe/remoting/SyncSocketConnection.hx	/^		var proto = __proto;$/;"	v
protocol	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URIParser.hx	/^	public var protocol:String;$/;"	v
proxy	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^		var proxy:B2DynamicTreeNode = m_tree.createProxy(aabb, userData);$/;"	v
proxyA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Distance.hx	/^	var proxyA:B2DistanceProxy = input.proxyA;$/;"	v
proxyA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DistanceInput.hx	/^	public var proxyA:B2DistanceProxy;$/;"	v
proxyA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreePair.hx	/^	public var proxyA:B2DynamicTreeNode;$/;"	v
proxyA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TOIInput.hx	/^	public var proxyA:B2DistanceProxy;$/;"	v
proxyA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^		var proxyA:B2DistanceProxy = input.proxyA;$/;"	v
proxyA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^			var proxyA:Dynamic = fixtureA.m_proxy;$/;"	v
proxyB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Distance.hx	/^	var proxyB:B2DistanceProxy = input.proxyB;$/;"	v
proxyB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DistanceInput.hx	/^	public var proxyB:B2DistanceProxy;$/;"	v
proxyB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreePair.hx	/^	public var proxyB:B2DynamicTreeNode;$/;"	v
proxyB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TOIInput.hx	/^	public var proxyB:B2DistanceProxy;$/;"	v
proxyB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^		var proxyB:B2DistanceProxy = input.proxyB;$/;"	v
proxyB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^			var proxyB:Dynamic = fixtureB.m_proxy;$/;"	v
pseudo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var pseudo:String;$/;"	v
pstr	/usr/lib/haxe/std/haxe/Log.hx	/^				var pstr = infos == null ? "(null)" : infos.fileName + ":" + infos.lineNumber;$/;"	v
psup	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^			var psup = getPath(c.superClass.t.get());$/;"	v
publicKey	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ZipHelper.hx	/^				var publicKey:Bytes = input.readAll ();$/;"	v
publish	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	public static function publish (project:HXProject):Void {$/;"	f
publishProject	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	private function publishProject () {$/;"	f
pulley	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^				var pulley:B2PulleyJoint = cast (joint, B2PulleyJoint);$/;"	v
pulley	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^				var pulley:B2PulleyJoint = joint as B2PulleyJoint;$/;"	v
pulleyDef	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^				var pulleyDef:B2PulleyJointDef = new B2PulleyJointDef();$/;"	v
pumpEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public function pumpEvent (event:Dynamic):Void {$/;"	f
push	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^	public function push (id:String, value:Dynamic):Void {$/;"	f
push	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public inline function push (x:T):Int {$/;"	f
push	/usr/lib/haxe/std/Array.hx	/^	function push(x : T) : Int;$/;"	f
push	/usr/lib/haxe/std/List.hx	/^	public function push( item : T ) {$/;"	f
push	/usr/lib/haxe/std/neko/vm/Deque.hx	/^	public function push( i : T ) {$/;"	f
pushBucket	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^	public function pushBucket (bucket:GLBucket, renderSession:RenderSession, translationMatrix:Float32Array, ?isMask:Bool = false):Void {$/;"	f
pushClass	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private function pushClass(inName:String)$/;"	f
pushFilter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^	public function pushFilter (filterBlock:Dynamic):Void {$/;"	f
pushGroup	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function pushGroup ():Void {$/;"	f
pushGroupWithContent	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function pushGroupWithContent (content:CairoContent):Void {$/;"	f
pushMask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/AbstractMaskManager.hx	/^	public function pushMask (mask:DisplayObject):Void {$/;"	f
pushMask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoMaskManager.hx	/^	public override function pushMask (mask:DisplayObject):Void {$/;"	f
pushMask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasMaskManager.hx	/^	public override function pushMask (mask:DisplayObject):Void {$/;"	f
pushMask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GLMaskManager.hx	/^	public function pushMask (mask:IBitmapDrawable):Void {$/;"	f
pushMask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GLMaskManager.hx	/^	public function pushMask (maskData:Dynamic, renderSession:RenderSession):Void {$/;"	f
pushMask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GLMaskManager.hx	/^	public override function pushMask (mask:DisplayObject) {$/;"	f
pushMask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^	public function pushMask(object:DisplayObject, renderSession:RenderSession) {$/;"	f
pushRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/AbstractMaskManager.hx	/^	public function pushRect (rect:Rectangle, transform:Matrix):Void {$/;"	f
pushRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoMaskManager.hx	/^	public override function pushRect (rect:Rectangle, transform:Matrix):Void {$/;"	f
pushRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasMaskManager.hx	/^	public override function pushRect (rect:Rectangle, transform:Matrix):Void {$/;"	f
pushRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GLMaskManager.hx	/^	public function pushRect (rect:Rectangle, transform:Matrix):Void {$/;"	f
pushStencil	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^	public function pushStencil (object:DisplayObject, glData:GLGraphicsData, renderSession:RenderSession):Void {$/;"	f
push_point	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^		var push_point:Bool = true;$/;"	v
putDynamicImageData	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function putDynamicImageData (dynamicImageData:Dynamic \/*ImageData*\/, dx:Float, dy:Float, dirtyX:Float, dirtyY:Float, dirtyWidth:Float, dirtyHeight:Float):Void {};$/;"	f
putDynamicImageDataHD	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function putDynamicImageDataHD (dynamicImageData:Dynamic \/*ImageData*\/, dx:Float, dy:Float, dirtyX:Float, dirtyY:Float, dirtyWidth:Float, dirtyHeight:Float):Void {};$/;"	f
putEnv	/usr/lib/haxe/std/Sys.hx	/^	static function putEnv( s : String, v : String ) : Void;$/;"	f
px	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var px:Float = p1X;$/;"	v
px	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^		var px:Float = 0;$/;"	v
px	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var px:Float = 0;$/;"	v
px	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var px:Float, py:Float, p1x:Float, p1y:Float, p2x:Float, p2y:Float, p3x:Float, p3y:Float;$/;"	v
py	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var py:Float = p1Y;$/;"	v
py	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^		var py:Float = 0;$/;"	v
py	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var py:Float = 0;$/;"	v
q	/usr/lib/haxe/std/List.hx	/^	private var q : Array<Dynamic>;$/;"	v
q	/usr/lib/haxe/std/haxe/Int64.hx	/^		var q = divMod(a, b).quotient;$/;"	v
q	/usr/lib/haxe/std/haxe/remoting/FlashJsConnection.hx	/^				var q = __data.queue.shift();$/;"	v
q	/usr/lib/haxe/std/haxe/remoting/SocketConnection.hx	/^					var q = sc.__data.queue.shift();$/;"	v
q	/usr/lib/haxe/std/neko/vm/Deque.hx	/^	var q : Dynamic;$/;"	v
quadraticBezierCurve	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	private static function quadraticBezierCurve (fromX:Float, fromY:Float, cpX:Float, cpY:Float, toX:Float, toY:Float):Array<Float> {$/;"	f
quadraticCurveTo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function quadraticCurveTo (cpx:Float, cpy:Float, x:Float, y:Float):Void {};$/;"	f
quadraticCurveTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^	private static function quadraticCurveTo (cx:Float, cy:Float, x:Float, y:Float):Void {$/;"	f
quality	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^			var quality = cast (compressorOrQuality, Float);$/;"	v
quality	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public var quality (get, set):StageQuality;$/;"	v
quality	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/BlurFilter.hx	/^	public var quality:Int;$/;"	v
quality	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/DropShadowFilter.hx	/^	public var quality:Int;$/;"	v
quality	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/GlowFilter.hx	/^	public var quality:Int;$/;"	v
quality	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/JPEGEncoderOptions.hx	/^	public var quality:Int;$/;"	v
quality	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public var quality:StageQuality;$/;"	v
quality	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/BlurFilter.hx	/^	public var quality:Int;$/;"	v
quality	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/DropShadowFilter.hx	/^	public var quality:Int;$/;"	v
quality	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/GlowFilter.hx	/^	public var quality:Int;$/;"	v
query	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^	public function query(callbackMethod:B2DynamicTreeNode -> Bool, aabb:B2AABB):Void$/;"	f
query	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^	public function query(callbackMethod:Dynamic -> Bool, aabb:B2AABB):Void$/;"	f
query	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/IBroadPhase.hx	/^	function query(callbackMethod:Dynamic -> Bool, aabb:B2AABB):Void;$/;"	f
query	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URIParser.hx	/^	public var query:String;$/;"	v
queryAABB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function queryAABB(callbackMethod:B2Fixture -> Dynamic, aabb:B2AABB):Void$/;"	f
queryArray	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URIParser.hx	/^	public var queryArray:Array<KVPair>;$/;"	v
queryCallback	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^			function queryCallback(proxy:B2DynamicTreeNode):Bool$/;"	f
queryPoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function queryPoint(callbackMethod:B2Fixture -> Dynamic, p:B2Vec2):Void$/;"	f
querySelector	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function querySelector (selectors:String):Dynamic \/*Element*\/ { return null; };$/;"	f
querySelectorAll	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function querySelectorAll (selectors:String):Dynamic \/*NodeList*\/ { return null; };$/;"	f
queryShape	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function queryShape(callbackMethod:B2Fixture -> Dynamic, shape:B2Shape, transform:B2Transform = null):Void$/;"	f
question	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^				var question = url.split ("?").length <= 1;$/;"	v
question	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^				var question = url.split ("?").length <= 1;$/;"	v
question	/usr/lib/haxe/std/haxe/Http.hx	/^				var question = url.split("?").length <= 1;$/;"	v
queue	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var queue:Array <B2Body> = s_queue;$/;"	v
queue	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var queue = new Array<Int> ();$/;"	v
queueSize	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^			var queueSize:Int = 0;	\/\/elements in queue$/;"	v
queueStart	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^			var queueStart:Int = 0;	\/\/start index for queue$/;"	v
quit	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^		var quit = stage.onQuit;$/;"	v
quote	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^	function quote( s : String ) {$/;"	f
quote	/usr/lib/haxe/std/sys/db/Connection.hx	/^	function quote( s : String ) : String;$/;"	f
quote	/usr/lib/haxe/std/sys/db/Manager.hx	/^	function quote( s : String ) : String {$/;"	f
quote	/usr/lib/haxe/std/sys/db/TableCreate.hx	/^		function quote(v:String):String {$/;"	f
quoteAny	/usr/lib/haxe/std/sys/db/Manager.hx	/^	public static function quoteAny( v : Dynamic ) {$/;"	f
quoteField	/usr/lib/haxe/std/sys/db/Manager.hx	/^	function quoteField(f : String) {$/;"	f
quoteField	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	function quoteField( f : String ) {$/;"	f
quoteList	/usr/lib/haxe/std/sys/db/Manager.hx	/^	public static function quoteList( v : String, it : Iterable<Dynamic> ) {$/;"	f
quoteString	/usr/lib/haxe/std/haxe/macro/JSGenApi.hx	/^	function quoteString( s : String ) : String;$/;"	f
quoteUtf8	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^	function quoteUtf8( s : String ) {$/;"	f
quotient	/usr/lib/haxe/std/haxe/Int64.hx	/^		var quotient = new Int64(0, 0);$/;"	v
r	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var r:Array <ClipVertex> = new Array <ClipVertex> ();$/;"	v
r	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^		var r:B2Vec2 = B2Math.subtractVV(p1, p2);$/;"	v
r	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^			var r:B2Vec2 = B2Math.subtractVV(dB, dA);$/;"	v
r	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Color.hx	/^	public var r (null, set):Float;$/;"	v
r	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^		var r:Float = Math.random();$/;"	v
r	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^		var r:Float = 1000;$/;"	v
r	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^					var r:Number = circle.m_radius;$/;"	v
r	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^			var r = ~\/at ([^\\\/]+?)\\$?(\\\/[^\\(]+)?\\(\\)(\\[(.*?):([0-9]+)\\])?\/;$/;"	v
r	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^		var r = f ();$/;"	v
r	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^		var r = f();$/;"	v
r	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Hmac.hx	/^		var r = chunkLen - (s.length % chunkLen);$/;"	v
r	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^						var r = data[i * 4 + 2];$/;"	v
r	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageCanvasUtil.hx	/^		var r, g, b, a;$/;"	v
r	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var r = (color >> 24) & 0xFF;$/;"	v
r	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var r, g, b, a, ex = 0;$/;"	v
r	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var r, g, b, a;$/;"	v
r	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^		var r, g, b, a;$/;"	v
r	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^		var r, g, b;$/;"	v
r	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^					var r = new format.wav.Reader (input);$/;"	v
r	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ImageHelper.hx	/^			var r:Int = (( backgroundColor >> 16) & 0xFF);$/;"	v
r	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^				var r = ~\/^['"](.*)['"]$\/;$/;"	v
r	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^					var r = z.execute(buf.buf, buf.pos, tmp, 0);$/;"	v
r	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var r = c.execute(f.data,0,s,0);$/;"	v
r	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var r = new Reader(i);$/;"	v
r	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var r = o.writeBytes(s,p,l);$/;"	v
r	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^		var r = f ();$/;"	v
r	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^		var r = f();$/;"	v
r	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLParser.hx	/^		var r;$/;"	v
r	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^			var r = ((format.color >> 16) & 0xFF) \/ 0xFF;$/;"	v
r	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^							var r = ((color & 0xFF0000) >>> 16) \/ 0xFF;$/;"	v
r	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^			var r = ((rgb & 0xFF0000) >>> 16) \/ 0xFF;$/;"	v
r	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^			var r = ((color & 0xFF0000) >>> 16) \/ 0xFF;$/;"	v
r	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var r = (color & 0xFF0000) >>> 16;$/;"	v
r	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var r = (rgb & 0xFF0000) >>> 16;$/;"	v
r	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^			var r = (rgb & 0xFF0000) >>> 16;$/;"	v
r	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var r = color[0];$/;"	v
r	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var r = 0;$/;"	v
r	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var r, g, b, a;$/;"	v
r	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^		var r = (value & 0xFF0000) >>> 16;$/;"	v
r	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^			var r = sys.net.Socket.select(null,[_socket],null,0);$/;"	v
r	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^		var r = 0;$/;"	v
r	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^		var r = ~\/^\\s+|\\s+$\/g;$/;"	v
r	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^	public var r:StringMap<Part>;$/;"	v
r	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/NMEPreloader.hx	/^		var r = backgroundColor >> 16 & 0xFF;$/;"	v
r	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/NMEPreloader.hx	/^		var r = backgroundColor >> 16 & 0xFF;$/;"	v
r	/usr/lib/haxe/std/DateTools.hx	/^		var r = new StringBuf();$/;"	v
r	/usr/lib/haxe/std/StringTools.hx	/^		var r = 0;$/;"	v
r	/usr/lib/haxe/std/haxe/CallStack.hx	/^			var r = ~\/at ([^\\\/]+?)\\$?(\\\/[^\\(]+)?\\(\\)(\\[(.*?):([0-9]+)\\])?\/;$/;"	v
r	/usr/lib/haxe/std/haxe/Http.hx	/^		var r = new flash.LoadVars();$/;"	v
r	/usr/lib/haxe/std/haxe/Http.hx	/^		var r = null;$/;"	v
r	/usr/lib/haxe/std/haxe/Http.hx	/^		var r = req = js.Browser.createXMLHttpRequest();$/;"	v
r	/usr/lib/haxe/std/haxe/Int64.hx	/^			var r = divMod(i, ten);$/;"	v
r	/usr/lib/haxe/std/haxe/Timer.hx	/^		var r = f();$/;"	v
r	/usr/lib/haxe/std/haxe/Unserializer.hx	/^		var r = DEFAULT_RESOLVER;$/;"	v
r	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^				var r = StringTools.trim(f.readLine());$/;"	v
r	/usr/lib/haxe/std/haxe/macro/Context.hx	/^		var r = new haxe.ds.StringMap();$/;"	v
r	/usr/lib/haxe/std/haxe/remoting/LocalConnection.hx	/^		var r;$/;"	v
r	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^						var r = makeRule(f);$/;"	v
r	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^				var r = getType(f.type, f.pos);$/;"	v
r	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^				var r = getType(p.t, f.pos);$/;"	v
r	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^				var r = makeRule(f);$/;"	v
r	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^		var r : DispatchRule = Reflect.field(cfg.rules, name);$/;"	v
r	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^				var r = inflateLoop();$/;"	v
r	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^						var r = z.execute(buf.buf, buf.pos, tmp, 0);$/;"	v
r	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var r = c.execute(f.data,0,s,0);$/;"	v
r	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var r = new Reader(i);$/;"	v
r	/usr/lib/haxe/std/neko/Random.hx	/^	var r : Dynamic;$/;"	v
r	/usr/lib/haxe/std/neko/net/Poll.hx	/^			var r = __dollar__amake(read.length);$/;"	v
r	/usr/lib/haxe/std/neko/net/Poll.hx	/^			var r = neko.NativeArray.alloc(a.length);$/;"	v
r	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^				var r = parseOSXConfiguration(it.next());$/;"	v
r	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^		var r = ~\/^([^:]+):([0-9]+)$\/;$/;"	v
r	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^		var r = ~\/^([^:]+):([^@]*)@([^:]+):([0-9]+)$\/;$/;"	v
r	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^		var r = ~\/user_pref\\("network\\.proxy\\.http", "([^"]+)"\\);\/;$/;"	v
r	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^		var r = ~\/user_pref\\("network\\.proxy\\.http_port", ([0-9]+)\\);\/;$/;"	v
r	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^		var r = ~\/user_pref\\("network\\.proxy\\.type", 1\\);\/;$/;"	v
r	/usr/lib/haxe/std/neko/vm/Thread.hx	/^		var r = null;$/;"	v
r	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var r = unsafeExecute(sql).next();$/;"	v
r	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^							var r = buildCond(pl[i]);$/;"	v
r	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^						var r = buildCond(e);$/;"	v
r	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^						var r = {$/;"	v
r	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^				var r = buildNum("\/", e1, e2, p);$/;"	v
r	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var r = buildCond(e);$/;"	v
r	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var r = inst.buildCond(econd);$/;"	v
r1	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var r1, g1, b1, a1, r2, g2, b2, a2;$/;"	v
r1	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^				var r1 = buildCond(e1);$/;"	v
r1	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var r1 = buildCond(e1);$/;"	v
r1	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var r1 = buildCond(e1);$/;"	v
r1	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var r1 = null;$/;"	v
r1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^		var r1X:Float = m_localAnchor1.x - bA.m_sweep.localCenter.x;$/;"	v
r1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var r1X:Float = m_localAnchor1.x - bA.m_sweep.localCenter.x;$/;"	v
r1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var r1X:Float = m_localAnchor1.x - m_localCenterA.x;$/;"	v
r1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var r1X:Float = m_localAnchor1.x - bA.m_sweep.localCenter.x;$/;"	v
r1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var r1X:Float = m_localAnchor1.x - m_localCenterA.x;$/;"	v
r1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var r1X:Float = m_localAnchor1.x - bA.m_sweep.localCenter.x;$/;"	v
r1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var r1X:Float;$/;"	v
r1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^			var r1X:Float = m_localAnchor1.x - bA.m_sweep.localCenter.x;$/;"	v
r1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^		var r1X:Float = m_localAnchor1.x - bA.m_sweep.localCenter.x;$/;"	v
r1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^		var r1X:Float;$/;"	v
r1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^		var r1Y:Float = m_localAnchor1.y - bA.m_sweep.localCenter.y;$/;"	v
r1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var r1Y:Float = m_localAnchor1.y - bA.m_sweep.localCenter.y;$/;"	v
r1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var r1Y:Float = m_localAnchor1.y - m_localCenterA.y;$/;"	v
r1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var r1Y:Float = m_localAnchor1.y - bA.m_sweep.localCenter.y;$/;"	v
r1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var r1Y:Float = m_localAnchor1.y - m_localCenterA.y;$/;"	v
r1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var r1Y:Float = m_localAnchor1.y - bA.m_sweep.localCenter.y;$/;"	v
r1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var r1Y:Float;$/;"	v
r1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^			var r1Y:Float = m_localAnchor1.y - bA.m_sweep.localCenter.y;$/;"	v
r1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^		var r1Y:Float = m_localAnchor1.y - bA.m_sweep.localCenter.y;$/;"	v
r1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^		var r1Y:Float;$/;"	v
r2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^		var r2:Float = m_radius * m_radius;$/;"	v
r2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2GravityController.hx	/^		var r2:Float = 0;$/;"	v
r2	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^			var r2 = ~\/http=([^:]+):([0-9]+)\/;$/;"	v
r2	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^				var r2 = buildCond(e2);$/;"	v
r2	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var r2 = buildCond(e2);$/;"	v
r2	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var r2 = buildCond(e2);$/;"	v
r2X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^		var r2X:Float = m_localAnchor2.x - bB.m_sweep.localCenter.x;$/;"	v
r2X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var r2X:Float = m_localAnchor2.x - bB.m_sweep.localCenter.x;$/;"	v
r2X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var r2X:Float = m_localAnchor2.x - m_localCenterB.x;$/;"	v
r2X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var r2X:Float = m_localAnchor2.x - bB.m_sweep.localCenter.x;$/;"	v
r2X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var r2X:Float = m_localAnchor2.x - m_localCenterB.x;$/;"	v
r2X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var r2X:Float = m_localAnchor2.x - bB.m_sweep.localCenter.x;$/;"	v
r2X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var r2X:Float;$/;"	v
r2X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^			var r2X:Float = m_localAnchor2.x - bB.m_sweep.localCenter.x;$/;"	v
r2X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^		var r2X:Float = m_localAnchor2.x - bB.m_sweep.localCenter.x;$/;"	v
r2X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^		var r2X:Float;$/;"	v
r2Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^		var r2Y:Float = m_localAnchor2.y - bB.m_sweep.localCenter.y;$/;"	v
r2Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var r2Y:Float = m_localAnchor2.y - bB.m_sweep.localCenter.y;$/;"	v
r2Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var r2Y:Float = m_localAnchor2.y - m_localCenterB.y;$/;"	v
r2Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var r2Y:Float = m_localAnchor2.y - bB.m_sweep.localCenter.y;$/;"	v
r2Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var r2Y:Float = m_localAnchor2.y - m_localCenterB.y;$/;"	v
r2Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var r2Y:Float = m_localAnchor2.y - bB.m_sweep.localCenter.y;$/;"	v
r2Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var r2Y:Float;$/;"	v
r2Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^			var r2Y:Float = m_localAnchor2.y - bB.m_sweep.localCenter.y;$/;"	v
r2Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^		var r2Y:Float = m_localAnchor2.y - bB.m_sweep.localCenter.y;$/;"	v
r2Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^		var r2Y:Float;$/;"	v
rA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Distance.hx	/^		var rA:Float = proxyA.m_radius;$/;"	v
rA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactConstraintPoint.hx	/^	public var rA:B2Vec2;$/;"	v
rAX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var rAX:Float = ccp.rA.x = s_worldManifold.m_points[k].x - bodyA.m_sweep.c.x;$/;"	v
rAX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var rAX:Float = point.x - bodyA.m_sweep.c.x;$/;"	v
rAX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^		var rAX:Float;$/;"	v
rAX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^		var rAX:Float = m_localAnchorA.x - bA.m_sweep.localCenter.x;$/;"	v
rAX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^		var rAX:Float = m_localAnchorA.x - bA.m_sweep.localCenter.x;$/;"	v
rAY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var rAY:Float = ccp.rA.y = s_worldManifold.m_points[k].y - bodyA.m_sweep.c.y;$/;"	v
rAY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var rAY:Float = point.y - bodyA.m_sweep.c.y;$/;"	v
rAY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^		var rAY:Float;$/;"	v
rAY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^		var rAY:Float = m_localAnchorA.y - bA.m_sweep.localCenter.y;$/;"	v
rAY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^		var rAY:Float = m_localAnchorA.y - bA.m_sweep.localCenter.y;$/;"	v
rB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Distance.hx	/^		var rB:Float = proxyB.m_radius;$/;"	v
rB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactConstraintPoint.hx	/^	public var rB:B2Vec2;$/;"	v
rBX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var rBX:Float = ccp.rB.x = s_worldManifold.m_points[k].x - bodyB.m_sweep.c.x;$/;"	v
rBX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var rBX:Float = point.x - bodyB.m_sweep.c.x;$/;"	v
rBX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^		var rBX:Float;$/;"	v
rBX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^		var rBX:Float = m_localAnchorB.x - bB.m_sweep.localCenter.x;$/;"	v
rBX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^		var rBX:Float = m_localAnchorB.x - bB.m_sweep.localCenter.x;$/;"	v
rBY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var rBY:Float = ccp.rB.y = s_worldManifold.m_points[k].y - bodyB.m_sweep.c.y;$/;"	v
rBY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var rBY:Float = point.y - bodyB.m_sweep.c.y;$/;"	v
rBY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^		var rBY:Float;$/;"	v
rBY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^		var rBY:Float = m_localAnchorB.y - bB.m_sweep.localCenter.y;$/;"	v
rBY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^		var rBY:Float = m_localAnchorB.y - bB.m_sweep.localCenter.y;$/;"	v
rX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^		var rX:Float = input.p2.x - input.p1.x;$/;"	v
rX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^		var rX: Float = input.p2.x - input.p1.x;$/;"	v
rX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^				var rX:Float = (uxX*dX + uxY*dY);$/;"	v
rX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^		var rX:Float = m_localAnchor1.x - m_bodyB.m_sweep.localCenter.x;$/;"	v
rX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^		var rX:Float;$/;"	v
rX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^		var rX:Float = m_localAnchor.x - b.m_sweep.localCenter.x;$/;"	v
rY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^		var rY:Float = input.p2.y - input.p1.y;$/;"	v
rY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^		var rY: Float = input.p2.y - input.p1.y;$/;"	v
rY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^				var rY:Float = (uyX*dX + uyY*dY);$/;"	v
rY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^		var rY:Float = m_localAnchor1.y - m_bodyB.m_sweep.localCenter.y;$/;"	v
rY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^		var rY:Float;$/;"	v
rY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^		var rY:Float = m_localAnchor.y - b.m_sweep.localCenter.y;$/;"	v
rad	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var rad = -degrees * (Math.PI \/ 180);$/;"	v
rad	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var rad = -degrees * (Math.PI \/ 180);$/;"	v
radians	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^			var radians = rotation * (Math.PI \/ 180);$/;"	v
radius	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var radius:Float = circle1.m_radius + circle2.m_radius;$/;"	v
radius	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var radius:Float = polygon.m_radius + circle.m_radius;$/;"	v
radius	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^		var radius:Float = proxyA.m_radius + proxyB.m_radius;$/;"	v
radius	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^				var radius:Float = circle.m_radius;$/;"	v
radius	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactConstraint.hx	/^	public var radius:Float = 0;$/;"	v
radius	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2EdgeAndCircleContact.hx	/^		var radius: Number = circle.m_radius;$/;"	v
radiusA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var radiusA:Float = shapeA.m_radius;$/;"	v
radiusB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var radiusB:Float = shapeB.m_radius;$/;"	v
radix is just defined to deal with doc_gen issues	/usr/lib/haxe/std/UInt.hx	/^	\/\/ TODO: radix is just defined to deal with doc_gen issues$/;"	i
random	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public function random():Float$/;"	f
random	/usr/lib/haxe/std/Math.hx	/^	static function random() : Float;$/;"	f
random	/usr/lib/haxe/std/Std.hx	/^	public static function random( x : Int ) : Int;$/;"	f
randomRange	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public function randomRange(lo:Float, hi:Float) : Float$/;"	f
random_float	/usr/lib/haxe/std/neko/Random.hx	/^	static var random_float = Lib.load("std","random_float",1);$/;"	v
random_int	/usr/lib/haxe/std/neko/Random.hx	/^	static var random_int = Lib.load("std","random_int",2);$/;"	v
random_new	/usr/lib/haxe/std/neko/Random.hx	/^	static var random_new = Lib.load("std","random_new",0);$/;"	v
random_set_seed	/usr/lib/haxe/std/neko/Random.hx	/^	static var random_set_seed = Lib.load("std","random_set_seed",2);$/;"	v
range	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^						var range;$/;"	v
range	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^				var range;$/;"	v
range	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^			var range = textField.__ranges[i];$/;"	v
range	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^						var range;$/;"	v
rangeError	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/RangeErrorTest.hx	/^		var rangeError = new RangeError ();$/;"	v
raspberryPi	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^				var raspberryPi = false;$/;"	v
raspberryPi	/usr/lib/haxe/lib/lime/2,4,3/tools/SVGExport.hx	/^				var raspberryPi = false;$/;"	v
rasterizeSVG	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ImageHelper.hx	/^	public static function rasterizeSVG (path:String, width:Int, height:Int, backgroundColor:Int = null):Image {$/;"	f
rasterizer	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ImageHelper.hx	/^		var rasterizer = PathHelper.getHaxelib (new Haxelib ("lime")) + "\/templates\/bin\/batik\/batik-rasterizer.jar";$/;"	v
ratio	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var ratio: Number;$/;"	v
ratio	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJointDef.hx	/^	public var ratio:Float;$/;"	v
ratio	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJointDef.hx	/^	public var ratio:Float;$/;"	v
ratio	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^			var ratio = ratios[i] \/ 0xFF;$/;"	v
ratio	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^			var ratio = ratios[i] \/ 0xFF;$/;"	v
ratios	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsGradientFill.hx	/^	public var ratios:Array<Float>;$/;"	v
ratios	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsGradientFill.hx	/^	public var ratios:Array<Float>;$/;"	v
ratios	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var ratios = [ 0x00, 0x88, 0xFF ];$/;"	v
raw	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^				var raw = idx + 120 < len ? 120 : len - idx;$/;"	v
rawData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^		var rawData = "";$/;"	v
rawData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^		var rawData:String = untyped lime_get_user_preference (name);$/;"	v
rawData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public var rawData (get, set):Vector<Float>;$/;"	v
rawData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public var rawData:Vector<Float>;$/;"	v
rawData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/SharedObject.hx	/^		var rawData = null;$/;"	v
rawIndices	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var rawIndices:Bool = false;$/;"	v
rawVerts	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var rawVerts:Bool = false;$/;"	v
rayCast	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^	public function rayCast(output:B2RayCastOutput, input:B2RayCastInput):Bool$/;"	f
rayCast	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^	public function rayCast(callbackMethod:B2RayCastInput -> Dynamic -> Dynamic, input:B2RayCastInput):Void$/;"	f
rayCast	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^	public function rayCast(callbackMethod:B2RayCastInput -> Dynamic -> Float, input:B2RayCastInput):Void$/;"	f
rayCast	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/IBroadPhase.hx	/^	function rayCast(callbackMethod:B2RayCastInput -> Dynamic -> Float, input:B2RayCastInput):Void;$/;"	f
rayCast	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^	public override function rayCast(output:B2RayCastOutput, input:B2RayCastInput, transform:B2Transform):Bool$/;"	f
rayCast	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public override function rayCast(output:B2RayCastOutput, input:B2RayCastInput, transform:B2Transform):Bool$/;"	f
rayCast	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	public override function rayCast(output:B2RayCastOutput, input:B2RayCastInput, transform:B2Transform):Bool$/;"	f
rayCast	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2Shape.hx	/^	public function rayCast(output:B2RayCastOutput, input:B2RayCastInput, transform:B2Transform):Bool$/;"	f
rayCast	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public function rayCast(output:B2RayCastOutput, input:B2RayCastInput):Bool$/;"	f
rayCast	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function rayCast(callbackMethod:B2Fixture -> B2Vec2 -> B2Vec2 -> Float -> Dynamic, point1:B2Vec2, point2:B2Vec2):Void$/;"	f
rayCastAll	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function rayCastAll(point1:B2Vec2, point2:B2Vec2):Array <B2Fixture>$/;"	f
rayCastAllWrapper	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		function rayCastAllWrapper(fixture:B2Fixture, point:B2Vec2, normal:B2Vec2, fraction:Float):Float$/;"	f
rayCastOne	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function rayCastOne(point1:B2Vec2, point2:B2Vec2):B2Fixture$/;"	f
rayCastOneWrapper	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		function rayCastOneWrapper(fixture:B2Fixture, point:B2Vec2, normal:B2Vec2, fraction:Float):Float$/;"	f
rayCastWrapper	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		function rayCastWrapper(input:B2RayCastInput, proxy:Dynamic):Float$/;"	f
rayCollide	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactFilter.hx	/^	public function rayCollide(userData:Dynamic, fixture:B2Fixture) : Bool {$/;"	f
rc	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var rc = unifyClass(rt);$/;"	v
rdActual	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var rdActual = actual.rawData;$/;"	v
rdExpected	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var rdExpected = expected.rawData;$/;"	v
rdev	/usr/lib/haxe/std/sys/FileStat.hx	/^	var rdev : Int;$/;"	v
rdist	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^				var rdist = (len < dist) ? len : dist;$/;"	v
rdkFile	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^						var rdkFile = unescapePath (CLIHelper.param ("Path to client-RDK-*.csj file"));$/;"	v
read	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^	public function read() : List<Entry> {$/;"	f
read	/usr/lib/haxe/std/haxe/crypto/Adler32.hx	/^	public static function read( i : haxe.io.Input ) {$/;"	f
read	/usr/lib/haxe/std/haxe/io/Input.hx	/^	public function read( nbytes : Int ) : Bytes {$/;"	f
read	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^	public function read() : List<Entry> {$/;"	f
read	/usr/lib/haxe/std/neko/vm/Module.hx	/^	public static function read( i : haxe.io.Input, l : Loader ) : Module {$/;"	f
read	/usr/lib/haxe/std/sys/io/File.hx	/^	static function read( path : String, binary : Bool = true ) : FileInput;$/;"	f
read	/usr/lib/haxe/std/sys/net/Socket.hx	/^	function read() : String;$/;"	f
readAll	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    public function readAll() {$/;"	f
readAll	/usr/lib/haxe/std/haxe/io/Input.hx	/^	public function readAll( ?bufsize : Int ) : Bytes {$/;"	f
readAttribute	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private function readAttribute(src:Input, inOutputConst:Bool, asString:Bool)$/;"	f
readBoolean	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public inline function readBoolean ():Bool {$/;"	f
readBoolean	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/IDataInput.hx	/^	public function readBoolean ():Bool;$/;"	f
readBoolean	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public inline function readBoolean ():Bool {$/;"	f
readBoolean	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IDataInput.hx	/^	public function readBoolean ():Bool;$/;"	f
readBoolean	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^    public function readBoolean():Bool {$/;"	f
readBoolean	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public inline function readBoolean ():Bool {$/;"	f
readBoolean	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataInput.hx	/^	function readBoolean ():Bool;$/;"	f
readByte	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public inline function readByte ():Int {$/;"	f
readByte	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/IDataInput.hx	/^	public function readByte ():Int;$/;"	f
readByte	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    inline function readByte(position:Int = -1) {$/;"	f
readByte	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public inline function readByte ():Int {$/;"	f
readByte	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IDataInput.hx	/^	public function readByte ():Int;$/;"	f
readByte	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^    public function readByte():Int {$/;"	f
readByte	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public inline function readByte ():Int {$/;"	f
readByte	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataInput.hx	/^	function readByte ():Int;$/;"	f
readByte	/usr/lib/haxe/std/haxe/io/BufferInput.hx	/^	override function readByte() {$/;"	f
readByte	/usr/lib/haxe/std/haxe/io/BytesInput.hx	/^	public override function readByte() : Int {$/;"	f
readByte	/usr/lib/haxe/std/haxe/io/Input.hx	/^	public function readByte() : Int {$/;"	f
readBytes	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function readBytes (bytes:ByteArray, offset:Int = 0, length:Int = 0):Void {$/;"	f
readBytes	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/IDataInput.hx	/^	public function readBytes (outData:ByteArray, inOffset:Int = 0, inLen:Int = 0):Void;$/;"	f
readBytes	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    inline function readBytes(count:Int) {$/;"	f
readBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function readBytes (data:ByteArray, offset:Int = 0, length:Int = 0):Void {$/;"	f
readBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IDataInput.hx	/^	public function readBytes (data:ByteArray, offset:Int = 0, length:Int = 0):Void;$/;"	f
readBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^	public function readBytes(bytes: ByteArray, offset: Int = 0, length: Int = 0): Void {$/;"	f
readBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public function readBytes (bytes:ByteArray, ?offset:Int = 0, ?length:Int = 0):Void {$/;"	f
readBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataInput.hx	/^	function readBytes (bytes:ByteArray, offset:UInt = 0, length:Int = 0):Void;$/;"	f
readBytes	/usr/lib/haxe/std/haxe/io/BufferInput.hx	/^	override function readBytes( buf : haxe.io.Bytes, pos : Int, len : Int ) {$/;"	f
readBytes	/usr/lib/haxe/std/haxe/io/BytesInput.hx	/^	public override function readBytes( buf : Bytes, pos, len ) : Int {$/;"	f
readBytes	/usr/lib/haxe/std/haxe/io/Input.hx	/^	public function readBytes( s : Bytes, pos : Int, len : Int ) : Int {$/;"	f
readBytes	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	public function readBytes(b,pos,len) {$/;"	f
readBytes	/usr/lib/haxe/std/neko/vm/Module.hx	/^	public static function readBytes( b : haxe.io.Bytes, loader : Loader ) : Module {$/;"	f
readBytesTo	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    inline function readBytesTo(position:Int) {$/;"	f
readCache	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^public function readCache(cache:B2SimplexCache, $/;"	f
readChunk	/usr/lib/haxe/std/haxe/Http.hx	/^	function readChunk(chunk_re : EReg, api : haxe.io.Output, buf : haxe.io.Bytes, len ) {$/;"	f
readClientData	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	function readClientData( c : ClientInfos<Client> ) {$/;"	f
readClientMessage	/usr/lib/haxe/std/neko/net/ThreadRemotingServer.hx	/^	override function readClientMessage( cnx : haxe.remoting.SocketConnection, buf : haxe.io.Bytes, pos : Int, len : Int ) {$/;"	f
readData	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^	function readData( cl : ServerClient<ClientData> ) {$/;"	f
readDigits	/usr/lib/haxe/std/haxe/Unserializer.hx	/^ 	function readDigits() {$/;"	f
readDirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^	public static function readDirectory (directory:String, ignore:Array<String> = null, paths:Array<String> = null):Array<String> {$/;"	f
readDirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ZipHelper.hx	/^	private static function readDirectory (basePath:String, path:String, files:List<Entry>):Void {$/;"	f
readDirectory	/usr/lib/haxe/std/sys/FileSystem.hx	/^	static function readDirectory( path : String ) : Array<String>;$/;"	f
readDouble	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function readDouble ():Float {$/;"	f
readDouble	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/IDataInput.hx	/^	public function readDouble ():Float;$/;"	f
readDouble	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function readDouble ():Float {$/;"	f
readDouble	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IDataInput.hx	/^	public function readDouble ():Float;$/;"	f
readDouble	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^	public function readDouble():Float { $/;"	f
readDouble	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public function readDouble ():Float {$/;"	f
readDouble	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataInput.hx	/^	function readDouble ():Float;$/;"	f
readDouble	/usr/lib/haxe/std/haxe/io/BytesInput.hx	/^	override function readDouble() {$/;"	f
readDouble	/usr/lib/haxe/std/haxe/io/Input.hx	/^	public function readDouble() : Float {$/;"	f
readEntryHeader	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^	public function readEntryHeader() : Entry {$/;"	f
readEntryHeader	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^	public function readEntryHeader() : Entry {$/;"	f
readExternal	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IExternalizable.hx	/^	function readExternal (input:IDataInput):Void;$/;"	f
readExtraFields	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^	function readExtraFields(length) {$/;"	f
readExtraFields	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^	function readExtraFields(length) {$/;"	f
readFile	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ZipHelper.hx	/^	private static function readFile (basePath:String, path:String, files:List<Entry>):Void {$/;"	f
readFile	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public static function readFile (path:String):ByteArray {$/;"	f
readFile	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	static public function readFile (path:String):ByteArray {$/;"	f
readFloat	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function readFloat ():Float {$/;"	f
readFloat	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/IDataInput.hx	/^	public function readFloat ():Float;$/;"	f
readFloat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function readFloat ():Float {$/;"	f
readFloat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IDataInput.hx	/^	public function readFloat ():Float;$/;"	f
readFloat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^	public function readFloat():Float { $/;"	f
readFloat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public function readFloat ():Float {$/;"	f
readFloat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataInput.hx	/^	function readFloat ():Float;$/;"	f
readFloat	/usr/lib/haxe/std/haxe/io/BytesInput.hx	/^	override function readFloat() {$/;"	f
readFloat	/usr/lib/haxe/std/haxe/io/Input.hx	/^	public function readFloat() : Float {$/;"	f
readFrom	/usr/lib/haxe/std/sys/net/UdpSocket.hx	/^	public function readFrom( buf : haxe.io.Bytes, pos : Int, len : Int, addr : Address ) : Int {$/;"	f
readFullBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	private function readFullBytes (bytes:Bytes, pos:Int, len:Int):Void {$/;"	f
readFullBytes	/usr/lib/haxe/std/haxe/io/Input.hx	/^	public function readFullBytes( s : Bytes, pos : Int, len : Int ) {$/;"	f
readFunction	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^	private function readFunction(max:Int, input:ByteArray):String {$/;"	f
readFunction	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^	private function readFunction (max:Int, input:ByteArray):String {$/;"	f
readGlobalsNames	/usr/lib/haxe/std/neko/vm/Module.hx	/^	public static function readGlobalsNames( i : haxe.io.Input ) {$/;"	f
readHttpResponse	/usr/lib/haxe/std/haxe/Http.hx	/^	function readHttpResponse( api : haxe.io.Output, sock : AbstractSocket ) {$/;"	f
readIndexes	/usr/lib/haxe/std/neko/net/Poll.hx	/^	public var readIndexes : ArrayAccess<Int>;$/;"	v
readInfo	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    function readInfo(header:FrameHeader, frameData:Bytes) {$/;"	f
readInt	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function readInt ():Int {$/;"	f
readInt	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/IDataInput.hx	/^	public function readInt ():Int;$/;"	f
readInt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function readInt ():Int {$/;"	f
readInt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IDataInput.hx	/^	public function readInt ():Int;$/;"	f
readInt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^	public function readInt():Int { $/;"	f
readInt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public function readInt ():Int {$/;"	f
readInt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataInput.hx	/^	function readInt ():Int;$/;"	f
readInt	/usr/lib/haxe/std/neko/vm/Module.hx	/^		function readInt() {$/;"	f
readInt16	/usr/lib/haxe/std/haxe/io/BytesInput.hx	/^	override function readInt16() {$/;"	f
readInt16	/usr/lib/haxe/std/haxe/io/Input.hx	/^	public function readInt16() {$/;"	f
readInt24	/usr/lib/haxe/std/haxe/io/Input.hx	/^	public function readInt24() {$/;"	f
readInt32	/usr/lib/haxe/std/haxe/io/BytesInput.hx	/^	override function readInt32() : Int {$/;"	f
readInt32	/usr/lib/haxe/std/haxe/io/Input.hx	/^	public function readInt32() {$/;"	f
readInt8	/usr/lib/haxe/std/haxe/io/BytesInput.hx	/^	override function readInt8() {$/;"	f
readInt8	/usr/lib/haxe/std/haxe/io/Input.hx	/^	public function readInt8() {$/;"	f
readLine	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CLIHelper.hx	/^	public static inline function readLine ():String {$/;"	f
readLine	/usr/lib/haxe/std/haxe/io/Input.hx	/^	public function readLine() : String {$/;"	f
readMessage	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^	public function readMessage() {$/;"	f
readMessage	/usr/lib/haxe/std/neko/vm/Thread.hx	/^	public static function readMessage( block : Bool ) : Dynamic {$/;"	f
readMultiByte	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public inline function readMultiByte (length:Int, charSet:String):String {$/;"	f
readMultiByte	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public inline function readMultiByte (length:Int, charSet:String):String {$/;"	f
readMultiByte	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^	public function readMultiByte(length:Int, charSet:String):String { $/;"	f
readMultiByte	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public inline function readMultiByte (length:Int, charSet:String):String {$/;"	f
readMultiByte	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataInput.hx	/^	function readMultiByte (length:UInt, charSet:String):String;$/;"	f
readNext	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    public function readNext() {$/;"	f
readObject	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataInput.hx	/^	function readObject ():Dynamic;$/;"	f
readPath	/usr/lib/haxe/std/neko/vm/Module.hx	/^	public static function readPath( name : String, path : Array<String>, loader : Loader ) {$/;"	f
readPixels	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function readPixels (x:Int, y:Int, width:Int, height:Int, format:Int, type:Int, pixels:lime.utils.ArrayBufferView):Void;$/;"	f
readPixels	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function readPixels (x:Int, y:Int, width:Int, height:Int, format:Int, type:Int, pixels:ArrayBufferView):Void {$/;"	f
readPixels	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function readPixels (x:Int, y:Int, width:Int, height:Int, format:Int, type:Int, pixels:ArrayBufferView):Void {$/;"	f
readPixels	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function readPixels(x:Int, y:Int, width:Int, height:Int, format:Int, type:Int, pixels:ByteArray):Void $/;"	f
readPixels	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function readPixels(x:Int, y:Int, width:Int, height:Int, format:Int, type:Int, pixels:ByteArray):Void;$/;"	f
readReg	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGALTokenizer.hx	/^	public function readReg (s:Destination, mh:Int, desc:Description, bytes:ByteArray):Void {$/;"	f
readShort	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function readShort ():Int {$/;"	f
readShort	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/IDataInput.hx	/^	public function readShort ():Int;$/;"	f
readShort	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function readShort ():Int {$/;"	f
readShort	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IDataInput.hx	/^	public function readShort ():Int;$/;"	f
readShort	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^	public function readShort():Int { $/;"	f
readShort	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public function readShort ():Int {$/;"	f
readShort	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataInput.hx	/^	function readShort ():Int;$/;"	f
readString	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^	public inline function readString(pos:Int, len:Int):String {$/;"	f
readString	/usr/lib/haxe/std/haxe/io/BytesInput.hx	/^	override function readString( len : Int ) {$/;"	f
readString	/usr/lib/haxe/std/haxe/io/Input.hx	/^	public function readString( len : Int ) : String {$/;"	f
readUInt16	/usr/lib/haxe/std/haxe/io/BytesInput.hx	/^	override function readUInt16() : Int {$/;"	f
readUInt16	/usr/lib/haxe/std/haxe/io/Input.hx	/^	public function readUInt16() {$/;"	f
readUInt24	/usr/lib/haxe/std/haxe/io/Input.hx	/^	public function readUInt24() {$/;"	f
readUTF	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function readUTF ():String {$/;"	f
readUTF	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/IDataInput.hx	/^	public function readUTF ():String;$/;"	f
readUTF	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function readUTF ():String {$/;"	f
readUTF	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IDataInput.hx	/^	public function readUTF ():String;$/;"	f
readUTF	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^	public function readUTF():String { $/;"	f
readUTF	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public function readUTF ():String {$/;"	f
readUTF	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataInput.hx	/^	function readUTF ():String;$/;"	f
readUTFBytes	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function readUTFBytes (len:Int):String {$/;"	f
readUTFBytes	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/IDataInput.hx	/^	public function readUTFBytes (inLen:Int):String;$/;"	f
readUTFBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function readUTFBytes (length:Int):String {$/;"	f
readUTFBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IDataInput.hx	/^	public function readUTFBytes (length:Int):String;$/;"	f
readUTFBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^	public function readUTFBytes(length:Int):String { $/;"	f
readUTFBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public function readUTFBytes (len:Int):String {$/;"	f
readUTFBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataInput.hx	/^	function readUTFBytes (length:Int):String;$/;"	f
readUnsignedByte	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public inline function readUnsignedByte ():Int {$/;"	f
readUnsignedByte	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/IDataInput.hx	/^	public function readUnsignedByte ():Int;$/;"	f
readUnsignedByte	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	inline public function readUnsignedByte ():Int {$/;"	f
readUnsignedByte	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IDataInput.hx	/^	public function readUnsignedByte ():Int;$/;"	f
readUnsignedByte	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^	public function readUnsignedByte():Int { $/;"	f
readUnsignedByte	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public inline function readUnsignedByte ():Int {$/;"	f
readUnsignedByte	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataInput.hx	/^	function readUnsignedByte ():Int;$/;"	f
readUnsignedInt	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function readUnsignedInt ():Int {$/;"	f
readUnsignedInt	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/IDataInput.hx	/^	public function readUnsignedInt ():Int;$/;"	f
readUnsignedInt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function readUnsignedInt ():Int {$/;"	f
readUnsignedInt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IDataInput.hx	/^	public function readUnsignedInt ():Int;$/;"	f
readUnsignedInt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^	public function readUnsignedInt():Int { $/;"	f
readUnsignedInt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public function readUnsignedInt ():Int {$/;"	f
readUnsignedInt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataInput.hx	/^	function readUnsignedInt ():Int;$/;"	f
readUnsignedShort	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function readUnsignedShort ():Int {$/;"	f
readUnsignedShort	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/IDataInput.hx	/^	public function readUnsignedShort ():Int;$/;"	f
readUnsignedShort	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function readUnsignedShort ():Int {$/;"	f
readUnsignedShort	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IDataInput.hx	/^	public function readUnsignedShort ():Int;$/;"	f
readUnsignedShort	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^	public function readUnsignedShort():Int { $/;"	f
readUnsignedShort	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public function readUnsignedShort ():Int {$/;"	f
readUnsignedShort	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataInput.hx	/^	function readUnsignedShort ():Int;$/;"	f
readUntil	/usr/lib/haxe/std/haxe/io/Input.hx	/^	public function readUntil( end : Int ) : String {$/;"	f
readZip	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^	public static function readZip( i : haxe.io.Input ) {$/;"	f
readZip	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^	public static function readZip( i : haxe.io.Input ) {$/;"	f
readZipDate	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^	function readZipDate() {$/;"	f
readZipDate	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^	function readZipDate() {$/;"	f
reader	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var reader = new Reader (input);$/;"	v
reader	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var reader = new mpeg.audio.MpegAudioReader(input);$/;"	v
readmode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Destination.hx	/^	public var readmode:Int; \/\/ sampler$/;"	v
readmode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Sampler.hx	/^	public var readmode:Float;$/;"	v
realofs	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLParser.hx	/^			var realofs = subline + s.indexoffset;$/;"	v
rebalance	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^	public function rebalance(iterations:Int):Void$/;"	f
rebalance	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^	public function rebalance(iterations:Int):Void$/;"	f
rebalance	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/IBroadPhase.hx	/^	function rebalance(iterations:Int):Void;$/;"	f
rebuild	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CPPHelper.hx	/^	public static function rebuild (project:HXProject, commands:Array<Array<String>>, path:String = null, buildFile:String = null):Void {$/;"	f
rebuild	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^	public override function rebuild ():Void {$/;"	f
rebuild	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/BlackBerryPlatform.hx	/^	public override function rebuild ():Void {$/;"	f
rebuild	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/EmscriptenPlatform.hx	/^	public override function rebuild ():Void {$/;"	f
rebuild	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^	public override function rebuild ():Void {$/;"	f
rebuild	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^	public override function rebuild ():Void {$/;"	f
rebuild	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/MacPlatform.hx	/^	public override function rebuild ():Void {$/;"	f
rebuild	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/TizenPlatform.hx	/^	public override function rebuild ():Void {$/;"	f
rebuild	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WebOSPlatform.hx	/^	public override function rebuild ():Void {$/;"	f
rebuild	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WindowsPlatform.hx	/^	public override function rebuild ():Void {$/;"	f
rebuildBinaries	/usr/lib/haxe/lib/lime/2,4,3/tools/RunScript.hx	/^			var rebuildBinaries = true;$/;"	v
rebuildFile	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^					var rebuildFile = project.config.get ("project.rebuild.file");$/;"	v
rebuildPath	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^					var rebuildPath = project.config.get ("project.rebuild.path");$/;"	v
rebuildSingle	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CPPHelper.hx	/^	public static function rebuildSingle (project:HXProject, flags:Array<String> = null, path:String = null, buildFile:String = null):Void {$/;"	f
rebuildTools	/usr/lib/haxe/lib/lime/2,4,3/tools/RunScript.hx	/^	private static function rebuildTools (rebuildBinaries = true):Void {$/;"	f
rebuiltLibraries	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CPPHelper.hx	/^	private static var rebuiltLibraries = new Map <String, Bool> ();$/;"	v
rebuiltPaths	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CPPHelper.hx	/^	private static var rebuiltPaths = new Map <String, Bool> ();$/;"	v
recPoints	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var recPoints:Array<Float> = [];$/;"	v
recalcPhysicsScale	Source/Env.hx	/^    public static function recalcPhysicsScale()$/;"	f
recompose	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public function recompose (components:Vector<Vector3D>, ?orientationStyle:Orientation3D):Bool {$/;"	f
recompose	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public function recompose (components:Vector<Vector3D>, orientationStyle:Orientation3D = null):Bool {$/;"	f
recomposed	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var recomposed = new Matrix3D();$/;"	v
recreate	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function recreate (surface:CairoSurface) : Void {$/;"	f
rect	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^					var rect = canvas.getBoundingClientRect ();$/;"	v
rect	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^					var rect = div.getBoundingClientRect ();$/;"	v
rect	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^					var rect = element.getBoundingClientRect ();$/;"	v
rect	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^				var rect = canvas.getBoundingClientRect ();$/;"	v
rect	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^				var rect = div.getBoundingClientRect ();$/;"	v
rect	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^				var rect = element.getBoundingClientRect ();$/;"	v
rect	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function rect (x:Float, y:Float, width:Float, height:Float):Void {};$/;"	f
rect	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^				var rect = buffer.__srcBitmapData.getColorBoundsRect (mask, color, findColor);$/;"	v
rect	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public var rect (get, null):Rectangle;$/;"	v
rect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var rect = null;$/;"	v
rect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var rect = null;$/;"	v
rect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var rect:Rectangle = sheet.__rectTile;$/;"	v
rect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var rect = bitmapData.rect;$/;"	v
rect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public var rect (get, null):Rectangle;$/;"	v
rect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^					var rect = new LimeRectangle (0, 0, __image.width, __image.height);$/;"	v
rect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var rect = __image.getColorBoundsRect (mask, color, findColor);$/;"	v
rect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var rect = hRect != null ? hRect : new Rectangle (0, 0, width, height);$/;"	v
rect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public var rect (default, null):Rectangle;$/;"	v
rect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/OpenGLView.hx	/^				var rect = null;$/;"	v
rect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/OpenGLView.hx	/^			var rect = null;$/;"	v
rect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^		var rect;$/;"	v
rect	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var rect = sprite.getRect (sprite);$/;"	v
rect	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/RectangleTest.hx	/^		var rect = new Rectangle ();$/;"	v
rect	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/RectangleTest.hx	/^		var rect = new Rectangle (0, 0, 100, 100);$/;"	v
rectData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var rectData = path.points;$/;"	v
rectangle	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function rectangle (x:Float, y:Float, width:Float, height:Float):Void {$/;"	f
rectangle	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/RectangleTest.hx	/^		var rectangle = new Rectangle ();$/;"	v
recursiveCopy	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^	public static function recursiveCopy (source:String, destination:String, context:Dynamic = null, process:Bool = true) {$/;"	f
recursiveCopyTemplate	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^	public static function recursiveCopyTemplate (templatePaths:Array <String>, source:String, destination:String, context:Dynamic = null, process:Bool = true, warnIfNotFound:Bool = true) {$/;"	f
recv	/usr/lib/haxe/std/haxe/remoting/LocalConnection.hx	/^		var recv = name + "_recv";$/;"	v
redMultiplier	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	public var redMultiplier (get, set):Float;$/;"	v
redMultiplier	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/ColorTransform.hx	/^	public var redMultiplier:Float;$/;"	v
redMultiplier	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/ColorTransform.hx	/^	public var redMultiplier:Float;$/;"	v
redOffset	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	public var redOffset (get, set):Float;$/;"	v
redOffset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/ColorTransform.hx	/^	public var redOffset:Float;$/;"	v
redOffset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/ColorTransform.hx	/^	public var redOffset:Float;$/;"	v
redirect	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^	public function redirect( url : String, ?params : haxe.ds.StringMap<String> ) {$/;"	f
redirect	/usr/lib/haxe/std/neko/Web.hx	/^	public static function redirect( url : String ) {$/;"	f
redirectTraces	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Lib.hx	/^	public static function redirectTraces () {$/;"	f
reduced	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	private var reduced:B2Vec2;$/;"	v
ref	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^			var ref = (bytes.get(0) << 8) + bytes.get(1);$/;"	v
ref	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^		var ref = stencilMask;$/;"	v
reference	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function reference ():Void {$/;"	f
referenceAngle	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJointDef.hx	/^	public var referenceAngle:Float;$/;"	v
referenceAngle	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJointDef.hx	/^	public var referenceAngle:Float;$/;"	v
referenceAngle	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJointDef.hx	/^	public var referenceAngle:Float;$/;"	v
referenceCount	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public var referenceCount (get, never):Int;$/;"	v
referenceEdge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/Features.hx	/^	public var referenceEdge (get, set):Int;$/;"	v
refill	/usr/lib/haxe/std/haxe/io/BufferInput.hx	/^	public function refill() {$/;"	f
refreshRate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/ScreenMode.hx	/^	public var refreshRate:Int;$/;"	v
refuseClient	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	function refuseClient( sock : sys.net.Socket) {$/;"	f
reg	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactFactory.hx	/^		var reg:B2ContactRegister = m_registers[type1][type2];$/;"	v
reg	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^		var reg = getGroupMatches (~\/([fov]?[tpocidavs])(\\d*)(\\.[xyzw]{1,4})?\/i, token, 3); \/\/ g1: regname, g2:regnum, g3:mask$/;"	v
reg	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^		var reg = getGroupMatches (~\/fs(\\d*)\/i, token, 1); \/\/ g1:regnum$/;"	v
reg	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^		var reg = ~\/[\\n\\r]+\/g;$/;"	v
reg	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^		var reg;$/;"	v
reg	/usr/lib/haxe/std/neko/Web.hx	/^		var reg = new EReg("^"+param+"(\\\\[|%5B)([0-9]*?)(\\\\]|%5D)=(.*?)$", "");$/;"	v
reg	/usr/lib/haxe/std/neko/Web.hx	/^		var reg = ~\/^Basic ([^=]+)=*$\/;$/;"	v
regex	/usr/lib/haxe/std/haxe/io/Path.hx	/^		var regex = ~\/([^:])\\\/+\/g;$/;"	v
regexp	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^				var regexp = new EReg ("^" + filter, "i");$/;"	v
register	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/AbstractFont.hx	/^			var register = Lib.load ("lime-legacy", "lime_legacy_font_set_factory", 1);$/;"	v
registerCallbacks	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/external/ExternalInterface.hx	/^	public static function registerCallbacks ():Void {$/;"	f
registerClassAlias	/usr/lib/haxe/std/haxe/remoting/AMFConnection.hx	/^	public static function registerClassAlias( s : String, cl : Class<Dynamic> ) {$/;"	f
registerEvents	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^	private function registerEvents (subject:EventTarget):Void {$/;"	f
registerFont	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/AbstractFont.hx	/^	public static function registerFont (name:String, factory:FontFactory):Void {$/;"	f
registerFont	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	public static function registerFont (font:Class<Font>):Void {$/;"	f
registerFont	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	public static function registerFont (font:Class<Dynamic>) {$/;"	f
registerLibrary	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public static function registerLibrary (name:String, library:AssetLibrary):Void {$/;"	f
registerLibrary	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public static function registerLibrary (name:String, library:AssetLibrary):Void {$/;"	f
registerLibrary	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public static function registerLibrary (name:String, library:AssetLibrary):Void {$/;"	f
registerManifest	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static function registerManifest (manifest:Array<Dynamic>, basepath:String):Dynamic;$/;"	f
registerModuleDependency	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function registerModuleDependency( modulePath : String, externFile : String ) {$/;"	f
registerModuleReuseCall	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function registerModuleReuseCall( modulePath : String, macroCall : String ) {$/;"	f
registerPlugin	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static function registerPlugin (plugin:Dynamic):Bool;$/;"	f
registerPlugins	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static function registerPlugins (plugins:Array<Dynamic>):Bool;$/;"	f
registerSound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static function registerSound (src:String, ?id:String, ?data:Float, ?preload:Bool = true):Dynamic;$/;"	f
registerStatics	/usr/lib/haxe/lib/lime/2,4,3/lime/project/NDLL.hx	/^	public var registerStatics:Bool;$/;"	v
registerStatics	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^						var registerStatics = true;$/;"	v
registered	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/AbstractFont.hx	/^	private static var registered:Bool;$/;"	v
regnum	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Destination.hx	/^	public var regnum:Int;$/;"	v
regread	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Description.hx	/^	public var regread:Array<Dynamic>;$/;"	v
regtostring	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLParser.hx	/^	public function regtostring (regtype:Int, regnum:Int, desc, tag):String {$/;"	f
regtype	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Destination.hx	/^	public var regtype:UInt;$/;"	v
regwrite	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Description.hx	/^	public var regwrite:Array<Dynamic>;$/;"	v
relCurveTo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function relCurveTo (dx1:Float, dy1:Float, dx2:Float, dy2:Float, dx3:Float, dy3:Float):Void {$/;"	f
relKey	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^						var relKey = null;$/;"	v
relLineTo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function relLineTo (dx:Float, dy:Float):Void {$/;"	f
relMoveTo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function relMoveTo (dx:Float, dy:Float):Void {$/;"	f
relParams	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^						var relParams = [];$/;"	v
relatedObject	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public var relatedObject:InteractiveObject;$/;"	v
relatedObject	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/FocusEvent.hx	/^	public var relatedObject:InteractiveObject;$/;"	v
relatedObject	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public var relatedObject:InteractiveObject;$/;"	v
relatedObject	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TouchEvent.hx	/^	public var relatedObject:InteractiveObject;$/;"	v
relations	/usr/lib/haxe/std/sys/db/RecordInfos.hx	/^	var relations : Array<RecordRelation>;$/;"	v
relative	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URIParser.hx	/^	public var relative:String;$/;"	v
release	/usr/lib/haxe/std/neko/vm/Lock.hx	/^	public function release() {$/;"	f
release	/usr/lib/haxe/std/neko/vm/Mutex.hx	/^	public function release() {$/;"	f
releaseDest	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^					var releaseDest = projectDirectory + "\/lib\/" + arch + "\/lib" + ndll.name + ".a";$/;"	v
releaseLib	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^					var releaseLib = PathHelper.getLibraryPath (ndll, "iPhone", "lib", libExt);$/;"	v
releaseShaderCompiler	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function releaseShaderCompiler ():Void;$/;"	f
relocatePath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^	public static function relocatePath (path:String, targetDirectory:String):String {$/;"	f
relocatePaths	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^	public static function relocatePaths (paths:Array <String>, targetDirectory:String):Array <String> {$/;"	f
relocatedPaths	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^		var relocatedPaths = paths.copy ();$/;"	v
remotingCall	/usr/lib/haxe/std/haxe/remoting/LocalConnection.hx	/^	static function remotingCall( c : LocalConnection, id : Int, path : String, args : String ) {$/;"	f
remotingResult	/usr/lib/haxe/std/haxe/remoting/LocalConnection.hx	/^	static function remotingResult( c : LocalConnection, id : Int, result : String ) {$/;"	f
remove	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Event.hx	/^	public function remove (listener:T):Void {$/;"	f
remove	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function remove ():Void {};$/;"	f
remove	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var remove = false;$/;"	v
remove	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	public function remove (channel:SoundChannel):Void {$/;"	f
remove	/usr/lib/haxe/std/Array.hx	/^	function remove( x : T ) : Bool;$/;"	f
remove	/usr/lib/haxe/std/List.hx	/^	public function remove( v : T ) : Bool {$/;"	f
remove	/usr/lib/haxe/std/Map.hx	/^	public function remove(k:K):Bool;$/;"	f
remove	/usr/lib/haxe/std/Map.hx	/^	public inline function remove(key:K) return this.remove(key);$/;"	f
remove	/usr/lib/haxe/std/Xml.hx	/^	function remove( att : String ) : Void;$/;"	f
remove	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^	public function remove(key:K) {$/;"	f
remove	/usr/lib/haxe/std/haxe/ds/GenericStack.hx	/^	public function remove( v : T ) : Bool {$/;"	f
remove	/usr/lib/haxe/std/haxe/ds/HashMap.hx	/^	public inline function remove(k:K) {$/;"	f
remove	/usr/lib/haxe/std/haxe/ds/IntMap.hx	/^	public function remove( key : Int ) : Bool;$/;"	f
remove	/usr/lib/haxe/std/haxe/ds/ObjectMap.hx	/^	public function remove(key:K):Bool;$/;"	f
remove	/usr/lib/haxe/std/haxe/ds/StringMap.hx	/^	public function remove( key : String ) : Bool;$/;"	f
remove	/usr/lib/haxe/std/haxe/ds/WeakMap.hx	/^	public function remove(key:K):Bool {$/;"	f
remove	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	function remove( name : String ) : Void;$/;"	f
removeAllEventListeners	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public function removeAllEventListeners (?type:String):Void;$/;"	f
removeAllEventListeners	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static function removeAllEventListeners (?type:String):Void;$/;"	f
removeAllSounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static function removeAllSounds ():Void;$/;"	f
removeAttribute	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function removeAttribute (name:String):Void {};$/;"	f
removeAttributeNS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function removeAttributeNS (namespaceURI:String, localName:String):Void {};$/;"	f
removeAttributeNode	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function removeAttributeNode (oldAttr:Dynamic \/*Attr*\/):Dynamic \/*Attr*\/ { return null; };$/;"	f
removeBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function removeBitmapData (id:String):Bool {$/;"	f
removeBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function removeBitmapData (id:String):Bool;$/;"	f
removeBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function removeBitmapData (id:String):Bool {$/;"	f
removeBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function removeBitmapData (id:String):Bool;$/;"	f
removeBody	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2Controller.hx	/^	public function removeBody(body:B2Body) : Void$/;"	f
removeChild	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function removeChild (oldChild:Dynamic \/*Node*\/):Dynamic \/*Node*\/ { return null; };$/;"	f
removeChild	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function removeChild (child:Dynamic \/*DisplayObject*\/):Dynamic \/*DisplayObject*\/ { return null; };$/;"	f
removeChild	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^	public function removeChild (child:DisplayObject):DisplayObject {$/;"	f
removeChild	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^	public function removeChild (child:DisplayObject):DisplayObject {$/;"	f
removeChild	/usr/lib/haxe/std/Xml.hx	/^	function removeChild( x : Xml ) : Bool;$/;"	f
removeChildAt	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function removeChildAt (index:Int):Dynamic \/*DisplayObject*\/ { return null; };$/;"	f
removeChildAt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^	public function removeChildAt (index:Int):DisplayObject {$/;"	f
removeChildAt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^	public function removeChildAt (index:Int):DisplayObject {$/;"	f
removeChildren	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function removeChildren (beginIndex:Int = 0, endIndex:Int = 2147483647):Void {};$/;"	f
removeChildren	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^	public function removeChildren (beginIndex:Int = 0, endIndex:Int = 0x7FFFFFFF):Void {$/;"	f
removeChildren	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^	public function removeChildren (beginIndex:Int = 0, endIndex:Int = 0x7FFFFFFF):Void {$/;"	f
removeController	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function removeController(c:B2Controller) : Void$/;"	f
removeDirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^	public static function removeDirectory (directory:String):Void {$/;"	f
removeEventListener	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function removeEventListener (type:String, listener:Dynamic \/*EventListener*\/, ?useCapture:Bool):Void {};$/;"	f
removeEventListener	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function removeEventListener (type:String, listener:Dynamic->Void, useCapture:Bool = false):Void {};$/;"	f
removeEventListener	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public static function removeEventListener (type:String, listener:Dynamic, capture:Bool = false):Void {$/;"	f
removeEventListener	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public static function removeEventListener (type:String, listener:Dynamic, capture:Bool = false):Void {$/;"	f
removeEventListener	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/EventDispatcher.hx	/^	public function removeEventListener (type:String, listener:Dynamic->Void, capture:Bool = false):Void {$/;"	f
removeEventListener	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/IEventDispatcher.hx	/^	public function removeEventListener (type:String, listener:Function, useCapture:Bool = false):Void;$/;"	f
removeEventListener	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/EventDispatcher.hx	/^	public function removeEventListener (type:String, listener:Dynamic->Void, capture:Bool = false):Void {$/;"	f
removeEventListener	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/IEventDispatcher.hx	/^	public function removeEventListener (type:String, listener:Dynamic->Void, useCapture:Bool = false):Void;$/;"	f
removeEventListener	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public function removeEventListener(type:String, listener:Dynamic, ?useCapture:Bool):Void;$/;"	f
removeEventListener	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static function removeEventListener (type:String, listener:Dynamic, ?useCapture:Bool):Void;$/;"	f
removeField	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^	public static function removeField( className : String, field : String, ?isStatic : Bool ) {$/;"	f
removeFont	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function removeFont (id:String):Bool {$/;"	f
removeFont	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function removeFont (id:String):Bool;$/;"	f
removeFont	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function removeFont (id:String):Bool {$/;"	f
removeFont	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function removeFont (id:String):Bool;$/;"	f
removeFromCache	/usr/lib/haxe/std/sys/db/Manager.hx	/^	function removeFromCache( x : T ) {$/;"	f
removeLeaf	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^	private function removeLeaf(leaf:B2DynamicTreeNode):Void$/;"	f
removeLoop	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^	function removeLoop(k:K, node:TreeNode<K,V>) {$/;"	f
removeManifest	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static function removeManifest (manifest:Array<Dynamic>):Dynamic;$/;"	f
removeMinBinding	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^	function removeMinBinding(t:TreeNode<K,V>) {$/;"	f
removeModule	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public function removeModule (module:IModule):Void {$/;"	f
removeRecursive	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private function removeRecursive(file)$/;"	f
removeRenderMethod	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function removeRenderMethod (func:Event -> Void):Void {$/;"	f
removeRenderer	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public function removeRenderer (renderer:Renderer):Void {$/;"	f
removeSound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function removeSound (id:String):Bool {$/;"	f
removeSound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function removeSound (id:String):Bool;$/;"	f
removeSound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function removeSound (id:String):Bool {$/;"	f
removeSound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function removeSound (id:String):Bool;$/;"	f
removeSound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static function removeSound (src:String):Void;$/;"	f
removeTrailingSlashes	/usr/lib/haxe/std/haxe/io/Path.hx	/^	public static function removeTrailingSlashes ( path : String ) : String {$/;"	f
removeWindow	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public function removeWindow (window:Window):Void {$/;"	f
renabled	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^		var renabled = ~\/"ProxyEnable"=dword:0000000(0|1)\/;$/;"	v
rename	/usr/lib/haxe/std/sys/FileSystem.hx	/^	static function rename( path : String, newPath : String ) : Void;$/;"	f
render	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashRenderer.hx	/^	public function render ():Void {$/;"	f
render	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Renderer.hx	/^	public function render ():Void {$/;"	f
render	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeRenderer.hx	/^	public function render ():Void {$/;"	f
render	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function render (context:RenderContext):Void {$/;"	f
render	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function render (context:RenderContext):Void;$/;"	f
render	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function render (context:RenderContext):Void { }$/;"	f
render	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Renderer.hx	/^	private function render ():Void {$/;"	f
render	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/AbstractRenderer.hx	/^	public function render (stage:Stage):Void {$/;"	f
render	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^	public static function render (textField:TextField) {$/;"	f
render	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoBitmap.hx	/^	public static inline function render (bitmap:Bitmap, renderSession:RenderSession):Void {$/;"	f
render	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^	public static function render (graphics:Graphics, renderSession:RenderSession):Void {$/;"	f
render	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoRenderer.hx	/^	public override function render (stage:Stage):Void {$/;"	f
render	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoShape.hx	/^	public static function render (shape:DisplayObject, renderSession:RenderSession):Void {$/;"	f
render	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^	public static function render (textField:TextField, renderSession:RenderSession) {$/;"	f
render	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasBitmap.hx	/^	public static inline function render (bitmap:Bitmap, renderSession:RenderSession):Void {$/;"	f
render	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^	public static function render (graphics:Graphics, renderSession:RenderSession):Void {$/;"	f
render	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasRenderer.hx	/^	public override function render (stage:Stage):Void {$/;"	f
render	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasShape.hx	/^	public static inline function render (shape:DisplayObject, renderSession:RenderSession):Void {$/;"	f
render	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^	public static inline function render (textField:TextField, renderSession:RenderSession):Void {$/;"	f
render	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMBitmap.hx	/^	public static inline function render (bitmap:Bitmap, renderSession:RenderSession):Void {$/;"	f
render	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMRenderer.hx	/^	public override function render (stage:Stage):Void {$/;"	f
render	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMShape.hx	/^	public static inline function render (shape:DisplayObject, renderSession:RenderSession):Void {$/;"	f
render	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMTextField.hx	/^	public static inline function render (textField:TextField, renderSession:RenderSession):Void {$/;"	f
render	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLBitmap.hx	/^	public static inline function render (bitmap:Bitmap, renderSession:RenderSession):Void {$/;"	f
render	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	public override function render (stage:Stage):Void {$/;"	f
render	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLTextField.hx	/^	public static function render (textField:TextField, renderSession:RenderSession) {$/;"	f
render	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public static function render (object:DisplayObject, renderSession:RenderSession):Void {$/;"	f
render	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function render (context:RenderContext):Void {$/;"	f
render	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DirectRenderer.hx	/^	public var render (get, set):Dynamic;$/;"	v
render	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function render (context:RenderContext):Void {$/;"	f
renderBatch	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	function renderBatch(state:State, size:Int, start:Int) {$/;"	f
renderBitmap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	public static function renderBitmap (shape:DisplayObject, renderSession:RenderSession):Void {$/;"	f
renderBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	public function renderBitmapData(bitmapData:BitmapData, smoothing:Bool, matrix:Matrix, ct:ColorTransform, ?alpha:Float = 1, ?blendMode:BlendMode, ?pixelSnapping:PixelSnapping, bgra:Bool = false) {$/;"	f
renderBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterTexture.hx	/^	public var renderBuffer:GLRenderbuffer;$/;"	v
renderBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^	private static var renderBuffer:GLRenderbuffer;$/;"	v
renderCachedGraphics	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	public function renderCachedGraphics(object:DisplayObject) {$/;"	f
renderCanvas	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMBitmap.hx	/^	private static function renderCanvas (bitmap:Bitmap, renderSession:RenderSession):Void {$/;"	f
renderDebug	Source/Main.hx	/^        private var renderDebug:Bool = false;$/;"	v
renderDisplayObject	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	public function renderDisplayObject (displayObject:DisplayObject, projection:Point, buffer:GLFramebuffer = null):Void {$/;"	f
renderDrawTriangles	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	private static function renderDrawTriangles(bucket:GLBucket, shader:Shader, renderSession:RenderSession) {$/;"	f
renderEventInfo	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private var renderEventInfo = new RenderEventInfo (RENDER);$/;"	v
renderFill	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	private static function renderFill(bucket:GLBucket, shader:Shader, renderSession:RenderSession) {$/;"	f
renderGlyph	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	public function renderGlyph (glyph:Glyph, fontSize:Int):Image {$/;"	f
renderGlyph	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/AbstractFont.hx	/^	public function renderGlyph (char:Int):BitmapData {$/;"	f
renderGlyphInternal	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/AbstractFont.hx	/^	private function renderGlyphInternal (char:Int):Dynamic {$/;"	f
renderGlyphs	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	public function renderGlyphs (glyphs:Array<Glyph>, fontSize:Int):Map<Glyph, Image> {$/;"	f
renderGraphics	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public static function renderGraphics (object:DisplayObject, renderSession:RenderSession, ?localCoords:Bool = false):Void {$/;"	f
renderImage	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMBitmap.hx	/^	private static function renderImage (bitmap:Bitmap, renderSession:RenderSession):Void {$/;"	f
renderMask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^	public static function renderMask (graphics:Graphics, renderSession:RenderSession) {$/;"	f
renderMask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^	public static function renderMask (graphics:Graphics, renderSession:RenderSession) {$/;"	f
renderRequest	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public var renderRequest:Void -> Void; $/;"	v
renderSession	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/AbstractMaskManager.hx	/^	private var renderSession:RenderSession;$/;"	v
renderSession	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/AbstractRenderer.hx	/^	private var renderSession:RenderSession;$/;"	v
renderSession	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^	public var renderSession:RenderSession;$/;"	v
renderSession	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GLMaskManager.hx	/^	private var renderSession:RenderSession;$/;"	v
renderSession	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	var renderSession:RenderSession;$/;"	v
renderSession	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^				var renderSession = @:privateAccess Lib.current.stage.__renderer.renderSession;$/;"	v
renderSession	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^				var renderSession = @:privateAccess renderer.renderSession;$/;"	v
renderSession	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^				var renderSession = new RenderSession ();$/;"	v
renderSession	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var renderSession = @:privateAccess renderer.renderSession;$/;"	v
renderShape	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/AbstractRenderer.hx	/^	public function renderShape (shape:Shape):Void {$/;"	f
renderText	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^	private static inline function renderText (textField:TextField, text:String, format:TextFormat, offsetX:Float, bounds:Rectangle):Void {$/;"	f
renderText	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^	private static function renderText (textField:TextField, text:String, format:TextFormat, offsetX:Float, bounds:Rectangle):Void {$/;"	f
renderText	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^	private static inline function renderText (textField:TextField, text:String, format:TextFormat, offsetX:Float, bounds:Rectangle ):Void {$/;"	f
renderTiles	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	public function renderTiles(object:DisplayObject, sheet:Tilesheet, tileData:Array<Float>, smooth:Bool = false, flags:Int = 0, count:Int = -1) {		$/;"	f
renderTransparent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var renderTransparent = renderSession.renderer.transparent;$/;"	v
renderbuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	private var renderbuffer:GLRenderbuffer;$/;"	v
renderbufferStorage	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function renderbufferStorage (target:Int, internalformat:Int, width:Int, height:Int):Void;$/;"	f
renderbufferStorage	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function renderbufferStorage (target:Int, internalformat:Int, width:Int, height:Int):Void {$/;"	f
renderbufferStorage	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function renderbufferStorage (target:Int, internalformat:Int, width:Int, height:Int):Void {$/;"	f
renderbufferStorage	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function renderbufferStorage(target:Int, internalformat:Int, width:Int, height:Int):Void $/;"	f
renderbufferStorage	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function renderbufferStorage(target:Int, internalformat:Int, width:Int, height:Int):Void;$/;"	f
renderer	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashApplication.hx	/^			var renderer = new Renderer (window);$/;"	v
renderer	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Application.hx	/^			var renderer = new Renderer (window);$/;"	v
renderer	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^			var renderer = new Renderer (window);$/;"	v
renderer	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public var renderer (get, null):Renderer;$/;"	v
renderer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/RenderSession.hx	/^	public var renderer:AbstractRenderer;$/;"	v
renderer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^			var renderer = @:privateAccess Lib.current.stage.__renderer;$/;"	v
renderer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var renderer = @:privateAccess Lib.current.stage.__renderer;$/;"	v
renderers	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public var renderers (default, null):Array<Renderer>;$/;"	v
repeat	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Event.hx	/^			var repeat = $ethis.repeat;$/;"	v
repeat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsBitmapFill.hx	/^	public var repeat:Bool;$/;"	v
repeat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsBitmapFill.hx	/^	public var repeat:Bool;$/;"	v
repeatCount	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Timer.hx	/^	public var repeatCount:Int;$/;"	v
repeatCount	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/Timer.hx	/^	public var repeatCount (default, set):Int;$/;"	v
replace	/usr/lib/haxe/std/EReg.hx	/^	public function replace( s : String, by : String ) : String {$/;"	f
replace	/usr/lib/haxe/std/StringTools.hx	/^	public static function replace( s : String, sub : String, by : String ) : String {$/;"	f
replaceChild	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function replaceChild (newChild:Dynamic \/*Node*\/, oldChild:Dynamic \/*Node*\/):Dynamic \/*Node*\/ { return null; };$/;"	f
replaceText	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public function replaceText (beginIndex:Int, endIndex:Int, newText:String):Void {$/;"	f
replacer	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^	var replacer : Dynamic -> Dynamic -> Dynamic;$/;"	v
report	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^	public function report(constraints:Array <B2ContactConstraint>) : Void$/;"	f
req	/usr/lib/haxe/std/haxe/Http.hx	/^	var req:flash.net.URLLoader;$/;"	v
req	/usr/lib/haxe/std/haxe/Http.hx	/^	var req:js.html.XMLHttpRequest;$/;"	v
request	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthRequest.hx	/^	public var request:URLRequest;$/;"	v
request	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var request = customRequest (method, path, data);$/;"	v
request	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var request:URLRequest;$/;"	v
request	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^			var request = new SampleDataEvent (SampleDataEvent.SAMPLE_DATA);$/;"	v
request	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^				var request = new SampleDataEvent (SampleDataEvent.SAMPLE_DATA);$/;"	v
request	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^		var request = new SampleDataEvent (SampleDataEvent.SAMPLE_DATA);$/;"	v
request	/usr/lib/haxe/std/haxe/Http.hx	/^		var request = new flash.net.URLRequest( small_url );$/;"	v
request	/usr/lib/haxe/std/haxe/Http.hx	/^		var request = url_regexp.matched(4);$/;"	v
request	/usr/lib/haxe/std/haxe/Http.hx	/^	public function request( ?post : Bool ) : Void {$/;"	f
request	/usr/lib/haxe/std/haxe/remoting/SocketConnection.hx	/^		var request;$/;"	v
request	/usr/lib/haxe/std/sys/db/Connection.hx	/^	function request( s : String ) : ResultSet;$/;"	f
requestContext3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage3D.hx	/^	public function requestContext3D (context3DRenderMode:String = ""):Void {$/;"	f
requestFullScreen	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function requestFullScreen (flags:Int):Void {};$/;"	f
requestFullscreen	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function requestFullscreen ():Void {};$/;"	f
requestHeaders	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLRequest.hx	/^	public var requestHeaders:Array<URLRequestHeader>;$/;"	v
requestHeaders	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequest.hx	/^	public var requestHeaders:Array<URLRequestHeader>;$/;"	v
requestHeaders	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLRequest.hx	/^	public var requestHeaders:Array<URLRequestHeader>;$/;"	v
requestPointerLock	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function requestPointerLock ():Void {};$/;"	f
requestSoftKeyboard	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function requestSoftKeyboard ():Bool { return false; };$/;"	f
requestSoftKeyboard	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/InteractiveObject.hx	/^	public function requestSoftKeyboard ():Bool {$/;"	f
requestSoftKeyboard	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/InteractiveObject.hx	/^	public function requestSoftKeyboard ():Bool {$/;"	f
requestUrl	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^	private function requestUrl (url:String, method:URLRequestMethod, data:Dynamic, requestHeaders:Array<URLRequestHeader>):Void {$/;"	f
requestUrl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^	private function requestUrl (url:String, method:URLRequestMethod, data:Dynamic, requestHeaders:Array<URLRequestHeader>):Void {$/;"	f
requestUrl	/usr/lib/haxe/std/haxe/Http.hx	/^	public static function requestUrl( url : String ) : String {$/;"	f
requestVideoStatus	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/NetStream.hx	/^	public function requestVideoStatus ():Void {$/;"	f
requestedType	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^		var requestedType = type != null ? cast (type, AssetType) : null;$/;"	v
requestedType	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^		var requestedType = type != null ? cast (type, AssetType) : null;$/;"	v
requiredCapabilities	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^		var requiredCapabilities = [];$/;"	v
requiredDefines	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^				var requiredDefines = optional.split (" ");$/;"	v
requiredVariableDescriptions	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var requiredVariableDescriptions = [];$/;"	v
requiredVariableDescriptions	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var requiredVariableDescriptions = new Array <String> ();$/;"	v
requiredVariables	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var requiredVariables = [];$/;"	v
requiredVariables	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var requiredVariables = new Array <String> ();$/;"	v
res	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^		var res = lime_al_source_unqueue_buffers (source, 1);$/;"	v
res	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLRequest.hx	/^		var res = requestHeaders;$/;"	v
res	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^		var res:Array<Int> = lime_capabilities_get_screen_resolutions ();$/;"	v
res	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/SharedObject.hx	/^		var res = Browser.getLocalStorage ();$/;"	v
res	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLRequest.hx	/^		var res = requestHeaders;$/;"	v
res	/usr/lib/haxe/std/neko/Web.hx	/^		var res = new Array<String>();$/;"	v
reserve	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	private function reserve(count:Int):Void$/;"	f
reset	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Manifold.hx	/^	public function reset() : Void{$/;"	f
reset	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ManifoldPoint.hx	/^	public function reset() : Void{$/;"	f
reset	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2CircleContact.hx	/^	public override function reset(fixtureA:B2Fixture = null, fixtureB:B2Fixture = null):Void{$/;"	f
reset	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	public function reset(fixtureA:B2Fixture = null, fixtureB:B2Fixture = null):Void$/;"	f
reset	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2EdgeAndCircleContact.hx	/^	public override function reset(fixtureA:B2Fixture = null, fixtureB:B2Fixture = null):Void{$/;"	f
reset	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndCircleContact.hx	/^	public override function reset(fixtureA:B2Fixture = null, fixtureB:B2Fixture = null):Void{$/;"	f
reset	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^	public override function reset(fixtureA:B2Fixture = null, fixtureB:B2Fixture = null):Void{$/;"	f
reset	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolygonContact.hx	/^	public override function reset(fixtureA:B2Fixture = null, fixtureB:B2Fixture = null): Void{$/;"	f
reset	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLEasy.hx	/^	public static function reset (handle:CURL):CURLCode {$/;"	f
reset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public function reset ():Void {$/;"	f
reset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public function reset() {$/;"	f
reset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public function reset():Void {$/;"	f
reset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Timer.hx	/^	public function reset ():Void {$/;"	f
reset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/Timer.hx	/^	public function reset ():Void {$/;"	f
reset bound textures, buffers... ?	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		\/\/TODO reset bound textures, buffers... ?$/;"	i
resetBits	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	function resetBits() {$/;"	f
resetClip	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function resetClip ():Void {$/;"	f
resetColor	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/LogHelper.hx	/^	public static var resetColor = "\\x1b[0m";$/;"	v
resetMassData	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function resetMassData():Void$/;"	f
resize	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Main.hx	/^	function resize(e) $/;"	f
resize	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashWindow.hx	/^	public function resize (width:Int, height:Int):Void {$/;"	f
resize	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^	public function resize (width:Int, height:Int):Void {$/;"	f
resize	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	public function resize (width:Int, height:Int):Void {$/;"	f
resize	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public function resize (newWidth:Int, newHeight:Int):Void {$/;"	f
resize	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageCanvasUtil.hx	/^	public static function resize (image:Image, newWidth:Int, newHeight:Int):Void {$/;"	f
resize	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	public static function resize (image:Image, newWidth:Int, newHeight:Int):Void {$/;"	f
resize	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public function resize (width:Int, height:Int):Void {$/;"	f
resize	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var resize = function (bytes:ByteArray, length:Int) {$/;"	v
resize	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/AbstractRenderer.hx	/^	public function resize (width:Int, height:Int):Void {$/;"	f
resize	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	public override function resize (width:Int, height:Int):Void {$/;"	f
resize	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterTexture.hx	/^	public function resize (width:Int, height:Int):Void {$/;"	f
resize	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public override function resize (width:Int, height:Int):Void {$/;"	f
resize	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public function resize (width:Int, height:Int):Void {$/;"	f
resize	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var resize = function (bytes:ByteArray, length:Int):Void {$/;"	v
resizeBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	public static function resizeBuffer (image:Image, newWidth:Int, newHeight:Int):Void {$/;"	f
resizeImage	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ImageHelper.hx	/^	public static function resizeImage (image:Image, width:Int, height:Int):Image {$/;"	f
resolve	/usr/lib/haxe/std/haxe/Template.hx	/^	function resolve( v : String ) : Dynamic {$/;"	f
resolve	/usr/lib/haxe/std/haxe/remoting/AMFConnection.hx	/^	public function resolve( name ) : AsyncConnection {$/;"	f
resolve	/usr/lib/haxe/std/haxe/remoting/AsyncAdapter.hx	/^	public function resolve( name ) : AsyncConnection {$/;"	f
resolve	/usr/lib/haxe/std/haxe/remoting/AsyncConnection.hx	/^	function resolve( name : String ) : AsyncConnection;$/;"	f
resolve	/usr/lib/haxe/std/haxe/remoting/AsyncDebugConnection.hx	/^	public function resolve( name ) : AsyncConnection {$/;"	f
resolve	/usr/lib/haxe/std/haxe/remoting/Connection.hx	/^	function resolve( name : String ) : Connection;$/;"	f
resolve	/usr/lib/haxe/std/haxe/remoting/DelayedConnection.hx	/^	public function resolve( name ) : AsyncConnection {$/;"	f
resolve	/usr/lib/haxe/std/haxe/remoting/ExternalConnection.hx	/^	public function resolve(field) : Connection {$/;"	f
resolve	/usr/lib/haxe/std/haxe/remoting/FlashJsConnection.hx	/^	public function resolve( name ) : AsyncConnection {$/;"	f
resolve	/usr/lib/haxe/std/haxe/remoting/HttpAsyncConnection.hx	/^	public function resolve( name ) : AsyncConnection {$/;"	f
resolve	/usr/lib/haxe/std/haxe/remoting/HttpConnection.hx	/^	public function resolve( name ) : Connection {$/;"	f
resolve	/usr/lib/haxe/std/haxe/remoting/LocalConnection.hx	/^	public function resolve( name ) : AsyncConnection {$/;"	f
resolve	/usr/lib/haxe/std/haxe/remoting/SocketConnection.hx	/^	public function resolve(name) : AsyncConnection {$/;"	f
resolve	/usr/lib/haxe/std/haxe/remoting/SyncSocketConnection.hx	/^	public function resolve( name ) : Connection {$/;"	f
resolve	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^	public function resolve( name : String ) : Bool {$/;"	f
resolve	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^	public function resolve( name : String ) : Fast {$/;"	f
resolve	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^	public function resolve( name : String ) : List<Fast> {$/;"	f
resolve	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^	public function resolve( name : String ) : String {$/;"	f
resolve	/usr/lib/haxe/std/haxe/xml/Proxy.hx	/^	public function resolve(k) {$/;"	f
resolveClass	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	private static function resolveClass (name:String):Class <Dynamic> {$/;"	f
resolveClass	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	private static function resolveClass (name:String):Class <Dynamic> {$/;"	f
resolveClass	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^	private static function resolveClass (name:String):Class <Dynamic> {$/;"	f
resolveClass	/usr/lib/haxe/std/Type.hx	/^	public static function resolveClass( name : String ) : Class<Dynamic>;$/;"	f
resolveClass	/usr/lib/haxe/std/haxe/Unserializer.hx	/^	function resolveClass( name : String ) : Class<Dynamic>;$/;"	f
resolveEnum	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	private static function resolveEnum (name:String):Enum <Dynamic> {$/;"	f
resolveEnum	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	private static function resolveEnum (name:String):Enum <Dynamic> {$/;"	f
resolveEnum	/usr/lib/haxe/std/Type.hx	/^	public static function resolveEnum( name : String ) : Enum<Dynamic>;$/;"	f
resolveEnum	/usr/lib/haxe/std/haxe/Unserializer.hx	/^	function resolveEnum( name : String ) : Enum<Dynamic>;$/;"	f
resolveName	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^	function resolveName( name : String ) {$/;"	f
resolvePath	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function resolvePath( file : String ) {$/;"	f
resolver	/usr/lib/haxe/std/haxe/Unserializer.hx	/^ 	var resolver : TypeResolver;$/;"	v
resourceName	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^							var resourceName = "__ASSET__" + metaName + "_" + (classType.pack.length > 0 ? classType.pack.join ("_") + "_" : "") + classType.name;$/;"	v
resourceName	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^			var resourceName = "LIME_font_" + (classType.pack.length > 0 ? classType.pack.join ("_") + "_" : "") + classType.name;$/;"	v
resourceName	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Asset.hx	/^	public var resourceName:String;$/;"	v
resourceName	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^							var resourceName = "__ASSET__" + metaName + "_" + (classType.pack.length > 0 ? classType.pack.join ("_") + "_" : "") + classType.name;$/;"	v
resourceName	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^			var resourceName = "NME_font_" + (classType.pack.length > 0 ? classType.pack.join ("_") + "_" : "") + classType.name;$/;"	v
resourceName	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^							var resourceName = "__ASSET__" + metaName + "_" + (classType.pack.length > 0 ? classType.pack.join ("_") + "_" : "") + classType.name;$/;"	v
resourceName	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^			var resourceName = "NME_font_" + (classType.pack.length > 0 ? classType.pack.join ("_") + "_" : "") + classType.name;$/;"	v
resourceType	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^								var resourceType = "image\/png";$/;"	v
resourceType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^								var resourceType = "image\/png";$/;"	v
resourceType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^								var resourceType = "image\/png";$/;"	v
resources	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Context3D.hx	/^	public static var resources:Array<Dynamic> = [];$/;"	v
response	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var response = load (GET, "account\/settings\/mine\/", null);$/;"	v
response	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var response = load (GET, 'apps\/app\/', null);$/;"	v
response	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var response = load (GET, 'apps\/validation\/$uploadID\/', null);$/;"	v
response	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var response = load (POST, 'apps\/app\/', Json.stringify ({ upload: uploadID }));$/;"	v
response	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var response = load (PUT, 'apps\/app\/$appID\/', Json.stringify (object));$/;"	v
response	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var response:Dynamic = marketplace.getUserAccount ();$/;"	v
response	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var response:Dynamic = {};$/;"	v
response	/usr/lib/haxe/std/haxe/Http.hx	/^		var response = headers.shift();$/;"	v
responseCode	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^		var responseCode = CURLEasy.getinfo(__curl, RESPONSE_CODE);$/;"	v
responseCode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^		var responseCode = CURLEasy.getinfo (__curl, RESPONSE_CODE);$/;"	v
responseData	/usr/lib/haxe/std/haxe/Http.hx	/^	public var responseData(default, null) : Null<String>;$/;"	v
responseHeaders	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/HTTPStatusEvent.hx	/^	public var responseHeaders : Array<flash.net.URLRequestHeader>;$/;"	v
responseHeaders	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/HTTPStatusEvent.hx	/^	public var responseHeaders:Array<Dynamic>;$/;"	v
responseHeaders	/usr/lib/haxe/std/haxe/Http.hx	/^	public var responseHeaders : haxe.ds.StringMap<String>;$/;"	v
responseURL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/HTTPStatusEvent.hx	/^	public var responseURL:String;$/;"	v
responseURL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/HTTPStatusEvent.hx	/^	public var responseURL:String;$/;"	v
rest	/usr/lib/haxe/std/haxe/Unserializer.hx	/^			var rest = len & 3;$/;"	v
restitution	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ContactPoint.hx	/^	public var restitution:Float;$/;"	v
restitution	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2FixtureDef.hx	/^	public var restitution:Float;$/;"	v
restitution	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactConstraint.hx	/^	public var restitution:Float = 0;$/;"	v
restitution	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var restitution:Float = B2Settings.b2MixRestitution(fixtureA.getRestitution(), fixtureB.getRestitution());$/;"	v
restore	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function restore ():Void {};$/;"	f
restore	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function restore ():Void {$/;"	f
restrict	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var restrict:String;$/;"	v
result	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^		var result:Bool = true;$/;"	v
result	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^		var result:Bool = x > 0 && (x & (x - 1)) == 0;$/;"	v
result	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var result:Array <B2Fixture> = new Array <B2Fixture>();$/;"	v
result	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var result:B2Fixture;$/;"	v
result	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^				var result = lime_application_quit (handle);$/;"	v
result	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^		var result = new Array<String> ();$/;"	v
result	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^		var result = clone ();$/;"	v
result	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URIParser.hx	/^		var result:Array<KVPair> = [];$/;"	v
result	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^		var result = CURLEasy.perform(__curl);$/;"	v
result	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLVariables.hx	/^		var result = new Array<String> ();$/;"	v
result	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthRequest.hx	/^		var result = "";$/;"	v
result	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthRequest.hx	/^		var result = (scheme + ":\/\/" + authority + (port == null ? "" : ":" + port) + path);$/;"	v
result	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthRequest.hx	/^		var result = new Array<KVPair>();$/;"	v
result	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^			var result = cpp.Lib.load (name, func, args);$/;"	v
result	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^			var result = neko.Lib.load (name, func, args);$/;"	v
result	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^			var result = null;$/;"	v
result	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^			var result = untyped __nodeNDLLModule.load_lib (name, func, args);$/;"	v
result	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^		var result:Dynamic = null;$/;"	v
result	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^				var result:String = template.execute (context, { $/;"	v
result	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/LogHelper.hx	/^				var result = -1;$/;"	v
result	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ObjectHelper.hx	/^			var result = Type.createInstance (Type.getClass (v), []);$/;"	v
result	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ObjectHelper.hx	/^			var result = Type.createInstance (Type.getClass(v), []);$/;"	v
result	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^			var result = "";$/;"	v
result	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ProcessHelper.hx	/^			var result = null;$/;"	v
result	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ProcessHelper.hx	/^		var result = 0;$/;"	v
result	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var result = "";$/;"	v
result	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var result = new ByteArray ();$/;"	v
result	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var result = new ByteArray (end - begin);$/;"	v
result	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var result:Bytes;$/;"	v
result	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/ApplicationMain.hx	/^		var result = app.exec ();$/;"	v
result	/usr/lib/haxe/lib/lime/2,4,3/tools/RunScript.hx	/^		var result:Dynamic = Sys.command (command, args);$/;"	v
result	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var result = "";$/;"	v
result	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var result = inType.java;$/;"	v
result	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var result = FirefoxHelper.validate (project);$/;"	v
result	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var result:Array<Dynamic> = [];$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^		var result = new Vector<Float> ();$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^		var result = new Vector<Float> ();$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^				var result:Array<GLBucketData> = [];$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var result:GLBucketData = null;$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^			var result = cpp.Lib.load (name, func, args);$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^			var result = neko.Lib.load (name, func, args);$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^			var result = null;$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^		var result = new ManagedStage (width, height, flags);$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^		var result:Dynamic = tryLoad (".\/" + library, library, method, args);$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^		var result:Dynamic = tryLoad ("\/app\/native\/" + library, library, method, args);$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var result = new Array<Int> ();$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var result = new BitmapData (0, 0);$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var result = new BitmapData (0, 0, true);$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var result = new Rectangle ();$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var result:ByteArray = lime_bitmap_data_get_pixels (__handle, rect);$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^		var result = __dispatchEvent (event);$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^		var result = new Array<BitmapFilter> ();$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^		var result = new Rectangle ();$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^		var result = point.clone ();$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^			var result = __children[index];$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^		var result = new Array<DisplayObject> ();$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^		var result = new Matrix3D();$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var result = 0.0;$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^		var result = new Matrix ();$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^		var result = new Array<String>();$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^			var result = SoundChannel.createDynamic (__handle, soundTransform, this);$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^		var result = new SoundChannel (null, 0, 0, soundTransform);$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/AbstractFont.hx	/^		var result = renderGlyph (char);$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^		var result = __registeredFonts.copy ();$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^		var result = freetype_import_font ("", null, 1024 * 20, bytes);$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^		var result = freetype_import_font (filename, null, 1024 * 20, null);$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^		var result = new TextFormat ();$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^		var result = new TextFormat();$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^		var result = new TextLineMetrics ();$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var result = "";$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var result = new ByteArray ( -1);$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var result = new ByteArray (end - begin);$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var result = new String (untyped __dollar__ssub (b, p, length));$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var result:Bytes;$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/WeakRef.hx	/^		var result = lime_weak_ref_get (weakRef);$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var result = [for (i in 0...4) [for (j in 0...256) 0]];$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var result = new Vector<UInt> (length, true);$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^			var result = super.dispatchEvent (event);$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^		var result = super.dispatchEvent (event);$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^		var result = super.__broadcast (event, notifyChilden);$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Program3D.hx	/^			var result = GL.getProgramInfoLog (glProgram);$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^		var result = new Matrix ();$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^		var result = CURLEasy.perform (__curl);$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLVariables.hx	/^		var result = new Array<String> ();$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^		var result = new ByteArray ();$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/ApplicationMain.hx	/^		var result = app.exec ();$/;"	v
result	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^		var result = app.exec ();$/;"	v
result	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^		var result:String="";$/;"	v
result	/usr/lib/haxe/std/haxe/io/Path.hx	/^		var result = acc.toString();$/;"	v
result	/usr/lib/haxe/std/haxe/io/Path.hx	/^		var result = regex.replace(tmp, "$1" +slash);$/;"	v
result	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^		var result : Dynamic;$/;"	v
result	/usr/lib/haxe/std/haxe/unit/TestRunner.hx	/^	public var result(default, null) : TestResult;$/;"	v
resultJNI	/usr/lib/haxe/lib/lime/2,4,3/templates/extension/Extension.hx	/^		var resultJNI = ::extensionLowerCase::_sample_method_jni(inputValue);$/;"	v
resultNative	/usr/lib/haxe/lib/lime/2,4,3/templates/extension/Extension.hx	/^		var resultNative = ::extensionLowerCase::_sample_method(inputValue);$/;"	v
results	/usr/lib/haxe/std/sys/db/ResultSet.hx	/^	function results() : List<Dynamic>;$/;"	f
resume	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioManager.hx	/^	public static function resume ():Void {$/;"	f
resume	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	public static function resume ():Void {$/;"	f
resume	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public function resume ():Bool;$/;"	f
resume	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/NetStream.hx	/^	public function resume ():Void {$/;"	f
resume	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/System.hx	/^	public static function resume ():Void {$/;"	f
ret	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^			var ret = process.stdout.readAll().toString();$/;"	v
ret	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^				var ret = process.stdout.readAll ().toString();$/;"	v
ret	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^				var ret = process.stdout.readAll().toString();$/;"	v
ret	/usr/lib/haxe/lib/openfl/3,0,8/docs/haxe/Int32.hx	/^		var ret = this++;$/;"	v
ret	/usr/lib/haxe/lib/openfl/3,0,8/docs/haxe/Int32.hx	/^		var ret = this--;$/;"	v
ret	/usr/lib/haxe/std/haxe/Int32.hx	/^		var ret = this++;$/;"	v
ret	/usr/lib/haxe/std/haxe/Int32.hx	/^		var ret = this--;$/;"	v
ret	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^		var ret = [];$/;"	v
ret	/usr/lib/haxe/std/haxe/macro/Expr.hx	/^	var ret : Null<ComplexType>;$/;"	v
ret	/usr/lib/haxe/std/haxe/macro/ExprTools.hx	/^				var ret = [];$/;"	v
ret	/usr/lib/haxe/std/haxe/macro/ExprTools.hx	/^		var ret = [];$/;"	v
ret	/usr/lib/haxe/std/haxe/remoting/AsyncAdapter.hx	/^		var ret;$/;"	v
ret	/usr/lib/haxe/std/haxe/remoting/ExternalConnection.hx	/^			var ret = cnx.__data.ctx.call(path.split("."),params);$/;"	v
ret	/usr/lib/haxe/std/haxe/remoting/FlashJsConnection.hx	/^			var ret = cnx.__data.ctx.call(path.split("."),params);$/;"	v
ret	/usr/lib/haxe/std/haxe/remoting/HttpAsyncConnection.hx	/^			var ret;$/;"	v
ret	/usr/lib/haxe/std/haxe/remoting/LocalConnection.hx	/^			var ret = c.__data.ctx.call(path.split("."),haxe.Unserializer.run(args));$/;"	v
ret	/usr/lib/haxe/std/haxe/remoting/SocketConnection.hx	/^		var ret;$/;"	v
ret	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^			var ret = args.last();$/;"	v
ret	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	var ret : RecordType;$/;"	v
ret2	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^			var ret2 = process.stderr.readAll().toString();$/;"	v
ret2	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^				var ret2 = process.stderr.readAll ().toString();$/;"	v
retType	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private var retType:JNIType;$/;"	v
ret_full_class	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^				var ret_full_class = constructor ||	((mExactTypes.exists(retType.name) || isPOD(retType.name)) && retType.arrayCount == 0);$/;"	v
ret_void	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^				var ret_void = (retType.name == "Void" && retType.arrayCount == 0);$/;"	v
rethrow	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	public static function rethrow (error:Dynamic):Void {$/;"	f
rethrow	/usr/lib/haxe/std/neko/Lib.hx	/^	public static function rethrow( e : Dynamic ) : Dynamic {$/;"	f
reverse	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextDirection.hx	/^	public inline function reverse ():Void {$/;"	f
reverse	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public function reverse ():Void {$/;"	f
reverse	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public inline function reverse ():Void {$/;"	f
reverse	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GLMaskManager.hx	/^	public var reverse:Bool;$/;"	v
reverse	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^	public var reverse:Bool;$/;"	v
reverse	/usr/lib/haxe/std/Array.hx	/^	function reverse() : Void;$/;"	f
reverse	/usr/lib/haxe/std/sys/net/Host.hx	/^	function reverse() : String;$/;"	f
rgb	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^			var rgb = colors[i];$/;"	v
rgb	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^			var rgb = colors[i];$/;"	v
rgbIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var rgbIndex = 0;$/;"	v
rgbIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var rgbIndex = 0;$/;"	v
rgbIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var rgbIndex = 0;$/;"	v
rgbIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^			var rgbIndex = 0;$/;"	v
rgba	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^		var rgba = (r | (g << 8) | (b << 16) | (a << 24));$/;"	v
rgbaData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var rgbaData = new BitmapData (bitmapData.width, bitmapData.height, bitmapData.transparent);$/;"	v
rie10	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^				var rie10 = ~\/^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$\/;$/;"	v
right	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^		var right:Int = 0;$/;"	v
right	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var right:Vector4;$/;"	v
right	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	public var right (get, set):Float;$/;"	v
right	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	public var right (get, set):Float;$/;"	v
right	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var right:Vector3D;$/;"	v
right	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^	public var right (get, set):Float;$/;"	v
right	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^	public var right : TreeNode<K,V>;$/;"	v
rightImageUniform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^	private static var rightImageUniform:GLUniformLocation;$/;"	v
rightMargin	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextFormat.hx	/^	public var rightMargin:Null<Float>;$/;"	v
rightMargin	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextFormat.hx	/^	public var rightMargin:Null<Float>;$/;"	v
rightPeak	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	public var rightPeak (get, null):Float;$/;"	v
rightPeak	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/SoundChannel.hx	/^	public var rightPeak (default, null):Float;$/;"	v
rightPos	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^			var rightPos:Int;$/;"	v
rightTexture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^	private static var rightTexture:GLTexture;$/;"	v
rightToLeft	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextScript.hx	/^	public var rightToLeft (get, never):Bool;$/;"	v
rightToLeft	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/SoundTransform.hx	/^	public var rightToLeft:Float;$/;"	v
rightToRight	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/SoundTransform.hx	/^	public var rightToRight:Float;$/;"	v
right_glyph	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	var right_glyph:Int;$/;"	v
right_glyph	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	var right_glyph:Int;$/;"	v
rightsEq	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	public static function rightsEq( r1 : Rights, r2 : Rights ) {$/;"	f
rjd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^				var rjd:B2RevoluteJointDef = new B2RevoluteJointDef();$/;"	v
rjd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^		var rjd:B2RevoluteJointDef = new B2RevoluteJointDef();$/;"	v
rl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^			var rl = _input.length - _input.position;$/;"	v
rlambda	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^			var rlambda = ~\/^MethodInfo-([0-9]+)$\/g;$/;"	v
rlambda	/usr/lib/haxe/std/haxe/CallStack.hx	/^			var rlambda = ~\/^MethodInfo-([0-9]+)$\/g;$/;"	v
rlen	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^				var rlen = (needed < rdist) ? needed : rdist;$/;"	v
rlen	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^			var rlen = (len < needed) ? len : needed;$/;"	v
rn1A	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var rn1A:Float = ccp1.rA.x * normalY - ccp1.rA.y * normalX;$/;"	v
rn1B	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var rn1B:Float = ccp1.rB.x * normalY - ccp1.rB.y * normalX;$/;"	v
rn2A	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var rn2A:Float = ccp2.rA.x * normalY - ccp2.rA.y * normalX;$/;"	v
rn2B	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var rn2B:Float = ccp2.rB.x * normalY - ccp2.rB.y * normalX;$/;"	v
rnA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var rnA:Float = rAX * normalY - rAY * normalX;\/\/b2Math.b2Cross(r1, normal);$/;"	v
rnB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var rnB:Float = rBX * normalY - rBY * normalX;\/\/b2Math.b2Cross(r2, normal);$/;"	v
rol	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^	function rol(num, cnt){$/;"	f
rol	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^	inline function rol( num : Int, cnt : Int ) : Int {$/;"	f
rollOut	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^			var rollOut = event.__createSimilar (events[2], newObject, oldObject);$/;"	v
rollOver	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^			var rollOver = event.__createSimilar (events[3], oldObject);$/;"	v
rollback	/usr/lib/haxe/std/sys/db/Connection.hx	/^	function rollback() : Void;$/;"	f
root	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var root:B2Vec2 = p[Std.int(i-1)];$/;"	v
root	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var root (default, null):Dynamic \/*DisplayObject*\/;$/;"	v
root	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public var root (get, null):DisplayObject;$/;"	v
root	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	public var root (get, null):DisplayObject;$/;"	v
root	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/FocusEventTest.hx	/^		var root = new Sprite();$/;"	v
root	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^	var root:TreeNode<K,V>;$/;"	v
root	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	public var root : TypeRoot;$/;"	v
root	/usr/lib/haxe/std/haxe/unit/TestRunner.hx	/^			var root = flash.Lib.current;$/;"	v
rootDirectory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/StorageVolume.hx	/^	public var rootDirectory (default, null):File;$/;"	v
rootIterCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^				var rootIterCount:Int = 0;$/;"	v
rot	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var rot = new Vector4 ();$/;"	v
rot	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var rot = new Vector3D ();$/;"	v
rotate	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function rotate (angle:Float):Void {};$/;"	f
rotate	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function rotate (amount:Float):Void {$/;"	f
rotate	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public function rotate (theta:Float):Void {$/;"	f
rotate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^	public function rotate (angle:Float):Void {$/;"	f
rotate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^	public function rotate (theta:Float):Void {$/;"	f
rotation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^			var rotation:Float = step.dt * b.m_angularVelocity;$/;"	v
rotation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^			var rotation:Float = subStep.dt * b.m_angularVelocity;$/;"	v
rotation	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var rotation:Float;$/;"	v
rotation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public var rotation (get, set):Float;$/;"	v
rotation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	public var rotation (get, set):Float;$/;"	v
rotation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^				var rotation = 0.0;$/;"	v
rotation	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var rotation = v1[1];$/;"	v
rotationIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var rotationIndex = 0;$/;"	v
rotationIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var rotationIndex = 0;$/;"	v
rotationIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var rotationIndex = 0;$/;"	v
rotationIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^			var rotationIndex = 0;$/;"	v
rotationX	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var rotationX:Float;$/;"	v
rotationY	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var rotationY:Float;$/;"	v
rotationZ	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var rotationZ:Float;$/;"	v
round	/usr/lib/haxe/std/Math.hx	/^	static function round(v:Float):Int;$/;"	f
roundPixels	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/RenderSession.hx	/^	public var roundPixels:Bool;$/;"	v
rowEnd	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^				var rowEnd = Std.int (rect.bottom + image.offsetY);$/;"	v
rowEnd	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var rowEnd = Std.int (rect.bottom + image.offsetY);$/;"	v
rowOffset	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var rowOffset = Std.int (destPoint.y + image.offsetY - sourceRect.y - sourceImage.offsetY);$/;"	v
rowStart	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^				var rowStart = Std.int (rect.y + image.offsetY);$/;"	v
rowStart	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var rowStart = Std.int (rect.top + image.offsetY);$/;"	v
rp	/usr/lib/haxe/std/haxe/Http.hx	/^		var rp = response.split(" ");$/;"	v
rp	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^					var rp = r.split(" ");$/;"	v
rp	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^				var rp = r.split(" : ");$/;"	v
rpad	/usr/lib/haxe/std/StringTools.hx	/^	public static function rpad( s : String, c : String, l : Int ) : String {$/;"	f
rproxy	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^		var rproxy = ~\/"ProxyServer"="([^"]+)"\/;$/;"	v
rr	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^		var rr:Float = (rX*rX + rY*rY);$/;"	v
rt	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^		var rt = TPath( { pack : ["haxe", "macro"], name : "MacroType", params : [TPExpr(Context.parse("haxe.web.Dispatch.getRunParam("+index+")",p))], sub : null } );$/;"	v
rt	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^				var rt = if( tryUnify(r1.t, DFloat) && tryUnify(r2.t, DFloat) )$/;"	v
rtA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var rtA:Float = rAX*tangentY - rAY*tangentX;$/;"	v
rtB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var rtB:Float = rBX*tangentY - rBY*tangentX;$/;"	v
rule	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^			var rule = if( rules.length == 1 )$/;"	v
rules	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^			var rules = [];$/;"	v
rules	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^			var rules = { expr : EObjectDecl(fields), pos : p };$/;"	v
rules	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^		var rules = [];$/;"	v
rules	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^	var rules : Dynamic;$/;"	v
rules	/usr/lib/haxe/std/haxe/xml/Check.hx	/^			var rules = rules.copy();$/;"	v
run	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AIRHelper.hx	/^	public static function run (workingDirectory:String, debug:Bool):Void {$/;"	f
run	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^	public static function run (activityName:String, deviceID:String = null):Void {$/;"	f
run	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AntHelper.hx	/^	public static function run (workingDirectory:String, commands:Array <String>):Void {$/;"	f
run	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^	public static function run (project:HXProject, workingDirectory:String, targetPath:String):Void {$/;"	f
run	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/NodeJSHelper.hx	/^	public static function run (project:HXProject, modulePath:String, args:Array<String> = null):Void {$/;"	f
run	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^	public override function run ():Void {$/;"	f
run	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/BlackBerryPlatform.hx	/^	public override function run ():Void {$/;"	f
run	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/EmscriptenPlatform.hx	/^	public override function run ():Void {$/;"	f
run	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FirefoxPlatform.hx	/^	public override function run ():Void {$/;"	f
run	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FlashPlatform.hx	/^	public override function run ():Void {$/;"	f
run	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/HTML5Platform.hx	/^	public override function run ():Void {$/;"	f
run	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^	public override function run ():Void {$/;"	f
run	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^	public override function run ():Void {$/;"	f
run	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/MacPlatform.hx	/^	public override function run ():Void {$/;"	f
run	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/TizenPlatform.hx	/^	public override function run ():Void {$/;"	f
run	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WebOSPlatform.hx	/^	public override function run ():Void {$/;"	f
run	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WindowsPlatform.hx	/^	public override function run ():Void {$/;"	f
run	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	public static function run (target:String = "", userDefines:Map<String, Dynamic> = null, targetFlags:Map<String, Dynamic> = null) {$/;"	f
run	/usr/lib/haxe/std/haxe/Serializer.hx	/^	public static function run( v : Dynamic ) {$/;"	f
run	/usr/lib/haxe/std/haxe/Template.hx	/^	function run( e : TemplateExpr ) {$/;"	f
run	/usr/lib/haxe/std/haxe/Unserializer.hx	/^	public static function run( v : String ) : Dynamic {$/;"	f
run	/usr/lib/haxe/std/haxe/unit/TestRunner.hx	/^	public function run() : Bool {$/;"	f
run	/usr/lib/haxe/std/haxe/zip/Compress.hx	/^	public static function run( s : haxe.io.Bytes, level : Int ) : haxe.io.Bytes {$/;"	f
run	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	public static function run( i : haxe.io.Input, ?bufsize = 65536 ) {$/;"	f
run	/usr/lib/haxe/std/haxe/zip/Uncompress.hx	/^	public static function run( src : haxe.io.Bytes, ?bufsize : Int ) : haxe.io.Bytes {$/;"	f
run	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^	public function run( host : sys.net.Host, port : Int ) {$/;"	f
run	/usr/lib/haxe/std/neko/net/ThreadRemotingServer.hx	/^	public override function run( host, port ) {$/;"	f
run	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	public function run( host, port ) {$/;"	f
run	/usr/lib/haxe/std/neko/vm/Gc.hx	/^	public static function run( major : Bool ) {$/;"	f
runCase	/usr/lib/haxe/std/haxe/unit/TestRunner.hx	/^	function runCase( t:TestCase ) : Void 	{$/;"	f
runCommand	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ProcessHelper.hx	/^	public static function runCommand (path:String, command:String, args:Array <String>, safeExecute:Bool = true, ignoreErrors:Bool = false, print:Bool = false):Int {$/;"	f
runCommand	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/TizenHelper.hx	/^	private static function runCommand (project:HXProject, workingDirectory:String, command:String, args:Array<String>):Void {$/;"	f
runCommand	/usr/lib/haxe/lib/lime/2,4,3/tools/RunScript.hx	/^	public static function runCommand (path:String, command:String, args:Array<String>, throwErrors:Bool = true):Int {$/;"	f
runInstaller	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static function runInstaller (path:String, message:String = "Waiting for process to complete..."):Void {$/;"	f
runMainLoop	/usr/lib/haxe/std/sys/db/Transaction.hx	/^	private static function runMainLoop(mainFun,logError,count) {$/;"	f
runPalmCommand	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/WebOSHelper.hx	/^	private static function runPalmCommand (project:HXProject, workingDirectory:String, command:String, args:Array<String>):Void {$/;"	f
runProcess	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ProcessHelper.hx	/^	public static function runProcess (path:String, command:String, args:Array <String>, waitForOutput:Bool = true, safeExecute:Bool = true, ignoreErrors:Bool = false, print:Bool = false):String {$/;"	f
runThread	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	function runThread(t) {$/;"	f
runTimer	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	function runTimer() {$/;"	f
runWorker	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	function runWorker() {$/;"	f
running	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Timer.hx	/^	public var running:Bool;$/;"	v
running	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/Timer.hx	/^	public var running (default, null):Bool;$/;"	v
runtimeDispatch	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^	public function runtimeDispatch( cfg : DispatchConfig ) {$/;"	f
runtimeGetParams	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^	public function runtimeGetParams( cfgIndex : Int ) : Dynamic {$/;"	f
rx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var rx = points[4];$/;"	v
ry	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var ry = points[5];$/;"	v
s	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^		var s:Float;$/;"	v
s	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^			var s:Float = tVec.x * dX + tVec.y * dY;$/;"	v
s	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var s:Float = edgeSeparation(poly1, xf1, edge, poly2, xf2);$/;"	v
s	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^		var s:Float;$/;"	v
s	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^		var s:B2Shape = new B2CircleShape();$/;"	v
s	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var s:B2PolygonShape = new B2PolygonShape();$/;"	v
s	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat22.hx	/^		var s:Float = Math.sin(angle);$/;"	v
s	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var s:B2Shape;$/;"	v
s	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^			var s:Array<String> = untyped __global__.__hxcpp_get_call_stack(true);$/;"	v
s	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^			var s:Array<String> = untyped __global__.__hxcpp_get_exception_stack();$/;"	v
s	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var s = Math.sin (theta);$/;"	v
s	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var s = Math.sin(rad);$/;"	v
s	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^			var s = try subject.status catch (e:Dynamic) null;$/;"	v
s	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^							var s = stream.readLine ();$/;"	v
s	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^			var s = new StringBuf ();$/;"	v
s	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CLIHelper.hx	/^			var s = new StringBuf ();$/;"	v
s	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CordovaHelper.hx	/^			var s = new StringBuf ();$/;"	v
s	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^			var s =  ([ 16, 32, 48, 128 ])[i];$/;"	v
s	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^			var s =  ([ 32, 64, 256, 512, 1024 ])[i];$/;"	v
s	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/TizenHelper.hx	/^			var s = new StringBuf ();$/;"	v
s	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var s = haxe.io.Bytes.alloc(f.fileSize);$/;"	v
s	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/OpLUT.hx	/^	public var s:String;$/;"	v
s	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexArray.hx	/^		var s = 0;$/;"	v
s	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^						var s = stream.readLine ();$/;"	v
s	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var s, fFreq, fPers, x, y, z, xf, yf, zf, X, Y, Z, u, v, w, A, AA, AB, B, BA, BB, x1, y1, z1, hash, g1, g2, g3, g4, g5, g6, g7, g8, color, pixel;$/;"	v
s	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var s = Math.sin (theta);$/;"	v
s	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var s = Math.sin(rad);$/;"	v
s	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^			var s = try subject.status catch (e:Dynamic) null;$/;"	v
s	/usr/lib/haxe/std/Date.hx	/^			var s = date.getSeconds();$/;"	v
s	/usr/lib/haxe/std/DateTools.hx	/^		var s = t \/ 1000;$/;"	v
s	/usr/lib/haxe/std/List.hx	/^		var s = new StringBuf();$/;"	v
s	/usr/lib/haxe/std/StringTools.hx	/^			var s : String = untyped n.toString(16);$/;"	v
s	/usr/lib/haxe/std/StringTools.hx	/^			var s = "";$/;"	v
s	/usr/lib/haxe/std/haxe/CallStack.hx	/^			var s:Array<String> = untyped __global__.__hxcpp_get_call_stack(true);$/;"	v
s	/usr/lib/haxe/std/haxe/CallStack.hx	/^			var s:Array<String> = untyped __global__.__hxcpp_get_exception_stack();$/;"	v
s	/usr/lib/haxe/std/haxe/Http.hx	/^			var s = try r.status catch( e : Dynamic ) null;$/;"	v
s	/usr/lib/haxe/std/haxe/Http.hx	/^		var s = haxe.io.Bytes.alloc(4);$/;"	v
s	/usr/lib/haxe/std/haxe/Serializer.hx	/^			var s = e.getStackTrace();$/;"	v
s	/usr/lib/haxe/std/haxe/Serializer.hx	/^		var s = new Serializer();$/;"	v
s	/usr/lib/haxe/std/haxe/Template.hx	/^	var s : Bool;$/;"	v
s	/usr/lib/haxe/std/haxe/Unserializer.hx	/^				var s = unserialize();$/;"	v
s	/usr/lib/haxe/std/haxe/Unserializer.hx	/^			var s = buf.substr(pos,len);$/;"	v
s	/usr/lib/haxe/std/haxe/Unserializer.hx	/^ 		var s = false;$/;"	v
s	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^		var s = "";$/;"	v
s	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^		var s = new StringBuf();$/;"	v
s	/usr/lib/haxe/std/haxe/io/Input.hx	/^		var s = Bytes.alloc(nbytes);$/;"	v
s	/usr/lib/haxe/std/haxe/io/Input.hx	/^		var s;$/;"	v
s	/usr/lib/haxe/std/haxe/io/Path.hx	/^		var s = new Path(path);$/;"	v
s	/usr/lib/haxe/std/haxe/macro/Printer.hx	/^			var s = 'switch ${printExpr(e1)} {\\n$tabs' +$/;"	v
s	/usr/lib/haxe/std/haxe/macro/Printer.hx	/^			var s = '{\\n$tabs' + printExprs(el, ';\\n$tabs');$/;"	v
s	/usr/lib/haxe/std/haxe/remoting/AMFConnection.hx	/^		var s = new AMFConnection(__data,__path.copy());$/;"	v
s	/usr/lib/haxe/std/haxe/remoting/ExternalConnection.hx	/^			var s = new haxe.Serializer();$/;"	v
s	/usr/lib/haxe/std/haxe/remoting/ExternalConnection.hx	/^		var s = new haxe.Serializer();$/;"	v
s	/usr/lib/haxe/std/haxe/remoting/FlashJsConnection.hx	/^			var s = new haxe.Serializer();$/;"	v
s	/usr/lib/haxe/std/haxe/remoting/FlashJsConnection.hx	/^		var s = new haxe.Serializer();$/;"	v
s	/usr/lib/haxe/std/haxe/remoting/HttpAsyncConnection.hx	/^				var s = new haxe.Unserializer(response.substr(3));$/;"	v
s	/usr/lib/haxe/std/haxe/remoting/HttpAsyncConnection.hx	/^		var s = new haxe.Serializer();$/;"	v
s	/usr/lib/haxe/std/haxe/remoting/HttpConnection.hx	/^			var s = new haxe.Serializer();$/;"	v
s	/usr/lib/haxe/std/haxe/remoting/HttpConnection.hx	/^		var s = new haxe.Serializer();$/;"	v
s	/usr/lib/haxe/std/haxe/remoting/LocalConnection.hx	/^			var s = new haxe.Serializer();$/;"	v
s	/usr/lib/haxe/std/haxe/remoting/LocalConnection.hx	/^		var s = new LocalConnection(__data,__path.copy());$/;"	v
s	/usr/lib/haxe/std/haxe/remoting/SocketConnection.hx	/^		var s = new SocketConnection(__data,__path.copy());$/;"	v
s	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^		var s = new haxe.Serializer();$/;"	v
s	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^		var s = new haxe.Unserializer(data);$/;"	v
s	/usr/lib/haxe/std/haxe/remoting/SocketWrapper.hx	/^		var s = new Socket();$/;"	v
s	/usr/lib/haxe/std/haxe/remoting/SyncSocketConnection.hx	/^		var s = new SyncSocketConnection(__proto,__path.copy());$/;"	v
s	/usr/lib/haxe/std/haxe/unit/TestRunner.hx	/^			var s = flash.Boot.__string_rec(v,"");$/;"	v
s	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^		var s = new haxe.Serializer();$/;"	v
s	/usr/lib/haxe/std/haxe/xml/Check.hx	/^		var s = "In ";$/;"	v
s	/usr/lib/haxe/std/haxe/xml/Check.hx	/^		var s = x.nodeValue.split("\\r").join("\\\\r").split("\\n").join("\\\\n").split("\\t").join("\\\\t");$/;"	v
s	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^		var s = new StringBuf();$/;"	v
s	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^						var s = str.substr(start, p - start);$/;"	v
s	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var s = haxe.io.Bytes.alloc(f.fileSize);$/;"	v
s	/usr/lib/haxe/std/neko/Boot.hx	/^		var s : String = e.tag + untyped "(".__s;$/;"	v
s	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var s = new StringBuf();$/;"	v
s	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var s = new haxe.Serializer();$/;"	v
s	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^					var s = new haxe.Serializer();$/;"	v
s0	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^			var s0: B2EdgeShape = null;$/;"	v
s1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^			var s1: B2EdgeShape = null;$/;"	v
s1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^				var s1:B2Vec2 = pulley.getGroundAnchorA();$/;"	v
s1	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^				var s1:B2Vec2 = pulley.GetGroundPoint1();$/;"	v
s1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var s1X:Float = m_ground.m_xf.position.x + m_groundAnchor1.x;$/;"	v
s1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var s1Y:Float = m_ground.m_xf.position.y + m_groundAnchor1.y;$/;"	v
s2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^			var s2: B2EdgeShape = null;$/;"	v
s2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^				var s2:B2Vec2 = pulley.getGroundAnchorB();$/;"	v
s2	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^				var s2:B2Vec2 = pulley.GetGroundPoint2();$/;"	v
s2	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^					var s2 = o.toString();$/;"	v
s2X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var s2X:Float = m_ground.m_xf.position.x + m_groundAnchor2.x;$/;"	v
s2Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var s2Y:Float = m_ground.m_xf.position.y + m_groundAnchor2.y;$/;"	v
s:	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^\/\/	notes:$/;"	i
sNext	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var sNext:Float = edgeSeparation(poly1, xf1, nextEdge, poly2, xf2);$/;"	v
sPrev	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var sPrev:Float = edgeSeparation(poly1, xf1, prevEdge, poly2, xf2);$/;"	v
sRunningTimers	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^	private static var sRunningTimers:Array <Timer> = [];$/;"	v
sRunningTimers	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^	private static var sRunningTimers:Array <Timer> = [];$/;"	v
sX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^		var sX:Float = input.p1.x - positionX;$/;"	v
sX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var sX:Float = m_ground.m_xf.position.x + m_groundAnchor1.x;$/;"	v
sX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var sX:Float = m_ground.m_xf.position.x + m_groundAnchor2.x;$/;"	v
sY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^		var sY:Float = input.p1.y - positionY;$/;"	v
sY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var sY:Float = m_ground.m_xf.position.y + m_groundAnchor1.y;$/;"	v
sY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var sY:Float = m_ground.m_xf.position.y + m_groundAnchor2.y;$/;"	v
s_backupA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	private static var s_backupA:B2Sweep = new B2Sweep();$/;"	v
s_backupB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	private static var s_backupB:B2Sweep = new B2Sweep();$/;"	v
s_cache	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^	private static var s_cache:B2SimplexCache = new B2SimplexCache();$/;"	v
s_clipPoints1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^	private static var s_clipPoints1:Array <ClipVertex> = makeClipPointVector();$/;"	v
s_clipPoints2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^	private static var s_clipPoints2:Array <ClipVertex> = makeClipPointVector();$/;"	v
s_distanceInput	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^	private static var s_distanceInput:B2DistanceInput = new B2DistanceInput();$/;"	v
s_distanceOutput	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^	private static var s_distanceOutput:B2DistanceOutput = new B2DistanceOutput();$/;"	v
s_edgeAO	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^	private static var s_edgeAO:Array <Int> = new Array <Int>();$/;"	v
s_edgeBO	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^	private static var s_edgeBO:Array <Int> = new Array <Int>();$/;"	v
s_evalCP	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactManager.hx	/^	static private var s_evalCP:B2ContactPoint = new B2ContactPoint ();$/;"	v
s_fcn	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^	private static var s_fcn:B2SeparationFunction = new B2SeparationFunction();$/;"	v
s_impulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^	private static var s_impulse:B2ContactImpulse = new B2ContactImpulse();$/;"	v
s_incidentEdge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^	private static var s_incidentEdge:Array <ClipVertex> = makeClipPointVector();$/;"	v
s_input	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	private static var s_input:B2TOIInput = new B2TOIInput();$/;"	v
s_jointColor	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	static private var s_jointColor:B2Color = new B2Color(0.5, 0.8, 0.8);$/;"	v
s_localNormal	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^	private static var s_localNormal:B2Vec2 = new B2Vec2();$/;"	v
s_localTangent	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^	private static var s_localTangent:B2Vec2 = new B2Vec2();$/;"	v
s_mat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	static private var s_mat:B2Mat22 = new B2Mat22();$/;"	v
s_normal	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^	private static var s_normal:B2Vec2 = new B2Vec2();$/;"	v
s_planePoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^	private static var s_planePoint:B2Vec2 = new B2Vec2();$/;"	v
s_psm	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^	private static var s_psm:B2PositionSolverManifold = new B2PositionSolverManifold();$/;"	v
s_queue	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	private static var s_queue:Array <B2Body> = new Array <B2Body>();$/;"	v
s_saveA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Distance.hx	/^private static var s_saveA:Array <Int> = new Array <Int> ();$/;"	v
s_saveB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Distance.hx	/^private static var s_saveB:Array <Int> = new Array <Int> ();$/;"	v
s_simplex	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Distance.hx	/^private static var s_simplex:B2Simplex = new B2Simplex();$/;"	v
s_stack	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	private var s_stack:Array <B2Body>;$/;"	v
s_supportVec	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	private var s_supportVec:B2Vec2;$/;"	v
s_tangent	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^	private static var s_tangent:B2Vec2 = new B2Vec2();$/;"	v
s_tangent2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^	private static var s_tangent2:B2Vec2 = new B2Vec2();$/;"	v
s_timestep	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	private static var s_timestep:B2TimeStep = new B2TimeStep();$/;"	v
s_timestep2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	private static var s_timestep2:B2TimeStep = new B2TimeStep();$/;"	v
s_v11	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^	private static var s_v11:B2Vec2 = new B2Vec2();$/;"	v
s_v12	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^	private static var s_v12:B2Vec2 = new B2Vec2();$/;"	v
s_worldManifold	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^	private static var s_worldManifold:B2WorldManifold = new B2WorldManifold();$/;"	v
s_xf	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	static private var s_xf:B2Transform = new B2Transform();$/;"	v
s_xf1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	static private var s_xf1:B2Transform = new B2Transform();$/;"	v
s_xfA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^	private static var s_xfA:B2Transform = new B2Transform();$/;"	v
s_xfB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^	private static var s_xfB:B2Transform = new B2Transform();$/;"	v
sa	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^						var sa = Math.sin (rotation);$/;"	v
safeAdd	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^	function safeAdd(x, y) {$/;"	f
safeFileName	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^	public static function safeFileName (name:String):String {$/;"	f
safeName	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^		var safeName = StringTools.replace (name, " ", "");$/;"	v
safePackageName	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CordovaHelper.hx	/^					var safePackageName = StringTools.replace (defines.get ("APP_TITLE"), " ", "");$/;"	v
same	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^			var same = 1;$/;"	v
sameDomain	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/LoaderInfo.hx	/^	public var sameDomain (default, null):Bool;$/;"	v
sameDomain	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/LoaderInfo.hx	/^	public var sameDomain (default, null):Bool;$/;"	v
sameType	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^				var sameType = true;$/;"	v
sampleCount	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^						var sampleCount = Std.int (wav.data.length \/ (hdr.bitsPerSample \/ 8));$/;"	v
sampleCoverage	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function sampleCoverage (value:Float, invert:Bool):Void;$/;"	f
sampleCoverage	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function sampleCoverage (value:Float, invert:Bool):Void {$/;"	f
sampleCoverage	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function sampleCoverage (value:Float, invert:Bool):Void {$/;"	f
sampleCoverage	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function sampleCoverage(value:Float, invert:Bool):Void $/;"	f
sampleCoverage	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function sampleCoverage(value:Float, invert:Bool):Void;$/;"	f
sampleDataEvent	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/SampleDataEventTest.hx	/^		var sampleDataEvent = new SampleDataEvent (SampleDataEvent.SAMPLE_DATA);$/;"	v
sampleExists	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^					var sampleExists = false;$/;"	v
sampleInterval	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInputDevice.hx	/^	public var sampleInterval:Int;$/;"	v
sampleMethod	/usr/lib/haxe/lib/lime/2,4,3/templates/extension/Extension.hx	/^	public static function sampleMethod (inputValue:Int):Int {$/;"	f
sampleName	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^			var sampleName = null;$/;"	v
sampleName	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^		var sampleName = null;$/;"	v
samplePaths	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public var samplePaths:Array <String>;$/;"	v
samplePaths	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^				var samplePaths = project.samplePaths.copy ();$/;"	v
samplePaths	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^			var samplePaths = project.samplePaths.copy ();$/;"	v
sampleRate	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioBuffer.hx	/^	public var sampleRate:Int;$/;"	v
sampleRate	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/WebAudioContext.hx	/^	public var sampleRate (default, null):Float;$/;"	v
sampleRate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^		var sampleRate = Std.int (sampleRate);$/;"	v
sampler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DrawTrianglesShader.hx	/^	public var sampler:GLUniformLocation;$/;"	v
sampler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/PatternFillShader.hx	/^	public var sampler:GLUniformLocation;$/;"	v
samplerParameters	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	private var samplerParameters:Array<SamplerState>; \/\/TODO : use Tupple3$/;"	v
samplerbits	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^		var samplerbits:UInt = 0x5;$/;"	v
sampleroptset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^		var sampleroptset:UInt = 0;$/;"	v
samplers	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Description.hx	/^	public var samplers:Array<Dynamic>;$/;"	v
samples	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^			var samples = (buffer.data.length * 8) \/ (buffer.channels * buffer.bitsPerSample);$/;"	v
samplingFrequenciesByVersionIndex	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    static var samplingFrequenciesByVersionIndex = [$/;"	v
samplingFrequency	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var samplingFrequency = -1;$/;"	v
samplingFrequency	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/FrameHeader.hx	/^    public var samplingFrequency(default, null):Int;$/;"	v
samplingFrequency	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var samplingFrequency = samplingFrequenciesByVersionIndex[versionIndex][samplingFrequencyIndex];$/;"	v
samplingFrequencyIndex	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var samplingFrequencyIndex = (b >> 2) & 0x3;$/;"	v
samptype	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLParser.hx	/^		var samptype = ["2D", "Cube", "3D", ""];$/;"	v
sandboxType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Security.hx	/^	public static var sandboxType (default, null):String;$/;"	v
sarea	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^				var sarea:Float = fixture.getShape().computeSubmergedArea(normal, offset, body.getTransform(), sc);$/;"	v
sargs	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^				var sargs = args.map(function(a) return a.name).join(",");$/;"	v
save	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function save ():Void {};$/;"	f
save	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function save ():Void {$/;"	f
save	/usr/lib/haxe/std/haxe/format/JsonParser.hx	/^				var save = pos;$/;"	v
save	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^	static var save : { r : ProxySettings } = null;$/;"	v
saveA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Distance.hx	/^	var saveA:Array <Int> = s_saveA;$/;"	v
saveB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Distance.hx	/^	var saveB:Array <Int> = s_saveB;$/;"	v
saveBytes	/usr/lib/haxe/std/sys/io/File.hx	/^	static function saveBytes( path : String, bytes : haxe.io.Bytes ) : Void;$/;"	f
saveContent	/usr/lib/haxe/std/sys/io/File.hx	/^	static function saveContent( path : String, content : String ) : Void;$/;"	f
saveCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Distance.hx	/^	var saveCount:Int = 0;$/;"	v
sayGoodbyeFixture	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DestructionListener.hx	/^	public function sayGoodbyeFixture(fixture:B2Fixture) : Void{}$/;"	f
sayGoodbyeJoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DestructionListener.hx	/^	public function sayGoodbyeJoint(joint:B2Joint) : Void{}$/;"	f
sb	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Hmac.hx	/^		var sb = new haxe.io.BytesBuffer();$/;"	v
sb	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^						var sb:Float = 0;$/;"	v
sbr	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^								var sbr = inversePendingMatrix.transformPoint(new Point(x + width, y + height));$/;"	v
sc	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^				var sc:B2Vec2 = new B2Vec2();$/;"	v
sc	/usr/lib/haxe/std/haxe/remoting/SocketConnection.hx	/^		var sc = new SocketConnection(data,[]);$/;"	v
scache	/usr/lib/haxe/std/haxe/Unserializer.hx	/^ 	var scache : Array<String>;$/;"	v
scalar	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/OpLUT.hx	/^	public var scalar:Bool;$/;"	v
scale	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function scale (sx:Float, sy:Float):Void {};$/;"	f
scale	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function scale (x:Float, y:Float):Void {$/;"	f
scale	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public function scale (sx:Float, sy:Float) {$/;"	f
scale	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var scale = [];$/;"	v
scale	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var scale = new Vector4 ();$/;"	v
scale	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^								var scale = tileData[index + scaleIndex];$/;"	v
scale	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^									var scale = 1.0;$/;"	v
scale	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var scale = 1.0, rotation = 0.0;$/;"	v
scale	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^	public function scale (x:Float, y:Float):Void {$/;"	f
scale	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^				var scale = 1.0;$/;"	v
scale	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^	public function scale (sx:Float, sy:Float) {$/;"	f
scale	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var scale = [];$/;"	v
scale	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var scale = new Vector3D ();$/;"	v
scale	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var scale = v1[2];$/;"	v
scale9Grid	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var scale9Grid:Dynamic \/*flash.geom.Rectangle*\/;$/;"	v
scale9Grid	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public var scale9Grid (get, set):Rectangle;$/;"	v
scale9Grid	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	public var scale9Grid:Rectangle;$/;"	v
scaleBy	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	inline public function scaleBy (s:Float):Void {$/;"	f
scaleBy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^	inline public function scaleBy (s:Float):Void {$/;"	f
scaleIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var scaleIndex = 0;$/;"	v
scaleIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var scaleIndex = 0;$/;"	v
scaleIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var scaleIndex = 0;$/;"	v
scaleIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^			var scaleIndex = 0;$/;"	v
scaleMode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	public var scaleMode:LineScaleMode;$/;"	v
scaleMode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsStroke.hx	/^	public var scaleMode:LineScaleMode;$/;"	v
scaleMode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public var scaleMode (get, set):StageScaleMode;$/;"	v
scaleMode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsStroke.hx	/^	public var scaleMode:LineScaleMode;$/;"	v
scaleMode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public var scaleMode:StageScaleMode;$/;"	v
scaleX	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^				var scaleX = element.clientWidth \/ setWidth;$/;"	v
scaleX	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var scaleX:Float;$/;"	v
scaleX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public var scaleX (get, set):Float;$/;"	v
scaleX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	public var scaleX (get, set):Float;$/;"	v
scaleX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^				var scaleX = __element.clientWidth \/ __originalWidth;$/;"	v
scaleX	Source/Crate.hx	/^        var scaleX:Float = 1\/(Env.physicsScale*_bmp.width);$/;"	v
scaleY	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^				var scaleY = element.clientHeight \/ setHeight;$/;"	v
scaleY	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var scaleY:Float;$/;"	v
scaleY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public var scaleY (get, set):Float;$/;"	v
scaleY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	public var scaleY (get, set):Float;$/;"	v
scaleY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^				var scaleY = __element.clientHeight \/ __originalHeight;$/;"	v
scaleY	Source/Crate.hx	/^        var scaleY:Float = 1\/(Env.physicsScale*_bmp.height);$/;"	v
scaleZ	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var scaleZ:Float;$/;"	v
scaledStage	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^		var scaledStage:ScaledStage = cast flash.Lib.current.stage;$/;"	v
scheme	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthRequest.hx	/^		var scheme = uri.protocol == null ? "https" : uri.protocol.toLowerCase();$/;"	v
scissor	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function scissor (x:Int, y:Int, width:Int, height:Int):Void;$/;"	f
scissor	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function scissor (x:Int, y:Int, width:Int, height:Int):Void {$/;"	f
scissor	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function scissor (x:Int, y:Int, width:Int, height:Int):Void {$/;"	f
scissor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function scissor(x:Int, y:Int, width:Int, height:Int):Void $/;"	f
scissor	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function scissor(x:Int, y:Int, width:Int, height:Int):Void;$/;"	f
scount	/usr/lib/haxe/std/haxe/Serializer.hx	/^	var scount : Int;$/;"	v
screenColor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var screenColor (default, null) = "color";$/;"	v
screenColor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var screenColor (default, null) = "color";$/;"	v
screenDPI	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var screenDPI (get, null):Float;$/;"	v
screenDPI	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var screenDPI (get, null):Float;$/;"	v
screenModes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var screenModes (get, null):Array<ScreenMode>;$/;"	v
screenResolutionX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var screenResolutionX (get, null):Float;$/;"	v
screenResolutionX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var screenResolutionX (get, null):Float;$/;"	v
screenResolutionY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var screenResolutionY (get, null):Float;$/;"	v
screenResolutionY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var screenResolutionY (get, null):Float;$/;"	v
screenResolutions	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var screenResolutions (get, null):Array<Array<Int>>;$/;"	v
screenUniform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^	private static var screenUniform:GLUniformLocation;$/;"	v
screenshot	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^			var screenshot = {$/;"	v
screenshots	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^			var screenshots:Array<String> = project.config.getArrayString ("firefox-marketplace.screenshots.screenshot", "path");$/;"	v
screenshots	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var screenshots = project.config.getArrayString ("firefox-marketplace.screenshots.screenshot", "path");$/;"	v
script	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextLayout.hx	/^	public var script (get, set):TextScript;$/;"	v
scriptPath	/usr/lib/haxe/lib/openfl/3,0,8/script/RunScript.hx	/^		var scriptPath = PathHelper.combine (openFLDirectory, "script");$/;"	v
scroll	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function scroll (x:Int, y:Int):Void {$/;"	f
scroll	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function scroll (x:Int, y:Int):Void {$/;"	f
scrollByLines	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function scrollByLines (lines:Int):Void {};$/;"	f
scrollByPages	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function scrollByPages (pages:Int):Void {};$/;"	f
scrollH	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public var scrollH (get, set):Int;$/;"	v
scrollH	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var scrollH:Int;$/;"	v
scrollHeight	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var scrollHeight (default, null):Int;$/;"	v
scrollIntoView	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function scrollIntoView (?alignWithTop:Bool):Void {};$/;"	f
scrollIntoViewIfNeeded	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function scrollIntoViewIfNeeded (?centerIfNeeded:Bool):Void {};$/;"	f
scrollLeft	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var scrollLeft:Int;$/;"	v
scrollRect	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var scrollRect:Dynamic \/*flash.geom.Rectangle*\/;$/;"	v
scrollRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoBitmap.hx	/^			var scrollRect = bitmap.scrollRect;$/;"	v
scrollRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoShape.hx	/^				var scrollRect = shape.scrollRect;$/;"	v
scrollRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasBitmap.hx	/^			var scrollRect = bitmap.scrollRect;$/;"	v
scrollRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasShape.hx	/^				var scrollRect = shape.scrollRect;$/;"	v
scrollRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public var scrollRect (get, set):Rectangle;$/;"	v
scrollRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	public var scrollRect (get, set):Rectangle;$/;"	v
scrollRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^		\/\/ TODO: scrollRect$/;"	i
scrollRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	private var scrollRect:Rectangle;$/;"	v
scrollTop	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var scrollTop:Int;$/;"	v
scrollV	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public var scrollV (get, set):Int;$/;"	v
scrollV	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var scrollV:Int;$/;"	v
scrollWidth	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var scrollWidth (default, null):Int;$/;"	v
sd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBridge.hx	/^				var sd:B2PolygonShape = new B2PolygonShape();$/;"	v
sd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^			var sd:B2PolygonShape;$/;"	v
sd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestStack.hx	/^			var sd:B2PolygonShape = new B2PolygonShape();$/;"	v
sd1	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCompound.hx	/^				var sd1:B2PolygonShape = new B2PolygonShape();$/;"	v
sd1	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^		var sd1:B2PolygonShape = new B2PolygonShape();$/;"	v
sd2	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCompound.hx	/^				var sd2:B2PolygonShape = new B2PolygonShape();$/;"	v
sd2	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^		var sd2:B2PolygonShape = new B2PolygonShape();$/;"	v
sd_bottom	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCCD.hx	/^				var sd_bottom:B2PolygonShape = new B2PolygonShape();$/;"	v
sd_bottom	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCompound.hx	/^				var sd_bottom:B2PolygonShape = new B2PolygonShape();$/;"	v
sd_left	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCCD.hx	/^				var sd_left:B2PolygonShape = new B2PolygonShape();$/;"	v
sd_left	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCompound.hx	/^				var sd_left:B2PolygonShape = new B2PolygonShape();$/;"	v
sd_right	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCCD.hx	/^				var sd_right:B2PolygonShape = new B2PolygonShape();$/;"	v
sd_right	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCompound.hx	/^				var sd_right:B2PolygonShape = new B2PolygonShape();$/;"	v
sdkDirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/TizenHelper.hx	/^		var sdkDirectory = "";$/;"	v
sdkDirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/WebOSHelper.hx	/^		var sdkDirectory = "";$/;"	v
sdkPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var sdkPath = "";$/;"	v
search	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^				var search = "Package-Author-Id: ";$/;"	v
searchForLibrary	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^	private static function searchForLibrary (ndll:NDLL, directoryName:String, filename:String):String {$/;"	f
searchTypes	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/ApplicationMain.hx	/^		var searchTypes = classType;$/;"	v
searchTypes	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^		var searchTypes = classType;$/;"	v
sec	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var sec = t & 31;$/;"	v
sec	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var sec = t & 31;$/;"	v
sec	/usr/lib/haxe/std/haxe/zip/Writer.hx	/^		var sec = date.getSeconds() >> 1;$/;"	v
secondAnswer	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^				var secondAnswer = CLIHelper.ask ("Install debug token on device?");$/;"	v
secondAnswer	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^				var secondAnswer = CLIHelper.ask ("Would you like to go there now?");$/;"	v
secondAnswer	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var secondAnswer = CLIHelper.ask ("Do you have a valid debug token?");$/;"	v
secondAnswer	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var secondAnswer = CLIHelper.ask ("Would you like to open the download page?");$/;"	v
secondAnswer	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var secondAnswer = CLIHelper.ask ("Would you like to open the wiki page now?");$/;"	v
secondSlash	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^			var secondSlash = (secondPath.substr (0, 1) == "\/" || secondPath.substr (0, 1) == "\\\\");$/;"	v
seconds	/usr/lib/haxe/std/DateTools.hx	/^	public static inline function seconds( n : Float ) : Float {$/;"	f
secret	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthConsumer.hx	/^	public var secret:String;$/;"	v
secret	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthToken.hx	/^	public var secret(default, null):String;$/;"	v
secret	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var secret = StringTools.trim (CLIHelper.param ("OAuth Secret"));$/;"	v
secret	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var secret = defines.get ("FIREFOX_MARKETPLACE" + (devServer ? "_DEV_" : "_") + "SECRET");$/;"	v
secure	/usr/lib/haxe/std/haxe/Http.hx	/^		var secure = (url_regexp.matched(1) == "https:\/\/");$/;"	v
securityDomain	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/LoaderContext.hx	/^	public var securityDomain:SecurityDomain;$/;"	v
securityError	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/SecurityErrorTest.hx	/^		var securityError = new SecurityError ();$/;"	v
securityErrorEvent	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/SecurityErrorEventTest.hx	/^		var securityErrorEvent = new SecurityErrorEvent (SecurityErrorEvent.SECURITY_ERROR);$/;"	v
seed	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^			var seed:B2Body = bA;$/;"	v
seed	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var seed:B2Body = m_bodyList;$/;"	v
seedNumber	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^	private static var seedNumber = 0;$/;"	v
seedOffset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private function seedOffset (iSeed:Int):Void {$/;"	f
seedValue	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^		var seedValue:Int = Math.round (Math.abs (seed));$/;"	v
seek	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    function seek() {$/;"	f
seek	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/NetStream.hx	/^	public function seek (offset:Float):Void {$/;"	f
seek	/usr/lib/haxe/std/sys/io/FileInput.hx	/^	function seek( p : Int, pos : FileSeek ) : Void;$/;"	f
seek	/usr/lib/haxe/std/sys/io/FileOutput.hx	/^	public function seek( p : Int, pos : FileSeek ) : Void;$/;"	f
seen	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var seen = new Map<String, Bool>();$/;"	v
seenFirstFrame	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    var seenFirstFrame:Bool;$/;"	v
seg	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var seg = (Math.PI * 2) \/ totalSegs;$/;"	v
segmentAABB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^		var segmentAABB:B2AABB = new B2AABB();$/;"	v
segments	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^		var segments = name.toLowerCase ().split ("-");$/;"	v
segments	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^			var segments = value.split ("<font");$/;"	v
select	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Memory.hx	/^	public static function select (inBytes:ByteArray):Void {$/;"	f
select	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Memory.hx	/^	static public function select (bytes:ByteArray):Void {$/;"	f
select	/usr/lib/haxe/std/sys/net/Socket.hx	/^	static function select(read : Array<Socket>, write : Array<Socket>, others : Array<Socket>, ?timeout : Float) : { read: Array<Socket>,write: Array<Socket>,others: Array<Socket> };$/;"	f
selectable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public var selectable (get, set):Bool;$/;"	v
selectable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var selectable (default, set):Bool;$/;"	v
selectionBeginIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var selectionBeginIndex:Int;$/;"	v
selectionEnd	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^					var selectionEnd = __hiddenInput.selectionEnd;$/;"	v
selectionEnd	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^			var selectionEnd = __hiddenInput.selectionEnd;$/;"	v
selectionEndIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var selectionEndIndex:Int;$/;"	v
selectionStart	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^					var selectionStart = __hiddenInput.selectionStart;$/;"	v
selectionStart	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^			var selectionStart = __hiddenInput.selectionStart;$/;"	v
self	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^		var self = this;$/;"	v
self	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^		var self = this;$/;"	v
selindex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^			var selindex = { x: 0, y: 1, z: 2, w: 3 };$/;"	v
send	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/XMLSocket.hx	/^	public function send(object:Dynamic):Void {$/;"	f
send	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/XMLSocket.hx	/^	public function send (object:Dynamic):Void {$/;"	f
sendAnswer	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^	public function sendAnswer( answer : Dynamic, ?isException : Bool ) {$/;"	f
sendData	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	public function sendData( s : sys.net.Socket, data : String ) {$/;"	f
sendMessage	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^	public function sendMessage( msg : String ) {$/;"	f
sendMessage	/usr/lib/haxe/std/neko/vm/Thread.hx	/^	public function sendMessage( msg : Dynamic ) {$/;"	f
sendQuit	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^	public function sendQuit ():Void {$/;"	f
sendRequest	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^	public function sendRequest( path : Array<String>, params : Array<Dynamic> ) {$/;"	f
sendTo	/usr/lib/haxe/std/sys/net/UdpSocket.hx	/^	public function sendTo( buf : haxe.io.Bytes, pos : Int, len : Int, addr : Address ) : Int {$/;"	f
sentWarnings	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/LogHelper.hx	/^	private static var sentWarnings:Map <String, Bool> = new Map <String, Bool> ();$/;"	v
separation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^			var separation:Float = normal.x * cv.v.x + normal.y * cv.v.y - frontOffset;$/;"	v
separation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var separation:Float = -B2Math.MAX_VALUE;$/;"	v
separation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var separation:Float = v2X * normal1WorldX + v2Y * normal1WorldY;$/;"	v
separation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ContactPoint.hx	/^	public var separation:Float;$/;"	v
separation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^			var separation:Float = Math.abs(v.x * (p1.x - c.x) + v.y * (p1.y - c.y))$/;"	v
separation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^			var separation:Float = s_fcn.evaluate(s_xfA, s_xfB);$/;"	v
separation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var separation:Float = s_psm.m_separations[j];$/;"	v
separation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2EdgeAndCircleContact.hx	/^		var separation: Number;$/;"	v
separation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^	public static var separation:Float = 0.01;$/;"	v
separation1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var separation1: Number;$/;"	v
separation2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var separation2: Number;$/;"	v
separationA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var separationA:Float = findMaxSeparation(s_edgeAO, polyA, xfA, polyB, xfB);$/;"	v
separationB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var separationB:Float = findMaxSeparation(s_edgeBO, polyB, xfB, polyA, xfA);$/;"	v
separationDirection	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^		var separationDirection = -1;$/;"	v
separationIndex	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var separationIndex: Int = -1; \/\/ which normal on the poly found the shallowest depth?$/;"	v
separationIndex1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var separationIndex1: Int = -1; \/\/ which normal on the poly found the shallowest depth?$/;"	v
separationIndex2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var separationIndex2: Int = -1; \/\/ which normal on the poly found the shallowest depth?$/;"	v
separationMax	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var separationMax: Number = -Number.MAX_VALUE; \/\/ the shallowest depth of edge in poly$/;"	v
separationMax1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var separationMax1: Number = -Number.MAX_VALUE; \/\/ the shallowest depth of edge in poly$/;"	v
separationMax2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var separationMax2: Number = -Number.MAX_VALUE; \/\/ the shallowest depth of edge in poly$/;"	v
separationV1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var separationV1: Boolean = false; \/\/ is the shallowest depth from edge's v1 or v2 vertex?$/;"	v
seperation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^		var seperation:Float;$/;"	v
serialize	/usr/lib/haxe/std/haxe/Serializer.hx	/^	public function serialize( v : Dynamic ) {$/;"	f
serialize	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^	static function serialize( v : Dynamic ) {$/;"	f
serialize	/usr/lib/haxe/std/neko/Lib.hx	/^	public static function serialize( v : Dynamic ) : haxe.io.Bytes {$/;"	f
serializeClassFields	/usr/lib/haxe/std/haxe/Serializer.hx	/^	function serializeClassFields(v,c) {$/;"	f
serializeException	/usr/lib/haxe/std/haxe/Serializer.hx	/^	public function serializeException( e : Dynamic ) {$/;"	f
serializeFields	/usr/lib/haxe/std/haxe/Serializer.hx	/^	function serializeFields(v) {$/;"	f
serializeRef	/usr/lib/haxe/std/haxe/Serializer.hx	/^	function serializeRef(v) {$/;"	f
serializeString	/usr/lib/haxe/std/haxe/Serializer.hx	/^	function serializeString( s : String ) {$/;"	f
serializer	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^		var serializer = new Serializer ();$/;"	v
serv	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^		var serv = new Socket();$/;"	v
server	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/HTML5Helper.hx	/^			var server = PathHelper.findTemplate (templatePaths, "bin\/node\/http-server\/http-server");$/;"	v
server	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^			var server = "";$/;"	v
serverString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var serverString (default, null) = ""; \/\/ TODO$/;"	v
serverString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var serverString (default, null) = ""; \/\/ TODO$/;"	v
set	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ContactID.hx	/^	public function set(id:B2ContactID) : Void{$/;"	f
set	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DistanceProxy.hx	/^	public function set(shape:B2Shape):Void$/;"	f
set	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Manifold.hx	/^	public function set(m:B2Manifold) : Void{$/;"	f
set	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ManifoldPoint.hx	/^	public function set(m:B2ManifoldPoint) : Void{$/;"	f
set	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SimplexVertex.hx	/^	public function set(other:B2SimplexVertex):Void$/;"	f
set	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/ClipVertex.hx	/^	public function set(other:ClipVertex):Void$/;"	f
set	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^	override public function set(other:B2Shape):Void $/;"	f
set	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	public override function set(other:B2Shape):Void $/;"	f
set	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2Shape.hx	/^	public function set(other:B2Shape):Void$/;"	f
set	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Color.hx	/^	public function set(rr:Float, gg:Float, bb:Float):Void{$/;"	f
set	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat22.hx	/^	public function set(angle:Float) : Void$/;"	f
set	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Sweep.hx	/^	public function set(other:B2Sweep):Void$/;"	f
set	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Transform.hx	/^	public function set(x:B2Transform) : Void{$/;"	f
set	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec2.hx	/^	public function set(x_:Float=0, y_:Float=0) : Void {x=x_; y=y_;}$/;"	f
set	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec3.hx	/^	public function set(x:Float, y:Float, z:Float):Void$/;"	f
set	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2TimeStep.hx	/^	public function set(step:B2TimeStep):Void$/;"	f
set	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Jacobian.hx	/^	public function set(x1:B2Vec2, a1:Float, x2:B2Vec2, a2:Float) : Void{$/;"	f
set	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^	public function set (id:String, value:Dynamic):Void {$/;"	f
set	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	public function set (jobject:Dynamic, value:Dynamic):Dynamic {$/;"	f
set	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/JNI.hx	/^	public function set (value:Dynamic):Dynamic {$/;"	f
set	/usr/lib/haxe/std/Map.hx	/^	public function set(k:K, v:V):Void;$/;"	f
set	/usr/lib/haxe/std/Map.hx	/^	public inline function set(key:K, value:V) this.set(key, value);$/;"	f
set	/usr/lib/haxe/std/Xml.hx	/^	function set( att : String, value : String ) : Void;$/;"	f
set	/usr/lib/haxe/std/haxe/EnumFlags.hx	/^	public inline function set( v : T ) : Void {$/;"	f
set	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^	public function set(key:K, value:V) {$/;"	f
set	/usr/lib/haxe/std/haxe/ds/HashMap.hx	/^	public inline function set(k:K, v:V) {$/;"	f
set	/usr/lib/haxe/std/haxe/ds/IntMap.hx	/^	public function set( key : Int, value : T ) : Void;$/;"	f
set	/usr/lib/haxe/std/haxe/ds/ObjectMap.hx	/^	public function set(key:K, value:V):Void;$/;"	f
set	/usr/lib/haxe/std/haxe/ds/StringMap.hx	/^	public function set( key : String, value : T ) : Void;$/;"	f
set	/usr/lib/haxe/std/haxe/ds/WeakMap.hx	/^	public function set(key:K, value:V):Void {$/;"	f
set	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^	public inline function set( pos : Int, v : Int ) : Void {$/;"	f
set	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	var set : Rights;$/;"	v
set	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^						var set = {$/;"	v
set	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var set = {$/;"	v
setAIRSDK	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var setAIRSDK = false;$/;"	v
setActive	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function setActive( flag:Bool ):Void{$/;"	f
setAlpha	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	public function setAlpha(alpha:Float) : Void {$/;"	f
setAlpha	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function setAlpha (alpha:Float):Void {};$/;"	f
setAndroidNDK	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var setAndroidNDK = false;$/;"	v
setAndroidSDK	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var setAndroidSDK = false;$/;"	v
setAngle	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function setAngle(angle:Float) : Void$/;"	f
setAngularDamping	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function setAngularDamping(angularDamping:Float):Void$/;"	f
setAngularVelocity	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function setAngularVelocity(omega:Float) : Void {$/;"	f
setApacheAnt	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var setApacheAnt = false;$/;"	v
setApacheCordova	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var setApacheCordova = false;$/;"	v
setAsArray	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	public function setAsArray(vertices:Array <Dynamic>, vertexCount:Float = 0):Void$/;"	f
setAsBox	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	public function setAsBox(hx:Float, hy:Float) : Void $/;"	f
setAsEdge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	public function setAsEdge(v1:B2Vec2, v2:B2Vec2):Void$/;"	f
setAsOrientedBox	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	public function setAsOrientedBox(hx:Float, hy:Float, center:B2Vec2 = null, angle:Float = 0.0) : Void$/;"	f
setAsVector	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	public function setAsVector(vertices:Array <B2Vec2>, vertexCount:Float = 0):Void$/;"	f
setAttribute	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function setAttribute (name:String, value:String):Void {};$/;"	f
setAttributeNS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function setAttributeNS (?namespaceURI:String, qualifiedName:String, value:String):Void {};$/;"	f
setAttributeNode	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function setAttributeNode (newAttr:Dynamic \/*Attr*\/):Dynamic \/*Attr*\/ { return null; };$/;"	f
setAttributeNodeNS	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public function setAttributeNodeNS (newAttr:Dynamic \/*Attr*\/):Dynamic \/*Attr*\/ { return null; };$/;"	f
setAutoplay	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function setAutoplay (buffer:AudioBuffer, value:Bool):Void {$/;"	f
setAwake	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function setAwake(flag:Bool):Void {$/;"	f
setAxisAligned	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2TensorDampingController.hx	/^	public function setAxisAligned(xDamping:Float, yDamping:Float):Void{$/;"	f
setBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function setBitmapData (id:String, bitmapData:BitmapData):Void {$/;"	f
setBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function setBitmapData (id:String, bitmapData:BitmapData):Void;$/;"	f
setBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function setBitmapData (id:String, bitmapData:BitmapData):Void {$/;"	f
setBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function setBitmapData (id:String, bitmapData:BitmapData):Void;$/;"	f
setBlendFactors	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function setBlendFactors (sourceFactor:Int, destinationFactor:Int):Void {$/;"	f
setBlendMode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/BlendModeManager.hx	/^	public function setBlendMode (blendMode:BlendMode, ?force:Bool = false):Bool {$/;"	f
setBlocking	/usr/lib/haxe/std/sys/net/Socket.hx	/^	function setBlocking( b : Bool ) : Void;$/;"	f
setBroadPhase	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function setBroadPhase(broadPhase:IBroadPhase) : Void {$/;"	f
setBullet	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function setBullet(flag:Bool) : Void{$/;"	f
setByte	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Memory.hx	/^	static inline public function setByte (addr:Int, v:Int):Void {$/;"	f
setCache	/usr/lib/haxe/std/neko/vm/Loader.hx	/^	public function setCache( name : String, m : Module ) {$/;"	f
setCallDebug	/usr/lib/haxe/std/haxe/remoting/AsyncDebugConnection.hx	/^	public function setCallDebug(h) {$/;"	f
setChildIndex	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function setChildIndex (child:Dynamic \/*DisplayObject*\/, index:Int):Void {};$/;"	f
setChildIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^	public function setChildIndex (child:DisplayObject, index:Int):Void {$/;"	f
setChildIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^	public function setChildIndex (child:DisplayObject, index:Int) {$/;"	f
setClipboard	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/System.hx	/^	public static function setClipboard (string:String):Void {$/;"	f
setColorMask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function setColorMask (red:Bool, green:Bool, blue:Bool, alpha:Bool):Void {$/;"	f
setCompositeOperation	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function setCompositeOperation (compositeOperation:String):Void {};$/;"	f
setContactFilter	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function setContactFilter(filter:B2ContactFilter) : Void{$/;"	f
setContactListener	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function setContactListener(listener:B2ContactListener) : Void{$/;"	f
setContext	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^	public function setContext (gl:GLRenderContext):Void {$/;"	f
setContext	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GLMaskManager.hx	/^	public function setContext (gl:GLRenderContext) {$/;"	f
setContext	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GLMaskManager.hx	/^	public function setContext (gl:GLRenderContext):Void {$/;"	f
setContext	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/ShaderManager.hx	/^	public function setContext(gl:GLRenderContext) {$/;"	f
setContext	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	public function setContext(gl:GLRenderContext) {$/;"	f
setContext	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^	public function setContext (gl:GLRenderContext):Void {$/;"	f
setContext	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexArray.hx	/^	public function setContext(gl:GLRenderContext, view:ArrayBufferView) {$/;"	f
setContinuousPhysics	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function setContinuousPhysics(flag: Bool) : Void { m_continuousPhysics = flag; }$/;"	f
setController	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function setController (buffer:AudioBuffer, value:Dynamic \/*MediaController*\/):Void {$/;"	f
setCookie	/usr/lib/haxe/std/neko/Web.hx	/^	public static function setCookie( key : String, value : String, ?expire: Date, ?domain: String, ?path: String, ?secure: Bool, ?httpOnly: Bool ) {$/;"	f
setCulling	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function setCulling (triangleFaceToCull:Int):Void {$/;"	f
setCurrentClass	/usr/lib/haxe/std/haxe/macro/JSGenApi.hx	/^	function setCurrentClass( c : ClassType ) : Void;$/;"	f
setCurrentTime	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function setCurrentTime (buffer:AudioBuffer, value:Float):Void {$/;"	f
setCustomJSGenerator	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^	public static function setCustomJSGenerator( callb : JSGenApi -> Void ) {$/;"	f
setCwd	/usr/lib/haxe/std/Sys.hx	/^	static function setCwd( s : String ) : Void;$/;"	f
setDampingRatio	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^	public function setDampingRatio(ratio:Float):Void$/;"	f
setDampingRatio	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^	public function setDampingRatio(ratio:Float):Void$/;"	f
setDebugDraw	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function setDebugDraw(debugDraw:B2DebugDraw) : Void{$/;"	f
setDefaultPlaybackRate	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function setDefaultPlaybackRate (buffer:AudioBuffer, value:Float):Void {$/;"	f
setDensity	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public function setDensity(density:Float):Void {$/;"	f
setDepthTest	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function setDepthTest (depthMask:Bool, passCompareMode:Int):Void {$/;"	f
setDestructionListener	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function setDestructionListener(listener:B2DestructionListener) : Void{$/;"	f
setDouble	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Memory.hx	/^	static inline public function setDouble (addr:Int, v:Float):Void {$/;"	f
setDouble	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^	public function setDouble( pos : Int, v : Float ) : Void {$/;"	f
setDrawScale	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	public function setDrawScale(drawScale:Float) : Void {$/;"	f
setEmpty	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	public function setEmpty ():Void {$/;"	f
setEmpty	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	public function setEmpty ():Void {$/;"	f
setEmpty	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^	public function setEmpty ():Void {$/;"	f
setEnableTextEvents	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashWindow.hx	/^	public function setEnableTextEvents (value:Bool):Bool {$/;"	f
setEnableTextEvents	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^	public function setEnableTextEvents (value:Bool):Bool {$/;"	f
setEnableTextEvents	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	public function setEnableTextEvents (value:Bool):Bool {$/;"	f
setEnabled	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	public function setEnabled(flag:Bool):Void{$/;"	f
setErrorDebug	/usr/lib/haxe/std/haxe/remoting/AsyncDebugConnection.hx	/^	public function setErrorDebug(h) {$/;"	f
setErrorHandler	/usr/lib/haxe/std/haxe/remoting/AMFConnection.hx	/^	public function setErrorHandler(h) {$/;"	f
setErrorHandler	/usr/lib/haxe/std/haxe/remoting/AsyncAdapter.hx	/^	public function setErrorHandler(h) {$/;"	f
setErrorHandler	/usr/lib/haxe/std/haxe/remoting/AsyncConnection.hx	/^	function setErrorHandler( error : Dynamic -> Void ) : Void;$/;"	f
setErrorHandler	/usr/lib/haxe/std/haxe/remoting/AsyncDebugConnection.hx	/^	public function setErrorHandler(h) {$/;"	f
setErrorHandler	/usr/lib/haxe/std/haxe/remoting/DelayedConnection.hx	/^	public function setErrorHandler(h) {$/;"	f
setErrorHandler	/usr/lib/haxe/std/haxe/remoting/FlashJsConnection.hx	/^	public function setErrorHandler(h) {$/;"	f
setErrorHandler	/usr/lib/haxe/std/haxe/remoting/HttpAsyncConnection.hx	/^	public function setErrorHandler(h) {$/;"	f
setErrorHandler	/usr/lib/haxe/std/haxe/remoting/LocalConnection.hx	/^	public function setErrorHandler(h) {$/;"	f
setErrorHandler	/usr/lib/haxe/std/haxe/remoting/SocketConnection.hx	/^	public function setErrorHandler(h) {$/;"	f
setErrorLogger	/usr/lib/haxe/std/haxe/remoting/SocketConnection.hx	/^	public function setErrorLogger(h) {$/;"	f
setExport	/usr/lib/haxe/std/neko/vm/Module.hx	/^	public function setExport( name : String, value : Dynamic ) {$/;"	f
setFastSend	/usr/lib/haxe/std/sys/net/Socket.hx	/^	function setFastSend( b : Bool ) : Void;$/;"	f
setField	/usr/lib/haxe/std/Reflect.hx	/^	public static function setField( o : Dynamic, field : String, value : Dynamic ) : Void;$/;"	f
setFieldType	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^	public static function setFieldType( className : String, field : String, type : String, ?isStatic : Bool ) {$/;"	f
setFillAlpha	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	public function setFillAlpha(alpha:Float) : Void {$/;"	f
setFillColor	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function setFillColor (c:Float, m:Float, y:Float, k:Float, a:Float):Void {};$/;"	f
setFilterData	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public function setFilterData(filter:B2FilterData):Void$/;"	f
setFixedOrientation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public static function setFixedOrientation (orientation:Int):Void {$/;"	f
setFixedRotation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function setFixedRotation(fixed:Bool):Void$/;"	f
setFlags	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	public function setFlags(flags:Int) : Void{$/;"	f
setFlags	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function setFlags (flags:Int):Void {$/;"	f
setFloat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Memory.hx	/^	static inline public function setFloat (addr:Int, v:Float):Void {$/;"	f
setFloat	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^	public function setFloat( pos : Int, v : Float ) : Void {$/;"	f
setFloat32	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ArrayBufferView.hx	/^	public inline function setFloat32 (position:Int, value:Float):Void {$/;"	f
setFloat32	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ArrayBufferView.hx	/^	inline public function setFloat32 (position:Int, value:Float):Void {$/;"	f
setFlushMode	/usr/lib/haxe/std/haxe/zip/Compress.hx	/^	public function setFlushMode( f : FlushMode ) {$/;"	f
setFlushMode	/usr/lib/haxe/std/haxe/zip/Uncompress.hx	/^	public function setFlushMode( f : FlushMode ) {$/;"	f
setFont	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function setFont (id:String, font:Font):Void {$/;"	f
setFont	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function setFont (id:String, font:Font):Void;$/;"	f
setFont	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function setFont (id:String, font:Font):Void {$/;"	f
setFont	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function setFont (id:String, font:Font):Void;$/;"	f
setFontFace	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function setFontFace( face:CairoFont ) {$/;"	f
setFontOptions	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function setFontOptions (value:CairoFontOptions):CairoFontOptions {$/;"	f
setFontSize	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function setFontSize( size:Float ) {$/;"	f
setFormat	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	public static function setFormat (image:Image, format:PixelFormat):Void {$/;"	f
setFormat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function setFormat (format:Int):Void {$/;"	f
setFrameRate	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashApplication.hx	/^	public function setFrameRate (value:Float):Float {$/;"	f
setFrameRate	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Application.hx	/^	public function setFrameRate (value:Float):Float {$/;"	f
setFrameRate	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public function setFrameRate (value:Float):Float {$/;"	f
setFrequency	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^	public function setFrequency(hz:Float):Void$/;"	f
setFrequency	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^	public function setFrequency(hz:Float):Void$/;"	f
setFriction	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public function setFriction(friction:Float):Void$/;"	f
setFullscreen	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashWindow.hx	/^	public function setFullscreen (value:Bool):Bool {$/;"	f
setFullscreen	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^	public function setFullscreen (value:Bool):Bool {$/;"	f
setFullscreen	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	public function setFullscreen (value:Bool):Bool {$/;"	f
setFullscreen	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public function setFullscreen (full:Bool):Void {$/;"	f
setGLSLProgramConstantsFromByteArray	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function setGLSLProgramConstantsFromByteArray (locationName:String, data:ByteArray, byteArrayOffset:Int = 0):Void {$/;"	f
setGLSLProgramConstantsFromMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function setGLSLProgramConstantsFromMatrix (locationName:String, matrix:Matrix3D, transposedMatrix:Bool = false):Void {$/;"	f
setGLSLProgramConstantsFromVector4	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function setGLSLProgramConstantsFromVector4 (locationName:String, data:Array<Float>, startIndex:Int = 0):Void {$/;"	f
setGLSLTextureAt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function setGLSLTextureAt (locationName:String, texture:TextureBase, textureIndex:Int):Void {$/;"	f
setGLSLVertexBufferAt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function setGLSLVertexBufferAt (locationName, buffer:VertexBuffer3D, bufferOffset:Int = 0, ?format:Context3DVertexBufferFormat):Void {$/;"	f
setGlobal	/usr/lib/haxe/std/neko/vm/Module.hx	/^	public function setGlobal( n : Int, v : Dynamic ) {$/;"	f
setGravity	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function setGravity(gravity: B2Vec2): Void$/;"	f
setHeader	/usr/lib/haxe/std/haxe/Http.hx	/^	public function setHeader( header : String, value : String ):Http {$/;"	f
setHeader	/usr/lib/haxe/std/neko/Web.hx	/^	public static function setHeader( h : String, v : String ) {$/;"	f
setHeight	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^	private var setHeight:Int;$/;"	v
setI16	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Memory.hx	/^	static public function setI16 (addr:Int, v:Int):Void {$/;"	f
setI32	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Memory.hx	/^	static public function setI32 (addr:Int, v:Int):Void {$/;"	f
setIcon	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashWindow.hx	/^	public function setIcon (image:Image):Void {$/;"	f
setIcon	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^	public function setIcon (image:Image):Void {$/;"	f
setIcon	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	public function setIcon (image:Image):Void {$/;"	f
setIcon	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public function setIcon (image:Image):Void {$/;"	f
setIcon	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	public static function setIcon (path:String):Void {$/;"	f
setIdentity	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat22.hx	/^	public function setIdentity() : Void$/;"	f
setIdentity	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat33.hx	/^	public function setIdentity() : Void$/;"	f
setIdentity	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Transform.hx	/^	public function setIdentity() : Void$/;"	f
setInt16	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ArrayBufferView.hx	/^	public inline function setInt16 (position:Int, value:Int):Void {$/;"	f
setInt16	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ArrayBufferView.hx	/^	inline public function setInt16 (position:Int, value:Int):Void {$/;"	f
setInt32	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ArrayBufferView.hx	/^	public inline function setInt32 (position:Int, value:Int):Void {$/;"	f
setInt32	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ArrayBufferView.hx	/^	inline public function setInt32 (position:Int, value:Int):Void {$/;"	f
setInt8	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ArrayBufferView.hx	/^	public inline function setInt8 (position:Int, value:Int):Void {$/;"	f
setJavaJDK	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var setJavaJDK = false;$/;"	v
setLength	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^	public function setLength(length:Float):Void$/;"	f
setLength	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function setLength (length:Int):Void {$/;"	f
setLength	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function setLength (length:Int):Void {$/;"	f
setLimits	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	public function setLimits(lower:Float, upper:Float) : Void$/;"	f
setLimits	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	public function setLimits(lower:Float, upper:Float) : Void$/;"	f
setLimits	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	public function setLimits(lower:Float, upper:Float) : Void{$/;"	f
setLineCap	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function setLineCap (cap:String):Void {};$/;"	f
setLineDash	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function setLineDash (dash:Array<Float>):Void {};$/;"	f
setLineJoin	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function setLineJoin (join:String):Void {};$/;"	f
setLineThickness	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	public function setLineThickness(lineThickness:Float) : Void {$/;"	f
setLineWidth	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function setLineWidth (width:Float):Void {};$/;"	f
setLinearDamping	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function setLinearDamping(linearDamping:Float):Void$/;"	f
setLinearVelocity	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function setLinearVelocity(v:B2Vec2) : Void {$/;"	f
setLocalPosition	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^	public function setLocalPosition(position:B2Vec2):Void {$/;"	f
setLoop	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function setLoop (buffer:AudioBuffer, value:Bool):Void {$/;"	f
setLoop	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^	function setLoop(k:K, v:V, node:TreeNode<K,V>) {$/;"	f
setM	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat22.hx	/^	public function setM(m:B2Mat22) : Void$/;"	f
setM	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat33.hx	/^	public function setM(m:B2Mat33) : Void$/;"	f
setMassData	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function setMassData(massData:B2MassData):Void$/;"	f
setMaxForce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^	public function setMaxForce(force:Float):Void$/;"	f
setMaxForce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^	public function setMaxForce(maxForce:Float):Void$/;"	f
setMaxMotorForce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	public function setMaxMotorForce(force:Float) : Void$/;"	f
setMaxMotorForce	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	public function setMaxMotorForce(force:Float) : Void$/;"	f
setMaxMotorTorque	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	public function setMaxMotorTorque(torque:Float) : Void{$/;"	f
setMaxTorque	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^	public function setMaxTorque(torque:Float):Void$/;"	f
setMediaGroup	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function setMediaGroup (buffer:AudioBuffer, value:String):Void {$/;"	f
setMinimized	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashWindow.hx	/^	public function setMinimized (value:Bool):Bool {$/;"	f
setMinimized	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^	public function setMinimized (value:Bool):Bool {$/;"	f
setMinimized	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^	public function setMinimized (value:Bool):Bool {$/;"	f
setMiterLimit	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function setMiterLimit (limit:Float):Void {};$/;"	f
setMotorSpeed	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	public function setMotorSpeed(speed:Float) : Void$/;"	f
setMotorSpeed	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	public function setMotorSpeed(speed:Float) : Void$/;"	f
setMotorSpeed	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	public function setMotorSpeed(speed:Float) : Void {$/;"	f
setMute	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public function setMute (value:Bool):Bool;$/;"	f
setMute	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static function setMute (value:Bool):Bool;$/;"	f
setMuted	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function setMuted (buffer:AudioBuffer, value:Bool):Void {$/;"	f
setNextEdge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public function setNextEdge(edge: B2EdgeShape, core: B2Vec2, cornerDir: B2Vec2, convex: Bool): Void$/;"	f
setNode	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^	private function setNode (bucket:Dynamic, node:String, value:Dynamic):Void {$/;"	f
setOrtho	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	public function setOrtho(x:Float, y:Float, width:Float, height:Float) {$/;"	f
setOutput	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^	public static function setOutput( fileOrDir : String ) {$/;"	f
setPackage	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	public static function setPackage (company:String, file:String, packageName:String, version:String):Void {$/;"	f
setPan	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public function setPan (value:Float):Float;$/;"	f
setParameter	/usr/lib/haxe/std/haxe/Http.hx	/^	public function setParameter( param : String, value : String ):Http {$/;"	f
setPixel	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public function setPixel (x:Int, y:Int, color:Int, format:PixelFormat = null):Void {$/;"	f
setPixel	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageCanvasUtil.hx	/^	public static function setPixel (image:Image, x:Int, y:Int, color:Int, format:PixelFormat):Void {$/;"	f
setPixel	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	public static function setPixel (image:Image, x:Int, y:Int, color:Int, format:PixelFormat):Void {$/;"	f
setPixel	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function setPixel (x:Int, y:Int, color:Int):Void {$/;"	f
setPixel	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function setPixel (x:Int, y:Int, color:Int):Void {$/;"	f
setPixel32	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public function setPixel32 (x:Int, y:Int, color:Int, format:PixelFormat = null):Void {$/;"	f
setPixel32	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageCanvasUtil.hx	/^	public static function setPixel32 (image:Image, x:Int, y:Int, color:Int, format:PixelFormat):Void {$/;"	f
setPixel32	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	public static function setPixel32 (image:Image, x:Int, y:Int, color:Int, format:PixelFormat):Void {$/;"	f
setPixel32	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function setPixel32 (x:Int, y:Int, color:Int):Void {$/;"	f
setPixel32	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function setPixel32 (x:Int, y:Int, color:Int):Void {$/;"	f
setPixels	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public function setPixels (rect:Rectangle, byteArray:ByteArray, format:PixelFormat = null):Void {$/;"	f
setPixels	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageCanvasUtil.hx	/^	public static function setPixels (image:Image, rect:Rectangle, byteArray:ByteArray, format:PixelFormat):Void {$/;"	f
setPixels	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	public static function setPixels (image:Image, rect:Rectangle, byteArray:ByteArray, format:PixelFormat):Void {$/;"	f
setPixels	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function setPixels (rect:Rectangle, pixels:ByteArray):Void {$/;"	f
setPixels	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function setPixels (rect:Rectangle, byteArray:ByteArray):Void {$/;"	f
setPlaybackRate	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function setPlaybackRate (buffer:AudioBuffer, value:Float):Void {$/;"	f
setPosition	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function setPosition(position:B2Vec2):Void$/;"	f
setPosition	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public function setPosition (value:Int):Void;$/;"	f
setPosition	Source/Crate.hx	/^    public function setPosition(x:Float, y:Float) {$/;"	f
setPositionAndAngle	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function setPositionAndAngle(position:B2Vec2, angle:Float) : Void{$/;"	f
setPostData	/usr/lib/haxe/std/haxe/Http.hx	/^	public function setPostData( data : String ):Http {$/;"	f
setPreload	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function setPreload (buffer:AudioBuffer, value:String):Void {$/;"	f
setPrevEdge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public function setPrevEdge(edge: B2EdgeShape, core: B2Vec2, cornerDir: B2Vec2, convex: Bool): Void$/;"	f
setProgram	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function setProgram (program3D:Program3D):Void {$/;"	f
setProgramConstantsFromByteArray	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function setProgramConstantsFromByteArray (programType:Context3DProgramType, firstRegister:Int, numRegisters:Int, data:ByteArray, byteArrayOffset:Int):Void {$/;"	f
setProgramConstantsFromMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function setProgramConstantsFromMatrix (programType:Context3DProgramType, firstRegister:Int, matrix:Matrix3D, transposedMatrix:Bool = false):Void {$/;"	f
setProgramConstantsFromVector	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function setProgramConstantsFromVector (programType:Context3DProgramType, firstRegister:Int, data:Array<Float>, numRegisters:Int = 1):Void {$/;"	f
setProperty	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^	public function setProperty (propertyName:String, value:Dynamic = null):Void {$/;"	f
setProperty	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/SharedObject.hx	/^	public function setProperty (propertyName:String, ?value:Dynamic):Void {$/;"	f
setProperty	/usr/lib/haxe/std/Reflect.hx	/^	public static function setProperty( o : Dynamic, field : String, value : Dynamic ) : Void;$/;"	f
setProtocol	/usr/lib/haxe/std/haxe/remoting/SocketConnection.hx	/^	public function setProtocol( p : SocketProtocol ) {$/;"	f
setProtocol	/usr/lib/haxe/std/haxe/remoting/SyncSocketConnection.hx	/^	public function setProtocol( p : SocketProtocol ) {$/;"	f
setRadius	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^	public function setRadius(radius:Float):Void$/;"	f
setRatio	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^	public function setRatio(ratio:Float):Void {$/;"	f
setRender	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^	public function setRender(fn:Eye->Rectangle->Void) {$/;"	f
setRenderMethod	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function setRenderMethod (func:Event -> Void):Void {$/;"	f
setRenderToBackBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function setRenderToBackBuffer ():Void {$/;"	f
setRenderToTexture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function setRenderToTexture (texture:TextureBase, enableDepthAndStencil:Bool = false, antiAlias:Int = 0, surfaceSelector:Int = 0):Void {      $/;"	f
setRequestedUpdateInterval	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/sensors/Accelerometer.hx	/^	public function setRequestedUpdateInterval (interval:Float):Void {$/;"	f
setRequestedUpdateInterval	/usr/lib/haxe/lib/openfl/3,0,8/openfl/sensors/Accelerometer.hx	/^	public function setRequestedUpdateInterval (interval:Int):Void {$/;"	f
setResolution	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public function setResolution (width:Int, height:Int):Void {$/;"	f
setResolver	/usr/lib/haxe/std/haxe/Unserializer.hx	/^ 	public function setResolver( r ) {$/;"	f
setRestitution	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public function setRestitution(restitution:Float):Void$/;"	f
setResultDebug	/usr/lib/haxe/std/haxe/remoting/AsyncDebugConnection.hx	/^	public function setResultDebug(h) {$/;"	f
setReturnCode	/usr/lib/haxe/std/neko/Web.hx	/^	public static function setReturnCode( r : Int ) {$/;"	f
setRotation	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	private inline function setRotation (theta:Float, scale:Float = 1) {$/;"	f
setRotation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^	public function setRotation (angle:Float, scale:Float = 1):Void {$/;"	f
setRotation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^	private inline function setRotation (theta:Float, scale:Float = 1) {$/;"	f
setSamplerStateAt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function setSamplerStateAt (sampler:Int, wrap:Context3DWrapMode, filter:Context3DTextureFilter, mipfilter:Context3DMipFilter):Void {$/;"	f
setScissorRectangle	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function setScissorRectangle (rectangle:Rectangle):Void {$/;"	f
setScreenMode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public function setScreenMode (mode:ScreenMode):Void {$/;"	f
setSeed	/usr/lib/haxe/std/neko/Random.hx	/^	public function setSeed( s : Int ) {$/;"	f
setSelection	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public function setSelection (beginIndex:Int, endIndex:Int):Void {$/;"	f
setSelection	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public function setSelection (beginIndex:Int, endIndex:Int) {$/;"	f
setSensor	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public function setSensor(sensor:Bool):Void$/;"	f
setSensor	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	public function setSensor(sensor:Bool):Void{$/;"	f
setShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/ShaderManager.hx	/^	public function setShader(shader:Shader, ?force:Bool = false) {$/;"	f
setShadow	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function setShadow (width:Float, height:Float, blur:Float, c:Float, m:Float, y:Float, k:Float, a:Float):Void {};$/;"	f
setSleepingAllowed	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function setSleepingAllowed(flag:Bool):Void{$/;"	f
setSound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function setSound (id:String, sound:Sound):Void {$/;"	f
setSound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public function setSound (id:String, sound:Sound):Void;$/;"	f
setSound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function setSound (id:String, sound:Sound):Void {$/;"	f
setSound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public function setSound (id:String, sound:Sound):Void;$/;"	f
setSourceRGB	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function setSourceRGB (r:Float, g:Float, b:Float):Void {$/;"	f
setSourceRGBA	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function setSourceRGBA (r:Float, g:Float, b:Float, a:Float):Void {$/;"	f
setSourceSurface	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function setSourceSurface (surface:CairoSurface, x:Float, y:Float):Void {$/;"	f
setSprite	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	public function setSprite(sprite:Sprite) : Void {$/;"	f
setSrc	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function setSrc (buffer:AudioBuffer, value:String):Void {$/;"	f
setState	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	function setState(index:Int, texture:GLTexture, ?smooth:Bool = false, ?blendMode:BlendMode, ?colorTransform:ColorTransform, ?skipAlpha:Bool = false) {$/;"	f
setStencilActions	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function setStencilActions (?triangleFace:Int, ?compareMode:Int, ?actionOnBothPass:Int, ?actionOnDepthFail:Int, ?actionOnDepthPassStencilFail:Int):Void {$/;"	f
setStencilReferenceValue	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function setStencilReferenceValue (referenceValue:Int, readMask:Int = 0xFF, writeMask:Int = 0xFF):Void {$/;"	f
setStrokeColor	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function setStrokeColor (c:Float, m:Float, y:Float, k:Float, a:Float):Void {};$/;"	f
setTarget	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^	public function setTarget(target:B2Vec2) : Void{$/;"	f
setTextFormat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public function setTextFormat (format:TextFormat, beginIndex:Int = -1, endIndex:Int = -1):Void {$/;"	f
setTextFormat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public function setTextFormat (format:TextFormat, beginIndex:Int = 0, endIndex:Int = 0):Void {$/;"	f
setTextureAt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function setTextureAt (sampler:Int, texture:TextureBase):Void {$/;"	f
setTextureParameters	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	private function setTextureParameters (texture:TextureBase, wrap:Context3DWrapMode, filter:Context3DTextureFilter, mipfilter:Context3DMipFilter):Void {$/;"	f
setTimeLocale	/usr/lib/haxe/std/Sys.hx	/^	static function setTimeLocale( loc : String ) : Bool;$/;"	f
setTimeout	/usr/lib/haxe/std/haxe/Http.hx	/^	function setTimeout( t : Float ) : Void;$/;"	f
setTimeout	/usr/lib/haxe/std/sys/net/Socket.hx	/^	function setTimeout( timeout : Float ) : Void;$/;"	f
setTo	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public function setTo (a:Float, b:Float, c:Float, d:Float, tx:Float, ty:Float):Void {$/;"	f
setTo	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	public function setTo (xa:Float, ya:Float, widtha:Float, heighta:Float):Void {$/;"	f
setTo	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector2.hx	/^	inline public function setTo (xa:Float, ya:Float):Void {	$/;"	f
setTo	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	inline public function setTo (xa:Float, ya:Float, za:Float):Void {$/;"	f
setTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^	public function setTo (a:Float, b:Float, c:Float, d:Float, tx:Float, ty:Float):Void {$/;"	f
setTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Point.hx	/^	public function setTo (x:Float, y:Float):Void {$/;"	f
setTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	public function setTo (xa:Float, ya:Float, widtha:Float, heighta:Float):Void {$/;"	f
setTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^	public function setTo (a:Float, b:Float, c:Float, d:Float, tx:Float, ty:Float):Void {$/;"	f
setTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Point.hx	/^	public inline function setTo (xa:Float, ya:Float):Void {	$/;"	f
setTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^	public function setTo (xa:Float, ya:Float, widtha:Float, heighta:Float):Void {$/;"	f
setTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^	inline public function setTo (xa:Float, ya:Float, za:Float):Void {$/;"	f
setTransform	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function setTransform(xf:B2Transform):Void$/;"	f
setTransform	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function setTransform (m11:Float, m12:Float, m21:Float, m22:Float, dx:Float, dy:Float):Void {};$/;"	f
setType	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function setType( type:B2BodyType ):Void$/;"	f
setTypeAccessor	/usr/lib/haxe/std/haxe/macro/JSGenApi.hx	/^	function setTypeAccessor( callb : Type -> String ) : Void;$/;"	f
setUInt16	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ArrayBufferView.hx	/^	public inline function setUInt16 (position:Int, value:Int):Void {$/;"	f
setUInt32	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ArrayBufferView.hx	/^	public inline function setUInt32 (position:Int, value:Int):Void {$/;"	f
setUInt8	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ArrayBufferView.hx	/^	public inline function setUInt8 (position:Int, value:Int):Void {$/;"	f
setUInt8	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ArrayBufferView.hx	/^	inline public function setUInt8 (position:Int, value:Int):Void {$/;"	f
setUncaughtExceptionHandler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	public static function setUncaughtExceptionHandler (f:UncaughtErrorEvent->Bool):Void {$/;"	f
setUserData	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function setUserData(data:Dynamic) : Void$/;"	f
setUserData	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	public function setUserData(data:Dynamic):Void{$/;"	f
setV	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec2.hx	/^	public function setV(v:B2Vec2) : Void {x=v.x; y=v.y;}$/;"	f
setV	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec3.hx	/^	public function setV(v:B2Vec3):Void$/;"	f
setVV	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat22.hx	/^	public function setVV(c1:B2Vec2, c2:B2Vec2) : Void$/;"	f
setVVV	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat33.hx	/^	public function setVVV(c1:B2Vec3, c2:B2Vec3, c3:B2Vec3) : Void$/;"	f
setVector	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function setVector (rect:Rectangle, pixels:Array<Int>):Void {$/;"	f
setVector	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function setVector (rect:Rectangle, inputVector:Vector<UInt>) {$/;"	f
setVertexBufferAt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public function setVertexBufferAt (index:Int, buffer:VertexBuffer3D, bufferOffset:Int = 0, ?format:Context3DVertexBufferFormat):Void {$/;"	f
setViewport	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/AbstractRenderer.hx	/^	public function setViewport (x:Int, y:Int, width:Int, height:Int):Void {$/;"	f
setViewport	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	public override function setViewport(x:Int, y:Int, width:Int, height:Int) {$/;"	f
setVolume	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/HTML5AudioContext.hx	/^	public function setVolume (buffer:AudioBuffer, value:Float):Void {$/;"	f
setVolume	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public function setVolume (value:Float):Bool;$/;"	f
setVolume	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static function setVolume (value:Float):Void;$/;"	f
setWarmStarting	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function setWarmStarting(flag: Bool) : Void { m_warmStarting = flag; }$/;"	f
setWidth	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^	private var setWidth:Int;$/;"	v
setXFormScale	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2DebugDraw.hx	/^	public function setXFormScale(xformScale:Float) : Void {$/;"	f
setZero	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat22.hx	/^	public function setZero() : Void$/;"	f
setZero	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat33.hx	/^	public function setZero() : Void$/;"	f
setZero	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec2.hx	/^	public function setZero() : Void { x = 0.0; y = 0.0; }$/;"	f
setZero	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec3.hx	/^	public function setZero():Void$/;"	f
setZero	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Jacobian.hx	/^	public function setZero() : Void{$/;"	f
set_align	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private function set_align (value:StageAlign):StageAlign {$/;"	f
set_alpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function set_alpha (value:Float):Float {$/;"	f
set_alphaMultiplier	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	private inline function set_alphaMultiplier (value:Float):Float {$/;"	f
set_alphaOffset	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	private inline function set_alphaOffset (value:Float):Float {$/;"	f
set_altKey	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	private inline function set_altKey (value:Bool):Bool {$/;"	f
set_autoSize	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function set_autoSize (value:TextFieldAutoSize):TextFieldAutoSize { lime_text_field_set_auto_size (__handle, Type.enumIndex (value)); return value; }$/;"	f
set_autos3d	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private function set_autos3d (value:Bool):Bool {$/;"	f
set_b	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Color.hx	/^	private function set_b(bb:Float) : Float{$/;"	f
set_background	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function set_background (value:Bool):Bool { lime_text_field_set_background (__handle, value); return value; }$/;"	f
set_backgroundColor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function set_backgroundColor (value:Int):Int { lime_text_field_set_background_color (__handle, value); return value; }$/;"	f
set_bigEndian	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	private inline function set_bigEndian (value:Bool):Bool { littleEndian = !value; return value; }$/;"	f
set_bigEndian	/usr/lib/haxe/std/haxe/io/BytesInput.hx	/^	override function set_bigEndian(e) {$/;"	f
set_bigEndian	/usr/lib/haxe/std/haxe/io/BytesOutput.hx	/^	override function set_bigEndian(e) {$/;"	f
set_bigEndian	/usr/lib/haxe/std/haxe/io/Input.hx	/^	function set_bigEndian(b) {$/;"	f
set_bigEndian	/usr/lib/haxe/std/haxe/io/Output.hx	/^	function set_bigEndian( b ) {$/;"	f
set_bitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Bitmap.hx	/^	private function set_bitmapData (value:BitmapData):BitmapData {$/;"	f
set_blendMode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function set_blendMode (value:BlendMode):BlendMode {$/;"	f
set_blueMultiplier	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	private inline function set_blueMultiplier (value:Float):Float {$/;"	f
set_blueOffset	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	private inline function set_blueOffset (value:Float):Float {$/;"	f
set_border	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function set_border (value:Bool):Bool { lime_text_field_set_border (__handle, value); return value; }$/;"	f
set_borderColor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function set_borderColor (value:Int):Int { lime_text_field_set_border_color (__handle, value); return value; }$/;"	f
set_bottom	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	private function set_bottom (b:Float):Float { height = b - y; return b; }$/;"	f
set_bottom	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	private function set_bottom (value:Float) { height = value - y; return value; }$/;"	f
set_bottomRight	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	private function set_bottomRight (p:Vector2):Vector2 { width = p.x - x; height = p.y - y; return p.clone (); }$/;"	f
set_bottomRight	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	private function set_bottomRight (value:Point) { width = value.x - x; height = value.y - y; return value.clone (); }$/;"	f
set_cacheAsBitmap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function set_cacheAsBitmap (value:Bool):Bool {$/;"	f
set_capsLock	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	private inline function set_capsLock (value:Bool):Bool {$/;"	f
set_cnx	/usr/lib/haxe/std/sys/db/Manager.hx	/^	private static function set_cnx( c : Connection ) {$/;"	f
set_color	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	private function set_color (value:Int):Int {$/;"	f
set_color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private function set_color (value:Int):Int {$/;"	f
set_color	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/ColorTransform.hx	/^	private function set_color (value:Int):Int {$/;"	f
set_colorTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Transform.hx	/^	private function set_colorTransform (value:ColorTransform):ColorTransform { __parent.__setColorTransform (value); return value; }$/;"	f
set_commands	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsPath.hx	/^	private function set_commands (value:Array<Int>):Array<Int> {$/;"	f
set_connection	/usr/lib/haxe/std/haxe/remoting/DelayedConnection.hx	/^	function set_connection(cnx) {$/;"	f
set_ctrlKey	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	private inline function set_ctrlKey (value:Bool):Bool {$/;"	f
set_currentTarget	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	private function set_currentTarget (value:Dynamic):Dynamic { return __currentTarget = value; }$/;"	f
set_currentTime	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^	private function set_currentTime (value:Int):Int {$/;"	f
set_cursor	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashMouse.hx	/^	public static function set_cursor (value:MouseCursor):MouseCursor {$/;"	f
set_cursor	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Mouse.hx	/^	public static function set_cursor (value:MouseCursor):MouseCursor {$/;"	f
set_cursor	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeMouse.hx	/^	public static function set_cursor (value:MouseCursor):MouseCursor {$/;"	f
set_cursor	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Mouse.hx	/^	private static function set_cursor (value:MouseCursor):MouseCursor {$/;"	f
set_data	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	private function set_data (value:UInt8Array):UInt8Array {$/;"	f
set_data	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsPath.hx	/^	private function set_data (value:Array<Float>):Array<Float> {$/;"	f
set_dataFormat	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^	private function set_dataFormat (inputVal:URLLoaderDataFormat):URLLoaderDataFormat {$/;"	f
set_defaultTextFormat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function set_defaultTextFormat (value:TextFormat):TextFormat {$/;"	f
set_delay	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Timer.hx	/^	private function set_delay (value:Float):Float {$/;"	f
set_displayAsPassword	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function set_displayAsPassword (value:Bool):Bool { lime_text_field_set_display_as_password (__handle, value); return value; }$/;"	f
set_displayState	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private function set_displayState (value:StageDisplayState):StageDisplayState {$/;"	f
set_downState	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/SimpleButton.hx	/^	private function set_downState (value:DisplayObject):DisplayObject {$/;"	f
set_embedFonts	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function set_embedFonts (value:Bool):Bool { lime_text_field_set_embed_fonts (__handle, value); return value; }$/;"	f
set_enabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	private function set_enabled (value:Bool):Bool {$/;"	f
set_enabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	private function set_enabled (value:Bool):Bool {$/;"	f
set_enabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3D.hx	/^	public static function set_enabled (enabled:Bool) {$/;"	f
set_enabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/SimpleButton.hx	/^	private function set_enabled (value):Bool {$/;"	f
set_endian	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	private inline function set_endian (endian:String):String {$/;"	f
set_endian	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/IDataInput.hx	/^	private function set_endian (s:String):String;$/;"	f
set_endian	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	private function set_endian (value:String):String { bigEndian = (value == Endian.BIG_ENDIAN); return value; }$/;"	f
set_endian	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	inline function set_endian (endian:String):String {$/;"	f
set_eyeSeparation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3D.hx	/^	public static function set_eyeSeparation (separation:Float):Float {$/;"	f
set_flip	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/Features.hx	/^	private function set_flip(value:Int) : Int{$/;"	f
set_focalLength	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3D.hx	/^	public static function set_focalLength (length:Float):Float {$/;"	f
set_focus	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private function set_focus (value:InteractiveObject):InteractiveObject {$/;"	f
set_fontName	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	private inline function set_fontName (value:String):String {$/;"	f
set_format	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	private function set_format (value:PixelFormat):PixelFormat {$/;"	f
set_frameRate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private function set_frameRate (value:Float):Float {$/;"	f
set_g	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Color.hx	/^	private function set_g(gg:Float) : Float{$/;"	f
set_gain	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^	private function set_gain (value:Float):Float {$/;"	f
set_greenMultiplier	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	private inline function set_greenMultiplier (value:Float):Float {$/;"	f
set_greenOffset	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	private inline function set_greenOffset (value:Float):Float {$/;"	f
set_height	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function set_height (value:Float):Float {$/;"	f
set_hitTestState	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/SimpleButton.hx	/^	private function set_hitTestState (value:DisplayObject):DisplayObject {$/;"	f
set_htmlText	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function set_htmlText (value:String):String	{ lime_text_field_set_html_text (__handle, value); return value; }$/;"	f
set_icon	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^		var set_icon = Lib.load ("lime-legacy", "lime_legacy_set_icon", 1);$/;"	v
set_incidentEdge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/Features.hx	/^	private function set_incidentEdge(value:Int) : Int{$/;"	f
set_incidentVertex	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/Features.hx	/^	private function set_incidentVertex(value:Int) : Int{$/;"	f
set_inputMode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Multitouch.hx	/^	private static function set_inputMode (value:MultitouchInputMode):MultitouchInputMode {$/;"	f
set_key	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ContactID.hx	/^	private function set_key(value:Int) : Int {$/;"	f
set_left	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	private function set_left (l:Float):Float { width -= l - x; x = l; return l; }$/;"	f
set_left	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	private function set_left (value:Float) { width -= value - x; x = value; return value; }$/;"	f
set_length	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^	private function set_length (value:Int):Int {$/;"	f
set_length	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	private inline function set_length (value:Int):Int {$/;"	f
set_length	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	private inline function set_length (value:Int):Int {$/;"	f
set_lock	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashMouse.hx	/^	public static function set_lock (value:Bool):Bool {$/;"	f
set_lock	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Mouse.hx	/^	public static function set_lock (value:Bool):Bool {$/;"	f
set_lock	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeMouse.hx	/^	public static function set_lock (value:Bool):Bool {$/;"	f
set_lock	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Mouse.hx	/^	private static function set_lock (value:Bool):Bool {$/;"	f
set_mask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function set_mask (value:DisplayObject):DisplayObject {$/;"	f
set_maxChars	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function set_maxChars (value:Int):Int { lime_text_field_set_max_chars (__handle, value); return value; }$/;"	f
set_metaKey	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	private inline function set_metaKey (value:Bool):Bool {$/;"	f
set_mouseChildren	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^	private function set_mouseChildren (value:Bool):Bool {$/;"	f
set_mouseEnabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/InteractiveObject.hx	/^	private function set_mouseEnabled (value:Bool):Bool {$/;"	f
set_moveForSoftKeyboard	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/InteractiveObject.hx	/^	private function set_moveForSoftKeyboard (value:Bool):Bool {$/;"	f
set_multiline	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function set_multiline (value:Bool):Bool { lime_text_field_set_multiline (__handle, value); return value; }$/;"	f
set_name	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function set_name (value:String):String {$/;"	f
set_name	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	private function set_name (value:String):String { return fontName = value; }$/;"	f
set_name	/usr/lib/haxe/std/neko/vm/Module.hx	/^	function set_name( n : String ) {$/;"	f
set_nativePath	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/File.hx	/^	private function set_nativePath (value:String):String {$/;"	f
set_needsSoftKeyboard	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/InteractiveObject.hx	/^	private function set_needsSoftKeyboard (value):Bool {$/;"	f
set_numLock	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	private inline function set_numLock (value:Bool):Bool {$/;"	f
set_opaqueBackground	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function set_opaqueBackground (value:Null<Int>):Null<Int> {$/;"	f
set_overState	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/SimpleButton.hx	/^	private function set_overState (value:DisplayObject):DisplayObject {$/;"	f
set_pedanticBitmapCaching	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function set_pedanticBitmapCaching (value:Bool):Bool {$/;"	f
set_pitch	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	private function set_pitch (value:Float):Float { lime_sound_channel_set_pitch (__handle, value); return __pitch = value; }$/;"	f
set_pixelSnapping	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Bitmap.hx	/^	private function set_pixelSnapping (value:PixelSnapping):PixelSnapping {$/;"	f
set_position	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	private function set_position (val:Vector4):Vector4 {$/;"	f
set_position	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	private function set_position (value:Float):Float { return lime_sound_channel_set_position (__handle, position); }$/;"	f
set_position	/usr/lib/haxe/std/haxe/io/BytesInput.hx	/^	function set_position( p : Int ) : Int {$/;"	f
set_powerOfTwo	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	private function set_powerOfTwo (value:Bool):Bool {$/;"	f
set_premultiplied	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	private function set_premultiplied (value:Bool):Bool {$/;"	f
set_premultipliedAlpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	private function set_premultipliedAlpha (value:Bool):Bool { lime_bitmap_data_set_prem_alpha (__handle, value); return value; }$/;"	f
set_quality	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private function set_quality (value:StageQuality):StageQuality {$/;"	f
set_r	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/B2Color.hx	/^	private function set_r(rr:Float) : Float{$/;"	f
set_rawData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	private inline function set_rawData (value:Vector<Float>):Vector<Float> {$/;"	f
set_redMultiplier	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	private inline function set_redMultiplier (value:Float):Float {$/;"	f
set_redOffset	/usr/lib/haxe/lib/lime/2,4,3/lime/math/ColorMatrix.hx	/^	private inline function set_redOffset (value:Float):Float {$/;"	f
set_referenceEdge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/Features.hx	/^	private function set_referenceEdge(value:Int) : Int{$/;"	f
set_right	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	private function set_right (r:Float):Float { width = r - x; return r; }$/;"	f
set_right	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	private function set_right (value:Float) { width = value - x; return value; }$/;"	f
set_rotation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function set_rotation (value:Float):Float {$/;"	f
set_scale9Grid	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function set_scale9Grid (value:Rectangle):Rectangle {$/;"	f
set_scaleMode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private function set_scaleMode (value:StageScaleMode):StageScaleMode {$/;"	f
set_scaleX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function set_scaleX (value:Float):Float {$/;"	f
set_scaleY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function set_scaleY (value:Float):Float {$/;"	f
set_scrollH	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function set_scrollH (value:Int):Int { lime_text_field_set_scroll_h (__handle, value); return value; }$/;"	f
set_scrollRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function set_scrollRect (value:Rectangle):Rectangle {$/;"	f
set_scrollV	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function set_scrollV (value:Int):Int { lime_text_field_set_scroll_v (__handle, value); return value; }$/;"	f
set_selectable	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function set_selectable (value:Bool):Bool { lime_text_field_set_selectable (__handle, value); return value; }$/;"	f
set_shiftKey	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	private inline function set_shiftKey (value:Bool):Bool {$/;"	f
set_size	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	private function set_size (p:Vector2):Vector2 { width = p.x; height = p.y; return p.clone (); }$/;"	f
set_size	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	private function set_size (value:Point) { width = value.x; height = value.y; return value.clone (); }$/;"	f
set_smoothing	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Bitmap.hx	/^	private function set_smoothing (value:Bool):Bool {$/;"	f
set_soundTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/SimpleButton.hx	/^	private function set_soundTransform (value:SoundTransform):SoundTransform {$/;"	f
set_soundTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	private function set_soundTransform (value:SoundTransform):SoundTransform {$/;"	f
set_src	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	private function set_src (value:Dynamic):Dynamic {$/;"	f
set_src	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ImageBuffer.hx	/^	private function set_src (value:Dynamic):Dynamic {$/;"	f
set_stageFocusRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	private function set_stageFocusRect (value:Bool):Bool {$/;"	f
set_tabChildren	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^	private function set_tabChildren (value:Bool) { return false; }$/;"	f
set_target	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	private function set_target (value:Dynamic):Dynamic { return __target = value; }$/;"	f
set_text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function set_text (value:String):String { lime_text_field_set_text (__handle, value); return value; }$/;"	f
set_textColor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function set_textColor (value:Int):Int { lime_text_field_set_text_color (__handle, value); return value; }$/;"	f
set_top	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	private function set_top (t:Float):Float { height -= t - y; y = t; return t; }$/;"	f
set_top	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	private function set_top (value:Float) { height -= value - y; y = value; return value; }$/;"	f
set_topLeft	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	private function set_topLeft (p:Vector2):Vector2 { x = p.x; y = p.y; return p.clone (); }$/;"	f
set_topLeft	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	private function set_topLeft (value:Point) { x = value.x; y = value.y; return value.clone (); }$/;"	f
set_transform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function set_transform (value:Transform):Transform {$/;"	f
set_transparent	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	private function set_transparent (value:Bool):Bool {$/;"	f
set_type	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function set_type (value:TextFieldType):TextFieldType { lime_text_field_set_type (__handle, value == TextFieldType.INPUT); return value; }$/;"	f
set_upState	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/SimpleButton.hx	/^	private function set_upState (value:DisplayObject):DisplayObject {$/;"	f
set_url	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/File.hx	/^	private function set_url (value:String):String {$/;"	f
set_useHandCursor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/SimpleButton.hx	/^	private function set_useHandCursor (value):Bool {$/;"	f
set_value	/usr/lib/haxe/std/neko/vm/Tls.hx	/^	function set_value( v : T ) {$/;"	f
set_visible	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function set_visible (value:Bool):Bool {$/;"	f
set_width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function set_width (value:Float):Float {$/;"	f
set_width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	override private function set_width (value:Float):Float {$/;"	f
set_window	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	private function set_window (value:WindowData):WindowData {$/;"	f
set_wordWrap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	private function set_wordWrap (value:Bool):Bool { lime_text_field_set_word_wrap (__handle, value); return value; }$/;"	f
set_x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function set_x (value:Float):Float {$/;"	f
set_y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function set_y (value:Float):Float {$/;"	f
set_z	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	private function set_z (value:Float):Float {$/;"	f
setenv	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public function setenv (name:String, value:String):Void {$/;"	f
setopt	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLEasy.hx	/^	public static function setopt (handle:CURL, option:CURLOption, parameter:Dynamic):CURLCode {$/;"	f
setup	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	public static function setup (askServer:Bool = true, devServer:Bool = false, defines:Map <String, String> = null):Void {$/;"	f
setup	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^	public static var setup:Bool = false;$/;"	v
setup	/usr/lib/haxe/std/haxe/unit/TestCase.hx	/^	public function setup() : Void {$/;"	f
setupAIR	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	public static function setupAIR ():Void {$/;"	f
setupAndroid	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	public static function setupAndroid ():Void {$/;"	f
setupBlackBerry	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	public static function setupBlackBerry ():Void {$/;"	f
setupEmscripten	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	public static function setupEmscripten ():Void {$/;"	f
setupHTML5	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	public static function setupHTML5 ():Void {$/;"	f
setupHaxelib	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	public static function setupHaxelib (haxelib:Haxelib, dependency:Bool = false):Void {$/;"	f
setupHaxelibs	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var setupHaxelibs = new Map<String, Bool> ();$/;"	v
setupLime	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	public static function setupLime ():Void {$/;"	f
setupLinux	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	public static function setupLinux ():Void {$/;"	f
setupMac	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	public static function setupMac ():Void {$/;"	f
setupOpenFL	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	public static function setupOpenFL ():Void {$/;"	f
setupTestMatrix3D	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^	private inline function setupTestMatrix3D(): Matrix3D {$/;"	f
setupTizen	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	public static function setupTizen ():Void {$/;"	f
setupWebOS	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	public static function setupWebOS ():Void {$/;"	f
setupWindows	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	public static function setupWindows ():Void {$/;"	f
sgn	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^		var sgn:Float;$/;"	v
sgn	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^			var sgn:Float = B2Math.crossVV(e12, m_v1.w.getNegative());$/;"	v
sh	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^		var sh = new Sha256();$/;"	v
sh	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^			var sh = Std.int (sourceBitmapData.height);$/;"	v
sh	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var sh:Int = Std.int (sourceRect.height);$/;"	v
sh	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^			var sh = Std.int (sourceBitmapData.height);$/;"	v
sh	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var sh:Int = Std.int (sourceRect.height);$/;"	v
sh	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^		var sh = new Sha1();$/;"	v
shader	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/GLUtils.hx	/^		var shader = GL.createShader (type);$/;"	v
shader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/AbstractShader.hx	/^		var shader = gl.createShader (shaderType);$/;"	v
shader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/Shader.hx	/^		var shader = gl.createShader(type);$/;"	v
shader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^		var shader:DefaultShader = cast filter.shaders[GLRenderer.glContextId];$/;"	v
shader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^					var shader = prepareShader(bucket, renderSession, object, null);$/;"	v
shader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^					var shader = prepareShader(bucket, renderSession, object, translationMatrix.toArray(true));$/;"	v
shader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^					var shader = renderSession.shaderManager.primitiveShader;$/;"	v
shader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var shader:Shader =  null;$/;"	v
shader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var shader:Shader = state.shader == null ? renderSession.shaderManager.defaultShader : state.shader;$/;"	v
shader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	public var shader:Shader;$/;"	v
shader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	var shader:Shader;$/;"	v
shader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^			var shader = renderSession.shaderManager.complexPrimitiveShader;$/;"	v
shader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^			var shader = renderSession.shaderManager.primitiveShader;$/;"	v
shader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^		var shader = renderSession.shaderManager.fillShader;$/;"	v
shader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/_shaders/AGLSLShaderUtils.hx	/^			var shader = GL.createShader (glType);$/;"	v
shaderManager	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/RenderSession.hx	/^	public var shaderManager:ShaderManager;$/;"	v
shaderManager	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	public var shaderManager:ShaderManager;$/;"	v
shaderProgram	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/AbstractShader.hx	/^		var shaderProgram = gl.createProgram ();$/;"	v
shaderProgram	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^	private static var shaderProgram:GLProgram;$/;"	v
shaderSource	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function shaderSource (shader:GLShader, string:String):Void;$/;"	f
shaderSource	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function shaderSource (shader:GLShader, source:String):Void {$/;"	f
shaderSource	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function shaderSource (shader:GLShader, source:String):Void {$/;"	f
shaderSource	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function shaderSource(shader:GLShader, source:String):Void $/;"	f
shaderSource	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function shaderSource(shader:GLShader, source:String):Void;$/;"	f
shaderSourceString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/_shaders/AGLSLShaderUtils.hx	/^			var shaderSourceString:String = aglsl.compile (shaderType, shaderSource);$/;"	v
shaderType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/_shaders/AGLSLShaderUtils.hx	/^			var shaderType:String;$/;"	v
shaders	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLProgram.hx	/^	public var shaders:Array<GLShader>;$/;"	v
shaders	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLProgram.hx	/^	public var shaders:Array<GLShader>;$/;"	v
shadowBlur	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public var shadowBlur:Float;$/;"	v
shadowColor	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public var shadowColor:String;$/;"	v
shadowOffsetX	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public var shadowOffsetX:Float;$/;"	v
shadowOffsetY	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public var shadowOffsetY:Float;$/;"	v
shape	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2FixtureDef.hx	/^	public var shape:B2Shape;$/;"	v
shape	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^				var shape:B2Shape = fixture.getShape();$/;"	v
shape	/usr/lib/haxe/lib/lime/2,4,3/tools/SVGExport.hx	/^				var shape = new Shape ();$/;"	v
shape	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var shape = new Shape ();$/;"	v
shape	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/ShapeTest.hx	/^		var shape = new Shape ();$/;"	v
shape1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ContactPoint.hx	/^	public var shape1:B2Shape;$/;"	v
shape2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ContactPoint.hx	/^	public var shape2:B2Shape;$/;"	v
shapeA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^				var shapeA:B2Shape = m_fixtureA.getShape();$/;"	v
shapeA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^		var shapeA:B2Shape = m_fixtureA.getShape();$/;"	v
shapeA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var shapeA:B2Shape = fixtureA.m_shape;$/;"	v
shapeB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^				var shapeB:B2Shape = m_fixtureB.getShape();$/;"	v
shapeB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^		var shapeB:B2Shape = m_fixtureB.getShape();$/;"	v
shapeB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var shapeB:B2Shape = fixtureB.m_shape;$/;"	v
shapeDensity	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^				var shapeDensity:Float;$/;"	v
shapeRecords	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var shapeRecords = new Array <ShapeRecord> ();$/;"	v
shapes are synchronized later.	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^			\/\/ Note: shapes are synchronized later.$/;"	i
share	/usr/lib/haxe/std/haxe/remoting/Context.hx	/^	public static function share( name : String, obj : {} ) : Context {$/;"	f
sharedEvents	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/LoaderInfo.hx	/^	public var sharedEvents (default, null):EventDispatcher;$/;"	v
sharedEvents	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/LoaderInfo.hx	/^	public var sharedEvents (default, null):EventDispatcher;$/;"	v
sharedObject	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/SharedObjectTest.hx	/^		var sharedObject = SharedObject.getLocal ("test");$/;"	v
sharpness	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public var sharpness:Float;$/;"	v
sharpness	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var sharpness:Float;$/;"	v
shash	/usr/lib/haxe/std/haxe/Serializer.hx	/^	var shash : haxe.ds.StringMap<Int>;$/;"	v
shift	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public inline function shift ():Null<T> {$/;"	f
shift	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Sampler.hx	/^	public var shift:Int;$/;"	v
shift	/usr/lib/haxe/std/Array.hx	/^	function shift() : Null<T>;$/;"	f
shift	/usr/lib/haxe/std/haxe/ds/ArraySort.hx	/^			var shift = mid - from;$/;"	v
shiftKey	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/KeyModifier.hx	/^	public var shiftKey (get, set):Bool;$/;"	v
shiftKey	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/KeyboardEvent.hx	/^	public var shiftKey:Bool;$/;"	v
shiftKey	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public var shiftKey:Bool;$/;"	v
shiftKey	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/FocusEvent.hx	/^	public var shiftKey:Bool;$/;"	v
shiftKey	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/KeyboardEvent.hx	/^	public var shiftKey:Bool;$/;"	v
shiftKey	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public var shiftKey:Bool;$/;"	v
shiftKey	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TouchEvent.hx	/^	public var shiftKey:Bool;$/;"	v
shl	/usr/lib/haxe/std/haxe/Int64.hx	/^	public static inline function shl( a : Int64, b : Int ) : Int64 {$/;"	f
short	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var short = data.getInt16 (this.position, littleEndian);$/;"	v
short	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/EventDispatcher.hx	/^		var short = full.split (".").pop ();$/;"	v
short	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/EventDispatcher.hx	/^		var short = full.split (".").pop ();$/;"	v
short	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^		var short = data.getInt16 (this.position, littleEndian);$/;"	v
should bitrate be Float?	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^                    \/ slotsPerBitPerSampleByLayerIndexByVersionIndex[versionIndex][layerIndex]); \/\/ TODO should bitrate be Float?$/;"	i
shouldCollide	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function shouldCollide(other:B2Body) : Bool {$/;"	f
shouldCollide	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactFilter.hx	/^	public function shouldCollide(fixtureA:B2Fixture, fixtureB:B2Fixture) : Bool {$/;"	f
show	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashMouse.hx	/^	public static function show ():Void {$/;"	f
show	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Mouse.hx	/^	public static function show ():Void {$/;"	f
show	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeMouse.hx	/^	public static function show ():Void {$/;"	f
show	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Mouse.hx	/^	public static function show ():Void {$/;"	f
show	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Mouse.hx	/^	public static function show ():Void {$/;"	f
show	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Mouse.hx	/^	public static function show ():Void {$/;"	f
showCursor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public function showCursor (show:Bool):Void {$/;"	f
showPage	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function showPage ():Void {$/;"	f
showText	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function showText ( utf8:String ) {$/;"	f
shr	/usr/lib/haxe/std/haxe/Int64.hx	/^	public static inline function shr( a : Int64, b : Int ) : Int64 {$/;"	f
shutdown	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioManager.hx	/^	public static function shutdown ():Void {$/;"	f
shutdown	/usr/lib/haxe/std/haxe/Http.hx	/^	function shutdown( read : Bool, write : Bool ) : Void;$/;"	f
shutdown	/usr/lib/haxe/std/sys/net/Socket.hx	/^	function shutdown( read : Bool, write : Bool ) : Void;$/;"	f
sibling	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^		var sibling:B2DynamicTreeNode = m_root;$/;"	v
sibling	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^		var sibling:B2DynamicTreeNode;$/;"	v
sideInformationSize	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var sideInformationSize = switch (header.version) {$/;"	v
sideInformationStartIndex	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var sideInformationStartIndex = HEADER_SIZE + (if (header.hasCrc) CRC_SIZE else 0);$/;"	v
sideOffset1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var sideOffset1:Float = -tangent.x * v11.x - tangent.y * v11.y + totalRadius;$/;"	v
sideOffset2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var sideOffset2:Float = tangent.x * v12.x + tangent.y * v12.y + totalRadius;$/;"	v
sig	/usr/lib/haxe/std/haxe/io/Input.hx	/^			var sig = ((bytes[1] & 0x7F) << 16) | (bytes[2] << 8) | bytes[3];$/;"	v
sig	/usr/lib/haxe/std/haxe/io/Input.hx	/^		var sig = getDoubleSig(bytes);$/;"	v
sig	/usr/lib/haxe/std/haxe/io/Output.hx	/^		var sig : Int = Math.floor(Math.abs(x) \/ Math.pow(2, exp) * Math.pow(2, 52));$/;"	v
sig	/usr/lib/haxe/std/haxe/io/Output.hx	/^		var sig = (Math.floor(Math.abs(x) \/ Math.pow(2, exp) * (2 << 22)) & 0x7FFFFF);$/;"	v
sig_h	/usr/lib/haxe/std/haxe/io/Output.hx	/^		var sig_h = (sig & cast 34359738367);$/;"	v
sig_l	/usr/lib/haxe/std/haxe/io/Output.hx	/^		var sig_l = Math.floor((sig \/ Math.pow(2,32)));$/;"	v
sigma	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^		var sigma:Float = c * c - rr * b;$/;"	v
sign	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthRequest.hx	/^	public function sign (consumer:OAuthConsumer, ?accessToken:OAuth1AccessToken, ?signatureMethod:OAuthSignatureMethod = HMAC_SHA1):Void {$/;"	f
sign	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^	public static function sign (project:HXProject, workingDirectory:String, entitlementsPath:String):Void {$/;"	f
sign	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var sign = true;$/;"	v
sign	/usr/lib/haxe/std/haxe/Int64.hx	/^		var sign = ((a.high<0) || (b.high<0)) && (!( (a.high<0) && (b.high<0))); \/\/ make sure we get the correct sign$/;"	v
sign	/usr/lib/haxe/std/haxe/Int64.hx	/^		var sign = a.high<0; \/\/ the sign of a modulus is the sign of the value being mod'ed$/;"	v
sign	/usr/lib/haxe/std/haxe/io/Input.hx	/^			var sign = 1 - ((bytes[0] >> 7) << 1);$/;"	v
sign	/usr/lib/haxe/std/haxe/io/Input.hx	/^		var sign = 1 - ((bytes[0] >> 7) << 1); \/\/ sign = bit 0$/;"	v
signature	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ZipHelper.hx	/^				var signature = SHA1.encode ("this isn't working");$/;"	v
signature	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function signature( v : Dynamic ) : String {$/;"	f
signingOptions	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AIRHelper.hx	/^		var signingOptions = [ "-storetype", defines.get ("KEY_STORE_TYPE"), "-keystore", defines.get ("KEY_STORE") ];$/;"	v
silentRecreate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	static public var silentRecreate:Bool = false;$/;"	v
simple	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Flags.hx	/^	public var simple:Bool;$/;"	v
simpleButton	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/SimpleButtonTest.hx	/^		var simpleButton = new SimpleButton ();$/;"	v
simpleString	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	static var simpleString = ~\/^[A-Za-z0-9 ]*$\/;$/;"	v
simplex	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Distance.hx	/^	var simplex:B2Simplex = s_simplex;$/;"	v
simplexCache	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2Shape.hx	/^		var simplexCache:B2SimplexCache = new B2SimplexCache();$/;"	v
simulate context loss by recreating a context3d and dispatch event on Stage3d(see Adobe Doc)	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		\/\/ TODO simulate context loss by recreating a context3d and dispatch event on Stage3d(see Adobe Doc)$/;"	i
simulator	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/BlackBerryPlatform.hx	/^		var simulator = (command == "rebuild" || targetFlags.exists ("simulator"));$/;"	v
simulator	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/TizenPlatform.hx	/^		var simulator = (command == "rebuild" || targetFlags.exists ("simulator"));$/;"	v
simulatorLib	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/BlackBerryPlatform.hx	/^				var simulatorLib = ndll.name + "-x86.so";$/;"	v
sin	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^			var sin = Math.sin (rotation);$/;"	v
sin	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^		var sin = Math.sin (theta);$/;"	v
sin	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^			var sin = Math.sin (rotation);$/;"	v
sin	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^		var sin = Math.sin (angle);$/;"	v
sin	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^			var sin = Math.sin (rotation);$/;"	v
sin	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^		var sin = Math.sin (theta);$/;"	v
sin	/usr/lib/haxe/std/Math.hx	/^	static function sin(v:Float):Float;$/;"	f
size	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	public var size (get, set):Vector2;$/;"	v
size	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Icon.hx	/^	public var size:Int;$/;"	v
size	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextLayout.hx	/^	public var size (default, set):Int;$/;"	v
size	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^			var size = images[i].width;$/;"	v
size	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/FS.hx	/^	public var size:Int;$/;"	v
size	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^			var size = Std.int (format.size);$/;"	v
size	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^			var size = Std.int (format.size);$/;"	v
size	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexArray.hx	/^	public var size:Int = 0;$/;"	v
size	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var size = Std.int (rect.width * rect.height * 4);$/;"	v
size	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	public var size (get, set):Point;$/;"	v
size	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^	public var size (get_size, null):Int;$/;"	v
size	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextFormat.hx	/^	public var size:Null<Float>;$/;"	v
size	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/CubeTexture.hx	/^	public var size : Int;$/;"	v
size	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^	public var size (get, set):Point;$/;"	v
size	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/SharedObject.hx	/^	public var size (get, never):Int;$/;"	v
size	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextFormat.hx	/^	public var size:Null<Float>;$/;"	v
size	/usr/lib/haxe/std/haxe/Http.hx	/^					var size = if( file.size > bufsize ) bufsize else file.size;$/;"	v
size	/usr/lib/haxe/std/haxe/Http.hx	/^		var size = null;$/;"	v
size	/usr/lib/haxe/std/haxe/Unserializer.hx	/^			var size = (len >> 2) * 3 + ((rest >= 2) ? rest - 1 : 0);$/;"	v
size	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^		var size = (b.length * nbits) >> 3;$/;"	v
size	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^		var size = Std.int(b.length * 8 \/ nbits);$/;"	v
size	/usr/lib/haxe/std/haxe/io/BufferInput.hx	/^		var size = if( len > available ) available else len;$/;"	v
size	/usr/lib/haxe/std/haxe/zip/Huffman.hx	/^		var size = 1 << d;$/;"	v
size	/usr/lib/haxe/std/sys/FileStat.hx	/^	var size : Int;$/;"	v
sizeIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^						var sizeIndex = segment.indexOf ("size=");$/;"	v
sizeX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^		var sizeX = width;$/;"	v
sizeX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/TouchEvent.hx	/^	public var sizeX:Float;$/;"	v
sizeX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TouchEvent.hx	/^	public var sizeX:Float;$/;"	v
sizeY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^		var sizeY = height;$/;"	v
sizeY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/TouchEvent.hx	/^	public var sizeY:Float;$/;"	v
sizeY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TouchEvent.hx	/^	public var sizeY:Float;$/;"	v
sizes	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CordovaHelper.hx	/^		var sizes = [];$/;"	v
sizes	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^		var sizes = [ 16, 24, 32, 40, 48, 64, 96, 128, 256, 512, 768 ];$/;"	v
sizes	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FirefoxPlatform.hx	/^		var sizes = [ 32, 48, 60, 64, 128, 512 ];$/;"	v
skip	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^		var skip = if( ignore == null ) {$/;"	v
skip	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var skip = false;$/;"	v
skipColorTransformAlpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	public var skipColorTransformAlpha:Bool = false;$/;"	v
skipT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^						var skipT = uvtData.length != v.length;$/;"	v
skipT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^								var skipT = uvtData.length != v.length;$/;"	v
sl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^						var sl:Float = 0;$/;"	v
slash	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^				var slash = (sysName ().substr (7).toLowerCase () == "windows") ? "\\\\" : "\/";$/;"	v
slash	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^			var slash = (sysName ().substr (7).toLowerCase () == "windows") ? "\\\\" : "\/";$/;"	v
slash	/usr/lib/haxe/std/haxe/io/Path.hx	/^		var slash = '\/';$/;"	v
slashes	/usr/lib/haxe/std/haxe/io/Path.hx	/^		var slashes = false;$/;"	v
sleep	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^		var sleep;$/;"	v
sleep	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^		var sleep;$/;"	v
sleep	/usr/lib/haxe/std/Sys.hx	/^	static function sleep( seconds : Float ) : Void;$/;"	f
slen	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var slen = function (bytes:ByteArray) {$/;"	v
slen	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var slen = function (bytes:ByteArray){ return bytes == null ? 0 : bytes.length; }$/;"	v
slen	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var slen = function(bytes:ByteArray) { return bytes == null ? 0 : bytes.length; }$/;"	v
slen	/usr/lib/haxe/std/StringTools.hx	/^		var slen = s.length;$/;"	v
slice	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function slice (begin:Int, ?inEnd:Int):ByteArray {$/;"	f
slice	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public function slice (?pos:Int, ?end:Int):Vector<T> {$/;"	f
slice	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public inline function slice (?pos:Int = 0, ?end:Int = 0):Vector<T> {$/;"	f
slice	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public inline function slice (?pos:Int, ?end:Int):Vector<T> {$/;"	f
slice	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public inline function slice (pos:Int = 0, end:Int = 16777215):Vector<T> {$/;"	f
slice	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function slice (begin:Int, end:Null<Int> = null):ByteArray {$/;"	f
slice	/usr/lib/haxe/std/Array.hx	/^	function slice( pos : Int, ?end : Int ) : Array<T>;$/;"	f
slide	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	public function slide() {$/;"	f
slotSizeByLayerIndex	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    static var slotSizeByLayerIndex = [0, 1, 1, 4];$/;"	v
slotsPerBitPerSampleByLayerIndexByVersionIndex	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    static var slotsPerBitPerSampleByLayerIndexByVersionIndex = [$/;"	v
smallA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2ConstantAccelController.hx	/^		var smallA:B2Vec2 = new B2Vec2(A.x * step.dt, A.y * step.dt);$/;"	v
small_url	/usr/lib/haxe/std/haxe/Http.hx	/^		var small_url = url;$/;"	v
smooth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsBitmapFill.hx	/^	public var smooth:Bool;$/;"	v
smooth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsBitmapFill.hx	/^	public var smooth:Bool;$/;"	v
smoothing	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterTexture.hx	/^	public var smoothing:Bool;$/;"	v
smoothing	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Bitmap.hx	/^	public var smoothing (default, set):Bool;$/;"	v
smoothing	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Bitmap.hx	/^	public var smoothing:Bool;$/;"	v
smoothing	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Video.hx	/^	public var smoothing:Bool;$/;"	v
snap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var snap = pixelSnapping != NEVER;$/;"	v
snd	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^						var snd:format.swf.Sound = {$/;"	v
snd	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var snd:format.swf.Sound = {$/;"	v
so	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^		var so = new SharedObject (name, localPath, loadedData);$/;"	v
so	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/SharedObject.hx	/^		var so = new SharedObject ();$/;"	v
sock	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^					var sock = serv.accept();$/;"	v
sock	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^	var sock : Socket;$/;"	v
sock	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	var sock : sys.net.Socket;$/;"	v
socket	/usr/lib/haxe/std/haxe/remoting/SocketProtocol.hx	/^	public var socket : Socket;$/;"	v
socket_poll	/usr/lib/haxe/std/neko/net/Poll.hx	/^	static var socket_poll = neko.Lib.load("std","socket_poll",3);$/;"	v
socket_poll_alloc	/usr/lib/haxe/std/neko/net/Poll.hx	/^	static var socket_poll_alloc = neko.Lib.load("std","socket_poll_alloc",1);$/;"	v
socket_poll_events	/usr/lib/haxe/std/neko/net/Poll.hx	/^	static var socket_poll_events = neko.Lib.loadLazy("std","socket_poll_events",2);$/;"	v
socket_poll_prepare	/usr/lib/haxe/std/neko/net/Poll.hx	/^	static var socket_poll_prepare = neko.Lib.loadLazy("std","socket_poll_prepare",3);$/;"	v
socks	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^	var socks : Array<Socket>;$/;"	v
socks	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	var socks : Array<sys.net.Socket>;$/;"	v
softKeyboardInputAreaOfInterest	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var softKeyboardInputAreaOfInterest:Dynamic \/*flash.geom.Rectangle*\/;$/;"	v
softKeyboardInputAreaOfInterest	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/InteractiveObject.hx	/^	public var softKeyboardInputAreaOfInterest:Rectangle;$/;"	v
softKeyboardRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public var softKeyboardRect (get, null):Rectangle;$/;"	v
solidFill	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsSolidFillTest.hx	/^		var solidFill = new GraphicsSolidFill ();$/;"	v
solve	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat22.hx	/^	public function solve(out:B2Vec2, bX:Float, bY:Float):B2Vec2$/;"	f
solve	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^	public function solve(step:B2TimeStep, gravity:B2Vec2, allowSleep:Bool) : Void$/;"	f
solve	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function solve(step:B2TimeStep) : Void{$/;"	f
solve2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^public function solve2():Void$/;"	f
solve22	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat33.hx	/^	public function solve22(out:B2Vec2, bX:Float, bY:Float):B2Vec2$/;"	f
solve3	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^public function solve3():Void$/;"	f
solve33	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Mat33.hx	/^	public function solve33(out:B2Vec3, bX:Float, bY:Float, bZ:Float):B2Vec3$/;"	f
solvePositionConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^	public function solvePositionConstraints(baumgarte:Float):Bool$/;"	f
solvePositionConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^	public override function solvePositionConstraints(baumgarte:Float):Bool$/;"	f
solvePositionConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^	public override function solvePositionConstraints(baumgarte:Float):Bool$/;"	f
solvePositionConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^	public override function solvePositionConstraints(baumgarte:Float):Bool$/;"	f
solvePositionConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	public function solvePositionConstraints(baumgarte:Float):Bool { return false; }$/;"	f
solvePositionConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	public override function solvePositionConstraints(baumgarte:Float ):Bool$/;"	f
solvePositionConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^	public override function solvePositionConstraints(baumgarte:Float):Bool { $/;"	f
solvePositionConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	public override function solvePositionConstraints(baumgarte:Float ):Bool$/;"	f
solvePositionConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	public override function solvePositionConstraints(baumgarte:Float):Bool $/;"	f
solvePositionConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	public override function solvePositionConstraints(baumgarte:Float):Bool{$/;"	f
solvePositionConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^	public override function solvePositionConstraints(baumgarte:Float):Bool$/;"	f
solveTOI	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^	public function solveTOI(subStep:B2TimeStep) : Void$/;"	f
solveTOI	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function solveTOI(step:B2TimeStep) : Void{$/;"	f
solveVelocityConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^	public function solveVelocityConstraints() : Void{$/;"	f
solveVelocityConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^	public override function solveVelocityConstraints(step:B2TimeStep): Void{$/;"	f
solveVelocityConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^	public override function solveVelocityConstraints(step:B2TimeStep): Void{$/;"	f
solveVelocityConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^	public override function solveVelocityConstraints(step:B2TimeStep): Void$/;"	f
solveVelocityConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2Joint.hx	/^	public function solveVelocityConstraints(step:B2TimeStep) : Void { }$/;"	f
solveVelocityConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^	public override function solveVelocityConstraints(step:B2TimeStep) : Void{$/;"	f
solveVelocityConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^	public override function solveVelocityConstraints(step:B2TimeStep) : Void{$/;"	f
solveVelocityConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^	public override function solveVelocityConstraints(step:B2TimeStep) : Void{$/;"	f
solveVelocityConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^	public override function solveVelocityConstraints(step:B2TimeStep) : Void $/;"	f
solveVelocityConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	public override function solveVelocityConstraints(step:B2TimeStep) : Void {$/;"	f
solveVelocityConstraints	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^	public override function solveVelocityConstraints(step:B2TimeStep): Void{$/;"	f
songName	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/ID3Info.hx	/^	public var songName:String;$/;"	v
sort	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public function sort (f:T -> T -> Int):Void {$/;"	f
sort	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public inline function sort (f:T -> T -> Int):Void {$/;"	f
sort	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/VectorTest.hx	/^		var sort = function (a:Int, b:Int):Int {$/;"	v
sort	/usr/lib/haxe/std/Array.hx	/^	function sort( f : T -> T -> Int ) : Void;$/;"	f
sort	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	public function sort( ?l ) {$/;"	f
sortFields	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	function sortFields(fl) {$/;"	f
sound	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^					var sound = library.getMusic (symbolName);$/;"	v
sound	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^			var sound = cache.sound.get (id);$/;"	v
sound	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^		var sound = new Sound ();$/;"	v
sound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^			var sound = Sound.fromAudioBuffer (buffer);$/;"	v
sound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^			var sound = buffer.src;$/;"	v
sound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^			var sound = cache.getSound (id);$/;"	v
sound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^					var sound = library.getMusic (symbolName);$/;"	v
sound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^					var sound = library.getSound (symbolName);$/;"	v
sound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^			var sound = cache.getSound (id);$/;"	v
sound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public var sound:Map<String, Sound>;$/;"	v
sound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^		var sound = new Sound ();$/;"	v
sound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Preloader.hx	/^					var sound = Path.withoutExtension (url);$/;"	v
sound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Preloader.hx	/^			var sound = new Sound ();$/;"	v
sound	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^		var sound = new Sound ();$/;"	v
sound	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^		var sound = new Sound ();$/;"	v
sound	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/SoundTest.hx	/^		var sound = new Sound ();$/;"	v
soundLoader	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^			var soundLoader = new Sound ();$/;"	v
soundLoader	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^			var soundLoader = new Sound ();$/;"	v
soundTransform	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^			var soundTransform = channel.soundTransform;$/;"	v
soundTransform	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var soundTransform:Dynamic \/*flash.media.SoundTransform*\/;$/;"	v
soundTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/SimpleButton.hx	/^	public var soundTransform (get, set):SoundTransform;$/;"	v
soundTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	public var soundTransform (get, set):SoundTransform;$/;"	v
soundTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/SimpleButton.hx	/^	public var soundTransform (get, set):SoundTransform;$/;"	v
soundTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/SoundChannel.hx	/^	public var soundTransform (get, set):SoundTransform;$/;"	v
soundTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/NetStream.hx	/^	public var soundTransform:SoundTransform;$/;"	v
soundTransform	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/media/SoundTransformTest.hx	/^		var soundTransform = new SoundTransform ();$/;"	v
sounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Preloader.hx	/^		var sounds = [];$/;"	v
source	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public var source (get, set):CairoPattern;$/;"	v
source	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URIParser.hx	/^	public var source:String;$/;"	v
source	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/HTML5Platform.hx	/^					var source = Path.withoutExtension (asset.sourcePath);$/;"	v
source	/usr/lib/haxe/lib/lime/2,4,3/tools/RunScript.hx	/^			var source = PathHelper.combine (limeDirectory, "ndll\/" + platform + "\/lime.ndll");$/;"	v
source	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var source = File.read(filename, true);$/;"	v
source	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var source = outputDirectory + "\/bin\/";$/;"	v
source	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var source = image.data.buffer;$/;"	v
source	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/CubeTexture.hx	/^		var source = @:privateAccess (bitmapData.__image).data;$/;"	v
source	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/CubeTexture.hx	/^		var source = new UInt8Array (BitmapData.getRGBAPixels (bitmapData));$/;"	v
source	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/RectangleTexture.hx	/^			var source = data.byteView;$/;"	v
source	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/RectangleTexture.hx	/^			var source = new UInt8Array (data.length);$/;"	v
source	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/RectangleTexture.hx	/^			var source = new UInt8Array(data);$/;"	v
source	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/Texture.hx	/^		var source = new UInt8Array (data);$/;"	v
source	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/Texture.hx	/^		var source = new UInt8Array (data.length);$/;"	v
source	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/ColorMatrixFilter.hx	/^		var source = sourceData.data;$/;"	v
source	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^		var source = new AudioSource (__buffer);$/;"	v
source3f	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function source3f (source:Int, param:Int, value1:Float, value2:Float, value3:Float):Void {$/;"	f
source3f	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function source3f (source:Int, param:Int, value1:Float, value2:Float, value3:Float):Void {$/;"	f
source3i	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function source3i (source:Int, param:Int, value1:Int, value2:Int, value3:Int):Void {$/;"	f
source3i	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function source3i (source:Int, param:Int, value1:Int, value2:Int, value3:Int):Void {$/;"	f
sourceAlpha	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^				var sourceAlpha:Float;$/;"	v
sourceBitmap	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var sourceBitmap = new Bitmap (new BitmapData (100, 100, true, color));$/;"	v
sourceBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var sourceBitmapData = new BitmapData (100, 100, true, color2);$/;"	v
sourceBytes	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/format/PNG.hx	/^				var sourceBytes = Bytes.ofData (image.buffer.data.getByteBuffer ());$/;"	v
sourceBytes	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/format/PNG.hx	/^				var sourceBytes = image.buffer.data.getByteBuffer ();$/;"	v
sourceCanvas	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageCanvasUtil.hx	/^			var sourceCanvas = buffer.__srcCanvas;$/;"	v
sourceChannel	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var sourceChannel = switch (sourceChannel) {$/;"	v
sourceContents	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/NekoHelper.hx	/^		var sourceContents = File.getBytes (source);$/;"	v
sourceData	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var sourceData = sourceImage.buffer.data;$/;"	v
sourceIndex	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/format/PNG.hx	/^				var sourceIndex:Int, index:Int;$/;"	v
sourceIndex	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var sourceIndex:Int, sourceIndexX:Int, sourceIndexY:Int, sourceIndexXY:Int, index:Int;$/;"	v
sourceIndex	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^		var sourceIndex:Int, index:Int;$/;"	v
sourceMemory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^			var sourceMemory = 0;$/;"	v
sourceMemory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^			var sourceMemory = 0;$/;"	v
sourceNode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public var sourceNode:Dynamic;$/;"	v
sourceOffset	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var sourceOffset:Int = 0;$/;"	v
sourceOffset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/ColorMatrixFilter.hx	/^		var sourceOffset:Int;$/;"	v
sourcePath	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Asset.hx	/^	public var sourcePath:String;$/;"	v
sourcePath	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Library.hx	/^	public var sourcePath:String;$/;"	v
sourcePath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var sourcePath = null;$/;"	v
sourcePath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/HTML5Helper.hx	/^		var sourcePath = font.sourcePath;$/;"	v
sourcePath	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^			var sourcePath = words[0];$/;"	v
sourcePath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^				var sourcePath = PathHelper.combine (samplePath, sampleName);$/;"	v
sourcePause	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function sourcePause (source:Int):Void {$/;"	f
sourcePause	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function sourcePause (source:Int):Void {$/;"	f
sourcePausev	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function sourcePausev (sources:Array<Int>):Void {$/;"	f
sourcePausev	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function sourcePausev (sources:Array<Int>):Void {$/;"	f
sourcePixel	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var sourcePixel:Int, destPixel:Int, r:Int, g:Int, b:Int, a:Int, color:Int, c1:Int, c2:Int, c3:Int, c4:Int;$/;"	v
sourcePixels	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var sourcePixels = sourceBitmapData.getPixels (sourceRect);$/;"	v
sourcePlay	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function sourcePlay (source:Int):Void {$/;"	f
sourcePlay	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function sourcePlay (source:Int):Void {$/;"	f
sourcePlayv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function sourcePlayv (sources:Array<Int>):Void {$/;"	f
sourcePlayv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function sourcePlayv (sources:Array<Int>):Void {$/;"	f
sourceQueueBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function sourceQueueBuffer (source:Int, buffer:Int):Void {$/;"	f
sourceQueueBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function sourceQueueBuffer (source:Int, buffer:Int):Void {$/;"	f
sourceQueueBuffers	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function sourceQueueBuffers (source:Int, nb:Int, buffers:Array<Int>):Void {$/;"	f
sourceQueueBuffers	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function sourceQueueBuffers (source:Int, nb:Int, buffers:Array<Int>):Void {$/;"	f
sourceRewind	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function sourceRewind (source:Int):Void {$/;"	f
sourceRewind	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function sourceRewind (source:Int):Void {$/;"	f
sourceRewindv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function sourceRewindv (sources:Array<Int>):Void {$/;"	f
sourceRewindv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function sourceRewindv (sources:Array<Int>):Void {$/;"	f
sourceStop	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function sourceStop (source:Int):Void {$/;"	f
sourceStop	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function sourceStop (source:Int):Void {$/;"	f
sourceStopv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function sourceStopv (sources:Array<Int>):Void {$/;"	f
sourceStopv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function sourceStopv (sources:Array<Int>):Void {$/;"	f
sourceStride	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var sourceStride = sourceImage.buffer.width * 4;$/;"	v
sourceStride	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/ColorMatrixFilter.hx	/^		var sourceStride = sourceData.width * 4;$/;"	v
sourceUnqueueBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function sourceUnqueueBuffer (source:Int):Int {$/;"	f
sourceUnqueueBuffer	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function sourceUnqueueBuffer (source:Int):Int {$/;"	f
sourceUnqueueBuffers	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function sourceUnqueueBuffers (source:Int, nb:Int):Array<Int> {$/;"	f
sourceUnqueueBuffers	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function sourceUnqueueBuffers (source:Int, nb:Int):Array<Int> {$/;"	f
sourceX	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var sourceX:Int, sourceY:Int;$/;"	v
sourcef	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function sourcef (source:Int, param:Int, value:Float):Void {$/;"	f
sourcef	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function sourcef (source:Int, param:Int, value:Float):Void {$/;"	f
sourcefv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function sourcefv (source:Int, param:Int, values:Array<Float>):Void {$/;"	f
sourcefv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function sourcefv (source:Int, param:Int, values:Array<Float>):Void {$/;"	f
sourcei	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function sourcei (source:Int, param:Int, value:Int):Void {$/;"	f
sourcei	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function sourcei (source:Int, param:Int, value:Int):Void {$/;"	f
sourceiv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function sourceiv (source:Int, param:Int, values:Array<Int>):Void {$/;"	f
sourceiv	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function sourceiv (source:Int, param:Int, values:Array<Int>):Void {$/;"	f
sources	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public var sources:Array <String>;$/;"	v
sourcetostring	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLParser.hx	/^	public function sourcetostring (s:Destination, subline, dwm, isscalar, desc, tag):String {$/;"	f
space	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FlashPlatform.hx	/^				var space = line.indexOf (" ");$/;"	v
special	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Destination.hx	/^	public var special:Int;$/;"	v
special	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Sampler.hx	/^	public var special:Float;$/;"	v
speed	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var speed:Float = (dX*(-w1 * axis.y) + dY*(w1 * axis.x)) + (axis.x * ((( v2.x + (-w2 * r2Y)) - v1.x) - (-w1 * r1Y)) + axis.y * ((( v2.y + (w2 * r2X)) - v1.y) - (w1 * r1X)));$/;"	v
speed	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var speed:Float = (dX*(-w1 * axis.y) + dY*(w1 * axis.x)) + (axis.x * ((( v2.x + (-w2 * r2Y)) - v1.x) - (-w1 * r1Y)) + axis.y * ((( v2.y + (w2 * r2X)) - v1.y) - (w1 * r1X)));$/;"	v
speed	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var speed = (cur \/ time) \/ 1024;$/;"	v
speed	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/NetStream.hx	/^	public var speed (get, set):Float;$/;"	v
speedOfSound	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALAudioContext.hx	/^	public function speedOfSound (value:Float):Void {$/;"	f
speedOfSound	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/AL.hx	/^	public static function speedOfSound (value:Float):Void {$/;"	f
spellcheck	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var spellcheck:Bool;$/;"	v
splashScreen	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^						var splashScreen = new SplashScreen (name);$/;"	v
splashScreen	/usr/lib/haxe/lib/lime/2,4,3/lime/project/SplashScreen.hx	/^		var splashScreen = new SplashScreen (path);$/;"	v
splashScreenPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^		var splashScreenPath = PathHelper.combine (projectDirectory, "Images.xcassets\/LaunchImage.launchimage");$/;"	v
splashScreens	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public var splashScreens:Array <SplashScreen>;$/;"	v
splashSizes	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^		var splashSizes:Array<SplashSize> = [$/;"	v
splice	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public function splice (pos:Int, len:Int):Vector<T> {$/;"	f
splice	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public inline function splice (pos:Int, len:Int):Vector<T> {$/;"	f
splice	/usr/lib/haxe/std/Array.hx	/^	function splice( pos : Int, len : Int ) : Array<T>;$/;"	f
split	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function split(callbackMethod:B2Fixture -> Bool):B2Body$/;"	f
split	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^			var split = output.split ("\\n");$/;"	v
split	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^					var split = str.split ("=");$/;"	v
split	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ProcessHelper.hx	/^						var split = cpuinfo.split ("processor");$/;"	v
split	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^						var split = field.split ("-");$/;"	v
split	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^						var split = str.split ("=");$/;"	v
split	/usr/lib/haxe/std/EReg.hx	/^	public function split( s : String ) : Array<String> {$/;"	f
split	/usr/lib/haxe/std/String.hx	/^	function split( delimiter : String ) : Array<String>;$/;"	f
splitFunctionType	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private function splitFunctionType(type:String)$/;"	f
splitPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^			var splitPath = launchImage.name.split ("\/");$/;"	v
splitPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^						var splitPath = antPath.split ("\/");$/;"	v
splitTarget	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^			var splitTarget = targetDirectory.split ("\/");$/;"	v
splitter	/usr/lib/haxe/std/haxe/Template.hx	/^	static var splitter = ~\/(::[A-Za-z0-9_ ()&|!+=\\\/><*."-]+::|\\$\\$([A-Za-z0-9_-]+)\\()\/;$/;"	v
spod	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var spod : Dynamic = Type.resolveClass(r.type);$/;"	v
spreadMethod	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsGradientFill.hx	/^	public var spreadMethod:SpreadMethod;$/;"	v
spreadMethod	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsGradientFill.hx	/^	public var spreadMethod:SpreadMethod;$/;"	v
sprite	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var sprite = new Sprite ();$/;"	v
sprite	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectContainerTest.hx	/^		var sprite = new Sprite ();$/;"	v
sprite	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var sprite = new Sprite ();$/;"	v
sprite	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var sprite = new Sprite ();$/;"	v
sprite	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/InteractiveObjectTest.hx	/^		var sprite = new Sprite ();$/;"	v
sprite	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/SpriteTest.hx	/^		var sprite = new Sprite ();$/;"	v
sprite	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventDispatcherTest.hx	/^		var sprite = new Sprite ();$/;"	v
sprite	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventTest.hx	/^		var sprite = new Sprite ();$/;"	v
sprite	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/FocusEventTest.hx	/^		var sprite = new Sprite ();$/;"	v
sprite	Source/Main.hx	/^                    var sprite = body.getUserData();$/;"	v
sprite2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^		var sprite2 = new Sprite ();$/;"	v
sprite2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectContainerTest.hx	/^		var sprite2 = new Sprite ();$/;"	v
sprite2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectTest.hx	/^		var sprite2 = new Sprite ();$/;"	v
sprite2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventDispatcherTest.hx	/^		var sprite2 = new Sprite ();$/;"	v
sprite2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventTest.hx	/^		var sprite2 = new Sprite ();$/;"	v
sprite2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/FocusEventTest.hx	/^		var sprite2 = new Sprite ();$/;"	v
sprite2Event	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventDispatcherTest.hx	/^		var sprite2Event = false;$/;"	v
sprite2Listener	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/FocusEventTest.hx	/^		var sprite2Listener = function (e:FocusEvent) {$/;"	v
sprite3	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectContainerTest.hx	/^		var sprite3 = new Sprite ();$/;"	v
sprite4	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectContainerTest.hx	/^		var sprite4 = new Sprite ();$/;"	v
spriteBatch	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/RenderSession.hx	/^	public var spriteBatch:SpriteBatch;$/;"	v
spriteBatch	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	public var spriteBatch:SpriteBatch;$/;"	v
spriteEvent	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/EventDispatcherTest.hx	/^		var spriteEvent = false;$/;"	v
spriteListener	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/FocusEventTest.hx	/^		var spriteListener = function (e:FocusEvent) {$/;"	v
spritebatch	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var spritebatch = renderSession.spriteBatch;$/;"	v
spritebatch	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var spritebatch = renderSession.spriteBatch;$/;"	v
sprites	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/DisplayObjectContainerTest.hx	/^		var sprites = [];$/;"	v
sql	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var sql = a+" <=> "+b;$/;"	v
sql	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^						var sql = makeString(parts[0], p);$/;"	v
sql	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^				var sql = makeString("!", p);$/;"	v
sql	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^				var sql = makeString("-", p);$/;"	v
sql	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^				var sql = makeString("~", p);$/;"	v
sql	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var sql = makeString("(", p);$/;"	v
sql	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var sql = buildSQL(em, econd, "DELETE FROM", eopt);$/;"	v
sql	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var sql = buildSQL(em, econd, "SELECT * FROM", eopt);$/;"	v
sql	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var sql = buildSQL(em, econd, "SELECT COUNT(*) FROM");$/;"	v
sql	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var sql = inst.sqlAdd(sql, r.sql, sql.pos);$/;"	v
sql	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var sql = null;$/;"	v
sql	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var sql = { expr : EConst(CString(prefix + " " + inst.quoteField(inst.inf.name))), pos : econd.pos };$/;"	v
sql	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var sql;$/;"	v
sql	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	var sql : String;$/;"	v
sql	/usr/lib/haxe/std/sys/db/TableCreate.hx	/^		var sql = "CREATE TABLE " + quote(infos.name) + " (";$/;"	v
sqlAdd	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	inline function sqlAdd( e1 : Expr, e2 : Expr, pos : Position ) {$/;"	f
sqlAddString	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	inline function sqlAddString( sql : Expr, s : String ) {$/;"	f
sqlAddValue	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	inline function sqlAddValue( sql : Expr, v : Expr, t : RecordType ) {$/;"	f
sqlQuoteValue	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	function sqlQuoteValue( v : Expr, t : RecordType ) {$/;"	f
sqrt	/usr/lib/haxe/std/Math.hx	/^	static function sqrt(v:Float):Float;$/;"	f
sr	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^						var sr:Float = 0;$/;"	v
sr	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^		var sr = scrollRect;$/;"	v
src	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioBuffer.hx	/^	public var src:Audio;$/;"	v
src	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioBuffer.hx	/^	public var src:Dynamic;$/;"	v
src	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioBuffer.hx	/^	public var src:Sound;$/;"	v
src	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public var src (get, set):Dynamic;$/;"	v
src	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ImageBuffer.hx	/^	public var src (get, set):Dynamic;$/;"	v
src	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	public var src:Dynamic;$/;"	v
src	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var src = path;$/;"	v
src	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^			var src = path;$/;"	v
src	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var src = allocated == length ? this : sub (0, length);$/;"	v
src	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var src = allocated == length ? this : sub(0, length);$/;"	v
src	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var src = this;$/;"	v
src	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^		var src = Type.createInstance (className.get (id), []);$/;"	v
src	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/AbstractShader.hx	/^		var src = shaderSrc.join ("\\n");$/;"	v
src	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/Shader.hx	/^		var src = shaderSrc.join("\\n");$/;"	v
src	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var src = allocated == length ? this : sub (0, length);$/;"	v
src	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var src = allocated == length ? this : sub(0, length);$/;"	v
src	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var src = this;$/;"	v
src	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^		var src = Type.createInstance (className.get (id), []);$/;"	v
src	/usr/lib/haxe/std/haxe/io/Path.hx	/^		var src;$/;"	v
srcA	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/ColorMatrixFilter.hx	/^				var srcA = source[sourceOffset + 3];$/;"	v
srcB	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/ColorMatrixFilter.hx	/^				var srcB = source[sourceOffset + 2];$/;"	v
srcChannel	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^				var srcChannel = switch (sourceChannel) { $/;"	v
srcData	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^					var srcData = byteArray;$/;"	v
srcData	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var srcData = image.buffer.data;$/;"	v
srcData	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var srcData = sourceImage.buffer.data;$/;"	v
srcData	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^		var srcData = sourceImage.buffer.data;$/;"	v
srcG	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/ColorMatrixFilter.hx	/^				var srcG = source[sourceOffset + 1];$/;"	v
srcIdx	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^		var srcIdx = switch (sourceChannel) {$/;"	v
srcPosition	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var srcPosition = Std.int (((sourceRect.x + sourceImage.offsetX) * 4) + (srcStride * (sourceRect.y + sourceImage.offsetY)) + srcIdx);$/;"	v
srcPosition	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var srcPosition = Std.int ((rect.x * 4) + (srcStride * rect.y));$/;"	v
srcR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/ColorMatrixFilter.hx	/^				var srcR = source[sourceOffset];$/;"	v
srcRowEnd	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var srcRowEnd = Std.int (4 * (rect.x + rect.width));$/;"	v
srcRowEnd	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var srcRowEnd = Std.int (4 * (sourceRect.x + sourceImage.offsetX + sourceRect.width));$/;"	v
srcRowOffset	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var srcRowOffset = srcStride - Std.int (4 * (sourceRect.width + sourceImage.offsetX));$/;"	v
srcRowOffset	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var srcRowOffset = srcStride - Std.int (4 * rect.width);$/;"	v
srcStride	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var srcStride = Std.int (image.buffer.width * 4);$/;"	v
srcStride	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var srcStride = Std.int (sourceImage.buffer.width * 4);$/;"	v
sref	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^					var sref = src.readUInt16();$/;"	v
st	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^						var st:Float = 0;$/;"	v
stack	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^		var stack:Array <B2DynamicTreeNode> = new Array <B2DynamicTreeNode>();$/;"	v
stack	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var stack:Array <B2Body> = s_stack;$/;"	v
stack	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^				var stack : Array<String> = s.split("\\n");$/;"	v
stack	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^			var stack : Array<String> = s;$/;"	v
stack	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^			var stack = [];$/;"	v
stack	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^			var stack = CallStack.exceptionStack ();$/;"	v
stack	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^		var stack:Array<InteractiveObject> = [];$/;"	v
stack	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var stack = new Array<InteractiveObject> ();$/;"	v
stack	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var stack = new Array<InteractiveObject>();$/;"	v
stack	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^		var stack = new Array<DisplayObject> ();$/;"	v
stack	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^		var stack = [];$/;"	v
stack	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^		var stack = new Array <DisplayObject> ();$/;"	v
stack	/usr/lib/haxe/std/haxe/CallStack.hx	/^				var stack : Array<String> = s.split("\\n");$/;"	v
stack	/usr/lib/haxe/std/haxe/CallStack.hx	/^				var stack = [];$/;"	v
stack	/usr/lib/haxe/std/haxe/CallStack.hx	/^			var stack : Array<String> = s;$/;"	v
stack	/usr/lib/haxe/std/haxe/CallStack.hx	/^			var stack = [];$/;"	v
stack	/usr/lib/haxe/std/haxe/Template.hx	/^	var stack : List<Dynamic>;$/;"	v
stack	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^		var stack = haxe.CallStack.exceptionStack();$/;"	v
stackCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^			var stackCount:Int = 0;$/;"	v
stackSize	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var stackSize:Int = m_bodyCount;$/;"	v
stage	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var stage (default, null):Dynamic \/*Stage*\/;$/;"	v
stage	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	public static var stage (get, null):Stage;$/;"	v
stage	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public var stage (get, null):Stage;$/;"	v
stage	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	public var stage (default, null):Stage;$/;"	v
stage	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		var stage = Lib.current.stage;$/;"	v
stage	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/ApplicationMain.hx	/^		var stage = new openfl.display.Stage (app.window.width, app.window.height, config.background);$/;"	v
stage	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^			var stage = wx.NMEStage.create (frame, null, null, { width: ::WIN_WIDTH::, height: ::WIN_HEIGHT:: });$/;"	v
stage	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^		var stage = new openfl._legacy.display.HybridStage (app.window.width, app.window.height, config.background);$/;"	v
stage3Ds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public var stage3Ds (default, null):Vector<Stage3D>;$/;"	v
stage3Ds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public var stage3Ds (default, null):Vector<Stage3D>;$/;"	v
stageFocusRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public var stageFocusRect (get, set):Bool;$/;"	v
stageFocusRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public var stageFocusRect:Bool;$/;"	v
stageHeight	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public var stageHeight (get, null):Int;$/;"	v
stageHeight	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public var stageHeight (default, null):Int;$/;"	v
stageWidth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public var stageWidth (get, null):Int;$/;"	v
stageWidth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public var stageWidth (default, null):Int;$/;"	v
stageX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public var stageX:Float;$/;"	v
stageX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public var stageX:Float;$/;"	v
stageX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TouchEvent.hx	/^	public var stageX:Float;$/;"	v
stageY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public var stageY:Float;$/;"	v
stageY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public var stageY:Float;$/;"	v
stageY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TouchEvent.hx	/^	public var stageY:Float;$/;"	v
stage_handle	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^				var stage_handle = lime_get_frame_stage (__mainFrame);$/;"	v
stamp	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^	public static function stamp ():Float {$/;"	f
stamp	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^	public static function stamp() : Float {$/;"	f
stamp	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^	public static function stamp ():Float {$/;"	f
stamp	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^	public static function stamp() : Float {$/;"	f
stamp	/usr/lib/haxe/std/haxe/Timer.hx	/^	public static function stamp() : Float {$/;"	f
standardize	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^	public static function standardize (path:String, trailingSlash:Bool = false):String {$/;"	f
standardize the behavior of a 0 x 0 window	/usr/lib/haxe/lib/lime/2,4,3/tests/runtime/test/lime/WindowTest.hx	/^		\/\/ TODO: standardize the behavior of a 0 x 0 window$/;"	i
start	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public var start:Int;$/;"	v
start	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Preloader.hx	/^	private function start ():Void {$/;"	f
start	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^					var start = index + search.length;$/;"	v
start	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^						var start = output.indexOf ("haxelib install ") + 16;$/;"	v
start	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/ApplicationMain.hx	/^	public static function start ():Void {$/;"	f
start	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	var start : Float;$/;"	v
start	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var start:Int = 0;$/;"	v
start	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	public function start(?clipRect:Rectangle = null) {$/;"	f
start	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Timer.hx	/^	public function start ():Void {$/;"	f
start	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Preloader.hx	/^	private override function start ():Void {$/;"	f
start	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^						var start = segment.indexOf (">") + 1;$/;"	v
start	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var start:Int;$/;"	v
start	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/Timer.hx	/^	public function start ():Void {$/;"	f
start	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/ApplicationMain.hx	/^	public static function start ():Void {$/;"	f
start	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^	public static function start ():Void {$/;"	f
start	/usr/lib/haxe/std/haxe/format/JsonParser.hx	/^		var start = pos - 1;$/;"	v
start	/usr/lib/haxe/std/haxe/format/JsonParser.hx	/^		var start = pos;$/;"	v
start	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^		var start = 0;$/;"	v
start	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^		var start = Std.random(nthreads);$/;"	v
startCachingSamples	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInputDevice.hx	/^	public function startCachingSamples (numSamples:Int, controls:Vector<String>):Void {$/;"	f
startDrag	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function startDrag (lockCenter:Bool = false, ?bounds:Dynamic \/*flash.geom.Rectangle*\/):Void {};$/;"	f
startDrag	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Sprite.hx	/^	public function startDrag (lockCenter:Bool = false, bounds:Rectangle = null):Void {$/;"	f
startDrag	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Sprite.hx	/^	public function startDrag (lockCenter:Bool = false, bounds:Rectangle = null):Void {$/;"	f
startIndex	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var startIndex = content.indexOf ("<section id=\\"vars\\">");$/;"	v
startRendering	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/WebAudioContext.hx	/^	public function startRendering ():Void {}$/;"	f
startTouchDrag	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function startTouchDrag (touchPointID:Int, lockCenter:Bool = false, ?bounds:Dynamic \/*flash.geom.Rectangle*\/):Void {};$/;"	f
startTransaction	/usr/lib/haxe/std/sys/db/Connection.hx	/^	function startTransaction() : Void;$/;"	f
startX	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRagdoll.hx	/^				var startX:Float = 70 + Math.random() * 20 + 480 * i;$/;"	v
startX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^		var startX = 0.0;$/;"	v
startX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^		var startX = 0.0;$/;"	v
startY	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRagdoll.hx	/^				var startY:Float = 20 + Math.random() * 50;$/;"	v
startY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^		var startY = 0.0;	$/;"	v
startY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^		var startY = 0.0;$/;"	v
startcomment	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^		var startcomment = line.indexOf ("\/\/");  \/\/ remove comments$/;"	v
stat	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Asset.hx	/^						var stat = FileSystem.stat (path);$/;"	v
stat	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^					var stat = FileSystem.stat (sourcePath);$/;"	v
stat	/usr/lib/haxe/std/sys/FileSystem.hx	/^	static function stat( path : String ) : FileStat;$/;"	f
state	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    var state:MpegAudioReaderState;$/;"	v
state	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var state:State = states[index];$/;"	v
state	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^		var state = S.BEGIN;$/;"	v
state	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	var state : State;$/;"	v
states	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	var states:Array<State> = [];$/;"	v
staticFields	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var staticFields : [];$/;"	v
staticFix	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^	private static var staticFix = B2Settings.b2_maxManifoldPoints;$/;"	v
statics	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var statics : [];$/;"	v
statics	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^	var statics : List<{ c : ClassType, f : ClassField }>;$/;"	v
statics	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var statics : Ref<Array<ClassField>>;$/;"	v
statics	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	var statics : List<ClassField>;$/;"	v
statics	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		var statics = new List();$/;"	v
stats	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Application.hx	/^	private var stats:Dynamic;$/;"	v
stats	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^	public var stats:Dynamic;$/;"	v
stats	/usr/lib/haxe/std/neko/vm/Gc.hx	/^	public static function stats() : { heap : Int, free : Int } {$/;"	f
status	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function status ():CairoStatus {$/;"	f
status	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var status = 0;$/;"	v
status	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/HTTPStatusEvent.hx	/^	public var status:Int;$/;"	v
status	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^			var status:Dynamic = lime_sound_get_status (__handle);$/;"	v
status	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/HTTPStatusEvent.hx	/^	public var status (default, null):Int;$/;"	v
status	/usr/lib/haxe/std/haxe/Http.hx	/^		var status = Std.parseInt(rp[1]);$/;"	v
status	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var status : AnonStatus;$/;"	v
stderr	/usr/lib/haxe/std/Sys.hx	/^	static function stderr() : haxe.io.Output;$/;"	f
stderr	/usr/lib/haxe/std/sys/io/Process.hx	/^	var stderr(default,null) : haxe.io.Input;$/;"	v
stdin	/usr/lib/haxe/std/Sys.hx	/^	static function stdin() : haxe.io.Input;$/;"	f
stdin	/usr/lib/haxe/std/sys/io/Process.hx	/^	var stdin(default,null) : haxe.io.Output;$/;"	v
stdout	/usr/lib/haxe/std/Sys.hx	/^	static function stdout() : haxe.io.Output;$/;"	f
stdout	/usr/lib/haxe/std/sys/io/Process.hx	/^	var stdout(default,null) : haxe.io.Input;$/;"	v
stencil	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ConsoleRenderContext.hx	/^	private var stencil = 0;$/;"	v
stencilCompareMode	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	private var stencilCompareMode:Int;$/;"	v
stencilFunc	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function stencilFunc (func:Int, ref:Int, mask:Int):Void;$/;"	f
stencilFunc	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function stencilFunc (func:Int, ref:Int, mask:Int):Void {$/;"	f
stencilFunc	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function stencilFunc (func:Int, ref:Int, mask:Int):Void {$/;"	f
stencilFunc	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function stencilFunc(func:Int, ref:Int, mask:Int):Void $/;"	f
stencilFunc	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function stencilFunc(func:Int, ref:Int, mask:Int):Void;$/;"	f
stencilFuncSeparate	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function stencilFuncSeparate (face:Int, func:Int, ref:Int, mask:Int):Void;$/;"	f
stencilFuncSeparate	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function stencilFuncSeparate (face:Int, func:Int, ref:Int, mask:Int):Void {$/;"	f
stencilFuncSeparate	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function stencilFuncSeparate (face:Int, func:Int, ref:Int, mask:Int):Void {$/;"	f
stencilFuncSeparate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function stencilFuncSeparate(face:Int, func:Int, ref:Int, mask:Int):Void $/;"	f
stencilFuncSeparate	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function stencilFuncSeparate(face:Int, func:Int, ref:Int, mask:Int):Void;$/;"	f
stencilManager	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/RenderSession.hx	/^	public var stencilManager:StencilManager;$/;"	v
stencilManager	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	public var stencilManager:StencilManager;$/;"	v
stencilMask	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function stencilMask (mask:Int):Void;$/;"	f
stencilMask	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function stencilMask (mask:Int):Void {$/;"	f
stencilMask	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function stencilMask (mask:Int):Void {$/;"	f
stencilMask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^	public var stencilMask:Int = 0;$/;"	v
stencilMask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function stencilMask(mask:Int):Void $/;"	f
stencilMask	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function stencilMask(mask:Int):Void;$/;"	f
stencilMaskSeparate	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function stencilMaskSeparate (face:Int, mask:Int):Void;$/;"	f
stencilMaskSeparate	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function stencilMaskSeparate (face:Int, mask:Int):Void {$/;"	f
stencilMaskSeparate	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function stencilMaskSeparate (face:Int, mask:Int):Void {$/;"	f
stencilMaskSeparate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function stencilMaskSeparate(face:Int, mask:Int):Void $/;"	f
stencilMaskSeparate	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function stencilMaskSeparate(face:Int, mask:Int):Void;$/;"	f
stencilOp	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function stencilOp (fail:Int, zfail:Int, zpass:Int):Void;$/;"	f
stencilOp	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function stencilOp (fail:Int, zfail:Int, zpass:Int):Void {$/;"	f
stencilOp	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function stencilOp (fail:Int, zfail:Int, zpass:Int):Void {$/;"	f
stencilOp	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function stencilOp(fail:Int, zfail:Int, zpass:Int):Void $/;"	f
stencilOp	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function stencilOp(fail:Int, zfail:Int, zpass:Int):Void;$/;"	f
stencilOpSeparate	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function stencilOpSeparate (face:Int, fail:Int, zfail:Int, zpass:Int):Void;$/;"	f
stencilOpSeparate	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function stencilOpSeparate (face:Int, fail:Int, zfail:Int, zpass:Int):Void {$/;"	f
stencilOpSeparate	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function stencilOpSeparate (face:Int, fail:Int, zfail:Int, zpass:Int):Void {$/;"	f
stencilOpSeparate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function stencilOpSeparate(face:Int, fail:Int, zfail:Int, zpass:Int):Void $/;"	f
stencilOpSeparate	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function stencilOpSeparate(face:Int, fail:Int, zfail:Int, zpass:Int):Void;$/;"	f
stencilReadMask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	private var stencilReadMask:Int;$/;"	v
stencilRef	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	private var stencilRef:Int;$/;"	v
stencilStack	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^	public var stencilStack:Array<GLGraphicsData>;$/;"	v
stencilbuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	private var stencilbuffer:GLRenderbuffer;$/;"	v
step	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var step:B2TimeStep = s_timestep2;$/;"	v
step	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function step(dt:Float, velocityIterations:Int, positionIterations:Int) : Void{$/;"	f
step	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^	public override function step(step:B2TimeStep):Void{$/;"	f
step	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2ConstantAccelController.hx	/^	public override function step(step:B2TimeStep):Void{$/;"	f
step	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2ConstantForceController.hx	/^	public override function step(step:B2TimeStep):Void {$/;"	f
step	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2Controller.hx	/^	public function step(step:B2TimeStep):Void {}$/;"	f
step	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2GravityController.hx	/^	public override function step(step:B2TimeStep):Void{$/;"	f
step	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2TensorDampingController.hx	/^	public override function step(step:B2TimeStep):Void{$/;"	f
step	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^		var step;$/;"	v
stl	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^								var stl = inversePendingMatrix.transformPoint(new Point(x, y));$/;"	v
stop	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^	public function stop ():Void {$/;"	f
stop	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^	public function stop() {$/;"	f
stop	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^	public function stop ():Void {$/;"	f
stop	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^	public function stop ():Void {$/;"	f
stop	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^	public function stop() {$/;"	f
stop	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	public function stop() {$/;"	f
stop	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/MovieClip.hx	/^	public function stop ():Void {$/;"	f
stop	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	public function stop ():Void {$/;"	f
stop	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Timer.hx	/^	public function stop ():Void {$/;"	f
stop	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/MovieClip.hx	/^	public function stop ():Void {$/;"	f
stop	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public function stop ():Bool;$/;"	f
stop	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public static function stop ():Void;$/;"	f
stop	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/SoundChannel.hx	/^	public function stop ():Void {$/;"	f
stop	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/Timer.hx	/^	public function stop ():Void {$/;"	f
stop	/usr/lib/haxe/std/haxe/Timer.hx	/^	public function stop() {$/;"	f
stopAllMovieClips	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function stopAllMovieClips ():Void {};$/;"	f
stopCachingSamples	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInputDevice.hx	/^	public function stopCachingSamples ():Void {$/;"	f
stopClient	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	public function stopClient( s : sys.net.Socket ) {$/;"	f
stopDrag	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function stopDrag ():Void {};$/;"	f
stopDrag	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Sprite.hx	/^	public function stopDrag ():Void {$/;"	f
stopDrag	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Sprite.hx	/^	public function stopDrag ():Void {$/;"	f
stopImmediatePropagation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public function stopImmediatePropagation ():Void {$/;"	f
stopImmediatePropagation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public function stopImmediatePropagation ():Void {$/;"	f
stopLoop	/usr/lib/haxe/std/neko/vm/Ui.hx	/^	public static function stopLoop() {$/;"	f
stopPropagation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public function stopPropagation ():Void {$/;"	f
stopPropagation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public function stopPropagation ():Void {$/;"	f
stopTouchDrag	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function stopTouchDrag (touchPointID:Int):Void {};$/;"	f
storageVolumeInfo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/StorageVolumeInfo.hx	/^	public static var storageVolumeInfo (get, null):StorageVolumeInfo;$/;"	v
str	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^		var str = "";$/;"	v
str	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^						var str = o[0]+"(";$/;"	v
str	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^					var str = "[";$/;"	v
str	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^				var str = "{\\n";$/;"	v
str	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^					var str = fin.readLine();$/;"	v
str	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^					var str = src.readString(len);$/;"	v
str	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^						var str = fin.readLine();$/;"	v
str	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequest.hx	/^			var str = vars.toString ();$/;"	v
str	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequest.hx	/^			var str:String = data;$/;"	v
str	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/ByteArrayTest.hx	/^		var str = "H\\xE9llo World !";$/;"	v
str	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/ByteArrayTest.hx	/^		var str:String = "";$/;"	v
str	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/ByteArrayTest.hx	/^		var str:String = "Hello WorldWorldWorldWorldWorldWorldWorldWorldWorldWorldWorldWorldWorldWorldWorldWorldWorldWorldWorldWorldWorld!";$/;"	v
str	/usr/lib/haxe/std/haxe/Int64.hx	/^		var str = "";$/;"	v
str	/usr/lib/haxe/std/haxe/Log.hx	/^				var str = flash.Boot.__string_rec(v, "");$/;"	v
str	/usr/lib/haxe/std/haxe/Log.hx	/^			var str:String = null;$/;"	v
str	/usr/lib/haxe/std/haxe/Resource.hx	/^		var str = cs.Lib.toNativeType(haxe.Resource).Assembly.GetManifestResourceStream(path);$/;"	v
str	/usr/lib/haxe/std/haxe/Template.hx	/^			var str = v.substr(1,v.length-2);$/;"	v
str	/usr/lib/haxe/std/haxe/crypto/Base64.hx	/^		var str = new BaseCode(BYTES).encodeBytes(bytes).toString();$/;"	v
str	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^		var str = "";$/;"	v
str	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^		var str = "";$/;"	v
str	/usr/lib/haxe/std/haxe/format/JsonParser.hx	/^	var str : String;$/;"	v
str	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^		var str = "0123456789abcdef";$/;"	v
str	/usr/lib/haxe/std/haxe/io/BytesBuffer.hx	/^		var str = StringBuf.__to_string(b);$/;"	v
str	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^		var str = switch( fileName.expr ) {$/;"	v
str	/usr/lib/haxe/std/haxe/macro/Format.hx	/^		var str = switch( estr.expr ) {$/;"	v
str	/usr/lib/haxe/std/haxe/macro/Printer.hx	/^		var str = t == null ? "#NULL" :$/;"	v
str	/usr/lib/haxe/std/haxe/unit/TestRunner.hx	/^			var str:String = v;$/;"	v
str	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^				var str = serialize(fields);$/;"	v
str	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^		var str = serialize(rules);$/;"	v
str	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^						var str = str.substr(start + 1, p - start - 2);$/;"	v
str	/usr/lib/haxe/std/neko/net/ThreadRemotingServer.hx	/^		var str = "<cross-domain-policy>";$/;"	v
str	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var str = s.toString();$/;"	v
str	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var str;$/;"	v
str2blks	/usr/lib/haxe/lib/lime/2,4,3/haxe/crypto/Sha256.hx	/^	static function str2blks( s :String ) : Array<Int> {$/;"	f
str2blks	/usr/lib/haxe/std/haxe/crypto/Md5.hx	/^	static function str2blks( str : String ){$/;"	f
str2blks	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^	static function str2blks( s :String ) : Array<Int> {$/;"	f
stream	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^					var stream = proc.stdout;$/;"	v
stream	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^				var stream = proc.stdout;$/;"	v
stream	/usr/lib/haxe/std/haxe/Resource.hx	/^		var stream = cast(Resource, java.lang.Class<Dynamic>).getResourceAsStream("\/" + name);$/;"	v
stream	/usr/lib/haxe/std/haxe/Resource.hx	/^		var stream = new java.io.NativeInput(stream);$/;"	v
strength	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/DropShadowFilter.hx	/^	public var strength:Float;$/;"	v
strength	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/GlowFilter.hx	/^	public var strength:Float;$/;"	v
strength	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/DropShadowFilter.hx	/^	public var strength:Float;$/;"	v
strength	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/GlowFilter.hx	/^	public var strength:Float;$/;"	v
strerror	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLEasy.hx	/^	public static function strerror (code:CURLCode):String {$/;"	f
stretch	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^		var stretch = parent.fullscreen || (setWidth == 0 && setHeight == 0);$/;"	v
stride	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ImageBuffer.hx	/^	public var stride (get, never):Int;$/;"	v
stride	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^				var stride = image.buffer.width * 4;$/;"	v
stride	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var stride = image.buffer.width * 4;$/;"	v
stride	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/Shader.hx	/^		var stride = va.stride;$/;"	v
stride	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var stride:Int = 0;$/;"	v
stride	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexArray.hx	/^	public var stride(get, never):Int;$/;"	v
string	/usr/lib/haxe/std/Std.hx	/^	public static function string( s : Dynamic ) : String;$/;"	f
stringReference	/usr/lib/haxe/std/neko/Lib.hx	/^	public inline static function stringReference( b : haxe.io.Bytes ) {$/;"	f
stringToMask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^	public function stringToMask (s:String = null):UInt {$/;"	f
stringToSwizzle	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^	public function stringToSwizzle (s:String) {$/;"	f
stringify	/usr/lib/haxe/std/haxe/Json.hx	/^	public static inline function stringify( value : Dynamic, ?replacer:Dynamic -> Dynamic -> Dynamic, ?space : String ) : String {$/;"	f
stripColor	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/LogHelper.hx	/^	private static function stripColor (output:String):String {$/;"	f
stripQuotes	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static function stripQuotes (path:String):String {$/;"	f
stroke	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function stroke ():Void {};$/;"	f
stroke	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function stroke ():Void {$/;"	f
stroke	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsStrokeTest.hx	/^		var stroke = new GraphicsStroke ();$/;"	v
strokeCommands	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^	private static var strokeCommands:Array<DrawCommand>;$/;"	v
strokeCommands	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^	private static var strokeCommands:Array<DrawCommand>;$/;"	v
strokeExtents	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function strokeExtents (x1:Float, y1:Float, x2:Float, y2:Float):Void {$/;"	f
strokePattern	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^	private static var strokePattern:CairoPattern;$/;"	v
strokePreserve	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function strokePreserve ():Void {$/;"	f
strokeRect	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function strokeRect (x:Float, y:Float, width:Float, height:Float, ?lineWidth:Float):Void {};$/;"	f
strokeStyle	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public var strokeStyle:Dynamic;$/;"	v
strokeText	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function strokeText (text:String, x:Float, y:Float, ?maxWidth:Float):Void {};$/;"	f
structure.	/usr/lib/haxe/std/Type.hx	/^		package structure.$/;"	p
structure.	/usr/lib/haxe/std/haxe/EnumTools.hx	/^		package structure.$/;"	p
style	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^			var style = canvas.style;$/;"	v
style	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^			var style = div.style;$/;"	v
style	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Preloader.hx	/^			var style = node.style;$/;"	v
style	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var style (default, null):Dynamic \/*CSSStyleDeclaration*\/;$/;"	v
style	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMRenderer.hx	/^		var style = displayObject.__style = element.style;$/;"	v
style	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMRenderer.hx	/^		var style = displayObject.__style;$/;"	v
style	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMTextField.hx	/^					var style = textField.__style;$/;"	v
styleChanged	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var styleChanged:Bool = false;$/;"	v
style_name	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	var style_name:String;$/;"	v
style_name	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	var style_name: String;$/;"	v
styles	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMRenderer.hx	/^		  var styles = window.getComputedStyle(document.documentElement, ''),$/;"	v
styles	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^				var styles = [ FontStyle.BOLD, FontStyle.BOLD_ITALIC, FontStyle.ITALIC, FontStyle.REGULAR ];$/;"	v
sub	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^						var sub = segment.substring (start, end);$/;"	v
sub	/usr/lib/haxe/std/haxe/Int64.hx	/^	public static function sub( a : Int64, b : Int64 ) : Int64 {$/;"	f
sub	/usr/lib/haxe/std/haxe/Utf8.hx	/^	public static inline function sub( s : String, pos : Int, len : Int ) : String {$/;"	f
sub	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^	public function sub( pos : Int, len : Int ) : Bytes {$/;"	f
subDispatch	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^	var subDispatch : Bool;$/;"	v
subInput	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^				var subInput:B2RayCastInput = new B2RayCastInput();$/;"	v
subPath	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^							var subPath = substitute (element.att.path);$/;"	v
subStep	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^			var subStep:B2TimeStep = s_timestep;$/;"	v
subType	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^		var subType = module.substring(0, module.lastIndexOf(".")) + "." + path.substring(path.lastIndexOf(".") + 1);$/;"	v
subarray	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Float32Array.hx	/^	public function subarray (start:Int, end:Null<Int> = null):Float32Array {$/;"	f
subarray	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Int16Array.hx	/^	public function subarray (start:Int, end:Null<Int> = null):Int16Array {$/;"	f
subarray	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Int32Array.hx	/^	public function subarray (start:Int, end:Null<Int> = null):Int32Array {$/;"	f
subarray	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Int8Array.hx	/^	public function subarray (start:Int, end:Null<Int> = null):Int8Array {$/;"	f
subarray	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/UInt16Array.hx	/^	public function subarray (start:Int, end:Null<Int> = null):UInt16Array {$/;"	f
subarray	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/UInt32Array.hx	/^	public function subarray (start:Int, end:Null<Int> = null):UInt32Array {$/;"	f
subarray	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/UInt8Array.hx	/^	public function subarray (start:Int, end:Null<Int> = null):UInt8Array {$/;"	f
subdirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/project/NDLL.hx	/^	public var subdirectory:String;$/;"	v
subdirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^						var subdirectory = null;$/;"	v
subdirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^				var subdirectory = "ndll\/";$/;"	v
subdirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^			var subdirectory = "ndll\/";$/;"	v
sublines	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLParser.hx	/^			var sublines = Std.int (Math.max (lutentry.matrixheight, 1));$/;"	v
submitForValidation	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	public function submitForValidation (path:String, type:String = "application\/zip"):Dynamic {$/;"	f
subpixelOrder	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoFontOptions.hx	/^	public var subpixelOrder (get, set):CairoSubpixelOrder;$/;"	v
substitute	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^	private function substitute (string:String):String {$/;"	f
substr	/usr/lib/haxe/std/String.hx	/^	function substr( pos : Int, ?len : Int ) : String;$/;"	f
substring	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^			var substring = varMatch.matched (1);$/;"	v
substring	/usr/lib/haxe/std/String.hx	/^	function substring( startIndex : Int, ?endIndex : Int ) : String;$/;"	f
subtract	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec2.hx	/^	public function subtract(v:B2Vec2) : Void$/;"	f
subtract	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec3.hx	/^	public function subtract(v:B2Vec3) : Void$/;"	f
subtract	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector2.hx	/^	public function subtract (v:Vector2):Vector2 {$/;"	f
subtract	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	inline public function subtract (a:Vector4):Vector4 {$/;"	f
subtract	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Point.hx	/^	public function subtract (v:Point):Point {$/;"	f
subtract	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Point.hx	/^	public function subtract (v:Point):Point {$/;"	f
subtract	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^	inline public function subtract (a:Vector3D):Vector3D {$/;"	f
subtractVV	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public function subtractVV(a:B2Vec2, b:B2Vec2):B2Vec2$/;"	f
success	/usr/lib/haxe/std/haxe/unit/TestResult.hx	/^	public var success(default,null) : Bool;$/;"	v
success	/usr/lib/haxe/std/haxe/unit/TestStatus.hx	/^	public var success : Bool;$/;"	v
suffix	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/HTML5Helper.hx	/^			var suffix = switch (PlatformHelper.hostPlatform) {$/;"	v
suffix	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/HTML5Helper.hx	/^		var suffix = switch (PlatformHelper.hostPlatform) {$/;"	v
suffix	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^			var suffix = ".so";$/;"	v
superClass	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var superClass : Null<{ t : Ref<ClassType>, params : Array<Type> }>;$/;"	v
superClass	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	var superClass : PathParams;$/;"	v
super_ref	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var super_ref = src.readUInt16();$/;"	v
superclass	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var superclass : asset.flashClass;$/;"	v
support	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public function support(xf:B2Transform, dX:Float, dY:Float) : B2Vec2{$/;"	f
supported	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3D.hx	/^	public static var supported (get, null):Bool;$/;"	v
supportedGestures	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Multitouch.hx	/^	public static var supportedGestures (default, null):Array<String>;$/;"	v
supportedGestures	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Multitouch.hx	/^	public static var supportedGestures (default, null):Array<String>;$/;"	v
supports32BitProcesses	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var supports32BitProcesses (default, null) = #if sys true #else false #end;$/;"	v
supports32BitProcesses	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var supports32BitProcesses (default, null) = #if sys true #else false #end;$/;"	v
supports64BitProcesses	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var supports64BitProcesses (default, null) = #if desktop true #else false #end; \/\/ TODO$/;"	v
supports64BitProcesses	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var supports64BitProcesses (default, null) = #if desktop true #else false #end; \/\/ TODO$/;"	v
supportsAnisotropy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	private static var supportsAnisotropy:Bool = false;$/;"	v
supportsGestureEvents	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Multitouch.hx	/^	public static var supportsGestureEvents (default, null):Bool;$/;"	v
supportsGestureEvents	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Multitouch.hx	/^	public static var supportsGestureEvents (default, null):Bool;$/;"	v
supportsTouchEvents	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/ui/Multitouch.hx	/^	public static var supportsTouchEvents (get, null):Bool;$/;"	v
supportsTouchEvents	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/Multitouch.hx	/^	public static var supportsTouchEvents (get, null):Bool;$/;"	v
surface	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoBitmap.hx	/^			var surface = bitmap.bitmapData.getSurface ();$/;"	v
surface	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var surface:Dynamic;$/;"	v
surface	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^				var surface = CairoSurface.fromImage (bitmap.__image);$/;"	v
surface	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^				var surface = graphics.__cairo.target;$/;"	v
surface	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^			var surface = CairoSurface.fromImage (bitmap.__image);$/;"	v
surface	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^			var surface = cairo.target;$/;"	v
surface	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var surface:Dynamic;$/;"	v
surface	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var surface = getSurface ();$/;"	v
suspend	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioManager.hx	/^	public static function suspend ():Void {$/;"	f
suspendContext	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/ALCAudioContext.hx	/^	public function suspendContext (context:ALContext):Void {$/;"	f
suspendContext	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/openal/ALC.hx	/^	public static function suspendContext (context:ALContext):Void {$/;"	f
svg	/usr/lib/haxe/lib/lime/2,4,3/tools/SVGExport.hx	/^				var svg = new SVG (File.getContent (inputPath));$/;"	v
sw	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^			var sw = Std.int (sourceBitmapData.width);$/;"	v
sw	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var sw:Int = Std.int (sourceRect.width);$/;"	v
sw	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^			var sw = Std.int (sourceBitmapData.width);$/;"	v
sw	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var sw:Int = Std.int (sourceRect.width);$/;"	v
sw	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^		var sw = 0;$/;"	v
swap	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public function swap(a:Array <Dynamic>, b:Array <Dynamic>) : Void$/;"	f
swap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^		var swap:DisplayObject = __children[child1];$/;"	v
swapChildren	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function swapChildren (child1:Dynamic \/*DisplayObject*\/, child2:Dynamic \/*DisplayObject*\/):Void {};$/;"	f
swapChildren	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^	public function swapChildren (child1:DisplayObject, child2:DisplayObject):Void {$/;"	f
swapChildren	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^	public function swapChildren (child1:DisplayObject, child2:DisplayObject):Void {$/;"	f
swapChildrenAt	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function swapChildrenAt (index1:Int, index2:Int):Void {};$/;"	f
swapChildrenAt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^	public function swapChildrenAt (index1:Int, index2:Int):Void {$/;"	f
swapChildrenAt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^	public function swapChildrenAt (child1:Int, child2:Int):Void {$/;"	f
sweepA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TOIInput.hx	/^	public var sweepA:B2Sweep;$/;"	v
sweepA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^		var sweepA:B2Sweep = input.sweepA;$/;"	v
sweepB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TOIInput.hx	/^	public var sweepB:B2Sweep;$/;"	v
sweepB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^		var sweepB:B2Sweep = input.sweepB;$/;"	v
swf	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var swf = reader.read ();$/;"	v
swf	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^			var swf:SWF = { header: header, tags: tags };$/;"	v
swfAssetID	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^	private static var swfAssetID = 1000;$/;"	v
swfVersions	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^		var swfVersions = [ 9, 10, \/*10.1,*\/ 10.2, 10.3, 11, 11.1, 11.2, 11.3, 11.4, 11.5, 11.6, 11.7, 11.8, 12, 13, 14 ];$/;"	v
swf_em	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^			var swf_em = 1024 * 20;$/;"	v
switchBucket	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	private static function switchBucket (fillIndex:Int, glStack:GLStack, mode:BucketMode):GLBucket {$/;"	f
swiz	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLParser.hx	/^		var swiz = [ "x", "y", "z", "w" ];$/;"	v
swizzle	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Destination.hx	/^	public var swizzle:Int;$/;"	v
sx	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^				var sx = Math.sin(components[1].x);$/;"	v
sx	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var sx = 1.0 \/ (x1 - x0);$/;"	v
sx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^			var sx = __currentPath.points[0];$/;"	v
sx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var sx = points[0];		var sy = points[1];$/;"	v
sx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^			var sx = Std.int (sourceRect.x);$/;"	v
sx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^			var sx = Std.int (sourceRect.x);$/;"	v
sx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^				var sx = Math.sin(components[1].x);$/;"	v
sx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var sx = 1.0 \/ (x1 - x0);$/;"	v
sy	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^				var sy = Math.sin(components[1].y);$/;"	v
sy	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var sy = 1.0 \/ (y1 - y0);$/;"	v
sy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^			var sy = __currentPath.points[1];$/;"	v
sy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^			var sy = Std.int (sourceRect.y);$/;"	v
sy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^			var sy = Std.int (sourceRect.y);$/;"	v
sy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^				var sy = Math.sin(components[1].y);$/;"	v
sy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var sy = 1.0 \/ (y1 - y0);$/;"	v
symbolName	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^		var symbolName = id.substr (id.indexOf (":") + 1);$/;"	v
symbolName	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^		var symbolName = id.substr (id.indexOf(":") + 1);$/;"	v
symbolName	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^		var symbolName = id.substr (id.indexOf (":") + 1);$/;"	v
symbolName	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^		var symbolName = id.substr (id.indexOf (":") + 1);$/;"	v
symbolName	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^		var symbolName = id.substr (id.indexOf(":") + 1);$/;"	v
sync	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageCanvasUtil.hx	/^	public static function sync (image:Image):Void {$/;"	f
sync	/usr/lib/haxe/std/neko/vm/Thread.hx	/^	public function sync( f : Void -> Void ) {$/;"	f
sync	/usr/lib/haxe/std/neko/vm/Ui.hx	/^	public static function sync( f : Void -> Void ) {$/;"	f
syncUniforms	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DefaultShader.hx	/^	public function syncUniforms ():Void {$/;"	f
synchronize	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public function synchronize(broadPhase:IBroadPhase, transform1:B2Transform, transform2:B2Transform):Void$/;"	f
synchronizeFixtures	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function synchronizeFixtures() : Void{$/;"	f
synchronizeTransform	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^	public function synchronizeTransform() : Void{$/;"	f
sys	/usr/lib/haxe/std/sys/FileStat.hx	/^package sys;$/;"	p
sys	/usr/lib/haxe/std/sys/FileSystem.hx	/^package sys;$/;"	p
sys.db	/usr/lib/haxe/std/sys/db/Connection.hx	/^package sys.db;$/;"	p
sys.db	/usr/lib/haxe/std/sys/db/Manager.hx	/^package sys.db;$/;"	p
sys.db	/usr/lib/haxe/std/sys/db/Mysql.hx	/^package sys.db;$/;"	p
sys.db	/usr/lib/haxe/std/sys/db/Object.hx	/^package sys.db;$/;"	p
sys.db	/usr/lib/haxe/std/sys/db/RecordInfos.hx	/^package sys.db;$/;"	p
sys.db	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^package sys.db;$/;"	p
sys.db	/usr/lib/haxe/std/sys/db/ResultSet.hx	/^package sys.db;$/;"	p
sys.db	/usr/lib/haxe/std/sys/db/Sqlite.hx	/^package sys.db;$/;"	p
sys.db	/usr/lib/haxe/std/sys/db/TableCreate.hx	/^package sys.db;$/;"	p
sys.db	/usr/lib/haxe/std/sys/db/Transaction.hx	/^package sys.db;$/;"	p
sys.db	/usr/lib/haxe/std/sys/db/Types.hx	/^package sys.db;$/;"	p
sys.io	/usr/lib/haxe/std/sys/io/File.hx	/^package sys.io;$/;"	p
sys.io	/usr/lib/haxe/std/sys/io/FileInput.hx	/^package sys.io;$/;"	p
sys.io	/usr/lib/haxe/std/sys/io/FileOutput.hx	/^package sys.io;$/;"	p
sys.io	/usr/lib/haxe/std/sys/io/FileSeek.hx	/^package sys.io;$/;"	p
sys.io	/usr/lib/haxe/std/sys/io/Process.hx	/^package sys.io;$/;"	p
sys.net	/usr/lib/haxe/std/sys/net/Address.hx	/^package sys.net;$/;"	p
sys.net	/usr/lib/haxe/std/sys/net/Host.hx	/^package sys.net;$/;"	p
sys.net	/usr/lib/haxe/std/sys/net/Socket.hx	/^package sys.net;$/;"	p
sys.net	/usr/lib/haxe/std/sys/net/UdpSocket.hx	/^package sys.net;$/;"	p
sysName	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	private static function sysName ():String {$/;"	f
sysName	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	private static function sysName ():String {$/;"	f
sys_string	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^				var sys_string = cpp.Lib.load ("std", "sys_string", 0);$/;"	v
sys_string	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^		var sys_string = cpp.Lib.load ("std", "sys_string", 0);$/;"	v
systemFontDirectory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^			var systemFontDirectory = System.fontsDirectory;$/;"	v
systemFontDirectory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		var systemFontDirectory = System.fontsDirectory;$/;"	v
systemName	/usr/lib/haxe/std/Sys.hx	/^	static function systemName() : String;$/;"	f
sz	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^				var sz = Math.sin(components[1].z);$/;"	v
sz	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var sz = 1.0 \/ (zFar - zNear);$/;"	v
sz	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^				var sz = Math.sin(components[1].z);$/;"	v
sz	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var sz = 1.0 \/ (zFar - zNear);$/;"	v
t	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^			var t:Float = (b * s + f) \/ e;$/;"	v
t	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^		var t = new Timer (time);$/;"	v
t	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^		var t = new haxe.Timer(time_ms);$/;"	v
t	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^			var t = __js__("typeof(o)");$/;"	v
t	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var t = 1.0 - c;$/;"	v
t	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var t = i.readUInt16();$/;"	v
t	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^		var t = new Timer (time);$/;"	v
t	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^		var t = new haxe.Timer(time_ms);$/;"	v
t	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var t = 1.0 - c;$/;"	v
t	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^			var t = ereg.matched (1);$/;"	v
t	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^		var t = null;$/;"	v
t	/usr/lib/haxe/std/Date.hx	/^				var t = k[1].split(":");$/;"	v
t	/usr/lib/haxe/std/DateTools.hx	/^					var t = d.getDay();$/;"	v
t	/usr/lib/haxe/std/haxe/Template.hx	/^			var t = tokens.first();$/;"	v
t	/usr/lib/haxe/std/haxe/Template.hx	/^			var t = tokens.pop();$/;"	v
t	/usr/lib/haxe/std/haxe/Template.hx	/^		var t = tokens.pop();$/;"	v
t	/usr/lib/haxe/std/haxe/Timer.hx	/^		var t = new haxe.Timer(time_ms);$/;"	v
t	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^				var t = rol(a, 5) + ft(j, b, c, d) + e + w[j] + kt(j);$/;"	v
t	/usr/lib/haxe/std/haxe/ds/ArraySort.hx	/^			var t = m % n;$/;"	v
t	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^		var t = minBinding(t2);$/;"	v
t	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var t: Type;$/;"	v
t	/usr/lib/haxe/std/haxe/macro/TypeTools.hx	/^			var t = Context.typeof(macro null); \/\/ TMono(<mono>)$/;"	v
t	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^			var t = null;$/;"	v
t	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		var t = null;$/;"	v
t	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		var t = xtype(e.next());$/;"	v
t	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^		var t = Context.typeof(obj);$/;"	v
t	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^		var t = Context.typeof({ expr : EConst(CIdent("null")), pos : p });$/;"	v
t	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var t = i.readUInt16();$/;"	v
t	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^			var t = threads[(start + i)%nthreads];$/;"	v
t	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^			var t = {$/;"	v
t	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	var t : neko.vm.Thread;$/;"	v
t	/usr/lib/haxe/std/neko/vm/Tls.hx	/^	var t : Dynamic;$/;"	v
t	/usr/lib/haxe/std/sys/db/RecordInfos.hx	/^	var t : RecordType;$/;"	v
t	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^						var t = makeRecord(f.type);$/;"	v
t	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var t = TPath({$/;"	v
t	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var t = switch( p.params[0] ) {$/;"	v
t	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var t = typeof(cond);$/;"	v
t0	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Sweep.hx	/^	public var t0:Float;$/;"	v
t0	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^					var t0:Float = bA.m_sweep.t0;$/;"	v
t0	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^		var t0 = stamp ();$/;"	v
t0	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^		var t0 = stamp();$/;"	v
t0	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^		var t0 = stamp ();$/;"	v
t0	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^		var t0 = stamp();$/;"	v
t0	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^						var t0 = ca;$/;"	v
t0	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^					var t0 = tileData[index + transformIndex];$/;"	v
t0	/usr/lib/haxe/std/haxe/Timer.hx	/^		var t0 = stamp();$/;"	v
t1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^		var t1:Float;$/;"	v
t1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var t1:B2Vec2 = b.lowerBound;$/;"	v
t1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var t1:Float, t2:Float, t3:Float, t4:Float;$/;"	v
t1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var t1:Float, t2:Float, t3:Float, t4:Float;$/;"	v
t1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^						var t1 = sa;$/;"	v
t1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^					var t1 = tileData[index + transformIndex + 1];$/;"	v
t1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^			var t1 = ( -u + Math.sqrt( u * u - 4 * v * w)) \/ (2 * w);$/;"	v
t2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^		var t2:Float;$/;"	v
t2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var t2:B2Vec2 = a.upperBound;$/;"	v
t2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^		var t2:Float = 0;$/;"	v
t2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^						var t2 = -sa;$/;"	v
t2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^					var t2 = tileData[index + transformIndex + 2];$/;"	v
t2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^			var t2 = ( -u - Math.sqrt( u * u - 4 * v * w)) \/ (2 * w);$/;"	v
t3	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^		var t3:Float;$/;"	v
t3	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^		var t3:Float = 0;$/;"	v
t3	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^						var t3 = ca;$/;"	v
t3	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^					var t3 = tileData[index + transformIndex + 3];$/;"	v
tClip	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var tClip:ClipVertex;$/;"	v
tCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var tCount:Int = c.pointCount;$/;"	v
tCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var tCount:Int;$/;"	v
tImpulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^	private static var tImpulse:B2Vec2 = new B2Vec2();$/;"	v
tManifold	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^		var tManifold:B2Manifold = m_oldManifold;$/;"	v
tMat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var tMat:B2Mat22;$/;"	v
tMat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^		var tMat:B2Mat22;$/;"	v
tMat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2WorldManifold.hx	/^		var tMat:B2Mat22;$/;"	v
tMat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^		var tMat:B2Mat22 = transform.R;$/;"	v
tMat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^		var tMat:B2Mat22 = transform.R;$/;"	v
tMat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^		var tMat:B2Mat22 = xf.R;$/;"	v
tMat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^		var tMat:B2Mat22;$/;"	v
tMat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^				var tMat:B2Mat22 = obb.R;$/;"	v
tMat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var tMat:B2Mat22 = xf.R;$/;"	v
tMat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var tMat:B2Mat22;$/;"	v
tMat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Sweep.hx	/^		var tMat:B2Mat22 = xf.R;$/;"	v
tMat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var tMat:B2Mat22 = m_xf.R;$/;"	v
tMat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var tMat:B2Mat22 = xf1.R;$/;"	v
tMat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^		var tMat:B2Mat22;$/;"	v
tMat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2EdgeAndCircleContact.hx	/^		var tMat: B2Mat22;$/;"	v
tMat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var tMat: B2Mat22;$/;"	v
tMat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PositionSolverManifold.hx	/^		var tMat:B2Mat22;$/;"	v
tMat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^		var tMat:B2Mat22;$/;"	v
tMat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^		var tMat:B2Mat22;$/;"	v
tMat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^		var tMat:B2Mat22 = m_bodyB.m_xf.R;$/;"	v
tMat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^		var tMat:B2Mat22;$/;"	v
tMat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var tMat:B2Mat22;$/;"	v
tMat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^		var tMat:B2Mat22 = m_bodyB.m_xf.R;$/;"	v
tMat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^		var tMat:B2Mat22;$/;"	v
tMat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var tMat:B2Mat22;$/;"	v
tMat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var tMat:B2Mat22;$/;"	v
tMat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^		var tMat:B2Mat22;$/;"	v
tMat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^				var tMat:B2Mat22;$/;"	v
tMat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^		var tMat:B2Mat22;$/;"	v
tPoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var tPoint:B2ManifoldPoint;$/;"	v
tPoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2EdgeAndCircleContact.hx	/^		var tPoint:B2ManifoldPoint;$/;"	v
tPoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var tPoint:B2ManifoldPoint;$/;"	v
tScale	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^	private var tScale:Float;$/;"	v
tV	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^					var tV:B2Vec2 = B2Math.AddVV(poly.m_position, B2Math.B2MulMV(poly.m_R, poly.m_vertices[i]));$/;"	v
tVec	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^			var tVec:B2Vec2 = cv.v;$/;"	v
tVec	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var tVec:B2Vec2;$/;"	v
tVec	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SeparationFunction.hx	/^		var tVec:B2Vec2;$/;"	v
tVec	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2WorldManifold.hx	/^		var tVec:B2Vec2;$/;"	v
tVec	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var tVec:B2Vec2 = m_vertices[0];$/;"	v
tVec	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var tVec:B2Vec2;$/;"	v
tVec	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var tVec:B2Vec2 = m_sweep.localCenter;$/;"	v
tVec	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^		var tVec:B2Vec2;$/;"	v
tVec	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2EdgeAndCircleContact.hx	/^		var tVec: B2Vec2;$/;"	v
tVec	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PositionSolverManifold.hx	/^		var tVec:B2Vec2;$/;"	v
tVec	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^		var tVec:B2Vec2;$/;"	v
tVec1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var tVec1: B2Vec2;$/;"	v
tVec2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^		var tVec2:B2Vec2;$/;"	v
tVec2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var tVec2: B2Vec2;$/;"	v
tX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^				var tX:Float = cv.v.x - xf2.position.x;$/;"	v
tX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var tX:Float = (tMat.col1.x * normal1X + tMat.col1.y * normal1Y);$/;"	v
tX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^		var tX:Float;$/;"	v
tX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var tX:Float = p.x - xf.position.x;$/;"	v
tX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var tX:Float;$/;"	v
tX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^		var tX:Float = (a.x * T.R.col1.x + a.y * T.R.col1.y );$/;"	v
tX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec2.hx	/^		var tX:Float = B2Math.dot(this, A.col1);$/;"	v
tX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec2.hx	/^		var tX:Float = x;$/;"	v
tX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var tX:Float = vBX + (-wB*rBY) - vAX - (-wA*rAY);$/;"	v
tX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var tX:Float;$/;"	v
tX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2EdgeAndCircleContact.hx	/^		var tX: Number;$/;"	v
tX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var tX: Number;$/;"	v
tX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^		var tX:Float =  (tMat.col1.x * r1X + tMat.col2.x * r1Y);$/;"	v
tX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^		var tX:Float;$/;"	v
tX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^		var tX:Float;$/;"	v
tX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^		var tX:Float = tMat.col1.x * rX + tMat.col2.x * rY;$/;"	v
tX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^		var tX:Float;$/;"	v
tX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var tX:Float =  (tMat.col1.x * r1X + tMat.col2.x * r1Y);$/;"	v
tX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var tX:Float;$/;"	v
tX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^		var tX:Float = (tMat.col1.x * rX + tMat.col2.x * rY);$/;"	v
tX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^		var tX:Float = m_target.x - m_bodyB.m_xf.position.x;$/;"	v
tX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^		var tX:Float;$/;"	v
tX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var tX:Float =  (tMat.col1.x * r1X + tMat.col2.x * r1Y);$/;"	v
tX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var tX:Float;$/;"	v
tX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var tX:Float =  (tMat.col1.x * r1X + tMat.col2.x * r1Y);$/;"	v
tX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var tX:Float;$/;"	v
tX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^		var tX:Float;$/;"	v
tX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^		var tX:Float;$/;"	v
tY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^				var tY:Float = cv.v.y - xf2.position.y;$/;"	v
tY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^		var tY:Float;$/;"	v
tY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var tY:Float = p.y - xf.position.y;$/;"	v
tY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var tY:Float;$/;"	v
tY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var tY:Float = vBY + (wB*rBX) - vAY - (wA*rAX);$/;"	v
tY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2EdgeAndCircleContact.hx	/^		var tY: Number;$/;"	v
tY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var tY: Number;$/;"	v
tY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^		var tY:Float;$/;"	v
tY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var tY:Float;$/;"	v
tY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^		var tY:Float = m_target.y - m_bodyB.m_xf.position.y;$/;"	v
tY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJoint.hx	/^		var tY:Float;$/;"	v
tY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var tY:Float;$/;"	v
tY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var tY:Float;$/;"	v
tabChildren	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var tabChildren:Bool;$/;"	v
tabChildren	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^	public var tabChildren (get, set):Bool;$/;"	v
tabChildren	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObjectContainer.hx	/^	public var tabChildren:Bool;$/;"	v
tabEnabled	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var tabEnabled:Bool;$/;"	v
tabEnabled	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/InteractiveObject.hx	/^	public var tabEnabled:Bool;$/;"	v
tabIndex	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var tabIndex:Int;$/;"	v
tabIndex	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var tabIndex:Int;$/;"	v
tabIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/InteractiveObject.hx	/^	public var tabIndex:Int;$/;"	v
tabStops	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextFormat.hx	/^	public var tabStops:Array<Int>;$/;"	v
tabStops	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextFormat.hx	/^	public var tabStops:Array<Int>;$/;"	v
tabString	/usr/lib/haxe/std/haxe/macro/Printer.hx	/^	var tabString:String;$/;"	v
table	/usr/lib/haxe/std/haxe/zip/Huffman.hx	/^		var table = new Array();$/;"	v
table_infos	/usr/lib/haxe/std/sys/db/Manager.hx	/^	var table_infos : RecordInfos;$/;"	v
table_keys	/usr/lib/haxe/std/sys/db/Manager.hx	/^	var table_keys : Array<String>;$/;"	v
table_name	/usr/lib/haxe/std/sys/db/Manager.hx	/^	var table_name : String;$/;"	v
tabs	/usr/lib/haxe/std/haxe/macro/Printer.hx	/^	var tabs:String;$/;"	v
tag	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^			var tag = i.readUInt16();$/;"	v
tag	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^			var tag = src.readByte();$/;"	v
tag	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLParser.hx	/^		var tag = desc.header.type.charAt (0); \/\/TODO$/;"	v
tag	/usr/lib/haxe/std/haxe/Unserializer.hx	/^			var tag = Type.getEnumConstructs(edecl)[index];$/;"	v
tag	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^			var tag = i.readUInt16();$/;"	v
tagName	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var tagName (default, null):String;$/;"	v
tagName	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var tagName = switch (asset.type) {$/;"	v
tags	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^		var tags = new Array<SWFTag> ();$/;"	v
tan	/usr/lib/haxe/std/Math.hx	/^	static function tan(v:Float):Float;$/;"	f
tangent	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var tangent:B2Vec2 = s_tangent;$/;"	v
tangent2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var tangent2:B2Vec2 = s_tangent2;$/;"	v
tangentImpulse	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactConstraintPoint.hx	/^	public var tangentImpulse:Float;$/;"	v
tangentImpulses	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2ContactImpulse.hx	/^	public var tangentImpulses:Array <Float>;$/;"	v
tangentMass	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactConstraintPoint.hx	/^	public var tangentMass:Float;$/;"	v
tangentX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var tangentX:Float = normalY;$/;"	v
tangentX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var tangentX:Float = normalY;$/;"	v
tangentY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var tangentY:Float = -normalX;$/;"	v
tangentY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var tangentY:Float = -normalX;$/;"	v
target	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^		var target:Float = 0.0;$/;"	v
target	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2MouseJointDef.hx	/^	public var target:B2Vec2;$/;"	v
target	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public var target (get, null):CairoSurface;$/;"	v
target	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public var target:Platform;$/;"	v
target	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AIRHelper.hx	/^	private static var target:String;$/;"	v
target	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CordovaHelper.hx	/^	private static var target:String;$/;"	v
target	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringMapHelper.hx	/^		var target = new StringMap <T> ();$/;"	v
target	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^					var target = null;$/;"	v
target	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^		var target = null;$/;"	v
target	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public var target (get, set):Dynamic;$/;"	v
target	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextFormat.hx	/^	public var target:String;$/;"	v
target	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^			var target = __stack[__stack.length - 1];$/;"	v
target	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^		var target:InteractiveObject = cast stack[stack.length - 1];$/;"	v
target	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^		var target:InteractiveObject = null;$/;"	v
target	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public var target:Dynamic;$/;"	v
target	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/ColorMatrixFilter.hx	/^		var target = targetData.data;$/;"	v
target	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextFormat.hx	/^	public var target:String;$/;"	v
target	/usr/lib/haxe/std/haxe/io/Path.hx	/^		var target = [];$/;"	v
targetBounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^			var targetBounds = obj.getBounds (this);$/;"	v
targetBounds	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^			var targetBounds = obj.getBounds (this);$/;"	v
targetDirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/project/PlatformTarget.hx	/^	public var targetDirectory:String;$/;"	v
targetFlags	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public var targetFlags:Map <String, String>;$/;"	v
targetFlags	/usr/lib/haxe/lib/lime/2,4,3/lime/project/PlatformTarget.hx	/^	public var targetFlags:Map <String, String>;$/;"	v
targetFlags	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AIRHelper.hx	/^	private static var targetFlags:Map <String, String>;$/;"	v
targetFlags	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^	private static var targetFlags:Map <String, String>;$/;"	v
targetFlags	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CordovaHelper.hx	/^	private static var targetFlags:Map <String, String>;$/;"	v
targetFlags	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	private var targetFlags:Map <String, String>;$/;"	v
targetFlags	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var targetFlags:Map<String, Dynamic>;$/;"	v
targetHandlers	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public var targetHandlers:Map <String, String>;$/;"	v
targetOffset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/ColorMatrixFilter.hx	/^		var targetOffset:Int;$/;"	v
targetPath	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Asset.hx	/^	public var targetPath:String;$/;"	v
targetPath	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^		var targetPath = "";$/;"	v
targetPath	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^		var targetPath = "";$/;"	v
targetPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CordovaHelper.hx	/^						var targetPath = "";$/;"	v
targetPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CordovaHelper.hx	/^						var targetPath = defines.get ("WEBWORKS_SDK") + "\/debugToken.bar";$/;"	v
targetPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/DeploymentHelper.hx	/^		var targetPath = PathHelper.combine (targetDirectory, name);$/;"	v
targetPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^			var targetPath = PathHelper.combine (targetDirectory, namePrefix + ndll.name);$/;"	v
targetPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^			var targetPath = combine (templatePath, path);$/;"	v
targetPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^				var targetPath = "";$/;"	v
targetPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^				var targetPath = PathHelper.combine (destination, asset.targetPath);$/;"	v
targetPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/BlackBerryPlatform.hx	/^			var targetPath = PathHelper.combine (destination, asset.targetPath);$/;"	v
targetPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FlashPlatform.hx	/^			var targetPath = project.app.file + ".swf";$/;"	v
targetPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FlashPlatform.hx	/^		var targetPath = targetDirectory + "";$/;"	v
targetPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^				var targetPath = PathHelper.combine (projectDirectory + "\/assets\/", asset.resourceName);$/;"	v
targetPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^				var targetPath = PathHelper.combine (projectDirectory, asset.targetPath);$/;"	v
targetPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WebOSPlatform.hx	/^		var targetPath = targetDirectory + "";$/;"	v
targetPath	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^			var targetPath = words[1];$/;"	v
targetPaths	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CordovaHelper.hx	/^		var targetPaths = [];$/;"	v
targetPoint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^		var targetPoint = new Point (x, y);$/;"	v
targetRatio	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^				var targetRatio = Math.min (scaleX, scaleY);$/;"	v
targetRatio	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^				var targetRatio = Math.min (scaleX, scaleY);$/;"	v
targetStride	/usr/lib/haxe/lib/openfl/3,0,8/openfl/filters/ColorMatrixFilter.hx	/^		var targetStride = targetData.width * 4;$/;"	v
targetType	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^	private var targetType:String;$/;"	v
targetType	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/MacPlatform.hx	/^	private var targetType:String;$/;"	v
targetType	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WindowsPlatform.hx	/^	private var targetType:String;$/;"	v
targets	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^				var targets = words[1].split (",");$/;"	v
task	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^		private var task : java.util.TimerTask;$/;"	v
task	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^		private var task : java.util.TimerTask;$/;"	v
task	/usr/lib/haxe/std/haxe/Timer.hx	/^		private var task : java.util.TimerTask;$/;"	v
tbl	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^		var tbl = new Array();$/;"	v
tbl	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^		var tbl = this.tbl;$/;"	v
tbl	/usr/lib/haxe/std/haxe/crypto/BaseCode.hx	/^	var tbl : Array<Int>;$/;"	v
tdynamic	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	var tdynamic : Null<CType>;$/;"	v
tdynamic	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		var tdynamic = null;$/;"	v
tearDown	/usr/lib/haxe/std/haxe/unit/TestCase.hx	/^	public function tearDown() : Void {$/;"	f
tell	/usr/lib/haxe/std/sys/io/FileInput.hx	/^	function tell() : Int;$/;"	f
tell	/usr/lib/haxe/std/sys/io/FileOutput.hx	/^	public function tell() : Int;$/;"	f
temp	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ImageHelper.hx	/^		var temp = PathHelper.getTemporaryFile (".png");$/;"	v
temp	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^				var temp = inputTexture;$/;"	v
temp	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObjectContainer.hx	/^			var temp = __children[index1];$/;"	v
temp	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^		var temp = dir + "\/proxy.txt";$/;"	v
tempAABB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public var tempAABB:B2AABB = new B2AABB();	*\/$/;"	v
tempData	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageCanvasUtil.hx	/^			var tempData = image.clone ();$/;"	v
tempData	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var tempData = image.clone ();$/;"	v
tempDirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^		var tempDirectory = PathHelper.getTemporaryDirectory ();$/;"	v
tempFile	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^			var tempFile = PathHelper.getTemporaryFile ();$/;"	v
tempFile	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/HTML5Helper.hx	/^			var tempFile = PathHelper.getTemporaryFile (".js");$/;"	v
tempFiles	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^		var tempFiles = [];$/;"	v
tempMat	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public var tempMat:B2Mat22 = new B2Mat22();	$/;"	v
tempPoints	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^			var tempPoints = path.points;$/;"	v
tempVec2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public var tempVec2:B2Vec2 = new B2Vec2();$/;"	v
tempVec3	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public var tempVec3:B2Vec2 = new B2Vec2();$/;"	v
tempVec4	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public var tempVec4:B2Vec2 = new B2Vec2();$/;"	v
tempVec5	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^	static public var tempVec5:B2Vec2 = new B2Vec2();$/;"	v
template	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^				var template:Template = new Template (fileContents);$/;"	v
template	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^		var template = new Template (File.getContent (hxml));$/;"	v
template	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/BlackBerryPlatform.hx	/^		var template = new Template (File.getContent (hxml));$/;"	v
template	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/EmscriptenPlatform.hx	/^		var template = new Template (File.getContent (hxml));$/;"	v
template	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FlashPlatform.hx	/^		var template = new Template (File.getContent (hxml));$/;"	v
template	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/HTML5Platform.hx	/^		var template = new Template (File.getContent (hxml));$/;"	v
template	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^		var template = new Template (File.getContent (hxml));$/;"	v
template	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^		var template = new Template (File.getContent (hxml));$/;"	v
template	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/MacPlatform.hx	/^		var template = new Template (File.getContent (hxml));$/;"	v
template	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/TizenPlatform.hx	/^		var template = new Template (File.getContent (hxml));$/;"	v
template	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WebOSPlatform.hx	/^		var template = new Template (File.getContent (hxml));$/;"	v
template	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WindowsPlatform.hx	/^		var template = new Template (File.getContent (hxml));$/;"	v
templateContext	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public var templateContext (get_templateContext, null):Dynamic;$/;"	v
templateNDLL	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^			var templateNDLL:Dynamic = { };$/;"	v
templatePaths	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public var templatePaths:Array <String>;$/;"	v
templatePaths	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/HTML5Helper.hx	/^				var templatePaths = [ PathHelper.combine (PathHelper.getHaxelib (new Haxelib ("lime")), "templates") ].concat (project.templatePaths);$/;"	v
templatePaths	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/HTML5Helper.hx	/^			var templatePaths = [ PathHelper.combine (PathHelper.getHaxelib (new Haxelib ("lime")), "templates") ].concat (project.templatePaths);$/;"	v
templatePaths	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/HTML5Helper.hx	/^		var templatePaths = [ PathHelper.combine (PathHelper.getHaxelib (new Haxelib ("lime")), "templates") ].concat (project.templatePaths);$/;"	v
templatePaths	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^			var templatePaths = [ PathHelper.combine (PathHelper.getHaxelib (new Haxelib ("lime")), "templates") ].concat (project.templatePaths);$/;"	v
templatePaths	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/NodeJSHelper.hx	/^		var templatePaths = [ PathHelper.combine (PathHelper.getHaxelib (new Haxelib ("lime")), "templates") ].concat (project.templatePaths);$/;"	v
templatePaths	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/TizenHelper.hx	/^			var templatePaths = [ PathHelper.combine (PathHelper.getHaxelib (new Haxelib ("lime")), "templates") ].concat (project.templatePaths);$/;"	v
templates	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/NekoHelper.hx	/^			var templates = [ PathHelper.getHaxelib (new Haxelib ("lime")) + "\/templates" ].concat (templatePaths);$/;"	v
templates	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WindowsPlatform.hx	/^				var templates = [ PathHelper.getHaxelib (new Haxelib ("lime")) + "\/templates" ].concat (project.templatePaths);$/;"	v
templates	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^		var templates = [];$/;"	v
temporaryFile	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^		var temporaryFile = PathHelper.combine (tempDirectory, "output.dat");$/;"	v
temporaryFile	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AssetHelper.hx	/^			var temporaryFile = PathHelper.getTemporaryFile ();$/;"	v
temporaryFile	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^			var temporaryFile = PathHelper.getTemporaryFile ();$/;"	v
ten	/usr/lib/haxe/std/haxe/Int64.hx	/^		var ten = ofInt(10);$/;"	v
terminate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^		var terminate = Lib.load ("lime-legacy", "lime_legacy_terminate", 0);$/;"	v
test	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/ContactListenerBreakable.hx	/^	private var test:TestBreakable;$/;"	v
test	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/ContactListenerOneSidePlatform.hx	/^	private var test:TestOneSidedPlatform;$/;"	v
test	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Main.hx	/^	var test:Dynamic;$/;"	v
test	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var test = new BitmapData (100, 100);$/;"	v
test	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/GraphicsTest.hx	/^		var test = new BitmapData (256, 256);$/;"	v
test it	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		\/\/ TODO test it$/;"	i
test this more thoroughly	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		\/\/TODO: test this more thoroughly$/;"	i
testDiv	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^		var testDiv:DivElement = cast Browser.document.createElement ("div");$/;"	v
testGetSetPixels	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^	private function testGetSetPixels(color : Int, sourceAlpha: Bool, destAlpha: Bool) {$/;"	f
testHitTest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^	public function testHitTest () {$/;"	f
testMerge	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/BitmapDataTest.hx	/^	public function testMerge () {$/;"	f
testOverlap	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^	public function testOverlap(other:B2AABB):Bool$/;"	f
testOverlap	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^	static public function testOverlap(a:B2AABB, b:B2AABB):Bool$/;"	f
testOverlap	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^	public function testOverlap(proxyA:Dynamic, proxyB:Dynamic):Bool$/;"	f
testOverlap	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/IBroadPhase.hx	/^	function testOverlap(proxyA:Dynamic, proxyB:Dynamic):Bool;$/;"	f
testOverlap	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2Shape.hx	/^	public static function testOverlap(shape1:B2Shape, transform1:B2Transform, shape2:B2Shape, transform2:B2Transform):Bool$/;"	f
testPoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2CircleShape.hx	/^	public override function testPoint(transform:B2Transform, p:B2Vec2) : Bool {$/;"	f
testPoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^	public override function testPoint(transform:B2Transform, p:B2Vec2) : Bool{$/;"	f
testPoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	public override function testPoint(xf:B2Transform, p:B2Vec2) : Bool{$/;"	f
testPoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2Shape.hx	/^	public function testPoint(xf:B2Transform, p:B2Vec2) : Bool { return false; }$/;"	f
testPoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Fixture.hx	/^	public function testPoint(p:B2Vec2):Bool$/;"	f
testString	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/ByteArrayTest.hx	/^		var testString : String;$/;"	v
test_list	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Main.hx	/^	var test_list:Array<Dynamic> = new Array();$/;"	v
test_name	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Main.hx	/^	var test_name:Array<String> = new Array();$/;"	v
tex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DefaultShader.hx	/^					var tex = uniform.value.getTexture ();$/;"	v
texCoordAttribute	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^	private static var texCoordAttribute:Int;$/;"	v
texCoordBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^	private static var texCoordBuffer:GLBuffer;$/;"	v
texCoords	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^		var texCoords = [$/;"	v
texImage2D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function texImage2D (target:Int, level:Int, internalformat:Int, format:Int, type:Int, video:js.html.VideoElement):Void;$/;"	f
texImage2D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function texImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, pixels:ArrayBufferView):Void {$/;"	f
texImage2D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function texImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, pixels:ArrayBufferView):Void {$/;"	f
texImage2D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function texImage2D(target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, pixels:ArrayBufferView):Void$/;"	f
texImage2D	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function texImage2D(target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, pixels:ArrayBufferView):Void;$/;"	f
texParameterf	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function texParameterf (target:Int, pname:Int, param:Float):Void;$/;"	f
texParameterf	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function texParameterf (target:Int, pname:Int, param:Float):Void {$/;"	f
texParameterf	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function texParameterf (target:Int, pname:Int, param:Float):Void {$/;"	f
texParameterf	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function texParameterf(target:Int, pname:Int, param:Float):Void $/;"	f
texParameterf	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function texParameterf(target:Int, pname:Int, param:Float):Void;$/;"	f
texParameteri	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function texParameteri (target:Int, pname:Int, param:Int):Void;$/;"	f
texParameteri	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function texParameteri (target:Int, pname:Int, param:Int):Void {$/;"	f
texParameteri	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function texParameteri (target:Int, pname:Int, param:Int):Void {$/;"	f
texParameteri	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function texParameteri(target:Int, pname:Int, param:Int):Void $/;"	f
texParameteri	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function texParameteri(target:Int, pname:Int, param:Int):Void;$/;"	f
texSubImage2D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, format:Int, type:Int, video:js.html.VideoElement):Void;$/;"	f
texSubImage2D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, pixels:ArrayBufferView):Void {$/;"	f
texSubImage2D	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, pixels:ArrayBufferView):Void {$/;"	f
texSubImage2D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function texSubImage2D(target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, pixels:ArrayBufferView):Void$/;"	f
texSubImage2D	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function texSubImage2D(target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, pixels:ByteArray):Void;$/;"	f
texdim	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLParser.hx	/^						var texdim = [ "2D", "Cube", "3D" ][desc.tokens[i].b.dim];$/;"	v
texlod	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLParser.hx	/^						var texlod = "";$/;"	v
texsize	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLParser.hx	/^						var texsize = [ "vec2", "vec3", "vec3" ][desc.tokens[i].b.dim];$/;"	v
text	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public var text:String;$/;"	v
text	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextLayout.hx	/^	public var text (default, set):String;$/;"	v
text	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CPPHelper.hx	/^					var text = input.readLine ();$/;"	v
text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^					var text = textField.text;$/;"	v
text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^			var text = textField.text;$/;"	v
text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^					var text = textField.text;$/;"	v
text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public var text (get, set):String;$/;"	v
text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TextEvent.hx	/^	public var text:String;$/;"	v
text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^		var text:String = value;$/;"	v
text	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var text (get, set):String;$/;"	v
textAlign	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public var textAlign:String;$/;"	v
textBaseline	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public var textBaseline:String;$/;"	v
textColor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public var textColor (get, set):Int;$/;"	v
textColor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var textColor (get, set):Int;$/;"	v
textContent	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var textContent:String;$/;"	v
textEvent	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/TextEventTest.hx	/^		var textEvent = new TextEvent (TextEvent.LINK);$/;"	v
textEventInfo	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private var textEventInfo = new TextEventInfo ();$/;"	v
textExtensions	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^	private static var textExtensions = [ "xml", "java", "hx", "hxml", "html", "ini", "gpe", "pch", "pbxproj", "plist", "json", "cpp", "mm", "properties", "hxproj", "nmml", "lime" ];$/;"	v
textField	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFieldTest.hx	/^		var textField = new TextField ();$/;"	v
textFormat	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextFormatTest.hx	/^		var textFormat = new TextFormat ();$/;"	v
textHeight	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public var textHeight (get, null):Float;$/;"	v
textHeight	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var textHeight (get, null):Float;$/;"	v
textLayout	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^			var textLayout:TextLayout = textField.__textLayout;$/;"	v
textLayout	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		var textLayout = textField.__textLayout;$/;"	v
textLineMetrics	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/text/TextLineMetricsTest.hx	/^		var textLineMetrics = new TextLineMetrics (0, 0, 0, 0, 0, 0);$/;"	v
textSnapshot	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var textSnapshot (default, null):Dynamic \/*flash.text.TextSnapshot*\/;$/;"	v
textWidth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^		var textWidth = getTextWidth (textField, value);$/;"	v
textWidth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public var textWidth (get, null):Float;$/;"	v
textWidth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^	public var textWidth (get, null):Float;$/;"	v
texture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^			var texture = Texture.TextureCache.get (key).baseTexture;$/;"	v
texture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^		var texture = filterBlock._glFilterTexture;$/;"	v
texture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^		var texture = this.texturePool.pop ();$/;"	v
texture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterTexture.hx	/^	public var texture:GLTexture;$/;"	v
texture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^				var texture = graphics.__cachedTexture;$/;"	v
texture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var texture:GLTexture;$/;"	v
texture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var texture = bitmapData.getTexture(gl);$/;"	v
texture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var texture = sheet.__bitmap.getTexture(gl);$/;"	v
texture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	public var texture:GLTexture;$/;"	v
texture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		var texture = new CubeTexture (GL.createTexture (), size); \/\/ TODO use format, optimizeForRenderToTexture and streamingLevels?$/;"	v
texture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		var texture = new RectangleTexture (GL.createTexture (), optimizeForRenderToTexture, width, height); \/\/ TODO use format, optimizeForRenderToTexture and streamingLevels?$/;"	v
texture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		var texture = new Texture (GL.createTexture (), optimizeForRenderToTexture, width, height); \/\/ TODO use format, optimizeForRenderToTexture and streamingLevels?$/;"	v
textureBR	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var textureBR:Point;$/;"	v
textureCount	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DefaultShader.hx	/^	public var textureCount:Int;$/;"	v
textureCount	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/FastShader.hx	/^	public var textureCount:Int;$/;"	v
textureHeight	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^				var textureHeight:Int = Math.floor(r.height); \/\/ Math.floor(Math.pow(2, 1 + Math.ceil(Math.log(eyeResolutionY) \/ Math.log(2))));$/;"	v
textureImage	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^			var textureImage = __image;$/;"	v
textureMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var textureMatrix:Matrix;$/;"	v
texturePool	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^	public var texturePool:Array<FilterTexture>;$/;"	v
textureRepeat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var textureRepeat:Bool = false;$/;"	v
textureSmooth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var textureSmooth:Bool = true;$/;"	v
textureSmooth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	public var textureSmooth:Bool = true;$/;"	v
textureTL	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var textureTL:Point;$/;"	v
textureWidth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^				var textureWidth:Int = Math.floor(r.width); \/\/ Math.floor(Math.pow(2, 1 + Math.ceil(Math.log(eyeResolutionX) \/ Math.log(2))));$/;"	v
texturesCreated	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	private var texturesCreated:Array<TextureBase>; \/\/ to keep track of stuff to dispose when calling dispose$/;"	v
tf	/usr/lib/haxe/std/haxe/unit/TestRunner.hx	/^	static var tf : flash.TextField = null;$/;"	v
tf	/usr/lib/haxe/std/haxe/unit/TestRunner.hx	/^	static var tf : flash.text.TextField = null;$/;"	v
tgs	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var tgs:Array<Int> = [];$/;"	v
th	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		var th = 0.0;$/;"	v
th	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^						var th = tile.height;$/;"	v
th	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^					var th = tile.height;$/;"	v
that v0 is independant of any details of the specific edge	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^		\/\/ Note that v0 is independant of any details of the specific edge$/;"	i
these should all be NDCs	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^		\/\/ TODO: these should all be NDCs$/;"	i
theta	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^					var theta:Number = 0.0;$/;"	v
theta	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var theta = rotation * Math.PI \/ 180.0;$/;"	v
theta	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^		var theta = Math.atan(separation \/ focalLength);$/;"	v
theta	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var theta = rotation * Math.PI \/ 180.0;$/;"	v
thickness	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsStroke.hx	/^	public var thickness:Float;$/;"	v
thickness	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsStroke.hx	/^	public var thickness:Float;$/;"	v
this could quite possibly cause crash errors if range indeces are not based on Utf8 character indeces	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^			\/\/TODO: this could quite possibly cause crash errors if range indeces are not based on Utf8 character indeces$/;"	i
this math seems a bit backwards. I think it won't work when the	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^		\/\/ TODO: this math seems a bit backwards. I think it won't work when the$/;"	i
this should probably be done whenever the viewport is resized	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^			\/\/ TODO: this should probably be done whenever the viewport is resized$/;"	i
thisArg	/usr/lib/haxe/lib/openfl/3,0,8/openfl/external/ExternalInterface.hx	/^		var thisArg = functionName.split('.').slice(0, -1).join('.');$/;"	v
this_onComplete	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/LoaderInfo.hx	/^	private function this_onComplete (event:Event):Void {$/;"	f
this_onEnterFrame	Source/Main.hx	/^	private function this_onEnterFrame (event:Event):Void {$/;"	f
this_onKeyDown	Source/Main.hx	/^        function this_onKeyDown(event:KeyboardEvent)$/;"	f
this_onMouseDown	Source/Main.hx	/^        function this_onMouseDown(event:MouseEvent)$/;"	f
this_ref	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^		var this_ref = src.readUInt16();$/;"	v
thread	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	var thread : ThreadInfos;$/;"	v
thread_create	/usr/lib/haxe/std/neko/vm/Thread.hx	/^	static var thread_create = neko.Lib.load("std","thread_create",2);$/;"	v
thread_current	/usr/lib/haxe/std/neko/vm/Thread.hx	/^	static var thread_current = neko.Lib.load("std","thread_current",0);$/;"	v
thread_read_message	/usr/lib/haxe/std/neko/vm/Thread.hx	/^	static var thread_read_message = neko.Lib.load("std","thread_read_message",1);$/;"	v
thread_send	/usr/lib/haxe/std/neko/vm/Thread.hx	/^	static var thread_send = neko.Lib.load("std","thread_send",2);$/;"	v
threads	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CPPHelper.hx	/^				var threads = 1;$/;"	v
threads	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CPPHelper.hx	/^			var threads = 1;$/;"	v
threads	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	var threads : Array<ThreadInfos>;$/;"	v
threshold	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function threshold (sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, operation:String, threshold:Int, color:Int = 0x00000000, mask:Int = 0xFFFFFFFF, copySource:Bool = false):Int {$/;"	f
threshold	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function threshold (sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, operation:String, threshold:Int, color:Int = 0x00000000, mask:Int = 0xFFFFFFFF, copySource:Bool = false):Int {$/;"	f
thresholdMask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^			var thresholdMask:Int = cast threshold & mask;$/;"	v
thresholdMask	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^			var thresholdMask:Int = cast threshold & mask;$/;"	v
throwPermissionsError	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static function throwPermissionsError () {$/;"	f
ti	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^				var ti:Int = 1;$/;"	v
tile	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var tile:Array<Int>;$/;"	v
tile	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^		var tile:Rectangle = null;$/;"	v
tileBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var tileBuffer:GLBuffer;$/;"	v
tileData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^			var tileData;$/;"	v
tileHeight	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^					var tileHeight = tile.height * scale;$/;"	v
tileID	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^				var tileID = new Map<Int, Int> ();$/;"	v
tileID	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^			var tileID = tileIDs.get (bitmapData);$/;"	v
tileID	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^						var tileID = (!useRect) ? i : -1;$/;"	v
tileID	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^								var tileID = (!useRect) ? Std.int (tileData[index + 2]) : -1;$/;"	v
tileID	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var tileID = -1;$/;"	v
tileID	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^				var tileID = (!useRect) ? Std.int (tileData[index++]) : -1;$/;"	v
tileID	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^				var tileID = (!useRect) ? Std.int(tileData[index + 2]) : -1;$/;"	v
tileID	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^			var tileID:Int = 0;$/;"	v
tileIDs	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^	private static var tileIDs = new Map<BitmapData, Map<Glyph, Int>> ();$/;"	v
tileIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^			var tileIndex:Int = 0;$/;"	v
tilePoint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^		var tilePoint:Point = null;$/;"	v
tileUV	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var tileUV:Rectangle = sheet.__rectUV;$/;"	v
tileUV	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^		var tileUV:Rectangle = null;$/;"	v
tileWidth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^					var tileWidth = tile.width * scale;$/;"	v
tilesheet	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^				var tilesheet = new Tilesheet (bitmapData);$/;"	v
tilesheet	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^			var tilesheet = tilesheets.get (bitmapData);$/;"	v
tilesheet	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/display/TilesheetTest.hx	/^		var tilesheet = new Tilesheet (new BitmapData (100, 100));$/;"	v
tilesheets	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^	private static var tilesheets = new Map<BitmapData, Tilesheet> ();$/;"	v
time	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^			var time = Std.int (AL.getSourcef (id, AL.SEC_OFFSET) * 1000) - offset;$/;"	v
time	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^			var time = currentTime;$/;"	v
time	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var time = haxe.Timer.stamp() - start;$/;"	v
time	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/NetStream.hx	/^		var time = __video.currentTime + offset;$/;"	v
time	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/NetStream.hx	/^	public var time:Float;$/;"	v
time	/usr/lib/haxe/std/Sys.hx	/^	static function time() : Float;$/;"	f
timeOfImpact	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^	public static function timeOfImpact(input:B2TOIInput):Float$/;"	f
timeSinceLastKey	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		static public var timeSinceLastKey:UInt = 0;$/;"	v
timeToCall	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Application.hx	/^					var timeToCall = Math.max(0, 16 - (currTime - lastTime));$/;"	v
timeout	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/XMLSocket.hx	/^	public var timeout:Int;$/;"	v
timeout	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^	public var timeout : Int;$/;"	v
timeout	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/XMLSocket.hx	/^	public var timeout:Int;$/;"	v
timer	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^			var timer = new haxe.Timer(1000); \/\/ 1000ms delay$/;"	v
timer	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^		private var timer : java.util.Timer;$/;"	v
timer	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^		var timer;$/;"	v
timer	/usr/lib/haxe/lib/lime/2,4,3/haxe/Timer.hx	/^	var timer:Timer;$/;"	v
timer	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^			var timer;$/;"	v
timer	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^	private var timer:Timer;$/;"	v
timer	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^	private var timer:Timer;$/;"	v
timer	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^	private var timer:Timer;$/;"	v
timer	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^			var timer = new haxe.Timer(1000); \/\/ 1000ms delay$/;"	v
timer	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^		private var timer : java.util.Timer;$/;"	v
timer	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^		var timer;$/;"	v
timer	/usr/lib/haxe/lib/openfl/3,0,8/haxe/Timer.hx	/^	var timer:Timer;$/;"	v
timer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/sensors/Accelerometer.hx	/^	private var timer:Timer;$/;"	v
timer	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^	private var timer:Timer;$/;"	v
timer	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/TimerTest.hx	/^		var timer = new Timer (0);$/;"	v
timer	/usr/lib/haxe/std/haxe/Timer.hx	/^			var timer = new haxe.Timer(1000); \/\/ 1000ms delay$/;"	v
timer	/usr/lib/haxe/std/haxe/Timer.hx	/^		private var timer : java.util.Timer;$/;"	v
timer	/usr/lib/haxe/std/haxe/Timer.hx	/^	var timer:Timer;$/;"	v
timer	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	var timer : neko.vm.Thread;$/;"	v
timer	Source/Main.hx	/^		var timer = new Timer (2000);$/;"	v
timerEvent	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/TimerEventTest.hx	/^		var timerEvent = new TimerEvent (TimerEvent.TIMER);$/;"	v
timer_onRun	/usr/lib/haxe/lib/lime/2,4,3/lime/audio/AudioSource.hx	/^	private function timer_onRun () {$/;"	f
timer_onTimer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/Timer.hx	/^	private function timer_onTimer ():Void {$/;"	f
timer_onTimer	Source/Main.hx	/^	private function timer_onTimer (event:TimerEvent) {$/;"	f
times	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/FPS.hx	/^	private var times:Array <Float>;$/;"	v
timestamp	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/AccelerometerEvent.hx	/^	public var timestamp:Float;$/;"	v
timestep	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2TensorDampingController.hx	/^		var timestep:Float = step.dt;$/;"	v
tinf	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^			var tinf;$/;"	v
tinst	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			var tinst = TPath( { pack : inst.pack, name : inst.name, sub : null, params : [] } );$/;"	v
tint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var tint:Array<Float> = [1.0, 1.0, 1.0];$/;"	v
tintColor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/ComplexPrimitiveShader.hx	/^	public var tintColor:GLUniformLocation;$/;"	v
tintColor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/PrimitiveShader.hx	/^	public var tintColor:GLUniformLocation;$/;"	v
tintColor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^			\/\/ TODO tintColor$/;"	i
title	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeWindow.hx	/^		var title = "Lime Application";$/;"	v
title	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var title:String;$/;"	v
title	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^				var title = "";$/;"	v
title	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^		var title = "SampleExtension";$/;"	v
tizenSDKURL	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var tizenSDKURL = "https:\/\/developer.tizen.org\/downloads\/tizen-sdk";$/;"	v
tlm	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^			var tlm = textField.getLineMetrics(0);$/;"	v
tlm	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^			var tlm = textField.getLineMetrics (0);$/;"	v
tls_create	/usr/lib/haxe/std/neko/vm/Tls.hx	/^	static var tls_create = neko.Lib.load("std","tls_create",0);$/;"	v
tls_get	/usr/lib/haxe/std/neko/vm/Tls.hx	/^	static var tls_get = neko.Lib.load("std","tls_get",1);$/;"	v
tls_set	/usr/lib/haxe/std/neko/vm/Tls.hx	/^	static var tls_set = neko.Lib.load("std","tls_set",2);$/;"	v
tmax	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^		var tmax:Float = B2Math.MAX_VALUE;$/;"	v
tmin	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^		var tmin:Float = -B2Math.MAX_VALUE;$/;"	v
tmp	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^		var tmp:Dynamic = a[0];$/;"	v
tmp	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^			var tmp:String = "";$/;"	v
tmp	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var tmp = null;$/;"	v
tmp	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^		var tmp = Math.NEGATIVE_INFINITY;$/;"	v
tmp	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^		var tmp = Math.NEGATIVE_INFINITY;$/;"	v
tmp	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^		var tmp:Float = 0;$/;"	v
tmp	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^				var tmp:GLBucketData = null;$/;"	v
tmp	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var tmp:Float = 0;$/;"	v
tmp	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^			var tmp:String = "";$/;"	v
tmp	/usr/lib/haxe/std/haxe/Resource.hx	/^		var tmp = untyped __resources__();$/;"	v
tmp	/usr/lib/haxe/std/haxe/crypto/Crc32.hx	/^			var tmp = (crc ^ haxe.io.Bytes.fastGet(b,i)) & 0xFF;$/;"	v
tmp	/usr/lib/haxe/std/haxe/crypto/Crc32.hx	/^		var tmp = (crc ^ b) & 0xFF;$/;"	v
tmp	/usr/lib/haxe/std/haxe/ds/ArraySort.hx	/^		var tmp = a[i];$/;"	v
tmp	/usr/lib/haxe/std/haxe/io/Path.hx	/^		var tmp = target.join(slash);$/;"	v
tmp	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^				var tmp = i;$/;"	v
tmp	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^						var tmp;$/;"	v
tmp	/usr/lib/haxe/std/haxe/zip/Huffman.hx	/^		var tmp = new Array();$/;"	v
tmp	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var tmp = null;$/;"	v
tmp	/usr/lib/haxe/std/neko/vm/Ui.hx	/^		var tmp = null;$/;"	v
tmp	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^					var tmp = { field : i.substr(1), expr : e2 };$/;"	v
tmp	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^				var tmp = eopt;$/;"	v
tmp1	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var tmp1 = a1.x * a1.y * t;$/;"	v
tmp1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var tmp1 : Int;$/;"	v
tmp1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var tmp1 : Int;$/;"	v
tmp1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var tmp1 = a1.x * a1.y * t;$/;"	v
tmp2	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var tmp2 = a1.z * s;$/;"	v
tmp2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var tmp2 : Int;$/;"	v
tmp2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var tmp2 : Int;$/;"	v
tmp2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var tmp2 = a1.z * s;$/;"	v
tmpDir	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CordovaHelper.hx	/^				var tmpDir = buildDirectory + "\/haxe";$/;"	v
tmpRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var tmpRect = clipRect == null ? new Rectangle (0, 0, width, height) : clipRect.clone ();$/;"	v
tmp_name	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CordovaHelper.hx	/^				var tmp_name = tmpDir + "\/icon-" + sizes[i] + ".png";$/;"	v
tmpx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^		var tmpx = Math.NEGATIVE_INFINITY;$/;"	v
tmpy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^		var tmpy = Math.NEGATIVE_INFINITY;$/;"	v
to	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var to : Array<{t:Type, field:Null<ClassField>}>;$/;"	v
to	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	var to : Array<{t:CType, field:Null<String>}>;$/;"	v
to3DString	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public inline function to3DString (roundPixels:Bool = false):String {$/;"	f
to3DString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^	public inline function to3DString (roundPixels:Bool = false):String {$/;"	f
toComplex	/usr/lib/haxe/std/haxe/macro/MacroStringTools.hx	/^	static public function toComplex( path : String ) : ComplexType {$/;"	f
toComplexType	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function toComplexType( t : Type ) : Null<ComplexType> {$/;"	f
toComplexType	/usr/lib/haxe/std/haxe/macro/TypeTools.hx	/^	static public inline function toComplexType( t : Type ) : ComplexType$/;"	f
toData	/usr/lib/haxe/std/haxe/ds/Vector.hx	/^	public inline function toData():VectorData<T>$/;"	f
toDotPath	/usr/lib/haxe/std/haxe/macro/MacroStringTools.hx	/^	static public function toDotPath(pack:Array<String>, name:String):String {$/;"	f
toFieldExpr	/usr/lib/haxe/std/haxe/macro/MacroStringTools.hx	/^	static public function toFieldExpr(sl:Array<String>):Expr {$/;"	f
toHaxeType	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^	private function toHaxeType(inStr:String)$/;"	f
toHex	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^	public function toHex() : String {$/;"	f
toInt	/usr/lib/haxe/std/UInt.hx	/^	private inline function toInt():Int {$/;"	f
toInt	/usr/lib/haxe/std/haxe/EnumFlags.hx	/^	public inline function toInt() : Int {$/;"	f
toInt	/usr/lib/haxe/std/haxe/Int64.hx	/^	public static function toInt( x : Int64 ) : Int {$/;"	f
toLowerCase	/usr/lib/haxe/std/String.hx	/^	function toLowerCase() : String;$/;"	f
toMatrix3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/PerspectiveProjection.hx	/^	public function toMatrix3D ():Matrix3D {$/;"	f
toMozString	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public inline function toMozString () {$/;"	f
toMozString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^	public inline function toMozString () {$/;"	f
toStr	/usr/lib/haxe/std/haxe/Int64.hx	/^	public static inline function toStr( a : Int64 ) : String {$/;"	f
toString	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^	public static function toString( stack : Array<StackItem> ) {$/;"	f
toString	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function toString ():String { return null; };$/;"	f
toString	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLObject.hx	/^    public function toString() : String {$/;"	f
toString	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public inline function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	inline public function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLVariables.hx	/^	public function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextDirection.hx	/^	public inline function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/GamepadAxis.hx	/^	public inline function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/GamepadButton.hx	/^	public inline function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public inline function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public override function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/EventDispatcher.hx	/^	public function toString ():String { $/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/HTTPStatusEvent.hx	/^	public override function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/KeyboardEvent.hx	/^	public override function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public override function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/SystemEvent.hx	/^	public override function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^	public function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Point.hx	/^	public function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	public function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLObject.hx	/^	public function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	public function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/WeakRef.hx	/^	public function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/errors/Error.hx	/^	public function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/AccelerometerEvent.hx	/^	public override function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/ErrorEvent.hx	/^	public override function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/EventDispatcher.hx	/^	public function toString ():String { $/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/FocusEvent.hx	/^	public override function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/GameInputEvent.hx	/^	public override function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/IOErrorEvent.hx	/^	public override function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/JoystickEvent.hx	/^	public override function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/KeyboardEvent.hx	/^	public override function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public override function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/ProgressEvent.hx	/^	public override function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/SampleDataEvent.hx	/^	public override function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/SecurityErrorEvent.hx	/^	public override function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TextEvent.hx	/^	public override function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TimerEvent.hx	/^	public override function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/UncaughtErrorEvent.hx	/^	public override function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^	public inline function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Point.hx	/^	public function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^	inline public function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public function toString ():String;$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLVariables.hx	/^	public function toString ():String {$/;"	f
toString	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public function toString ():String {$/;"	f
toString	/usr/lib/haxe/std/Array.hx	/^	function toString() : String;$/;"	f
toString	/usr/lib/haxe/std/Date.hx	/^	function toString():String;$/;"	f
toString	/usr/lib/haxe/std/List.hx	/^	public function toString() {$/;"	f
toString	/usr/lib/haxe/std/Map.hx	/^	public function toString():String;$/;"	f
toString	/usr/lib/haxe/std/Map.hx	/^	public inline function toString():String {$/;"	f
toString	/usr/lib/haxe/std/String.hx	/^	function toString() : String;$/;"	f
toString	/usr/lib/haxe/std/StringBuf.hx	/^	public inline function toString() : String {$/;"	f
toString	/usr/lib/haxe/std/UInt.hx	/^	private inline function toString(?radix:Int):String {$/;"	f
toString	/usr/lib/haxe/std/Xml.hx	/^	function toString() : String;$/;"	f
toString	/usr/lib/haxe/std/haxe/CallStack.hx	/^	public static function toString( stack : Array<StackItem> ) {$/;"	f
toString	/usr/lib/haxe/std/haxe/Serializer.hx	/^	public function toString() {$/;"	f
toString	/usr/lib/haxe/std/haxe/Utf8.hx	/^	public inline function toString() : String {$/;"	f
toString	/usr/lib/haxe/std/haxe/crypto/Adler32.hx	/^	public function toString() {$/;"	f
toString	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^	public function toString() {$/;"	f
toString	/usr/lib/haxe/std/haxe/ds/GenericStack.hx	/^	public function toString() {$/;"	f
toString	/usr/lib/haxe/std/haxe/ds/IntMap.hx	/^	public function toString() : String;$/;"	f
toString	/usr/lib/haxe/std/haxe/ds/ObjectMap.hx	/^	public function toString():String;$/;"	f
toString	/usr/lib/haxe/std/haxe/ds/StringMap.hx	/^	public function toString() : String;$/;"	f
toString	/usr/lib/haxe/std/haxe/ds/WeakMap.hx	/^	public function toString():String {$/;"	f
toString	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^	public function toString() : String {$/;"	f
toString	/usr/lib/haxe/std/haxe/io/Path.hx	/^	public function toString() {$/;"	f
toString	/usr/lib/haxe/std/haxe/macro/ComplexTypeTools.hx	/^	static public function toString( c : ComplexType ) : String$/;"	f
toString	/usr/lib/haxe/std/haxe/macro/Expr.hx	/^	function toString() {$/;"	f
toString	/usr/lib/haxe/std/haxe/macro/ExprTools.hx	/^	static public function toString( e : Expr ) : String$/;"	f
toString	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	public function toString() : String;$/;"	f
toString	/usr/lib/haxe/std/haxe/macro/TypeTools.hx	/^	static public function toString( t : Type ) : String return new String(Context.load("s_type", 1)(t));$/;"	f
toString	/usr/lib/haxe/std/haxe/macro/TypedExprTools.hx	/^	static public function toString(t:TypedExpr, ?pretty = false):String {$/;"	f
toString	/usr/lib/haxe/std/haxe/unit/TestResult.hx	/^	public function toString() : String 	{$/;"	f
toString	/usr/lib/haxe/std/neko/NativeString.hx	/^	public static inline function toString( s : NativeString ) : String {$/;"	f
toString	/usr/lib/haxe/std/neko/vm/Module.hx	/^	public function toString() {$/;"	f
toString	/usr/lib/haxe/std/sys/db/Object.hx	/^	public function toString() : String {$/;"	f
toString	/usr/lib/haxe/std/sys/net/Host.hx	/^	function toString() : String;$/;"	f
toType	/usr/lib/haxe/std/haxe/macro/ComplexTypeTools.hx	/^	static public function toType( c : ComplexType ) : Null<Type>$/;"	f
toUpperCase	/usr/lib/haxe/std/String.hx	/^	function toUpperCase() : String;$/;"	f
togglePause	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/NetStream.hx	/^	public function togglePause ():Void {$/;"	f
toi	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^				var toi:Float = 1.0;$/;"	v
token	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthToken.hx	/^	public var token(default, null):String;$/;"	v
token	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^					var token = BlackBerryHelper.processDebugToken (config);$/;"	v
token	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGALTokenizer.hx	/^			var token = new Token ();$/;"	v
token	/usr/lib/haxe/std/haxe/io/Path.hx	/^		var token;$/;"	v
tokenizer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGLSLCompiler.hx	/^		var tokenizer = new AGALTokenizer ();$/;"	v
tokens	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGALTokenizer.hx	/^		var tokens = new Array<Dynamic>();$/;"	v
tokens	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Description.hx	/^	public var tokens:Array<Dynamic>; \/\/ added due to dynamic assignment 3*0xFFFFFFuuuu$/;"	v
tokens	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/AGALMiniAssembler.hx	/^		var tokens = getMatches (~\/([\\w\\.\\+\\[\\]]+)\/gi, line);			            $/;"	v
tokens	/usr/lib/haxe/std/haxe/Template.hx	/^		var tokens = new List<Token>();$/;"	v
tokens	/usr/lib/haxe/std/haxe/Template.hx	/^		var tokens = parseTokens(str);$/;"	v
tolerance	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TOIInput.hx	/^	public var tolerance:Float;$/;"	v
tolerance	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^		var tolerance:Float = input.tolerance;$/;"	v
tolerance	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public var tolerance (get, set):Float;$/;"	v
toolsDirectory	/usr/lib/haxe/lib/lime/2,4,3/tools/RunScript.hx	/^		var toolsDirectory = PathHelper.combine (limeDirectory, "tools");$/;"	v
top	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^		var top:Int = image.height + 1;$/;"	v
top	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	public var top (get, set):Float;$/;"	v
top	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	public var top (get, set):Float;$/;"	v
top	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^	public var top (get, set):Float;$/;"	v
topLeft	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	public var topLeft (get, set):Vector2;$/;"	v
topLeft	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	public var topLeft (get, set):Point;$/;"	v
topLeft	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^	public var topLeft (get, set):Point;$/;"	v
torso1	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRagdoll.hx	/^				var torso1:B2Body = m_world.createBody(bd);$/;"	v
torso2	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRagdoll.hx	/^				var torso2:B2Body = m_world.createBody(bd);$/;"	v
torso3	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRagdoll.hx	/^				var torso3:B2Body = m_world.createBody(bd);$/;"	v
tostr	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^				var tostr;$/;"	v
total	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Preloader.hx	/^	private var total = 0;$/;"	v
total	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^		var total = "";$/;"	v
total	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^		var total = "";$/;"	v
total	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/ApplicationMain.hx	/^		var total = 0;$/;"	v
total	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^		var total = 0;$/;"	v
total	/usr/lib/haxe/std/haxe/io/Input.hx	/^		var total = new haxe.io.BytesBuffer();$/;"	v
totalCount	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var totalCount = tileData.length;$/;"	v
totalCount	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var totalCount = tileData.length;$/;"	v
totalCount	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var totalCount = tileData.length;$/;"	v
totalCount	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^		var totalCount = count;$/;"	v
totalFrames	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/MovieClip.hx	/^	public var totalFrames (get, null):Int;$/;"	v
totalFrames	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/MovieClip.hx	/^	public var totalFrames (get, null):Int;$/;"	v
totalLengthSamples	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^				var totalLengthSamples = 0;$/;"	v
totalMemory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^			var totalMemory = (canvasMemory + sourceMemory);$/;"	v
totalMemory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/System.hx	/^	public static var totalMemory (get, null):Int;$/;"	v
totalMemory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^			var totalMemory = (canvasMemory + sourceMemory);$/;"	v
totalMemory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/System.hx	/^	public static var totalMemory (get, null):Int;$/;"	v
totalRadius	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var totalRadius:Float = polyA.m_radius + polyB.m_radius;$/;"	v
totalSegs	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var totalSegs = 40;$/;"	v
totalW	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^		var totalW:Float = 2;$/;"	v
totlen	/usr/lib/haxe/std/haxe/io/BytesInput.hx	/^	var totlen : Int;$/;"	v
touch	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^		var touch = event.changedTouches[0];$/;"	v
touch	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^		var touch = event.changedTouches[0];$/;"	v
touchEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^			var touchEvent = TouchEvent.__create (type, event, local, object, event.scaleX, event.scaleY);$/;"	v
touchEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^			var touchEvent = TouchEvent.__create (type, event, new Point (event.x, event.y), null, event.scaleX, event.scaleY);$/;"	v
touchEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/TouchEvent.hx	/^		var touchEvent = new TouchEvent (type, bubbles, cancelable, localX, localY, sizeX, sizeY, related == null ? relatedObject : related, ctrlKey, altKey, shiftKey, buttonDown, delta, commandKey, clickCount);$/;"	v
touchEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/TouchEvent.hx	/^		var touchEvent = new TouchEvent (type, true, false, local.x, local.y, sizeX, sizeY, null, (flags & MouseEvent.efCtrlDown) != 0, (flags & MouseEvent.efAltDown) != 0, (flags & MouseEvent.efShiftDown) != 0, (flags & MouseEvent.efLeftDown) != 0, 0, 0);$/;"	v
touchEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^			var touchEvent = TouchEvent.__create (type, \/*event,*\/ null\/*touch*\/, __mouseX, __mouseY, localPoint, cast target);$/;"	v
touchEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^			var touchEvent = TouchEvent.__create (type, \/*event,*\/ null\/*touch*\/, __mouseX, __mouseY, point, this);$/;"	v
touchEvent	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/events/TouchEventTest.hx	/^		var touchEvent = new TouchEvent (TouchEvent.TOUCH_BEGIN);$/;"	v
touchEventInfo	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private var touchEventInfo = new TouchEventInfo ();$/;"	v
touchInfo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^					var touchInfo = __touchInfo.get (event.value);$/;"	v
touchInfo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^					var touchInfo = new TouchInfo ();$/;"	v
touchOverObjects	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^	public var touchOverObjects:Array<InteractiveObject>;$/;"	v
touchPointID	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/TouchEvent.hx	/^	public var touchPointID:Int;$/;"	v
touchPointID	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TouchEvent.hx	/^	public var touchPointID:Int;$/;"	v
touching	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^		var touching:Bool = false;$/;"	v
touchscreenType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var touchscreenType (default, null) = TouchscreenType.FINGER; \/\/ TODO$/;"	v
touchscreenType	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var touchscreenType (default, null) = TouchscreenType.FINGER; \/\/ TODO$/;"	v
tr	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^				var tr = mr[0] + mr[5] + mr[10];$/;"	v
tr	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^				var tr = mr[0] + mr[5] + mr[10];$/;"	v
trace	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^	public static function trace (project:HXProject, debug:Bool, deviceID:String = null):Void {$/;"	f
trace	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^	public static function trace (project:HXProject, workingDirectory:String, targetPath:String):Void {$/;"	f
trace	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/TizenHelper.hx	/^	public static function trace (project:HXProject, follow:Bool = true):Void {$/;"	f
trace	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/WebOSHelper.hx	/^	public static function trace (project:HXProject, follow:Bool = true):Void {$/;"	f
trace	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^	public override function trace ():Void {$/;"	f
trace	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/BlackBerryPlatform.hx	/^	public override function trace ():Void {$/;"	f
trace	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/TizenPlatform.hx	/^	public override function trace ():Void {$/;"	f
trace	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WebOSPlatform.hx	/^	public override function trace ():Void {$/;"	f
trace	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Lib.hx	/^	public static function trace (arg:Dynamic):Void {$/;"	f
trace	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	public static function trace (arg:Dynamic):Void {$/;"	f
traceEnabled	/usr/lib/haxe/lib/lime/2,4,3/lime/project/PlatformTarget.hx	/^	public var traceEnabled = true;$/;"	v
traceEnabled	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	private var traceEnabled:Bool;$/;"	v
track	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/ID3Info.hx	/^	public var track:String;$/;"	v
trackAsMenu	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/SimpleButton.hx	/^	public var trackAsMenu:Bool;$/;"	v
trackAsMenu	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/SimpleButton.hx	/^	public var trackAsMenu:Bool;$/;"	v
transform	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function transform (m11:Float, m12:Float, m21:Float, m22:Float, dx:Float, dy:Float):Void {};$/;"	f
transform	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var transform:Dynamic \/*flash.geom.Transform*\/;$/;"	v
transform	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function transform (matrix:Matrix3):Void {$/;"	f
transform	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	public function transform (m:Matrix3):Rectangle {$/;"	f
transform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoBitmap.hx	/^			var transform = bitmap.__worldTransform;$/;"	v
transform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoMaskManager.hx	/^		var transform = mask.__getTransform ();$/;"	v
transform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoShape.hx	/^				var transform = shape.__worldTransform;$/;"	v
transform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasBitmap.hx	/^			var transform = bitmap.__worldTransform;$/;"	v
transform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasMaskManager.hx	/^		var transform = mask.__getTransform ();$/;"	v
transform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasShape.hx	/^				var transform = shape.__worldTransform;$/;"	v
transform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/dom/DOMShape.hx	/^					var transform = new Matrix ();$/;"	v
transform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GLMaskManager.hx	/^		var transform = mask.__worldTransform;$/;"	v
transform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public var transform (get, set):Transform;$/;"	v
transform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	public function transform (m:Matrix):Rectangle {$/;"	f
transform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var transform = __worldTransform;$/;"	v
transform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	public var transform (get, set):Transform;$/;"	v
transform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^	public function transform (m:Matrix):Rectangle {$/;"	f
transform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Video.hx	/^			var transform = __worldTransform;$/;"	v
transform	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/TransformTest.hx	/^		var transform = new Sprite ().transform;$/;"	v
transformA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Distance.hx	/^	var transformA:B2Transform = input.transformA;$/;"	v
transformA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DistanceInput.hx	/^	public var transformA:B2Transform;$/;"	v
transformB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Distance.hx	/^	var transformB:B2Transform = input.transformB;$/;"	v
transformB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DistanceInput.hx	/^	public var transformB:B2Transform;$/;"	v
transformDirty	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^			var transformDirty = __transformDirty;$/;"	v
transformIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var transformIndex = 0;$/;"	v
transformIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var transformIndex = 0;$/;"	v
transformIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var transformIndex = 0;$/;"	v
transformIndex	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^			var transformIndex = 0;$/;"	v
transformOriginProperty	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/RenderSession.hx	/^	public var transformOriginProperty:String;$/;"	v
transformPoint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^	public function transformPoint (point:Point):Point {$/;"	f
transformPoint	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^	public function transformPoint (pos:Point) {$/;"	f
transformProperty	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/RenderSession.hx	/^	public var transformProperty:String;$/;"	v
transformVector	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public function transformVector (v:Vector4):Vector4 {$/;"	f
transformVector	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public inline function transformVector (v:Vector3D):Vector3D {$/;"	f
transformVector2	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public function transformVector2 (pos:Vector2) {$/;"	f
transformVectors	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public function transformVectors (ain:Float32Array, aout:Float32Array):Void {$/;"	f
transformVectors	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public function transformVectors (vin:Vector<Float>, vout:Vector<Float>):Void {$/;"	f
transformed	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var transformed = matrix3D.transformVector(new Vector3D(100, 200, 300));$/;"	v
translate	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/CanvasRenderContext.hx	/^	public function translate (tx:Float, ty:Float):Void {};$/;"	f
translate	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/DOMRenderContext.hx	/^	public var translate:Bool;$/;"	v
translate	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public function translate (x:Float, y:Float):Void {$/;"	f
translate	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public inline function translate (dx:Float, dy:Float) {$/;"	f
translate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^	public function translate (x:Float, y:Float):Void {$/;"	f
translate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^	public function translate (dx:Float, dy:Float) {$/;"	f
translation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^			var translation:Float = m_axis.x * dX + m_axis.y * dY;$/;"	v
translation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var translation:Float = axis.x*dX + axis.y*dY;$/;"	v
translation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^			var translation:Float = m_axis.x * dX + m_axis.y * dY;$/;"	v
translation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var translation:Float = axis.x*dX + axis.y*dY;$/;"	v
translation	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var translation = v1[0];$/;"	v
translationMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/ComplexPrimitiveShader.hx	/^	public var translationMatrix:GLUniformLocation;$/;"	v
translationMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DrawTrianglesShader.hx	/^	public var translationMatrix:GLUniformLocation;$/;"	v
translationMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/FillShader.hx	/^	public var translationMatrix:GLUniformLocation;$/;"	v
translationMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/PatternFillShader.hx	/^	public var translationMatrix:GLUniformLocation;$/;"	v
translationMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/PrimitiveShader.hx	/^	public var translationMatrix:GLUniformLocation;$/;"	v
translationMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/StripShader.hx	/^	public var translationMatrix:GLUniformLocation;$/;"	v
translationMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var translationMatrix:Matrix;$/;"	v
translationMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/StencilManager.hx	/^		var translationMatrix:Matrix = object.__worldTransform;$/;"	v
translationX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^			var translationX:Float = step.dt * b.m_linearVelocity.x;$/;"	v
translationX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^			var translationX:Float = subStep.dt * b.m_linearVelocity.x;$/;"	v
translationY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^			var translationY:Float = step.dt * b.m_linearVelocity.y;$/;"	v
translationY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Island.hx	/^			var translationY:Float = subStep.dt * b.m_linearVelocity.y;$/;"	v
transparent	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public var transparent (get, set):Bool;$/;"	v
transparent	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ImageBuffer.hx	/^	public var transparent:Bool;$/;"	v
transparent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/AbstractRenderer.hx	/^	public var transparent:Bool;$/;"	v
transparent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^	public var transparent:Bool;$/;"	v
transparent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public var transparent (get, null):Bool;$/;"	v
transparent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public var transparent (default, null):Bool;$/;"	v
transparent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Loader.hx	/^		var transparent = true;$/;"	v
transpose	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^	public function transpose ():Void {$/;"	f
transpose	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^	public inline function transpose ():Void {$/;"	f
tree	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^		var tree = id.split ('.');$/;"	v
treeCompress	/usr/lib/haxe/std/haxe/zip/Huffman.hx	/^	function treeCompress(t) {$/;"	f
treeDepth	/usr/lib/haxe/std/haxe/zip/Huffman.hx	/^	function treeDepth(t) {$/;"	f
treeMake	/usr/lib/haxe/std/haxe/zip/Huffman.hx	/^	function treeMake( bits : haxe.ds.IntMap<Int>, maxbits : Int, v : Int, len : Int ) {$/;"	f
treeWalk	/usr/lib/haxe/std/haxe/zip/Huffman.hx	/^	function treeWalk(table,p,cd,d,t) {$/;"	f
triangleArea	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var triangleArea:Float = 0.5 * ( (p2.x - intoVec.x) * (p3.y - intoVec.y) - (p2.y - intoVec.y) * (p3.x - intoVec.x) );$/;"	v
triangleArea	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var triangleArea:Float = 0.5 * D;$/;"	v
triangles	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^			var triangles = PolyK.triangulate (points);$/;"	v
triangles	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^			var triangles = PolyK.triangulate (recPoints);$/;"	v
triangulate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public static function triangulate (p:Array<Float>):Array<Int> {$/;"	f
triedSudo	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var triedSudo:Bool = false;$/;"	v
trim	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^				var trim = StringTools.trim (lines[i]);$/;"	v
tryAcquire	/usr/lib/haxe/std/neko/vm/Mutex.hx	/^	public function tryAcquire() : Bool {$/;"	f
tryFullPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^	public static function tryFullPath (path:String):String {$/;"	f
tryLoad	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	private static function tryLoad (name:String, library:String, func:String, args:Int):Dynamic {$/;"	f
tryLoad	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	private static function tryLoad (name:String, library:String, func:String, args:Int):Dynamic {$/;"	f
tryUnify	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	function tryUnify( t, rt ) {$/;"	f
ts	/usr/lib/haxe/std/haxe/macro/TypeTools.hx	/^			var ts = Context.typeof(macro "foo"); \/\/TInst(String,[])$/;"	v
ttype	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^						var ttype = t, tname;$/;"	v
tw	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^						var tw = tile.width;$/;"	v
tw	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^					var tw = tile.width;$/;"	v
tx	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public var tx:Float;$/;"	v
tx	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^		var tx = m.a * (x + width) + m.c * y;$/;"	v
tx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^				var tx = pMatrix.tx;$/;"	v
tx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var tx = matrix.tx;$/;"	v
tx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^	public var tx:Float;$/;"	v
tx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^		var tx = m.a * (x + width) + m.c * y;$/;"	v
tx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var tx = m.tx;$/;"	v
tx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^			var tx = ((__positionX - controlX) \/ (__positionX - 2 * controlX + anchorX));$/;"	v
tx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^	public var tx:Float;$/;"	v
tx	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^		var tx = m.a * (x + width) + m.c * y;$/;"	v
tx	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^			var tx = x.x.firstElement();$/;"	v
tx0	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^		var tx0 = m.a * x + m.c * y;$/;"	v
tx0	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^		var tx0 = m.a * x + m.c * y;$/;"	v
tx0	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^		var tx0 = m.a * x + m.c * y;$/;"	v
tx1	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^			var tx1 = - a * tx - c * ty;$/;"	v
tx1	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^		var tx1 = tx * cos - ty * sin;$/;"	v
tx1	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^		var tx1 = tx * m.a + ty * m.c + m.tx;$/;"	v
tx1	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^		var tx1 = tx0;$/;"	v
tx1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^			var tx1 = - a * tx - c * ty;$/;"	v
tx1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^		var tx1 = tx * cos - ty * sin;$/;"	v
tx1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^		var tx1 = tx * m.a + ty * m.c + m.tx;$/;"	v
tx1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^		var tx1 = tx0;$/;"	v
tx1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^			var tx1 = - a * tx - c * ty;$/;"	v
tx1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^		var tx1 = tx * cos - ty * sin;$/;"	v
tx1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^		var tx1 = tx * m.a + ty * m.c + m.tx;$/;"	v
tx1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^		var tx1 = tx0;$/;"	v
ty	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix3.hx	/^	public var ty:Float;$/;"	v
ty	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^		var ty = m.b * (x + width) + m.d * y;$/;"	v
ty	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^				var ty = pMatrix.ty;$/;"	v
ty	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var ty = matrix.ty;$/;"	v
ty	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Matrix.hx	/^	public var ty:Float;$/;"	v
ty	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^		var ty = m.b * (x + width) + m.d * y;$/;"	v
ty	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^		var ty = m.ty;$/;"	v
ty	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^			var ty = ((__positionY - controlY) \/ (__positionY - 2*controlY + anchorY));$/;"	v
ty	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix.hx	/^	public var ty:Float;$/;"	v
ty	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^		var ty = m.b * (x + width) + m.d * y;$/;"	v
ty0	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^		var ty0 = m.b * x + m.d * y;$/;"	v
ty0	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^		var ty0 = m.b * x + m.d * y;$/;"	v
ty0	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^		var ty0 = m.b * x + m.d * y;$/;"	v
ty1	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^		var ty1 = ty0;$/;"	v
ty1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^		var ty1 = tx0;$/;"	v
ty1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^		var ty1 = ty0;$/;"	v
type	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2BodyDef.hx	/^	public var type:B2BodyType;$/;"	v
type	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactConstraint.hx	/^	public var type:B2ManifoldType;\/\/b2Manifold::Type$/;"	v
type	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2JointDef.hx	/^	public var type:B2JointType;$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/legacy/templates/haxe/lime/AssetData.hx	/^	public static var type = new #if haxe3 Map <String, #else Hash <#end AssetType> ();	$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/legacy/templates/html5/haxe/lime/AssetData.hx	/^	public static var type = new #if haxe3 Map <String, #else Hash <#end AssetType> ();	$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public var type:GamepadEventType;$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public var type:KeyEventType;$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public var type:MouseEventType;$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public var type:RenderEventType;$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public var type:TextEventType;$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public var type:TouchEventType;$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public var type:UpdateEventType;$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public var type:WindowEventType;$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeMouse.hx	/^				var type:MouseCursorType = switch (value) {$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^			var type = "";$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public var type:ImageType;$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Asset.hx	/^	public var type:AssetType;$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^		var type = "release";$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^		var type = Type.resolveClass (name);$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Keystore.hx	/^	public var type:String;$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Library.hx	/^	public var type:String;$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/project/NDLL.hx	/^	public var type:NDLLType;$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^							var type = null;$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^						var type = NDLLType.AUTO;$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^		var type = null;$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AssetHelper.hx	/^			var type = library.type;$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^					var type = native_glyph.points[i++];$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^		var type = inAsset.type;$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^		var type = "release";$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/BlackBerryPlatform.hx	/^			var type = "release";$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/BlackBerryPlatform.hx	/^		var type = "release";$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/EmscriptenPlatform.hx	/^		var type = "release";$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FlashPlatform.hx	/^		var type = "release";$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/HTML5Platform.hx	/^			var type = "release";$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/HTML5Platform.hx	/^		var type = "release";$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^		var type = "release";$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/MacPlatform.hx	/^		var type = "release";$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/TizenPlatform.hx	/^		var type = "release";$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WebOSPlatform.hx	/^		var type = "release";$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WindowsPlatform.hx	/^		var type = "release";$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^	public var type (default, null) = new Map <String, AssetType> ();$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^	public var type (default, null) = new Map <String, AssetType> ();$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^					var type = src.readUInt16();$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^				var type = toHaxeType(mConstants[desc_ref]).name;$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^			var type = Path.withoutExtension (path);$/;"	v
type	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^			var type = p.ext == "png" ? "image\/png" : "image\/jpeg";$/;"	v
type	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Header.hx	/^	public var type:String;$/;"	v
type	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DefaultShader.hx	/^			var type = uniform.type;$/;"	v
type	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	public var type:GraphicType = Polygon;$/;"	v
type	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var type:BucketDataType;$/;"	v
type	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexAttribute.hx	/^	public var type:ElementType;$/;"	v
type	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public var type:AssetType;$/;"	v
type	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsGradientFill.hx	/^	public var type:GradientType;$/;"	v
type	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Sprite.hx	/^		var type = Type.getClassName (Type.getClass (this));$/;"	v
type	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var type = Std.int (Reflect.field (event, "type"));$/;"	v
type	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/Event.hx	/^	public var type (get, never):String;$/;"	v
type	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filters/BitmapFilter.hx	/^	private var type:String;$/;"	v
type	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public var type (get, set):TextFieldType;$/;"	v
type	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsGradientFill.hx	/^	public var type:GradientType;$/;"	v
type	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^		var type = switch (button) {$/;"	v
type	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		var type = GL.FLOAT;$/;"	v
type	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/Event.hx	/^	public var type (default, null):String;$/;"	v
type	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/EventDispatcher.hx	/^		var type = event.type;$/;"	v
type	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^	public var type (default, null) = new Map <String, AssetType> ();$/;"	v
type	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^					var type = rp.pop();$/;"	v
type	/usr/lib/haxe/std/haxe/macro/Expr.hx	/^	var type : Null<ComplexType>;$/;"	v
type	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var type : Type;$/;"	v
type	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	var type : CType;$/;"	v
type	/usr/lib/haxe/std/sys/db/RecordInfos.hx	/^	var type : String;$/;"	v
type1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactFactory.hx	/^		var type1:B2ShapeType = contact.m_fixtureA.getType();$/;"	v
type1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactFactory.hx	/^		var type1:B2ShapeType = fixtureA.getType();$/;"	v
type1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^		var type1:B2JointType = def.joint1.m_type;$/;"	v
type2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactFactory.hx	/^		var type2:B2ShapeType = contact.m_fixtureB.getType();$/;"	v
type2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactFactory.hx	/^		var type2:B2ShapeType = fixtureB.getType();$/;"	v
type2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^		var type2:B2JointType = def.joint2.m_type;$/;"	v
typeDest	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^			var typeDest = Type.typeof (valueDest).getName ();$/;"	v
typeDest	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^			var typeDest = null;$/;"	v
typeEq	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	public static function typeEq( t1 : CType, t2 : CType ) {$/;"	f
typeError	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/errors/TypeErrorTest.hx	/^		var typeError = new TypeError ();$/;"	v
typeExpr	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function typeExpr( e : Expr ) : TypedExpr {$/;"	f
typeInfos	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	public static function typeInfos( t : TypeTree ) : TypeInfos {$/;"	f
typeSource	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^				var typeSource = Type.typeof(valueSource).getName ();$/;"	v
typeSource	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^			var typeSource = Type.typeof (value).getName ();$/;"	v
typeStr	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	function typeStr( t : RecordType ) {$/;"	f
typeof	/usr/lib/haxe/std/Type.hx	/^	public static function typeof( v : Dynamic ) : ValueType;$/;"	f
typeof	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function typeof( e : Expr ) : Type {$/;"	f
types	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/ApplicationMain.hx	/^		var types = [];$/;"	v
types	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/ApplicationMain.hx	/^		var types = [];$/;"	v
types	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^		var types = [];$/;"	v
types	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^		var types = Context.getModule(module);$/;"	v
types	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^		var types = Context.getModule(path);$/;"	v
types	/usr/lib/haxe/std/haxe/macro/JSGenApi.hx	/^	var types : Array<Type>;$/;"	v
types	/usr/lib/haxe/std/haxe/rtti/CType.hx	/^	var types : haxe.ds.StringMap<CType>; \/\/ by platform$/;"	v
types	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		var types = new haxe.ds.StringMap();$/;"	v
types	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var types : haxe.ds.StringMap<RecordType>;$/;"	v
types	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^		var types = new haxe.ds.StringMap();$/;"	v
u	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^		var u:B2Vec2 = new B2Vec2(A.col1.x * v.x + A.col2.x * v.y, A.col1.y * v.x + A.col2.y * v.y);$/;"	v
u	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^		var u:B2Vec2 = new B2Vec2(dot(v, A.col1), dot(v, A.col2));$/;"	v
u	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var u:B2Vec2 = new B2Vec2(A.col1.x * localPoint.x + A.col2.x * localPoint.y, $/;"	v
u	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var u:Float, v:Float, uRatio:Float, vRatio:Float, uOpposite:Float, vOpposite:Float;$/;"	v
u	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var u = (dot11 * dot02 - dot01 * dot12) * invDenom;$/;"	v
u	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^			var u = (2 * __positionX - 4 * controlX1 + 2 * controlX2 );$/;"	v
u	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^			var u = (2 * __positionX - 4 * controlY1 + 2 * controlY2 );$/;"	v
u	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^		var u = new haxe.Utf8();$/;"	v
u	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^				var u = ((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 & 0x7F) << 6) | (b[i++] & 0x7F);$/;"	v
u	/usr/lib/haxe/std/haxe/remoting/HttpConnection.hx	/^			var u = new haxe.Unserializer(requestData);$/;"	v
u1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var u1:Float = (cLocalX - v1.x) * (v2.x - v1.x) + (cLocalY - v1.y) * (v2.y - v1.y);$/;"	v
u2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var u2:Float = (cLocalX - v2.x) * (v1.x - v2.x) + (cLocalY - v2.y) * (v1.y - v2.y);$/;"	v
u8a	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^					var u8a = ba.byteView;$/;"	v
u8a	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^					var u8a = new UInt8Array(ba);$/;"	v
uInt	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var uInt = data.getUint32 (this.position, littleEndian);$/;"	v
uInt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^		var uInt = data.getUint32 (this.position, littleEndian);$/;"	v
uMatrix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/FastShader.hx	/^	public var uMatrix:GLUniformLocation;$/;"	v
uSampler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DefaultShader.hx	/^	public var uSampler:GLUniformLocation;$/;"	v
uSampler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/FastShader.hx	/^	public var uSampler:GLUniformLocation;$/;"	v
uSampler	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/StripShader.hx	/^	public var uSampler:GLUniformLocation;$/;"	v
uShort	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var uShort = data.getUint16 (this.position, littleEndian);$/;"	v
uShort	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^		var uShort = data.getUint16 (this.position, littleEndian);$/;"	v
uX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^				var uX:Float = CX \/ CLength;$/;"	v
uY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^				var uY:Float = CY \/ CLength;$/;"	v
uc	/usr/lib/haxe/std/haxe/format/JsonParser.hx	/^					var uc = Std.parseInt("0x" + str.substr(pos, 4));$/;"	v
ucompare	/usr/lib/haxe/lib/openfl/3,0,8/docs/haxe/Int32.hx	/^	public static function ucompare( a : Int32, b : Int32 ) : Int {$/;"	f
ucompare	/usr/lib/haxe/std/haxe/Int32.hx	/^	public static function ucompare( a : Int32, b : Int32 ) : Int {$/;"	f
ucompare	/usr/lib/haxe/std/haxe/Int64.hx	/^	public static inline function ucompare( a : Int64, b : Int64 ) : Int {$/;"	f
ucount	/usr/lib/haxe/std/haxe/Serializer.hx	/^				var ucount = 0;$/;"	v
ud	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^			var ud:* = (node.userData as b2Fixture).GetBody().GetUserData();$/;"	v
ugX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^		var ugX:Float;$/;"	v
ugY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2GearJoint.hx	/^		var ugY:Float;$/;"	v
uicompare	/usr/lib/haxe/std/haxe/Int64.hx	/^	static function uicompare( a : Int, b : Int ) {$/;"	f
uid	/usr/lib/haxe/std/sys/FileStat.hx	/^	var uid : Int;$/;"	v
uint8Array	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/utils/UInt8ArrayTest.hx	/^		var uint8Array = new UInt8Array (0);$/;"	v
unBufferMove	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^	private function unBufferMove(proxy:B2DynamicTreeNode):Void$/;"	f
unbind	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexArray.hx	/^	public inline function unbind() {$/;"	f
unbindVertexArray	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/Shader.hx	/^	public function unbindVertexArray(va:VertexArray) {$/;"	f
uncaughtErrorEvents	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/LoaderInfo.hx	/^	public var uncaughtErrorEvents(default, null) : UncaughtErrorEvents;$/;"	v
uncaughtErrorEvents	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/LoaderInfo.hx	/^	public var uncaughtErrorEvents (default, null):UncaughtErrorEvents;$/;"	v
uncompress	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function uncompress (algorithm:CompressionAlgorithm = null):Void {$/;"	f
uncompress	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function uncompress (algorithm:CompressionAlgorithm = null):Void {$/;"	f
uncompress	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public function uncompress ():Void {$/;"	f
underline	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^	public static function underline (string:String, character = "="):String {$/;"	f
underline	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextFormat.hx	/^	public var underline:Null<Bool>;$/;"	v
underline	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextFormat.hx	/^	public var underline:Null<Bool>;$/;"	v
underlinePosition	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	public var underlinePosition (get, null):Int;$/;"	v
underlineThickness	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	public var underlineThickness (get, null):Int;$/;"	v
unescape	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURLEasy.hx	/^	public static function unescape (handle:CURL, url:String, inLength:Int, outLength:Int):String {$/;"	f
unescapePath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static function unescapePath (path:String):String {$/;"	f
uniform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DefaultShader.hx	/^		var uniform:Dynamic;$/;"	v
uniform1f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function uniform1f (location:GLUniformLocation, x:Float):Void;$/;"	f
uniform1f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function uniform1f (location:GLUniformLocation, x:Float):Void {$/;"	f
uniform1f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function uniform1f (location:GLUniformLocation, x:Float):Void {$/;"	f
uniform1f	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function uniform1f(location:GLUniformLocation, x:Float):Void $/;"	f
uniform1f	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function uniform1f(location:GLUniformLocation, x:Float):Void;$/;"	f
uniform1fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function uniform1fv (location:GLUniformLocation, v:lime.utils.Float32Array):Void;$/;"	f
uniform1fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function uniform1fv (location:GLUniformLocation, x:Float32Array):Void {$/;"	f
uniform1fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function uniform1fv (location:GLUniformLocation, x:Float32Array):Void {$/;"	f
uniform1fv	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function uniform1fv(location:GLUniformLocation, x:Float32Data):Void $/;"	f
uniform1fv	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function uniform1fv(location:GLUniformLocation, x:Float32Array):Void;$/;"	f
uniform1i	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function uniform1i (location:GLUniformLocation, x:Int):Void;$/;"	f
uniform1i	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function uniform1i (location:GLUniformLocation, x:Int):Void {$/;"	f
uniform1i	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function uniform1i (location:GLUniformLocation, x:Int):Void {$/;"	f
uniform1i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function uniform1i(location:GLUniformLocation, x:Int):Void $/;"	f
uniform1i	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function uniform1i(location:GLUniformLocation, x:Int):Void;$/;"	f
uniform1iv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function uniform1iv (location:GLUniformLocation, v:lime.utils.Int32Array):Void;$/;"	f
uniform1iv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function uniform1iv (location:GLUniformLocation, v:Int32Array):Void {$/;"	f
uniform1iv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function uniform1iv (location:GLUniformLocation, v:Int32Array):Void {$/;"	f
uniform1iv	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function uniform1iv(location:GLUniformLocation, v:Array<Int>):Void $/;"	f
uniform1iv	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function uniform1iv(location:GLUniformLocation, v:Int32Array):Void;$/;"	f
uniform2f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function uniform2f (location:GLUniformLocation, x:Float, y:Float):Void;$/;"	f
uniform2f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function uniform2f (location:GLUniformLocation, x:Float, y:Float):Void {$/;"	f
uniform2f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function uniform2f (location:GLUniformLocation, x:Float, y:Float):Void {$/;"	f
uniform2f	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function uniform2f(location:GLUniformLocation, x:Float, y:Float):Void $/;"	f
uniform2f	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function uniform2f(location:GLUniformLocation, x:Float, y:Float):Void;$/;"	f
uniform2fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function uniform2fv (location:GLUniformLocation, v:lime.utils.Float32Array):Void;$/;"	f
uniform2fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function uniform2fv (location:GLUniformLocation, v:Float32Array):Void {$/;"	f
uniform2fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function uniform2fv (location:GLUniformLocation, v:Float32Array):Void {$/;"	f
uniform2fv	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function uniform2fv(location:GLUniformLocation, v:Float32Data):Void $/;"	f
uniform2fv	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function uniform2fv(location:GLUniformLocation, v:Float32Array):Void;$/;"	f
uniform2i	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function uniform2i (location:GLUniformLocation, x:Int, y:Int):Void;$/;"	f
uniform2i	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function uniform2i (location:GLUniformLocation, x:Int, y:Int):Void {$/;"	f
uniform2i	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function uniform2i (location:GLUniformLocation, x:Int, y:Int):Void {$/;"	f
uniform2i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function uniform2i(location:GLUniformLocation, x:Int, y:Int):Void $/;"	f
uniform2i	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function uniform2i(location:GLUniformLocation, x:Int, y:Int):Void;$/;"	f
uniform2iv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function uniform2iv (location:GLUniformLocation, v:lime.utils.Int32Array):Void;$/;"	f
uniform2iv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function uniform2iv (location:GLUniformLocation, v:Int32Array):Void {$/;"	f
uniform2iv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function uniform2iv (location:GLUniformLocation, v:Int32Array):Void {$/;"	f
uniform2iv	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function uniform2iv(location:GLUniformLocation, v:Array<Int>):Void $/;"	f
uniform2iv	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function uniform2iv(location:GLUniformLocation, v:Int32Array):Void;$/;"	f
uniform3f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function uniform3f (location:GLUniformLocation, x:Float, y:Float, z:Float):Void;$/;"	f
uniform3f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function uniform3f (location:GLUniformLocation, x:Float, y:Float, z:Float):Void {$/;"	f
uniform3f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function uniform3f (location:GLUniformLocation, x:Float, y:Float, z:Float):Void {$/;"	f
uniform3f	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function uniform3f(location:GLUniformLocation, x:Float, y:Float, z:Float):Void $/;"	f
uniform3f	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function uniform3f(location:GLUniformLocation, x:Float, y:Float, z:Float):Void;$/;"	f
uniform3fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function uniform3fv(location:GLUniformLocation, v:lime.utils.Float32Array):Void;$/;"	f
uniform3fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function uniform3fv (location:GLUniformLocation, v:Float32Array):Void {$/;"	f
uniform3fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function uniform3fv (location:GLUniformLocation, v:Float32Array):Void {$/;"	f
uniform3fv	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function uniform3fv(location:GLUniformLocation, v:Float32Data):Void $/;"	f
uniform3fv	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function uniform3fv(location:GLUniformLocation, v:Float32Array):Void;$/;"	f
uniform3i	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function uniform3i (location:GLUniformLocation, x:Int, y:Int, z:Int):Void;$/;"	f
uniform3i	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function uniform3i (location:GLUniformLocation, x:Int, y:Int, z:Int):Void {$/;"	f
uniform3i	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function uniform3i (location:GLUniformLocation, x:Int, y:Int, z:Int):Void {$/;"	f
uniform3i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function uniform3i(location:GLUniformLocation, x:Int, y:Int, z:Int):Void $/;"	f
uniform3i	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function uniform3i(location:GLUniformLocation, x:Int, y:Int, z:Int):Void;$/;"	f
uniform3iv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function uniform3iv (location:GLUniformLocation, v:lime.utils.Int32Array):Void;$/;"	f
uniform3iv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function uniform3iv (location:GLUniformLocation, v:Int32Array):Void {$/;"	f
uniform3iv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function uniform3iv (location:GLUniformLocation, v:Int32Array):Void {$/;"	f
uniform3iv	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function uniform3iv(location:GLUniformLocation, v:Array<Int>):Void $/;"	f
uniform3iv	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function uniform3iv(location:GLUniformLocation, v:Int32Array):Void;$/;"	f
uniform4f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function uniform4f (location:GLUniformLocation, x:Float, y:Float, z:Float, w:Float):Void;$/;"	f
uniform4f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function uniform4f (location:GLUniformLocation, x:Float, y:Float, z:Float, w:Float):Void {$/;"	f
uniform4f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function uniform4f (location:GLUniformLocation, x:Float, y:Float, z:Float, w:Float):Void {$/;"	f
uniform4f	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function uniform4f(location:GLUniformLocation, x:Float, y:Float, z:Float, w:Float):Void $/;"	f
uniform4f	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function uniform4f(location:GLUniformLocation, x:Float, y:Float, z:Float, w:Float):Void;$/;"	f
uniform4fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function uniform4fv (location:GLUniformLocation, v:lime.utils.Float32Array):Void;$/;"	f
uniform4fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function uniform4fv (location:GLUniformLocation, v:Float32Array):Void {$/;"	f
uniform4fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function uniform4fv (location:GLUniformLocation, v:Float32Array):Void {$/;"	f
uniform4fv	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function uniform4fv(location:GLUniformLocation, v:Float32Data):Void $/;"	f
uniform4fv	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function uniform4fv(location:GLUniformLocation, v:Float32Array):Void;$/;"	f
uniform4i	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function uniform4i (location:GLUniformLocation, x:Int, y:Int, z:Int, w:Int):Void;$/;"	f
uniform4i	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function uniform4i (location:GLUniformLocation, x:Int, y:Int, z:Int, w:Int):Void {$/;"	f
uniform4i	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function uniform4i (location:GLUniformLocation, x:Int, y:Int, z:Int, w:Int):Void {$/;"	f
uniform4i	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function uniform4i(location:GLUniformLocation, x:Int, y:Int, z:Int, w:Int):Void $/;"	f
uniform4i	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function uniform4i(location:GLUniformLocation, x:Int, y:Int, z:Int, w:Int):Void;$/;"	f
uniform4iv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function uniform4iv (location:GLUniformLocation, v:lime.utils.Int32Array):Void;$/;"	f
uniform4iv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function uniform4iv (location:GLUniformLocation, v:Int32Array):Void {$/;"	f
uniform4iv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function uniform4iv (location:GLUniformLocation, v:Int32Array):Void {$/;"	f
uniform4iv	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function uniform4iv(location:GLUniformLocation, v:Float32Data):Void $/;"	f
uniform4iv	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function uniform4iv(location:GLUniformLocation, v:Int32Array):Void;$/;"	f
uniformMatrix2fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function uniformMatrix2fv (location:GLUniformLocation, transpose:Bool, array:lime.utils.Float32Array):Void;$/;"	f
uniformMatrix2fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function uniformMatrix2fv (location:GLUniformLocation, transpose:Bool, v:Float32Array):Void {$/;"	f
uniformMatrix2fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function uniformMatrix2fv (location:GLUniformLocation, transpose:Bool, v:Float32Array):Void {$/;"	f
uniformMatrix2fv	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function uniformMatrix2fv(location:GLUniformLocation, transpose:Bool, v:Float32Array):Void $/;"	f
uniformMatrix2fv	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function uniformMatrix2fv(location:GLUniformLocation, transpose:Bool, v:Float32Array):Void;$/;"	f
uniformMatrix3D	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function uniformMatrix3D(location:GLUniformLocation, transpose:Bool, matrix:Matrix3D):Void $/;"	f
uniformMatrix3D	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function uniformMatrix3D(location:GLUniformLocation, transpose:Bool, matrix:Matrix3D):Void;$/;"	f
uniformMatrix3fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function uniformMatrix3fv (location:GLUniformLocation, transpose:Bool, array:lime.utils.Float32Array):Void;$/;"	f
uniformMatrix3fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function uniformMatrix3fv (location:GLUniformLocation, transpose:Bool, v:Float32Array):Void {$/;"	f
uniformMatrix3fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function uniformMatrix3fv (location:GLUniformLocation, transpose:Bool, v:Float32Array):Void {$/;"	f
uniformMatrix3fv	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function uniformMatrix3fv(location:GLUniformLocation, transpose:Bool, v:Float32Array):Void $/;"	f
uniformMatrix3fv	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function uniformMatrix3fv(location:GLUniformLocation, transpose:Bool, v:Float32Array):Void;$/;"	f
uniformMatrix4fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function uniformMatrix4fv (location:GLUniformLocation, transpose:Bool, array:lime.utils.Float32Array):Void;$/;"	f
uniformMatrix4fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function uniformMatrix4fv (location:GLUniformLocation, transpose:Bool, v:Float32Array):Void {$/;"	f
uniformMatrix4fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function uniformMatrix4fv (location:GLUniformLocation, transpose:Bool, v:Float32Array):Void {$/;"	f
uniformMatrix4fv	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function uniformMatrix4fv(location:GLUniformLocation, transpose:Bool, v:Float32Array):Void $/;"	f
uniformMatrix4fv	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function uniformMatrix4fv(location:GLUniformLocation, transpose:Bool, v:Float32Array):Void;$/;"	f
uniforms	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/AbstractShader.hx	/^	public var uniforms:Map<String, Dynamic>;$/;"	v
uniforms	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/Shader.hx	/^	public var uniforms:Map<String, GLUniformLocation> = new Map();$/;"	v
unify	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function unify( t1 : Type, t2 : Type) : Bool {$/;"	f
unify	/usr/lib/haxe/std/haxe/macro/TypeTools.hx	/^	static public inline function unify( t1 : Type, t2:Type ) : Bool$/;"	f
unify	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	function unify( t : RecordType, rt : RecordType, pos : Position ) {$/;"	f
unifyClass	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^	function unifyClass( t : RecordType ) {$/;"	f
uninstall	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/AndroidHelper.hx	/^	public static function uninstall (packageName:String, deviceID:String = null):Void {$/;"	f
uninstall	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^	public override function uninstall ():Void {$/;"	f
union	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	public function union (toUnion:Rectangle):Rectangle {$/;"	f
union	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	public function union (toUnion:Rectangle):Rectangle {$/;"	f
union	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^	public function union (toUnion:Rectangle):Rectangle {$/;"	f
uniq_name	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^				var uniq_name = func_name;$/;"	v
unique	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^				var unique = idx[idx.length - 1] == "unique";$/;"	v
uniqueGlyphs	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^		var uniqueGlyphs = new Map<Int, Bool> ();$/;"	v
uniqueId	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public var uniqueId:Dynamic;$/;"	v
unitsPerEM	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	public var unitsPerEM (get, null):Int;$/;"	v
unknownElement	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var unknownElement = yieldUnknown(bufferLength);$/;"	v
unload	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Loader.hx	/^	public function unload ():Void {$/;"	f
unload	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Loader.hx	/^	public function unload ():Void {$/;"	f
unloadAndStop	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Loader.hx	/^	public function unloadAndStop (gc:Bool = true):Void {$/;"	f
unloadLibrary	/usr/lib/haxe/lib/lime/2,4,3/lime/Assets.hx	/^	public static function unloadLibrary (name:String):Void {$/;"	f
unloadLibrary	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^	public static function unloadLibrary (name:String):Void {$/;"	f
unloadLibrary	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^	public static function unloadLibrary (name:String):Void {$/;"	f
unlock	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function unlock (changeRect:Rectangle = null):Void {$/;"	f
unlock	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public function unlock (changeRect:Rectangle = null):Void {$/;"	f
unmake	/usr/lib/haxe/std/sys/db/Manager.hx	/^	function unmake( x : T ) {$/;"	f
unmultiply	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var unmultiply = 255.0 \/ a;$/;"	v
unmultiply	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var unmultiply = 255.0 \/ data[offset + 3];$/;"	v
unmultiplyAlpha	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^	public static function unmultiplyAlpha (image:Image):Void {$/;"	f
unmultiplyAlpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public function unmultiplyAlpha ():Void {$/;"	f
unops	/usr/lib/haxe/std/haxe/macro/Type.hx	/^	var unops : Array<{op:Expr.Unop, postFix:Bool, field:ClassField}>;$/;"	v
unsafeCount	/usr/lib/haxe/std/sys/db/Manager.hx	/^	public function unsafeCount( sql : String ) {$/;"	f
unsafeDelete	/usr/lib/haxe/std/sys/db/Manager.hx	/^	public function unsafeDelete( sql : String ) {$/;"	f
unsafeExecute	/usr/lib/haxe/std/sys/db/Manager.hx	/^	function unsafeExecute( sql : String ) {$/;"	f
unsafeGet	/usr/lib/haxe/std/sys/db/Manager.hx	/^	public function unsafeGet( id : Dynamic, ?lock : Bool ) : T {$/;"	f
unsafeGetId	/usr/lib/haxe/std/sys/db/Manager.hx	/^	public function unsafeGetId( o : T ) : Dynamic {$/;"	f
unsafeGetWithKeys	/usr/lib/haxe/std/sys/db/Manager.hx	/^	public function unsafeGetWithKeys( keys : { }, ?lock : Bool ) : T {$/;"	f
unsafeObject	/usr/lib/haxe/std/sys/db/Manager.hx	/^	public function unsafeObject( sql : String, lock : Bool ) : T {$/;"	f
unsafeObjects	/usr/lib/haxe/std/sys/db/Manager.hx	/^	public function unsafeObjects( sql : String, lock : Bool ) : List<T> {$/;"	f
unserialize	/usr/lib/haxe/std/haxe/Unserializer.hx	/^ 	public function unserialize() : Dynamic {$/;"	f
unserialize	/usr/lib/haxe/std/neko/Lib.hx	/^	public static function unserialize( s : haxe.io.Bytes ) : Dynamic {$/;"	f
unserializeEnum	/usr/lib/haxe/std/haxe/Unserializer.hx	/^	function unserializeEnum( edecl, tag ) {$/;"	f
unserializeObject	/usr/lib/haxe/std/haxe/Unserializer.hx	/^	function unserializeObject(o) {$/;"	f
unserializer	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^				var unserializer = new Unserializer (output);$/;"	v
unserializer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^				var unserializer = new Unserializer (rawData);$/;"	v
unserializer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/SharedObject.hx	/^			var unserializer = new Unserializer (rawData);$/;"	v
unset	/usr/lib/haxe/std/haxe/EnumFlags.hx	/^	public inline function unset( v : T ) : Void {$/;"	f
unshift	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	public inline function unshift (x:T):Void {$/;"	f
unshift	/usr/lib/haxe/std/Array.hx	/^	function unshift( x : T ) : Void;$/;"	f
unzip	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^	public static function unzip( f : Entry ) {$/;"	f
unzip	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^	public static function unzip( f : Entry ) {$/;"	f
upPos	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^			var upPos:Int = __getPosition (localPoint.x, localPoint.y);$/;"	v
upState	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/SimpleButton.hx	/^	public var upState (default, set):DisplayObject;$/;"	v
upState	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/SimpleButton.hx	/^	public var upState (default, set):DisplayObject;$/;"	v
update	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^	public function update(listener:B2ContactListener) : Void$/;"	f
update	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Input.hx	/^		public function update():Void$/;"	f
update	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public override function update (deltaTime:Int):Void {$/;"	f
update	/usr/lib/haxe/lib/lime/2,4,3/lime/app/IModule.hx	/^	public function update (deltaTime:Int):Void;$/;"	f
update	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Module.hx	/^	public function update (deltaTime:Int):Void { }$/;"	f
update	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Preloader.hx	/^	private function update (loaded:Int, total:Int):Void {$/;"	f
update	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^	public override function update ():Void {$/;"	f
update	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/BlackBerryPlatform.hx	/^	public override function update ():Void {$/;"	f
update	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/EmscriptenPlatform.hx	/^	public override function update ():Void {$/;"	f
update	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FirefoxPlatform.hx	/^	public override function update ():Void {$/;"	f
update	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FlashPlatform.hx	/^	public override function update ():Void {$/;"	f
update	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/HTML5Platform.hx	/^	public override function update ():Void {$/;"	f
update	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^	public override function update ():Void {$/;"	f
update	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/LinuxPlatform.hx	/^	public override function update ():Void {$/;"	f
update	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/MacPlatform.hx	/^	public override function update ():Void {$/;"	f
update	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/TizenPlatform.hx	/^	public override function update ():Void {$/;"	f
update	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WebOSPlatform.hx	/^	public override function update ():Void {$/;"	f
update	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/WindowsPlatform.hx	/^	public override function update ():Void {$/;"	f
update	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^	public static function update (textField:TextField, bounds:Rectangle):Bool {$/;"	f
update	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	public function update(line:LineStyle, fill:FillType, fillIndex:Int, winding:WindingRule):Void {$/;"	f
update	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^	public function update (deltaTime:Int):Void {$/;"	f
update	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	private function update ():Void {$/;"	f
update	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Preloader.hx	/^	private override function update (loaded:Int, total:Int):Void {$/;"	f
update	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^	public function update (deltaTime:Int):Void {$/;"	f
update	/usr/lib/haxe/lib/openfl/3,0,8/openfl/sensors/Accelerometer.hx	/^	private function update ():Void {$/;"	f
update	/usr/lib/haxe/std/haxe/crypto/Adler32.hx	/^	public function update( b : haxe.io.Bytes, pos, len ) {$/;"	f
update	/usr/lib/haxe/std/haxe/crypto/Crc32.hx	/^	public function update( b : haxe.io.Bytes, pos, len ) {$/;"	f
update	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^	public function update() {$/;"	f
update	/usr/lib/haxe/std/sys/db/Object.hx	/^	public function update() {$/;"	f
updateAfterEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/MouseEvent.hx	/^	public function updateAfterEvent ():Void {$/;"	f
updateAfterEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/MouseEvent.hx	/^	public function updateAfterEvent ():Void {$/;"	f
updateAfterEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TimerEvent.hx	/^	public function updateAfterEvent ():Void {$/;"	f
updateAfterEvent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/TouchEvent.hx	/^	public function updateAfterEvent ():Void {$/;"	f
updateAppInformation	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	public function updateAppInformation (appID:Int, project:HXProject):Dynamic {$/;"	f
updateComplete	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/SoundChannel.hx	/^	public function updateComplete () {$/;"	f
updateEventInfo	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private var updateEventInfo = new UpdateEventInfo ();$/;"	v
updateGraphics	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public static function updateGraphics (object:DisplayObject, graphics:Graphics, gl:GLRenderContext, ?localCoords:Bool = false):Void {$/;"	f
updateHaxelib	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	public static function updateHaxelib (haxelib:Haxelib):Void {$/;"	f
updateIcon	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CordovaHelper.hx	/^	public static function updateIcon (buildDirectory:String, icons:Array<Icon>, assets:Array <Asset>, context:Dynamic):Void {$/;"	f
updateLibrary	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	private function updateLibrary ():Void {$/;"	f
updateLine	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	public function updateLine(line:LineStyle):Void {$/;"	f
updateLoader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLLoader.hx	/^	public function updateLoader (handle : Dynamic, loader : URLLoader) : Void {$/;"	f
updatePairs	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^	public function updatePairs(callbackMethod:Dynamic):Void$/;"	f
updatePairs	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/IBroadPhase.hx	/^	function updatePairs(callbackMethod:Dynamic):Void;$/;"	f
updateTextures	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	public static function updateTextures ():Void {$/;"	f
updateTime	/usr/lib/haxe/std/neko/net/ServerLoop.hx	/^	public var updateTime : Float;$/;"	v
updateTime	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	public var updateTime : Float;$/;"	v
updateTimer	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private function updateTimer ():Void {$/;"	f
upload	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^			var upload = {$/;"	v
upload	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public function upload ():Void {$/;"	f
upload	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public function upload() {$/;"	f
upload	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public function upload():Void {$/;"	f
upload	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/VertexArray.hx	/^	public function upload(view:ArrayBufferView) {$/;"	f
upload	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Program3D.hx	/^	public function upload (vertexShader:GLShader, fragmentShader:GLShader):Void {$/;"	f
uploadCompressedTextureFromByteArray	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/CubeTexture.hx	/^	public function uploadCompressedTextureFromByteArray (data:ByteArray, byteArrayOffset:Int, async:Bool = false):Void {$/;"	f
uploadCompressedTextureFromByteArray	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/Texture.hx	/^	public function uploadCompressedTextureFromByteArray (data:ByteArray, byteArrayOffset:Int, async:Bool = false):Void {$/;"	f
uploadFromBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/CubeTexture.hx	/^	public function uploadFromBitmapData (bitmapData:BitmapData, side:Int, miplevel:Int = 0):Void {$/;"	f
uploadFromBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/RectangleTexture.hx	/^	public function uploadFromBitmapData (bitmapData:BitmapData, miplevel:Int = 0):Void {$/;"	f
uploadFromBitmapData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/Texture.hx	/^	public function uploadFromBitmapData (bitmapData:BitmapData, miplevel:Int = 0):Void {$/;"	f
uploadFromByteArray	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/IndexBuffer3D.hx	/^	public function uploadFromByteArray (byteArray:ByteArray, byteArrayOffset:Int, startOffset:Int, count:Int):Void {$/;"	f
uploadFromByteArray	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/VertexBuffer3D.hx	/^	public function uploadFromByteArray (byteArray:ByteArray, byteArrayOffset:Int, startOffset:Int, count:Int):Void {$/;"	f
uploadFromByteArray	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/CubeTexture.hx	/^	public function uploadFromByteArray (data:ByteArray, byteArrayOffset:Int, side:Int, miplevel:Int = 0):Void {$/;"	f
uploadFromByteArray	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/RectangleTexture.hx	/^	public function uploadFromByteArray (data:ByteArray, byteArrayOffset:Int):Void {$/;"	f
uploadFromByteArray	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/Texture.hx	/^	public function uploadFromByteArray (data:ByteArray, byteArrayOffset:Int, miplevel:Int = 0):Void {$/;"	f
uploadFromFloat32Array	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/VertexBuffer3D.hx	/^	public function uploadFromFloat32Array (data:Float32Array, startVertex:Int, numVertices:Int):Void {$/;"	f
uploadFromUInt8Array	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/Texture.hx	/^	public function uploadFromUInt8Array (data:UInt8Array, miplevel:Int = 0):Void {$/;"	f
uploadFromVector	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/IndexBuffer3D.hx	/^	public function uploadFromVector (data:Vector<UInt>, startOffset:Int, count:Int):Void {$/;"	f
uploadFromVector	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/VertexBuffer3D.hx	/^	public function uploadFromVector (data:Vector<Float>, startVertex:Int, numVertices:Int):Void {$/;"	f
uploadID	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var uploadID = response.id;$/;"	v
uploadScreenshot	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	public function uploadScreenshot (appID:Int, position:Int, path:String):Dynamic {$/;"	f
uploadTile	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public function uploadTile (x:Int, y:Int, w:Int, h:Int):Void {$/;"	f
uploadTileBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var uploadTileBuffer = true;$/;"	v
uploadingFunc	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var uploadingFunc:URLLoader->Int->Int->Void = null;$/;"	v
upos	/usr/lib/haxe/std/haxe/Unserializer.hx	/^ 	var upos : Int;$/;"	v
upper	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var upper:Float = input.maxFraction;$/;"	v
upperAngle	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJointDef.hx	/^	public var upperAngle:Float;$/;"	v
upperArmL	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRagdoll.hx	/^				var upperArmL:B2Body = m_world.createBody(bd);$/;"	v
upperArmR	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRagdoll.hx	/^				var upperArmR:B2Body = m_world.createBody(bd);$/;"	v
upperBound	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^	public var upperBound:B2Vec2;$/;"	v
upperLegL	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRagdoll.hx	/^				var upperLegL:B2Body = m_world.createBody(bd);$/;"	v
upperLegR	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestRagdoll.hx	/^				var upperLegR:B2Body = m_world.createBody(bd);$/;"	v
upperTranslation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJointDef.hx	/^	public var upperTranslation:Float;$/;"	v
upperTranslation	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJointDef.hx	/^	public var upperTranslation:Float;$/;"	v
upperX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var upperX:Float = -B2Math.MAX_VALUE;$/;"	v
upperX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var upperX:Float = lowerX;$/;"	v
upperY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var upperY:Float = -B2Math.MAX_VALUE;$/;"	v
upperY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var upperY:Float = lowerY;$/;"	v
uri	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^		var uri = prepareData(data);$/;"	v
uri	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^		var uri:ByteArray = new ByteArray();$/;"	v
uri	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^		var uri:Dynamic = "";$/;"	v
uri	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthRequest.hx	/^	private var uri:URIParser;$/;"	v
uri	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^		var uri = prepareData(data);$/;"	v
uri	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^		var uri:ByteArray = new ByteArray ();$/;"	v
uri	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^		var uri:Dynamic = "";$/;"	v
uri	/usr/lib/haxe/std/haxe/Http.hx	/^		var uri = null;$/;"	v
uri	/usr/lib/haxe/std/haxe/Http.hx	/^		var uri = postData;$/;"	v
url	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Preloader.hx	/^			var url = null;$/;"	v
url	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLRequest.hx	/^	public var url:String;$/;"	v
url	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/LoaderInfo.hx	/^	public var url (default, null):String;$/;"	v
url	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/File.hx	/^	public var url (default, set):String;$/;"	v
url	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^	public var url (default, null):String;$/;"	v
url	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequest.hx	/^	public var url:String;$/;"	v
url	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextFormat.hx	/^	public var url:String;$/;"	v
url	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/LoaderInfo.hx	/^	public var url (default, null):String;$/;"	v
url	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Preloader.hx	/^		var url = null;$/;"	v
url	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public var url (default, null):String;$/;"	v
url	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLRequest.hx	/^	public var url:String;$/;"	v
url	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextFormat.hx	/^	public var url:String;$/;"	v
url	/usr/lib/haxe/std/haxe/Http.hx	/^	public var url : String;$/;"	v
urlApp	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^			var urlApp = baseUrl + '\/app\/$appSlug\/';$/;"	v
urlConnect	/usr/lib/haxe/std/haxe/remoting/AMFConnection.hx	/^	public static function urlConnect( gatewayUrl : String ) {$/;"	f
urlConnect	/usr/lib/haxe/std/haxe/remoting/HttpAsyncConnection.hx	/^	public static function urlConnect( url : String ) {$/;"	f
urlConnect	/usr/lib/haxe/std/haxe/remoting/HttpConnection.hx	/^	public static function urlConnect( url : String ) {$/;"	f
urlContentRatings	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^			var urlContentRatings = devUrlApp + "content_ratings\/edit";$/;"	v
urlLoader	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLLoaderTest.hx	/^		var urlLoader = new URLLoader ();$/;"	v
urlRequest	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLRequestTest.hx	/^		var urlRequest = new URLRequest ();$/;"	v
urlRequestHeader	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLRequestHeaderTest.hx	/^		var urlRequestHeader = new URLRequestHeader ();$/;"	v
urlVariables	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/net/URLVariablesTest.hx	/^		var urlVariables = new URLVariables ();$/;"	v
url_regexp	/usr/lib/haxe/std/haxe/Http.hx	/^		var url_regexp = ~\/^(https?:\\\/\\\/)?([a-zA-Z\\.0-9-]+)(:[0-9]+)?(.*)$\/;$/;"	v
urls	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/ApplicationMain.hx	/^		var urls = [];$/;"	v
urls	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/ApplicationMain.hx	/^		var urls = [];$/;"	v
urls	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^		var urls = [];$/;"	v
use	/usr/lib/haxe/std/haxe/macro/ExampleJSGenerator.hx	/^	public static function use() {$/;"	f
use Tupple3	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	private var samplerParameters:Array<SamplerState>; \/\/TODO : use Tupple3$/;"	i
use antiAlias parameter	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		\/\/ TODO use antiAlias parameter$/;"	i
use faster method	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageCanvasUtil.hx	/^			\/\/ TODO: use faster method$/;"	i
use faster method	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			\/\/ TODO: use faster method$/;"	i
use format, optimizeForRenderToTexture and streamingLevels?	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		var texture = new CubeTexture (GL.createTexture (), size); \/\/ TODO use format, optimizeForRenderToTexture and streamingLevels?$/;"	i
use format, optimizeForRenderToTexture and streamingLevels?	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		var texture = new RectangleTexture (GL.createTexture (), optimizeForRenderToTexture, width, height); \/\/ TODO use format, optimizeForRenderToTexture and streamingLevels?$/;"	i
use format, optimizeForRenderToTexture and streamingLevels?	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		var texture = new Texture (GL.createTexture (), optimizeForRenderToTexture, width, height); \/\/ TODO use format, optimizeForRenderToTexture and streamingLevels?$/;"	i
useAlpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var useAlpha = (flags & Graphics.TILE_ALPHA) > 0;$/;"	v
useAlpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var useAlpha = (flags & Graphics.TILE_ALPHA) > 0;$/;"	v
useAlpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var useAlpha = (flags & Tilesheet.TILE_ALPHA) > 0;$/;"	v
useAlpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^		var useAlpha = (flags & Tilesheet.TILE_ALPHA) > 0;$/;"	v
useBlendAdd	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var useBlendAdd = (flags & Graphics.TILE_BLEND_ADD) > 0;$/;"	v
useBlendAdd	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var useBlendAdd = (flags & Graphics.TILE_BLEND_ADD) > 0;$/;"	v
useCache	/usr/lib/haxe/std/haxe/Serializer.hx	/^	public var useCache : Bool;$/;"	v
useCapture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/EventDispatcher.hx	/^	public var useCapture:Bool;$/;"	v
useCapture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/EventDispatcher.hx	/^	public var useCapture:Bool;$/;"	v
useCodePage	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/System.hx	/^	public static var useCodePage:Bool = false;$/;"	v
useDensity	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^	public var useDensity:Bool; \/\/False by default to prevent a gotcha$/;"	v
useEnumIndex	/usr/lib/haxe/std/haxe/Serializer.hx	/^	public var useEnumIndex : Bool;$/;"	v
useHandCursor	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var useHandCursor:Bool;$/;"	v
useHandCursor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/SimpleButton.hx	/^	public var useHandCursor (get, set):Bool;$/;"	v
useHandCursor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Sprite.hx	/^	public var useHandCursor:Bool;$/;"	v
useHandCursor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/SimpleButton.hx	/^	public var useHandCursor:Bool;$/;"	v
useHandCursor	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Sprite.hx	/^	public var useHandCursor:Bool;$/;"	v
useHardware	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeRenderer.hx	/^	private var useHardware:Bool;$/;"	v
useManifest	/usr/lib/haxe/lib/lime/2,4,3/templates/compatibility/DefaultAssetLibrary.hx	/^		var useManifest = false;$/;"	v
useManifest	/usr/lib/haxe/lib/lime/2,4,3/templates/haxe/DefaultAssetLibrary.hx	/^		var useManifest = false;$/;"	v
useManifest	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/DefaultAssetLibrary.hx	/^		var useManifest = false;$/;"	v
useOrigin	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var useOrigin = (flags & Graphics.TILE_ORIGIN) > 0;$/;"	v
useOrigin	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var useOrigin = (flags & Graphics.TILE_ORIGIN) > 0;$/;"	v
useOrigin	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var useOrigin = (flags & Tilesheet.TILE_ORIGIN) > 0;$/;"	v
useOrigin	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^		var useOrigin = (flags & Tilesheet.TILE_ORIGIN) > 0;$/;"	v
useProgram	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function useProgram (program:GLProgram):Void;$/;"	f
useProgram	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function useProgram (program:GLProgram):Void {$/;"	f
useProgram	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function useProgram (program:GLProgram):Void {$/;"	f
useProgram	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function useProgram(program:GLProgram):Void $/;"	f
useProgram	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function useProgram(program:GLProgram):Void;$/;"	f
useRGB	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var useRGB = (flags & Graphics.TILE_RGB) > 0;$/;"	v
useRGB	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var useRGB = (flags & Graphics.TILE_RGB) > 0;$/;"	v
useRGB	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var useRGB = (flags & Tilesheet.TILE_RGB) > 0;$/;"	v
useRGB	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^		var useRGB = (flags & Tilesheet.TILE_RGB) > 0;$/;"	v
useRadii	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DistanceInput.hx	/^	public var useRadii:Bool;$/;"	v
useRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var useRect = (flags & Graphics.TILE_RECT) > 0;$/;"	v
useRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var useRect = (flags & Graphics.TILE_RECT) > 0;$/;"	v
useRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var useRect = (flags & Tilesheet.TILE_RECT) > 0;$/;"	v
useRect	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^		var useRect = (flags & Tilesheet.TILE_RECT) > 0;$/;"	v
useRotation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var useRotation = (flags & Graphics.TILE_ROTATION) > 0;$/;"	v
useRotation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var useRotation = (flags & Graphics.TILE_ROTATION) > 0;$/;"	v
useRotation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var useRotation = (flags & Tilesheet.TILE_ROTATION) > 0;$/;"	v
useRotation	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^		var useRotation = (flags & Tilesheet.TILE_ROTATION) > 0;$/;"	v
useScale	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var useScale = (flags & Graphics.TILE_SCALE) > 0;$/;"	v
useScale	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var useScale = (flags & Graphics.TILE_SCALE) > 0;$/;"	v
useScale	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var useScale = (flags & Tilesheet.TILE_SCALE) > 0;$/;"	v
useScale	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^		var useScale = (flags & Tilesheet.TILE_SCALE) > 0;$/;"	v
useTexture	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DrawTrianglesShader.hx	/^	public var useTexture:GLUniformLocation;$/;"	v
useTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var useTransform = (flags & Graphics.TILE_TRANS_2x2) > 0;$/;"	v
useTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var useTransform = (flags & Graphics.TILE_TRANS_2x2) > 0;$/;"	v
useTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var useTransform = (flags & Tilesheet.TILE_TRANS_2x2) > 0;$/;"	v
useTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^		var useTransform = (flags & Tilesheet.TILE_TRANS_2x2) > 0;$/;"	v
useWebfonts	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/HTML5Platform.hx	/^		var useWebfonts = true;$/;"	v
useWorldGravity	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^	public var useWorldGravity:Bool;$/;"	v
usedFlatNames	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^	private static var usedFlatNames = new Map <String, String> ();$/;"	v
user	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URIParser.hx	/^	public var user:String;$/;"	v
user	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^		var user : String;$/;"	v
user, sys_wm, sound_finished	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^				\/\/ TODO: user, sys_wm, sound_finished$/;"	i
userAgent	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLRequest.hx	/^	public var userAgent:String;$/;"	v
userAgent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequest.hx	/^	public var userAgent:String;$/;"	v
userAgent	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLRequest.hx	/^	public var userAgent:String;$/;"	v
userData	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeNode.hx	/^	public var userData:Dynamic;$/;"	v
userData	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2BodyDef.hx	/^	public var userData:Dynamic;$/;"	v
userData	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2FixtureDef.hx	/^	public var userData:Dynamic;$/;"	v
userData	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^			var userData:Dynamic = broadPhase.getUserData(proxy);$/;"	v
userData	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2JointDef.hx	/^	public var userData:Dynamic;$/;"	v
userData	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public var userData:Dynamic;$/;"	v
userDataA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^				var userDataA:Dynamic = m_tree.getUserData(primaryPair.proxyA);$/;"	v
userDataB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^				var userDataB:Dynamic = m_tree.getUserData(primaryPair.proxyB);$/;"	v
userDefines	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	private var userDefines:Map <String, Dynamic>;$/;"	v
userDefines	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var userDefines:Map<String, Dynamic>;$/;"	v
userDirectory	/usr/lib/haxe/lib/lime/2,4,3/lime/system/System.hx	/^	public static var userDirectory (get, null):String;$/;"	v
userDirectory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/filesystem/File.hx	/^	public static var userDirectory (get, null):File;$/;"	v
userDirectory	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/SystemPath.hx	/^	public static var userDirectory (get, null):String;$/;"	v
userInfo	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URIParser.hx	/^	public var userInfo:String;$/;"	v
usesNME	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/FlashPlatform.hx	/^		var usesNME = false;$/;"	v
ushr	/usr/lib/haxe/std/haxe/Int64.hx	/^	public static inline function ushr( a : Int64, b : Int ) : Int64 {$/;"	f
ushr32	/usr/lib/haxe/std/haxe/Int64.hx	/^	private static inline function ushr32(v:Int,n:Int):Int {$/;"	f
usingDebug	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/PathHelper.hx	/^		var usingDebug = false;$/;"	v
usize	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var usize = i.readInt32();$/;"	v
usize	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var usize = i.readInt32();$/;"	v
utf8	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var utf8 = flags & 0x800 != 0;$/;"	v
utf8	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var utf8 = flags & 0x800 != 0;$/;"	v
utils	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/CreateTemplate.hx	/^package utils;$/;"	p
utils	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/JavaExternGenerator.hx	/^package utils;$/;"	p
utils	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^package utils;$/;"	p
utils.publish	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^package utils.publish;$/;"	p
uuid	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^		var uuid = [];$/;"	v
uuid	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/TizenPlatform.hx	/^	private static var uuid:String = null;$/;"	v
uuidChars	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^	private static var uuidChars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";$/;"	v
uvArray	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^	public var uvArray:Float32Array;$/;"	v
uvBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^	public var uvBuffer:GLBuffer;$/;"	v
uvs	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var uvs = bitmapData.__uvData;$/;"	v
uvs	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var uvs = new TextureUvs();$/;"	v
uvt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var uvt = uvtData;$/;"	v
uvt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var uvt = uvtData;$/;"	v
uvtData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var uvtData:Vector<Float> = cast args[2];$/;"	v
uvtData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^			var uvtData = sheet.adjustLen (sheet.__uvs, itemCount * 8); $/;"	v
uvx1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var uvx1:Float, uvy1:Float, uvx2:Float, uvy2:Float, uvx3:Float, uvy3:Float;$/;"	v
uvx1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var uvx1:Float, uvy1:Float, uvx2:Float, uvy2:Float, uvx3:Float, uvy3:Float;$/;"	v
uxX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var uxX:Float = p[i].x - root.x;$/;"	v
uxY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var uxY:Float = p[i].y - root.y;$/;"	v
uyX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var uyX:Float = -uxY;$/;"	v
uyY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var uyY:Float = uxX;$/;"	v
v	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTree.hx	/^		var v:B2Vec2 = B2Math.crossFV(1.0, r);$/;"	v
v	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^	var v:B2SimplexVertex;$/;"	v
v	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/ClipVertex.hx	/^	public var v:B2Vec2;$/;"	v
v	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var v:Array <B2Vec2> = new Array <B2Vec2>();$/;"	v
v	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^		var v:B2Vec2 = new B2Vec2(-s * a.y, s * a.x);$/;"	v
v	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^		var v:B2Vec2 = new B2Vec2(a.x + b.x, a.y + b.y);$/;"	v
v	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^		var v:B2Vec2 = new B2Vec2(a.x - b.x, a.y - b.y);$/;"	v
v	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^		var v:B2Vec2 = new B2Vec2(s * a.x, s * a.y);$/;"	v
v	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Math.hx	/^		var v:B2Vec2 = new B2Vec2(s * a.y, -s * a.x);$/;"	v
v	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^						var v:B2Vec2 = B2Math.AddVV(pos , d);$/;"	v
v	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^						var v:B2Vec2 = m.points[j].position;$/;"	v
v	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var v = vertices;$/;"	v
v	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var v = vertices;$/;"	v
v	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var v = (dot00 * dot12 - dot01 * dot02) * invDenom;$/;"	v
v	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^			var v = (controlX1 - __positionX);$/;"	v
v	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^			var v = (controlY1 - __positionX);$/;"	v
v	/usr/lib/haxe/std/List.hx	/^			var v = l[0];$/;"	v
v	/usr/lib/haxe/std/haxe/Int64.hx	/^		var v = i32(a.high - b.high);$/;"	v
v	/usr/lib/haxe/std/haxe/Int64.hx	/^		var v = uicompare(a.high,b.high);$/;"	v
v	/usr/lib/haxe/std/haxe/Serializer.hx	/^				var v : Array<Dynamic> = v;$/;"	v
v	/usr/lib/haxe/std/haxe/Serializer.hx	/^				var v : List<Dynamic> = v;$/;"	v
v	/usr/lib/haxe/std/haxe/Serializer.hx	/^				var v : haxe.ds.IntMap<Dynamic> = v;$/;"	v
v	/usr/lib/haxe/std/haxe/Serializer.hx	/^				var v : haxe.ds.ObjectMap<Dynamic,Dynamic> = v;$/;"	v
v	/usr/lib/haxe/std/haxe/Serializer.hx	/^				var v : haxe.ds.StringMap<Dynamic> = v;$/;"	v
v	/usr/lib/haxe/std/haxe/Serializer.hx	/^				var v : haxe.io.Bytes = v;$/;"	v
v	/usr/lib/haxe/std/haxe/Serializer.hx	/^			var v : Float = v;$/;"	v
v	/usr/lib/haxe/std/haxe/Serializer.hx	/^			var v : Int = v;$/;"	v
v	/usr/lib/haxe/std/haxe/Template.hx	/^				var v : Dynamic = e();$/;"	v
v	/usr/lib/haxe/std/haxe/Template.hx	/^			var v : Dynamic = Reflect.field(macros,m);$/;"	v
v	/usr/lib/haxe/std/haxe/Template.hx	/^			var v : Dynamic = e();$/;"	v
v	/usr/lib/haxe/std/haxe/Template.hx	/^			var v : Iterator<Dynamic> = v;$/;"	v
v	/usr/lib/haxe/std/haxe/Unserializer.hx	/^ 			var v = unserialize();$/;"	v
v	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^				var v : Array<Dynamic> = v;$/;"	v
v	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^				var v : Date = v;$/;"	v
v	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^				var v : haxe.ds.StringMap<Dynamic> = v;$/;"	v
v	/usr/lib/haxe/std/haxe/macro/Compiler.hx	/^		var v = flag + (value == null ? "" : "= " + value);$/;"	v
v	/usr/lib/haxe/std/haxe/remoting/FlashJsConnection.hx	/^			var v : Dynamic;$/;"	v
v	/usr/lib/haxe/std/haxe/remoting/HttpConnection.hx	/^		var v = neko.Web.getParams().get("__x");$/;"	v
v	/usr/lib/haxe/std/haxe/remoting/HttpConnection.hx	/^		var v = php.Web.getParams().get("__x");$/;"	v
v	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^				var v = evalues == null ? null : evalues.next();$/;"	v
v	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^			var v = Std.parseFloat(v);$/;"	v
v	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^			var v = Std.parseInt(v);$/;"	v
v	/usr/lib/haxe/std/haxe/web/Dispatch.hx	/^			var v = this.params.get(p.name);$/;"	v
v	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^		var v = __x.get(name);$/;"	v
v	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^		var v = it.next();$/;"	v
v	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^						var v = str.substr(start,p - start);$/;"	v
v	/usr/lib/haxe/std/neko/Web.hx	/^		var v = _get_client_header(untyped k.__s);$/;"	v
v	/usr/lib/haxe/std/neko/Web.hx	/^		var v = _get_client_headers();$/;"	v
v	/usr/lib/haxe/std/neko/Web.hx	/^		var v = _get_post_data();$/;"	v
v	/usr/lib/haxe/std/neko/Web.hx	/^		var v = buf.toString();$/;"	v
v	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^				var v = x.firstChild().nodeValue;$/;"	v
v	/usr/lib/haxe/std/neko/vm/Thread.hx	/^		var v = new neko.vm.Lock();$/;"	v
v	/usr/lib/haxe/std/sys/db/Manager.hx	/^			var v : Dynamic = Reflect.field(x,name);$/;"	v
v	/usr/lib/haxe/std/sys/db/Manager.hx	/^			var v = Reflect.field(x,k);$/;"	v
v	/usr/lib/haxe/std/sys/db/Manager.hx	/^			var v = Reflect.field(x,name);$/;"	v
v	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var v = Reflect.field(x,prop);$/;"	v
v	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var v = doSerialize(name, cache.v);$/;"	v
v	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^						var v = buildCond(pl[0]);$/;"	v
v0	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^		var v0:B2Vec2 = new B2Vec2(normal.x * offset, normal.y * offset);$/;"	v
v0	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var v0 = 0; var v1 = 0; var v2 = 0;$/;"	v
v0	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var v0 = new Vector3D();$/;"	v
v0x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var v0x = Std.int(cx-ax);$/;"	v
v0y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var v0y = Std.int(cy-ay);$/;"	v
v1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var v1:B2Vec2 = vertices[vertIndex1];$/;"	v
v1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^		var v1:B2Vec2 = B2Math.mulX(xf, m_v1);$/;"	v
v1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^			var v1: B2Vec2;$/;"	v
v1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2EdgeAndCircleContact.hx	/^		var v1: B2Vec2 = edge.m_v1;$/;"	v
v1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var v1:B2Vec2 = bA.m_linearVelocity;$/;"	v
v1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var v1:B2Vec2 = bA.m_linearVelocity;$/;"	v
v1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^		var v1:B2Vec2 = bA.m_linearVelocity;$/;"	v
v1	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var v1 = matrix3D.decompose();$/;"	v
v1	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var v1 = matrix3D.decompose(Orientation3D.QUATERNION);$/;"	v
v1	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var v1 = new Vector3D();$/;"	v
v1	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^			var v1 = TypeApi.isVar(f1.type);$/;"	v
v11	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var v11:B2Vec2 = s_v11;$/;"	v
v12	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var v12:B2Vec2 = s_v12;$/;"	v
v1LocalX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var v1LocalX: Number = (tX * tMat.col1.x + tY * tMat.col1.y );$/;"	v
v1LocalY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var v1LocalY: Number = (tX * tMat.col2.x + tY * tMat.col2.y );$/;"	v
v1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var v1X:Float = xf1.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);$/;"	v
v1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^		var v1X: Float = transform.position.x + (tMat.col1.x * m_v1.x + tMat.col2.x * m_v1.y);$/;"	v
v1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^		var v1X:Float = transform.position.x + (tMat.col1.x * m_v1.x + tMat.col2.x * m_v1.y);$/;"	v
v1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^		var v1X:Float = xf.position.x + (tMat.col1.x * m_coreV1.x + tMat.col2.x * m_coreV1.y);$/;"	v
v1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var v1X: Number = xf2.position.x + (tMat.col1.x * tVec1.x + tMat.col2.x * tVec1.y);$/;"	v
v1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^		var v1X:Float = bA.m_linearVelocity.x + (-bA.m_angularVelocity * r1Y);$/;"	v
v1X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var v1X:Float;$/;"	v
v1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var v1Y:Float = xf1.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);$/;"	v
v1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^		var v1Y: Float = transform.position.y + (tMat.col1.y * m_v1.x + tMat.col2.y * m_v1.y);$/;"	v
v1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^		var v1Y:Float = transform.position.y + (tMat.col1.y * m_v1.x + tMat.col2.y * m_v1.y);$/;"	v
v1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^		var v1Y:Float = xf.position.y + (tMat.col1.y * m_coreV1.x + tMat.col2.y * m_coreV1.y);$/;"	v
v1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var v1Y: Number = xf2.position.y + (tMat.col1.y * tVec1.x + tMat.col2.y * tVec1.y);$/;"	v
v1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^		var v1Y:Float = bA.m_linearVelocity.y + (bA.m_angularVelocity * r1X);$/;"	v
v1Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var v1Y:Float;$/;"	v
v1x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var v1x = Std.int(bx-ax);$/;"	v
v1y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var v1y = Std.int(by-ay);$/;"	v
v2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var v2:B2Vec2 = vertices[vertIndex2];$/;"	v
v2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^		var v2:B2Vec2 = B2Math.mulX(xf, m_v2);$/;"	v
v2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^			var v2: B2Vec2;$/;"	v
v2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2EdgeAndCircleContact.hx	/^		var v2: B2Vec2 = edge.m_v2;$/;"	v
v2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var v2:B2Vec2 = bB.m_linearVelocity;$/;"	v
v2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var v2:B2Vec2 = bB.m_linearVelocity;$/;"	v
v2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^		var v2:B2Vec2 = bB.m_linearVelocity;$/;"	v
v2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var v2 = new Vector3D();$/;"	v
v2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var v2 = recomposed.decompose();$/;"	v
v2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var v2 = recomposed.decompose(Orientation3D.QUATERNION);$/;"	v
v2	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^			var v2 = TypeApi.isVar(f2.type);$/;"	v
v2LocalX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var v2LocalX: Number = (tX * tMat.col1.x + tY * tMat.col1.y );$/;"	v
v2LocalY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var v2LocalY: Number = (tX * tMat.col2.x + tY * tMat.col2.y );$/;"	v
v2X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var v2X:Float = xf2.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);$/;"	v
v2X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^		var v2X:Float = transform.position.x + (tMat.col1.x * m_v2.x + tMat.col2.x * m_v2.y);$/;"	v
v2X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^		var v2X:Float = xf.position.x + (tMat.col1.x * m_coreV2.x + tMat.col2.x * m_coreV2.y);$/;"	v
v2X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var v2X: Number = xf2.position.x + (tMat.col1.x * tVec1.x + tMat.col2.x * tVec1.y);$/;"	v
v2X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^		var v2X:Float = bB.m_linearVelocity.x + (-bB.m_angularVelocity * r2Y);$/;"	v
v2X	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var v2X:Float;$/;"	v
v2Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var v2Y:Float = xf2.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);$/;"	v
v2Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^		var v2Y:Float = transform.position.y + (tMat.col1.y * m_v2.x + tMat.col2.y * m_v2.y);$/;"	v
v2Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2EdgeShape.hx	/^		var v2Y:Float = xf.position.y + (tMat.col1.y * m_coreV2.x + tMat.col2.y * m_coreV2.y);$/;"	v
v2Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var v2Y: Number = xf2.position.y + (tMat.col1.y * tVec1.x + tMat.col2.y * tVec1.y);$/;"	v
v2Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2DistanceJoint.hx	/^		var v2Y:Float = bB.m_linearVelocity.y + (bB.m_angularVelocity * r2X);$/;"	v
v2Y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PulleyJoint.hx	/^		var v2Y:Float;$/;"	v
v2x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var v2x = Std.int(px-ax);$/;"	v
v2y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var v2y = Std.int(py-ay);$/;"	v
v3	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var v3 = new Vector3D();$/;"	v
v4	/usr/lib/haxe/std/haxe/io/Bytes.hx	/^		var v4 = value&0xFF;$/;"	v
vA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var vA:B2Vec2 = bodyA.m_linearVelocity;$/;"	v
vA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^		var vA:B2Vec2 = bA.m_linearVelocity;$/;"	v
vA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^		var vA:B2Vec2 = bA.m_linearVelocity;$/;"	v
vAX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var vAX:Float = bodyA.m_linearVelocity.x;$/;"	v
vAY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var vAY:Float = bodyA.m_linearVelocity.y;$/;"	v
vB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var vB:B2Vec2 = bodyB.m_linearVelocity;$/;"	v
vB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^		var vB:B2Vec2 = bB.m_linearVelocity;$/;"	v
vB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^		var vB:B2Vec2 = bB.m_linearVelocity;$/;"	v
vBX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var vBX:Float = bodyB.m_linearVelocity.x;$/;"	v
vBY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var vBY:Float = bodyB.m_linearVelocity.y;$/;"	v
vIn	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Matrix3DTest.hx	/^		var vIn:Vector<Float> = [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0 ];$/;"	v
vIn0	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var vIn0:B2Vec2 = cv.v;$/;"	v
vIn1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var vIn1:B2Vec2 = cv.v;$/;"	v
vRel	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var vRel:Float = cc.normal.x*tX + cc.normal.y*tY;$/;"	v
vX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var vX:Float = xf.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);$/;"	v
vY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var vY:Float = xf.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);$/;"	v
val	/usr/lib/haxe/lib/lime/2,4,3/js/Boot.hx	/^	var val:Dynamic;$/;"	v
val	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IconHelper.hx	/^			var val = data[idx * 4 + offset];$/;"	v
val	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var val = littleEndian ? ((ch2 << 8) | ch1) : ((ch1 << 8) | ch2);$/;"	v
val	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var val:Int = readUnsignedByte ();$/;"	v
val	/usr/lib/haxe/std/haxe/ds/ArraySort.hx	/^			var val = a[from + n];$/;"	v
val	/usr/lib/haxe/std/haxe/remoting/LocalConnection.hx	/^		var val : Dynamic;$/;"	v
val	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^						var val = str.substr(start+1,p-start-1);$/;"	v
val	/usr/lib/haxe/std/neko/Web.hx	/^					var val = StringTools.urlDecode(reg.matched(4));$/;"	v
val	/usr/lib/haxe/std/neko/Web.hx	/^			var val = reg.matched(1);$/;"	v
valid	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2AABB.hx	/^		var valid:Bool = dX >= 0.0 && dY >= 0.0;$/;"	v
valid	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLObject.hx	/^    public var valid (get, null) : Bool;$/;"	v
valid	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var valid = false;$/;"	v
valid	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLObject.hx	/^	public var valid (get, null):Bool;$/;"	v
valid_archs	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^		var valid_archs = new Array <String> ();$/;"	v
validate	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DynamicTreeBroadPhase.hx	/^	public function validate():Void$/;"	f
validate	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/IBroadPhase.hx	/^	function validate():Void;$/;"	f
validate	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^	private function validate():Bool$/;"	f
validate	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^	public function validate() : Void$/;"	f
validate	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^	public static function validate (project:HXProject):{ errors:Array<String>, warnings:Array<String> } {$/;"	f
validate	/usr/lib/haxe/std/haxe/Utf8.hx	/^	public static inline function validate( s : String ) : Bool {$/;"	f
validateProgram	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function validateProgram (program:GLProgram):Void;$/;"	f
validateProgram	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function validateProgram (program:GLProgram):Void {$/;"	f
validateProgram	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function validateProgram (program:GLProgram):Void {$/;"	f
validateProgram	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function validateProgram(program:GLProgram):Void $/;"	f
validateProgram	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function validateProgram(program:GLProgram):Void;$/;"	f
value	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2DistanceProxy.hx	/^			var value:Float = m_vertices[i].x * d.x + m_vertices[i].y * d.y;$/;"	v
value	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^			var value:Float = m_vertices[i].x * d.x + m_vertices[i].y * d.y;$/;"	v
value	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public var value:Float;$/;"	v
value	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLRequestHeader.hx	/^	public var value : String;$/;"	v
value	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^			var value = [];$/;"	v
value	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^			var value = defines.get (key);$/;"	v
value	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^			var value = haxedefs.get (key);$/;"	v
value	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^							var value = "";$/;"	v
value	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^							var value = substitute (element.att.resolve (attribute));$/;"	v
value	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^						var value = "";$/;"	v
value	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^					var value = substitute (element.att.resolve (attribute));$/;"	v
value	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^			var value = element.x.get ("if");$/;"	v
value	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^			var value = substitute (element.att.resolve (attribute));$/;"	v
value	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^			var value = substitute (element.att.unless);$/;"	v
value	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^		var value = lime_font_get_glyph_metrics (src, glyph);$/;"	v
value	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^							var value = split[1];$/;"	v
value	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CPPHelper.hx	/^					var value = project.haxedefs.get (key);$/;"	v
value	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/CPPHelper.hx	/^			var value = project.haxedefs.get (key);$/;"	v
value	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ObjectHelper.hx	/^			var value = Reflect.field (source, field);$/;"	v
value	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var value = "";$/;"	v
value	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^		var value = readUTFBytes (length);$/;"	v
value	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^						var value = Type.createEnum (Architecture, name);$/;"	v
value	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^					var value = config.defines.get (define);$/;"	v
value	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^								var value = split[1];$/;"	v
value	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^			var value = "";$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Assets.hx	/^		var value = Type.resolveEnum (name);$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Memory.hx	/^		var value:T = action ();$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^			var value = this.data[0];$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^		var value = -1;$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^		var value = new Array ();$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^		var value = null;$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Sampler.hx	/^	public var value:Int;$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Assets.hx	/^		var value = Type.resolveEnum (name);$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsPath.hx	/^		var value = new Array<Float> ();		$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsPath.hx	/^		var value = new Array<Int> ();$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^		var value = Keyboard.convertKeyCode (keyCode);$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/HybridStage.hx	/^		var value = deltaY > 0 ? 4 : 3;$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^				var value:Float = event.value \/ 32767; \/\/ Range: -32768 to 32767$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^			var value = event.value;$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/SharedObject.hx	/^			var value = Type.resolveClass (name);$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^		var value = "AND";$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^		var value = "IOS";$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^		var value = "LNX";$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^		var value = "MAC";$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^		var value = "OFL";$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^		var value = "QNX";$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^		var value = "WIN";$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var value = bigEndian ? ((ch1 << 8) | ch2) : ((ch2 << 8) | ch1);$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^		var value:Int = readUnsignedByte ();$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLRequestHeader.hx	/^	public var value:String;$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^		var value = "AND";$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^		var value = "IOS";$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^		var value = "LNX";$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^		var value = "MAC";$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^		var value = "MOZ";$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^		var value = "OFL";$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^		var value = "QNX";$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^		var value = "WEB";$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^		var value = "WIN";$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextField.hx	/^		var value:String = text;$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/ui/GameInputControl.hx	/^	public var value (default, null):Float;$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^		var value = "";$/;"	v
value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^		var value = readUTFBytes (length);$/;"	v
value	/usr/lib/haxe/std/haxe/ds/BalancedTree.hx	/^	public var value : V;$/;"	v
value	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^			var value = Reflect.field(v,f);$/;"	v
value	/usr/lib/haxe/std/neko/vm/Tls.hx	/^	public var value(get,set) : T;$/;"	v
valueDest	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^				var valueDest = Reflect.field (destination, field);$/;"	v
valueDest	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^			var valueDest = Reflect.field (bucket, node);$/;"	v
valueSource	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ConfigData.hx	/^				var valueSource = Reflect.field (source, field);$/;"	v
values	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var values = new Array <String> ();$/;"	v
values	/usr/lib/haxe/std/haxe/macro/Expr.hx	/^	var values : Array<Expr>;$/;"	v
values	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var values = new List();$/;"	v
varMatch	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^	private static var varMatch = new EReg ("\\\\${(.*?)}", "");$/;"	v
variableName	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/StringHelper.hx	/^		var variableName = "";$/;"	v
vars	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequest.hx	/^			var vars:URLVariables = data;$/;"	v
vars	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequest.hx	/^			var vars:URLVariables = new URLVariables();$/;"	v
vars	/usr/lib/haxe/std/haxe/Http.hx	/^		var vars = new flash.net.URLVariables();$/;"	v
vars	/usr/lib/haxe/std/haxe/Serializer.hx	/^		var vars = xml.factory[0].child("variable");$/;"	v
vc	/usr/lib/haxe/std/sys/db/Manager.hx	/^			var vc : Dynamic = Reflect.field(cache,name);$/;"	v
vec	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^		var vec = lime_cairo_get_current_point (handle);$/;"	v
vec	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var vec = new Vector<Vector4>();$/;"	v
vec	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^		var vec = new VectorData<T> (this.length, this.fixed);$/;"	v
vec	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var vec = new Vector<Vector3D>();$/;"	v
vec	/usr/lib/haxe/std/haxe/ds/Vector.hx	/^		var vec = new Vector<T>(array.length);$/;"	v
vecPos	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^			var vecPos = verts.length \/ 2;$/;"	v
vector	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Float32Array.hx	/^			var vector:openfl.Vector<Float> = cast bufferOrArray;$/;"	v
vector	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Int16Array.hx	/^			var vector:openfl.Vector<Int> = cast bufferOrArray;$/;"	v
vector	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Int32Array.hx	/^			var vector:openfl.Vector<Int> = cast bufferOrArray;$/;"	v
vector	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/Int8Array.hx	/^			var vector:openfl.Vector<Int> = cast bufferOrArray;$/;"	v
vector	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/UInt16Array.hx	/^			var vector:openfl.Vector<Int> = cast bufferOrArray;$/;"	v
vector	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/UInt32Array.hx	/^			var vector:openfl.Vector<Int> = cast bufferOrArray;$/;"	v
vector	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/UInt8Array.hx	/^			var vector:openfl.Vector<Int> = cast bufferOrArray;$/;"	v
vector	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/VectorTest.hx	/^		var vector = Vector.ofArray ([ 10, 2, 4, 5, 9, 1, 7, 3, 6, 8 ]);$/;"	v
vector	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/VectorTest.hx	/^		var vector = Vector.ofArray (array);$/;"	v
vector	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/VectorTest.hx	/^		var vector = new Vector<Bool> ();$/;"	v
vector	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/VectorTest.hx	/^		var vector = new Vector<Float> ();$/;"	v
vector	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/VectorTest.hx	/^		var vector = new Vector<Int> ();$/;"	v
vector	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/VectorTest.hx	/^		var vector = new Vector<Int> (0, true);$/;"	v
vector	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/VectorTest.hx	/^		var vector = new Vector<Int> (1);$/;"	v
vector	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/VectorTest.hx	/^		var vector = new Vector<Int> (10);$/;"	v
vector	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/VectorTest.hx	/^		var vector = new Vector<Int> (10, true);$/;"	v
vector	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/VectorTest.hx	/^		var vector = new Vector<Int> (20);$/;"	v
vector	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/VectorTest.hx	/^		var vector = new Vector<String> ();$/;"	v
vector	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/VectorTest.hx	/^		var vector = vector.splice (0, 2);$/;"	v
vector2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/VectorTest.hx	/^		var vector2 = new Vector<Int> ();$/;"	v
vector2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/VectorTest.hx	/^		var vector2 = vector.slice ();$/;"	v
vector2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/VectorTest.hx	/^		var vector2 = vector.slice (-2);$/;"	v
vector2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/VectorTest.hx	/^		var vector2 = vector.slice (0, 2);$/;"	v
vector2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/VectorTest.hx	/^		var vector2 = vector.slice (2);$/;"	v
vector2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/VectorTest.hx	/^		var vector2 = vector.slice (2, -1);$/;"	v
vector2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/VectorTest.hx	/^		var vector2 = vector.slice (4, 11);$/;"	v
vector2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/VectorTest.hx	/^		var vector2 = vector.splice (-1, -1);$/;"	v
vector2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/VectorTest.hx	/^		var vector2 = vector.splice (-1, 0);$/;"	v
vector2	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/VectorTest.hx	/^		var vector2 = vector.splice (-1, 1);$/;"	v
vector3D	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/geom/Vector3DTest.hx	/^		var vector3D = new Vector3D ();$/;"	v
vectorData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^		var vectorData = new VectorData<T> ();$/;"	v
vectorData	/usr/lib/haxe/lib/openfl/3,0,8/openfl/Vector.hx	/^	private var vectorData:VectorData<T>;$/;"	v
velocity	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2ContactPoint.hx	/^	public var velocity:B2Vec2;$/;"	v
velocity	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/controllers/B2BuoyancyController.hx	/^	public var velocity:B2Vec2;$/;"	v
velocity1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var velocity1:B2Vec2 = B2Math.addVV(linearVelocity, $/;"	v
velocity1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var velocity1:B2Vec2 = body1.getLinearVelocity().copy();$/;"	v
velocity2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var velocity2:B2Vec2 = B2Math.addVV(linearVelocity, $/;"	v
velocity2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var velocity2:B2Vec2 = body2.getLinearVelocity().copy();$/;"	v
velocityBias	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactConstraintPoint.hx	/^	public var velocityBias:Float;$/;"	v
velocityIterations	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2TimeStep.hx	/^	public var velocityIterations:Int = 0;$/;"	v
vendorPrefix	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/RenderSession.hx	/^	public var vendorPrefix:String;$/;"	v
vendors	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Application.hx	/^			var vendors = ['ms', 'moz', 'webkit', 'o'];$/;"	v
ver	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^						var ver = extract_version.matched (1);$/;"	v
ver	/usr/lib/haxe/std/neko/Web.hx	/^		var ver = untyped get_env("MOD_NEKO".__s);$/;"	v
verbose	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/LogHelper.hx	/^	public static var verbose = false;$/;"	v
verbose	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/net/URLRequest.hx	/^	public var verbose:Bool;$/;"	v
version	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public var version (get, null):Int;$/;"	v
version	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public static var version (get, null):Int;$/;"	v
version	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static var version (get, null):Int;$/;"	v
version	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GLObject.hx	/^    var version:Int;$/;"	v
version	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURL.hx	/^	public static function version ():String {$/;"	f
version	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthClient.hx	/^	public var version:OAuthVersion;$/;"	v
version	/usr/lib/haxe/lib/lime/2,4,3/lime/net/oauth/OAuthRequest.hx	/^	public var version:OAuthVersion = V1;$/;"	v
version	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^							var version = getHaxelibVersion (haxelib);$/;"	v
version	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^						var version = "0.0.0";$/;"	v
version	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^		var version = haxelib.version;$/;"	v
version	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Haxelib.hx	/^	public var version:String;$/;"	v
version	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^						var version = "";$/;"	v
version	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^					var version = Std.parseFloat (substitute (element.att.resolve ("min-swf-version")));$/;"	v
version	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^						var version = "";$/;"	v
version	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^			var version = 1;$/;"	v
version	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	private var version:String;$/;"	v
version	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^				var version = i.readByte();$/;"	v
version	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var version = i.readUInt16();$/;"	v
version	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/FrameHeader.hx	/^    public var version(default, null):MpegVersion;$/;"	v
version	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var version = versions[versionIndex];$/;"	v
version	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Header.hx	/^	public var version:Int;$/;"	v
version	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/assembler/Part.hx	/^	public var version:Int;$/;"	v
version	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/Lib.hx	/^	static public var version (default, null):String;$/;"	v
version	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static var version(get_version, null):Int;$/;"	v
version	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GLObject.hx	/^	private var version:Int;$/;"	v
version	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/Capabilities.hx	/^	public static var version (get, null):String; \/\/ TODO$/;"	v
version	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/Capabilities.hx	/^	public static var version (get, null):String;$/;"	v
version	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static var version(get_version, null):Int;$/;"	v
version	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^				var version = i.readByte();$/;"	v
version	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var version = i.readUInt16();$/;"	v
version1Bitrates	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    static var version1Bitrates = [$/;"	v
version2Bitrates	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    static var version2Bitrates = [$/;"	v
versionFile	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^			var versionFile = PathHelper.combine (project.app.path, ".build");$/;"	v
versionIndex	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^        var versionIndex = (b >> 3) & 0x3;$/;"	v
versionInfo	/usr/lib/haxe/lib/lime/2,4,3/lime/net/curl/CURL.hx	/^	public static function versionInfo (type:CURLVersion):String {$/;"	f
versionString	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/Cairo.hx	/^	public static var versionString (get, null):String;$/;"	v
versions	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    static var versions = [ MpegVersion.Version25, null, MpegVersion.Version2, MpegVersion.Version1 ];$/;"	v
vertIndex1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var vertIndex1:Int = normalIndex;$/;"	v
vertIndex2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var vertIndex2:Int = vertIndex1 + 1 < vertexCount?vertIndex1 + 1:0;$/;"	v
vertPos	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^			var vertPos = Std.int (verts.length \/ 2);$/;"	v
vertPos	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^			var vertPos = verts.length \/ 2;$/;"	v
vertex	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Distance.hx	/^		var vertex:B2SimplexVertex = vertices[simplex.m_count];$/;"	v
vertexArray	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^	public var vertexArray:Float32Array;$/;"	v
vertexArray	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var vertexArray:VertexArray;$/;"	v
vertexArray	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	var vertexArray:VertexArray;$/;"	v
vertexArraySize	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	var vertexArraySize:Int;$/;"	v
vertexAttrib1f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function vertexAttrib1f (indx:Int, x:Float):Void;$/;"	f
vertexAttrib1f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function vertexAttrib1f (indx:Int, x:Float):Void {$/;"	f
vertexAttrib1f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function vertexAttrib1f (indx:Int, x:Float):Void {$/;"	f
vertexAttrib1f	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function vertexAttrib1f(indx:Int, x:Float):Void $/;"	f
vertexAttrib1f	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function vertexAttrib1f(indx:Int, x:Float):Void;$/;"	f
vertexAttrib1fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function vertexAttrib1fv (indx:Int, values:lime.utils.Float32Array):Void;$/;"	f
vertexAttrib1fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function vertexAttrib1fv (indx:Int, values:Float32Array):Void {$/;"	f
vertexAttrib1fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function vertexAttrib1fv (indx:Int, values:Float32Array):Void {$/;"	f
vertexAttrib1fv	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function vertexAttrib1fv(indx:Int, values:Float32Data):Void $/;"	f
vertexAttrib1fv	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function vertexAttrib1fv(indx:Int, values:Float32Array):Void;$/;"	f
vertexAttrib2f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function vertexAttrib2f (indx:Int, x:Float, y:Float):Void;$/;"	f
vertexAttrib2f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function vertexAttrib2f (indx:Int, x:Float, y:Float):Void {$/;"	f
vertexAttrib2f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function vertexAttrib2f (indx:Int, x:Float, y:Float):Void {$/;"	f
vertexAttrib2f	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function vertexAttrib2f(indx:Int, x:Float, y:Float):Void $/;"	f
vertexAttrib2f	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function vertexAttrib2f(indx:Int, x:Float, y:Float):Void;$/;"	f
vertexAttrib2fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function vertexAttrib2fv (indx:Int, values:lime.utils.Float32Array):Void;$/;"	f
vertexAttrib2fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function vertexAttrib2fv (indx:Int, values:Float32Array):Void {$/;"	f
vertexAttrib2fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function vertexAttrib2fv (indx:Int, values:Float32Array):Void {$/;"	f
vertexAttrib2fv	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function vertexAttrib2fv(indx:Int, values:Float32Data):Void $/;"	f
vertexAttrib2fv	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function vertexAttrib2fv(indx:Int, values:Float32Array):Void;$/;"	f
vertexAttrib3f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function vertexAttrib3f (indx:Int, x:Float, y:Float, z:Float):Void;$/;"	f
vertexAttrib3f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function vertexAttrib3f (indx:Int, x:Float, y:Float, z:Float):Void {$/;"	f
vertexAttrib3f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function vertexAttrib3f (indx:Int, x:Float, y:Float, z:Float):Void {$/;"	f
vertexAttrib3f	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function vertexAttrib3f(indx:Int, x:Float, y:Float, z:Float):Void $/;"	f
vertexAttrib3f	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function vertexAttrib3f(indx:Int, x:Float, y:Float, z:Float):Void;$/;"	f
vertexAttrib3fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function vertexAttrib3fv (indx:Int, values:lime.utils.Float32Array):Void;$/;"	f
vertexAttrib3fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function vertexAttrib3fv (indx:Int, values:Float32Array):Void {$/;"	f
vertexAttrib3fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function vertexAttrib3fv (indx:Int, values:Float32Array):Void {$/;"	f
vertexAttrib3fv	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function vertexAttrib3fv(indx:Int, values:Float32Data):Void $/;"	f
vertexAttrib3fv	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function vertexAttrib3fv(indx:Int, values:Float32Array):Void;$/;"	f
vertexAttrib4f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function vertexAttrib4f (indx:Int, x:Float, y:Float, z:Float, w:Float):Void;$/;"	f
vertexAttrib4f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function vertexAttrib4f (indx:Int, x:Float, y:Float, z:Float, w:Float):Void {$/;"	f
vertexAttrib4f	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function vertexAttrib4f (indx:Int, x:Float, y:Float, z:Float, w:Float):Void {$/;"	f
vertexAttrib4f	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function vertexAttrib4f(indx:Int, x:Float, y:Float, z:Float, w:Float):Void $/;"	f
vertexAttrib4f	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function vertexAttrib4f(indx:Int, x:Float, y:Float, z:Float, w:Float):Void;$/;"	f
vertexAttrib4fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function vertexAttrib4fv (indx:Int, values:lime.utils.Float32Array):Void;$/;"	f
vertexAttrib4fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function vertexAttrib4fv (indx:Int, values:Float32Array):Void {$/;"	f
vertexAttrib4fv	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function vertexAttrib4fv (indx:Int, values:Float32Array):Void {$/;"	f
vertexAttrib4fv	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function vertexAttrib4fv(indx:Int, values:Float32Data):Void $/;"	f
vertexAttrib4fv	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function vertexAttrib4fv(indx:Int, values:Float32Array):Void;$/;"	f
vertexAttribPointer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function vertexAttribPointer (indx:Int, size:Int, type:Int, normalized:Bool, stride:Int, offset:Int):Void;$/;"	f
vertexAttribPointer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function vertexAttribPointer (indx:Int, size:Int, type:Int, normalized:Bool, stride:Int, offset:Int):Void {$/;"	f
vertexAttribPointer	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function vertexAttribPointer (indx:Int, size:Int, type:Int, normalized:Bool, stride:Int, offset:Int):Void {$/;"	f
vertexAttribPointer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function vertexAttribPointer(indx:Int, size:Int, type:Int, normalized:Bool, stride:Int, offset:Int):Void $/;"	f
vertexAttribPointer	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function vertexAttribPointer(indx:Int, size:Int, type:Int, normalized:Bool, stride:Int, offset:Int):Void;$/;"	f
vertexAttribute	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^	private static var vertexAttribute:Int;$/;"	v
vertexBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^	public var vertexBuffer:GLBuffer;$/;"	v
vertexBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^	private static var vertexBuffer:GLBuffer;$/;"	v
vertexBuffer	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^		var vertexBuffer = new VertexBuffer3D (GL.createBuffer (), numVertices, data32PerVertex);$/;"	v
vertexBuffersCreated	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	private var vertexBuffersCreated:Array<VertexBuffer3D>; \/\/ to keep track of stuff to dispose when calling dispose$/;"	v
vertexCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var vertexCount:Int = polygon.m_vertexCount;$/;"	v
vertexCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^				var vertexCount:Int = poly.getVertexCount();$/;"	v
vertexCount	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var vertexCount: Int = polygon.m_vertexCount;$/;"	v
vertexCount	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBridge.hx	/^				var vertexCount:Int;$/;"	v
vertexShader	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/GLUtils.hx	/^		var vertexShader = compileShader (vertexSource, GL.VERTEX_SHADER);$/;"	v
vertexShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/AbstractShader.hx	/^		var vertexShader = AbstractShader.CompileVertexShader (gl, vertexSrc);$/;"	v
vertexShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/Shader.hx	/^		var vertexShader = Shader.compileShader(gl, vertexSrc, gl.VERTEX_SHADER);$/;"	v
vertexShader	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^		var vertexShader = GL.createShader (GL.VERTEX_SHADER);$/;"	v
vertexShaderSource	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^		var vertexShaderSource = "$/;"	v
vertexSrc	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/AbstractShader.hx	/^	public var vertexSrc:Array<String>;$/;"	v
vertexSrc	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders2/Shader.hx	/^	public var vertexSrc:Array<String>;$/;"	v
vertical	/usr/lib/haxe/lib/lime/2,4,3/lime/text/TextDirection.hx	/^	public var vertical (get, never):Bool;$/;"	v
verticalBearing	/usr/lib/haxe/lib/lime/2,4,3/lime/text/GlyphMetrics.hx	/^	public var verticalBearing:Vector2;$/;"	v
vertices	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var vertices:Array <B2Vec2> = polygon.m_vertices;$/;"	v
vertices	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Distance.hx	/^	var vertices:Array <B2SimplexVertex> = simplex.m_vertices;$/;"	v
vertices	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^	var vertices:Array <B2SimplexVertex> = m_vertices;$/;"	v
vertices	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^				var vertices:Array <B2Vec2> = new Array <B2Vec2> ();$/;"	v
vertices	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2PolyAndEdgeContact.hx	/^		var vertices: Array = polygon.m_vertices;$/;"	v
vertices	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestBridge.hx	/^				var vertices:Array<B2Vec2> = new Array();$/;"	v
vertices	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var vertices:Vector<Float> = cast args[0];$/;"	v
vertices	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/S3DView.hx	/^		var vertices = [$/;"	v
vertices	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^			var vertices = sheet.adjustLen (sheet.__vertices, itemCount * 8); $/;"	v
vertices1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var vertices1:Array <B2Vec2> = poly1.m_vertices;$/;"	v
vertices2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var vertices2:Array <B2Vec2> = poly2.m_vertices;$/;"	v
verts	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^			var verts = fill.verts;$/;"	v
verts	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var verts = fill.verts;$/;"	v
verts	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var verts = line.verts;$/;"	v
verts	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var verts:Float32Array;$/;"	v
verts	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^	public var verts:Array<Float>;$/;"	v
vertsLength	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var vertsLength = fill.glLength * fill.stride;$/;"	v
vi	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^					var vi = avl[j];$/;"	v
vi	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^				var vi:Int = 0;$/;"	v
vibrate	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/feedback/Haptic.hx	/^	public static function vibrate (period:Int = 0, duration:Int = 1000):Void {$/;"	f
videoCodec	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/NetStream.hx	/^	public var videoCodec:Int;$/;"	v
view	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	public var view:Dynamic;$/;"	v
view	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^					var view = glVerts.subarray(0, end);$/;"	v
view	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^			var view = positions.subarray(0, writtenVertexBytes);$/;"	v
viewport	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	function viewport (x:Int, y:Int, width:Int, height:Int):Void;$/;"	f
viewport	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/GLRenderContext.hx	/^	public inline function viewport (x:Int, y:Int, width:Int, height:Int):Void {$/;"	f
viewport	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/opengl/GL.hx	/^	public static inline function viewport (x:Int, y:Int, width:Int, height:Int):Void {$/;"	f
viewport	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/gl/GL.hx	/^	public static inline function viewport(x:Int, y:Int, width:Int, height:Int):Void $/;"	f
viewport	/usr/lib/haxe/lib/openfl/3,0,8/tests/test/openfl/gl/GLTest.hx	/^	static function viewport(x:Int, y:Int, width:Int, height:Int):Void;$/;"	f
visible	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var visible:Bool;$/;"	v
visible	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public var visible (get, set):Bool;$/;"	v
visible	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	public var visible (get, set):Bool;$/;"	v
visible	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage3D.hx	/^	public var visible:Bool; \/\/ TODO$/;"	v
vlen	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^		var vlen = Std.int(vertices.length \/ 2);$/;"	v
vmVersion	/usr/lib/haxe/lib/openfl/3,0,8/openfl/system/System.hx	/^	public static var vmVersion (get, null):String;$/;"	v
vn	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^		var vn:Float;$/;"	v
vn1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var vn1:Float = dv1X * normalX + dv1Y * normalY;$/;"	v
vn2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^				var vn2:Float = dv2X * normalX + dv2Y * normalY;$/;"	v
volume	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/Sound.hx	/^	public var volume:Float;$/;"	v
volume	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/SoundTransform.hx	/^	public var volume:Float;$/;"	v
volumePath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^				var volumePath = "";$/;"	v
vpHeight	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	private var vpHeight:Int = 0;$/;"	v
vpWidth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	private var vpWidth:Int = 0;$/;"	v
vpX	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	private var vpX:Int = 0;$/;"	v
vpY	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/GLRenderer.hx	/^	private var vpY:Int = 0;$/;"	v
vs	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var vs:Array <B2Vec2> = [new B2Vec2(), new B2Vec2(), new B2Vec2(), new B2Vec2()];$/;"	v
vt	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^		var vt:Float;$/;"	v
vt	/usr/lib/haxe/std/haxe/Serializer.hx	/^		var vt = untyped __js__("typeof")(v);$/;"	v
vup	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var vup = up.clone();$/;"	v
vup	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var vup = up.clone();$/;"	v
vxs	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestStack.hx	/^			var vxs:Array<B2Vec2> = [new B2Vec2(0, 0),$/;"	v
w	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SimplexVertex.hx	/^	public var w:B2Vec2;		\/\/ wB - wA$/;"	v
w	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^		var w = right - left;$/;"	v
w	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^				var w = components[1].w;$/;"	v
w	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	public var w:Float;$/;"	v
w	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^				var w = Math.floor(bounds.width + 0.5);$/;"	v
w	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^			var w = ( -__positionX + 3 * controlX1 + anchorX - 3 * controlX2 );$/;"	v
w	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^			var w = ( -__positionX + 3 * controlY1 + anchorY - 3 * controlY2 );$/;"	v
w	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^				var w = components[1].w;$/;"	v
w	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Utils3D.hx	/^		var w:Float = v.x * n[3] + v.y * n[7] + v.z * n[11] + n[15];$/;"	v
w	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^	public var w:Float;$/;"	v
w	/usr/lib/haxe/std/haxe/crypto/Sha1.hx	/^		var w = new Array<Int>();$/;"	v
w	/usr/lib/haxe/std/neko/net/Poll.hx	/^			var w = __dollar__amake(write.length);$/;"	v
w0	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var w0:Float, w1:Float, h0:Float, h1:Float;$/;"	v
w1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^	var w1:B2Vec2 = m_v1.w;$/;"	v
w1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var w1:Float = bA.m_angularVelocity;$/;"	v
w1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var w1:Float = bA.m_angularVelocity;$/;"	v
w1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^		var w1:Float = bA.m_angularVelocity;$/;"	v
w1e12	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^	var w1e12:Float = B2Math.dot(w1, e12);$/;"	v
w1e13	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^	var w1e13:Float = B2Math.dot(w1, e13);$/;"	v
w2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^	var w2:B2Vec2 = m_v2.w;$/;"	v
w2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var w2:Float = bB.m_angularVelocity;$/;"	v
w2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var w2:Float = bB.m_angularVelocity;$/;"	v
w2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2RevoluteJoint.hx	/^		var w2:Float = bB.m_angularVelocity;$/;"	v
w2e12	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^	var w2e12:Float = B2Math.dot(w2, e12);$/;"	v
w2e23	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^	var w2e23:Float = B2Math.dot(w2, e23);$/;"	v
w3	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^	var w3:B2Vec2 = m_v3.w;$/;"	v
w3e13	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^	var w3e13:Float = B2Math.dot(w3, e13);$/;"	v
w3e23	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^	var w3e23:Float = B2Math.dot(w3, e23);$/;"	v
wA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SimplexVertex.hx	/^	public var wA:B2Vec2;		\/\/ support point in proxyA$/;"	v
wA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var wA:Float = bodyA.m_angularVelocity;$/;"	v
wA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^		var wA:Float = bA.m_angularVelocity;$/;"	v
wA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^		var wA:Float = bA.m_angularVelocity;$/;"	v
wALocal	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^	var wALocal:B2Vec2;$/;"	v
wB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2SimplexVertex.hx	/^	public var wB:B2Vec2;		\/\/ support point in proxyB$/;"	v
wB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^			var wB:Float = bodyB.m_angularVelocity;$/;"	v
wB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2FrictionJoint.hx	/^		var wB:Float = bB.m_angularVelocity;$/;"	v
wB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2WeldJoint.hx	/^		var wB:Float = bB.m_angularVelocity;$/;"	v
wBLocal	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^	var wBLocal:B2Vec2;$/;"	v
wait	/usr/lib/haxe/std/neko/vm/Lock.hx	/^	public function wait( ?timeout : Float ) : Bool {$/;"	f
waitForRead	/usr/lib/haxe/std/sys/net/Socket.hx	/^	function waitForRead() : Void;$/;"	f
waiting	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ProcessHelper.hx	/^				var waiting = true;$/;"	v
wake	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/ManagedStage.hx	/^		var wake = super.__doProcessStageEvent (event);$/;"	v
wall	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^			var wall:B2PolygonShape= new B2PolygonShape();$/;"	v
wallB	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^			var wallB:B2Body;$/;"	v
wallBd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^			var wallBd:B2BodyDef = new B2BodyDef();$/;"	v
warmStarting	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2TimeStep.hx	/^	public var warmStarting:Bool;$/;"	v
warn	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/LogHelper.hx	/^	public static function warn (message:String, verboseMessage:String = "", allowRepeat:Bool = false):Void {$/;"	f
warning	/usr/lib/haxe/std/haxe/macro/Context.hx	/^	public static function warning( msg : String, pos : Position ) {$/;"	f
warning about the override of the account	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		\/\/ TODO warning about the override of the account$/;"	i
warnings	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var warnings:Array<String> = [];$/;"	v
warp	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashMouse.hx	/^	public static function warp (x:Int, y:Int, window:Window):Void {$/;"	f
warp	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Mouse.hx	/^	public static function warp (x:Int, y:Int, window:Window):Void {$/;"	f
warp	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeMouse.hx	/^	public static function warp (x:Int, y:Int, window:Window):Void {$/;"	f
warp	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Mouse.hx	/^	public static function warp (x:Int, y:Int, window:Window = null):Void {$/;"	f
wasTouching	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^		var wasTouching:Bool = (m_flags & e_touchingFlag) == e_touchingFlag;$/;"	v
wav	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^					var wav = r.read ();$/;"	v
wav	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/media/Sound.hx	/^		var wav = new ByteArray ();$/;"	v
we need to store the data in the same field, which is typed as t while it is actually a haxe.io.Bytes	/usr/lib/haxe/std/sys/db/RecordMacros.hx	/^			\/\/ note : we need to store the data in the same field, which is typed as t while it is actually a haxe.io.Bytes$/;"	i
we prefer [inline] over [@:generic] here since we want to inline the comparison function as well	/usr/lib/haxe/std/haxe/ds/ListSort.hx	/^	\/\/ Note : we prefer [inline] over [@:generic] here since we want to inline the comparison function as well$/;"	i
we want this predicate without division:	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^				\/\/ Note: we want this predicate without division:$/;"	i
weakRef	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/WeakRef.hx	/^	private var weakRef:Int;$/;"	v
webOSLinuxSDKPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var webOSLinuxSDKPath = "http:\/\/cdn.downloads.palm.com\/sdkdownloads\/3.0.5.676\/sdkBinaries\/palm-sdk_3.0.5-svn528736-pho676_i386.deb";$/;"	v
webOSLinuxX64NovacomPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var webOSLinuxX64NovacomPath = "http:\/\/cdn.downloads.palm.com\/sdkdownloads\/3.0.4.669\/sdkBinaries\/palm-novacom_1.0.80_amd64.deb";$/;"	v
webOSLinuxX86NovacomPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var webOSLinuxX86NovacomPath = "http:\/\/cdn.downloads.palm.com\/sdkdownloads\/3.0.4.669\/sdkBinaries\/palm-novacom_1.0.80_i386.deb";$/;"	v
webOSMacSDKPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var webOSMacSDKPath = "http:\/\/cdn.downloads.palm.com\/sdkdownloads\/3.0.5.676\/sdkBinaries\/Palm_webOS_SDK.3.0.5.676.dmg";$/;"	v
webOSWindowsX64SDKPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var webOSWindowsX64SDKPath = "http:\/\/cdn.downloads.palm.com\/sdkdownloads\/3.0.5.676\/sdkBinaries\/HP_webOS_SDK-Win-3.0.5-676-x64.exe";$/;"	v
webOSWindowsX86SDKPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var webOSWindowsX86SDKPath = "http:\/\/cdn.downloads.palm.com\/sdkdownloads\/3.0.5.676\/sdkBinaries\/HP_webOS_SDK-Win-3.0.5-676-x86.exe";$/;"	v
webgl	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Renderer.hx	/^			var webgl = null;$/;"	v
webgl	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Renderer.hx	/^			var webgl:RenderingContext = cast parent.window.backend.canvas.getContextWebGL (options);$/;"	v
webify	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/HTML5Helper.hx	/^		var webify = PathHelper.findTemplate (templatePaths, "bin\/webify" + suffix);$/;"	v
wheel	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var wheel = 0;$/;"	v
wheelAnchor	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestTheoJansen.hx	/^		var wheelAnchor:B2Vec2;$/;"	v
whichAptGet	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var whichAptGet = ProcessHelper.runProcess ("", "which", ["apt-get"], true, true, true);$/;"	v
whichPacman	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var whichPacman = ProcessHelper.runProcess ("", "which", ["pacman"], true, true, true);$/;"	v
whichYum	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^		var whichYum = ProcessHelper.runProcess ("", "which", ["yum"], true, true, true);$/;"	v
wideLineTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsPath.hx	/^	public function wideLineTo (x:Float, y:Float):Void {$/;"	f
wideLineTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsPath.hx	/^	public function wideLineTo (x:Float, y:Float):Void {$/;"	f
wideMoveTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsPath.hx	/^	public function wideMoveTo (x:Float, y:Float):Void {$/;"	f
wideMoveTo	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsPath.hx	/^	public function wideMoveTo (x:Float, y:Float):Void {$/;"	f
width	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public var width:Int;$/;"	v
width	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Preloader.hx	/^			var width = node.offsetWidth;$/;"	v
width	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var width:Float;$/;"	v
width	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public var width:Int;$/;"	v
width	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/ImageBuffer.hx	/^	public var width:Int;$/;"	v
width	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/cairo/CairoSurface.hx	/^	public var width (get, never):Int;$/;"	v
width	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/utils/ImageDataUtil.hx	/^			var width = image.buffer.width;$/;"	v
width	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	public var width:Float;$/;"	v
width	/usr/lib/haxe/lib/lime/2,4,3/lime/project/Icon.hx	/^	public var width:Int;$/;"	v
width	/usr/lib/haxe/lib/lime/2,4,3/lime/project/SplashScreen.hx	/^	public var width:Int;$/;"	v
width	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^			var width = bytes.readUnsignedInt ();$/;"	v
width	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^			var width, height;$/;"	v
width	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var width (get, set):Int;$/;"	v
width	/usr/lib/haxe/lib/lime/2,4,3/tools/SVGExport.hx	/^				var width = Std.parseInt (words[2]);$/;"	v
width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/AbstractRenderer.hx	/^	public var width:Int;$/;"	v
width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^				var width, height, data;$/;"	v
width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var width = 0;$/;"	v
width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^			var width = 0.0;$/;"	v
width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		var width = 0.0;$/;"	v
width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DefaultShader.hx	/^				var width = (data.width != #if !neko 0 #else null #end) ? data.width : 512;$/;"	v
width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	public var width:Float;$/;"	v
width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^	public var width:Int;$/;"	v
width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterTexture.hx	/^	public var width:Int;$/;"	v
width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var width = path.line.width \/ 2;$/;"	v
width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var width = points[2];$/;"	v
width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var width = rectData[2];$/;"	v
width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^		var width:Int = bitmap.width;$/;"	v
width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^	public var width (get, null):Int;$/;"	v
width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public var width (get, set):Float;$/;"	v
width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/LoaderInfo.hx	/^	public var width (default, null):Int;$/;"	v
width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	public var width:Float;$/;"	v
width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/system/ScreenMode.hx	/^	public var width:Int;$/;"	v
width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextLineMetrics.hx	/^	public var width:Float;$/;"	v
width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public var width (default, null):Int;$/;"	v
width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	public var width (get, set):Float;$/;"	v
width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/LoaderInfo.hx	/^	public var width (default, null):Int;$/;"	v
width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/textures/TextureBase.hx	/^	public var width:Int;$/;"	v
width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^	public var width:Float;$/;"	v
width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^   var width:Int;$/;"	v
width	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextLineMetrics.hx	/^	public var width:Float;$/;"	v
width	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/NMEPreloader.hx	/^		var width = ::WIN_WIDTH::;$/;"	v
width	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/NMEPreloader.hx	/^		var width = getWidth () - x * 2;$/;"	v
width	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/NMEPreloader.hx	/^		var width = ::WIN_WIDTH::;$/;"	v
width	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/NMEPreloader.hx	/^		var width = getWidth () - x * 2;$/;"	v
width	Source/Env.hx	/^    public static var width:Float;$/;"	v
widthPos	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^						var widthPos = getTextWidth (textField, text.substring (lowPos, highPos));$/;"	v
width_yy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/BitmapData.hx	/^			var width_yy:Int, position:Int, pixelMask:Int, pixelValue, i, test;$/;"	v
width_yy	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^			var width_yy:Int, position:Int, pixelMask:Int, pixelValue, i, test;$/;"	v
widths	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^		var widths = [];$/;"	v
willTrigger	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public function willTrigger (type:String):Bool { return false; };$/;"	f
willTrigger	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/EventDispatcher.hx	/^	public function willTrigger (type:String):Bool {$/;"	f
willTrigger	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/events/IEventDispatcher.hx	/^	public function willTrigger (type:String):Bool;$/;"	f
willTrigger	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/EventDispatcher.hx	/^	public function willTrigger (type:String):Bool {$/;"	f
willTrigger	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/IEventDispatcher.hx	/^	public function willTrigger (type:String):Bool;$/;"	f
winding	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^	public var winding:WindingRule = WindingRule.EVEN_ODD;$/;"	v
winding	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/GraphicsPath.hx	/^	public var winding:GraphicsPathWinding;$/;"	v
winding	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/GraphicsPath.hx	/^	public var winding:GraphicsPathWinding; \/* note: currently ignored *\/$/;"	v
window	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashApplication.hx	/^			var window = new Window (config);$/;"	v
window	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Application.hx	/^			var window = new Window (config);$/;"	v
window	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^			var window = new Window (config);$/;"	v
window	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public var window (get, null):Window;$/;"	v
window	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Renderer.hx	/^	public var window:Window;$/;"	v
window	/usr/lib/haxe/lib/lime/2,4,3/tests/runtime/test/lime/WindowTest.hx	/^		var window = new Window ();$/;"	v
window	/usr/lib/haxe/lib/lime/2,4,3/tests/runtime/test/lime/WindowTest.hx	/^		var window = new Window (config);$/;"	v
window	/usr/lib/haxe/std/haxe/zip/InflateImpl.hx	/^	var window : Window;$/;"	v
windowBits	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^			var windowBits = switch (algorithm) {$/;"	v
windowBits	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^			var windowBits = switch (algorithm) {$/;"	v
windowEventInfo	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	private var windowEventInfo = new WindowEventInfo ();$/;"	v
windows	/usr/lib/haxe/lib/lime/2,4,3/lime/app/Application.hx	/^	public var windows (default, null):Array<Window>;$/;"	v
windows	/usr/lib/haxe/lib/lime/2,4,3/lime/project/HXProject.hx	/^	public var windows:Array <WindowData>;$/;"	v
windowsVisualStudioCPPPath	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	private static var windowsVisualStudioCPPPath = "http:\/\/download.microsoft.com\/download\/1\/D\/9\/1D9A6C0E-FC89-43EE-9658-B9F0E3A76983\/vc_web.exe";$/;"	v
with	/usr/lib/haxe/std/haxe/macro/TypedExprTools.hx	/^	static function with(e:TypedExpr, ?edef:TypedExprDef, ?t:Type) {$/;"	f
with	/usr/lib/haxe/std/haxe/remoting/AsyncProxy.hx	/^	create a stub class with all public methods forwarding remoting messages over$/;"	c
with	/usr/lib/haxe/std/haxe/remoting/Proxy.hx	/^	create a stub class with all public methods forwarding remoting messages over$/;"	c
withExtension	/usr/lib/haxe/std/haxe/io/Path.hx	/^	public static function withExtension( path, ext ) {$/;"	f
withProgress	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/publish/FirefoxMarketplace.hx	/^		var withProgress = progressMsg != null && progressMsg.length > 0 && data != null;$/;"	v
withoutDirectory	/usr/lib/haxe/std/haxe/io/Path.hx	/^	public static function withoutDirectory( path ) {$/;"	f
withoutExtension	/usr/lib/haxe/std/haxe/io/Path.hx	/^	public static function withoutExtension( path : String ) {$/;"	f
wjd	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCrankGearsPulley.hx	/^				var wjd:B2WeldJointDef = new B2WeldJointDef();$/;"	v
word	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^			var word, newLineIndex, test;$/;"	v
wordWrap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextField.hx	/^	public var wordWrap (get, set):Bool;$/;"	v
words	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^				var words = func.split("::");$/;"	v
words	/usr/lib/haxe/lib/lime/2,4,3/tools/CommandLineTools.hx	/^	private var words:Array <String>;$/;"	v
words	/usr/lib/haxe/lib/lime/2,4,3/tools/SVGExport.hx	/^		var words = new Array<String> ();$/;"	v
words	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^			var words = text.split (" ");$/;"	v
words	/usr/lib/haxe/std/haxe/CallStack.hx	/^				var words = func.split("::");$/;"	v
work	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	public function work( f : Void -> Void ) {$/;"	f
worker	/usr/lib/haxe/std/neko/net/ThreadServer.hx	/^	var worker : neko.vm.Thread;$/;"	v
workingDirectory	/usr/lib/haxe/lib/openfl/3,0,8/script/RunScript.hx	/^		var workingDirectory = args.pop ();$/;"	v
world	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Global.hx	/^	public static var world:B2World;$/;"	v
world	Source/Env.hx	/^    public static var world:B2World;$/;"	v
worldAABB	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^			var worldAABB:B2AABB = new B2AABB();$/;"	v
worldAlpha	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^				var worldAlpha = alpha * parent.__worldAlpha;$/;"	v
worldClip	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^			var worldClip:Rectangle = null;$/;"	v
worldPoint	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var worldPoint:B2Vec2 = new B2Vec2(A.col1.x * localPoint.x + A.col2.x * localPoint.y, $/;"	v
worldQueryWrapper	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		function worldQueryWrapper(proxy:Dynamic):Bool$/;"	f
worldTransform	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var worldTransform = object.__worldTransform.clone();$/;"	v
worldVisible	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^				var worldVisible = (parent.__worldVisible && visible);$/;"	v
world_sprite	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Global.hx	/^	public static var world_sprite:Sprite;$/;"	v
wrap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Destination.hx	/^	public var wrap:Int;$/;"	v
wrap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Sampler.hx	/^	public var wrap:Float;$/;"	v
wrap	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3D.hx	/^	public var wrap:Context3DWrapMode;$/;"	v
wrapCallSite	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^	public static var wrapCallSite:Dynamic->Dynamic;$/;"	v
wrapS	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DefaultShader.hx	/^			var wrapS = (data.wrapS != #if !neko 0 #else null #end) ? data.wrapS : gl.CLAMP_TO_EDGE;$/;"	v
wrapT	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/shaders/DefaultShader.hx	/^			var wrapT = (data.wrapT != #if !neko 0 #else null #end) ? data.wrapT : gl.CLAMP_TO_EDGE;$/;"	v
write	/usr/lib/haxe/std/haxe/Http.hx	/^	function write( str : String ) : Void;$/;"	f
write	/usr/lib/haxe/std/haxe/format/JsonPrinter.hx	/^	function write(k:Dynamic, v:Dynamic) {$/;"	f
write	/usr/lib/haxe/std/haxe/io/Output.hx	/^	public function write( s : Bytes ) : Void {$/;"	f
write	/usr/lib/haxe/std/haxe/xml/Printer.hx	/^	inline function write(input:String) {$/;"	f
write	/usr/lib/haxe/std/haxe/zip/Writer.hx	/^	public function write( files : List<Entry> ) {$/;"	f
write	/usr/lib/haxe/std/sys/io/File.hx	/^	static function write( path : String, binary : Bool = true ) : FileOutput;$/;"	f
write	/usr/lib/haxe/std/sys/net/Socket.hx	/^	function write( content : String ) : Void;$/;"	f
writeBoolean	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public inline function writeBoolean (value:Bool):Void {$/;"	f
writeBoolean	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function writeBoolean (value:Bool):Void {$/;"	f
writeBoolean	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IDataOutput.hx	/^	public function writeBoolean (value:Bool):Void;$/;"	f
writeBoolean	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^	public function writeBoolean( value:Bool ):Void { $/;"	f
writeBoolean	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public inline function writeBoolean (value:Bool):Void {$/;"	f
writeBoolean	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataOutput.hx	/^	function writeBoolean (value:Bool):Void;$/;"	f
writeByte	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function writeByte (value:Int):Void {$/;"	f
writeByte	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	public override function writeByte(c) {$/;"	f
writeByte	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	inline public function writeByte (value:Int):Void {$/;"	f
writeByte	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IDataOutput.hx	/^	public function writeByte (value:Int):Void;$/;"	f
writeByte	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^	public function writeByte( value:Int ):Void { $/;"	f
writeByte	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public function writeByte (value:Int):Void {$/;"	f
writeByte	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataOutput.hx	/^	function writeByte (value:Int):Void;$/;"	f
writeByte	/usr/lib/haxe/std/haxe/io/BytesOutput.hx	/^	override function writeByte(c) {$/;"	f
writeByte	/usr/lib/haxe/std/haxe/io/Output.hx	/^	public function writeByte( c : Int ) : Void {$/;"	f
writeBytes	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function writeBytes (bytes:#if js ByteArray #else Bytes #end, offset:UInt = 0, length:UInt = 0):Void {$/;"	f
writeBytes	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	public override function writeBytes(s,p,l) {$/;"	f
writeBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function writeBytes (bytes:Bytes, offset:Int = 0, length:Int = 0):Void {$/;"	f
writeBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IDataOutput.hx	/^	public function writeBytes (bytes:Bytes, offset:Int = 0, length:Int = 0):Void;$/;"	f
writeBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^	public function writeBytes( bytes:ByteArray, offset : Int = 0, length : Int = 0 ):Void { $/;"	f
writeBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public function writeBytes (bytes:ByteArray, ?offset:UInt = 0, ?length:UInt = 0):Void {$/;"	f
writeBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataOutput.hx	/^	function writeBytes (bytes:ByteArray, offset:Int = 0, length:Int = 0):Void;$/;"	f
writeBytes	/usr/lib/haxe/std/haxe/io/BytesOutput.hx	/^	override function writeBytes( buf : Bytes, pos, len ) : Int {$/;"	f
writeBytes	/usr/lib/haxe/std/haxe/io/Output.hx	/^	public function writeBytes( s : Bytes, pos : Int, len : Int ) : Int {$/;"	f
writeCDR	/usr/lib/haxe/std/haxe/zip/Writer.hx	/^	public function writeCDR() {$/;"	f
writeCache	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Simplex.hx	/^public function writeCache(cache:B2SimplexCache):Void$/;"	f
writeConfig	/usr/lib/haxe/lib/lime/2,4,3/tools/utils/PlatformSetup.hx	/^	public static function writeConfig (path:String, defines:Map <String, String>):Void {$/;"	f
writeDouble	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function writeDouble (x:Float):Void {$/;"	f
writeDouble	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function writeDouble (x:Float):Void {$/;"	f
writeDouble	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IDataOutput.hx	/^	public function writeDouble (value:Float):Void;$/;"	f
writeDouble	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^	public function writeDouble( value:Float ):Void { $/;"	f
writeDouble	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public function writeDouble (x:Float):Void {$/;"	f
writeDouble	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataOutput.hx	/^	function writeDouble (value:Float):Void;$/;"	f
writeDouble	/usr/lib/haxe/std/haxe/io/BytesOutput.hx	/^	override function writeDouble( f : Float ) {$/;"	f
writeDouble	/usr/lib/haxe/std/haxe/io/Output.hx	/^	public function writeDouble( x : Float ) {$/;"	f
writeEntryHeader	/usr/lib/haxe/std/haxe/zip/Writer.hx	/^	public function writeEntryHeader( f : Entry ) {$/;"	f
writeExternal	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IExternalizable.hx	/^	function writeExternal (output:IDataOutput):Void;$/;"	f
writeFile	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function writeFile (path:String):Void {$/;"	f
writeFile	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function writeFile (path:String):Void {$/;"	f
writeFloat	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function writeFloat (x:Float):Void {$/;"	f
writeFloat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function writeFloat (x:Float):Void {$/;"	f
writeFloat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IDataOutput.hx	/^	public function writeFloat (value:Float):Void;$/;"	f
writeFloat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^	public function writeFloat( value:Float ):Void { $/;"	f
writeFloat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public function writeFloat (x:Float):Void {$/;"	f
writeFloat	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataOutput.hx	/^	function writeFloat (value:Float):Void;$/;"	f
writeFloat	/usr/lib/haxe/std/haxe/io/BytesOutput.hx	/^	override function writeFloat( f : Float ) {$/;"	f
writeFloat	/usr/lib/haxe/std/haxe/io/Output.hx	/^	public function writeFloat( x : Float ) {$/;"	f
writeFullBytes	/usr/lib/haxe/std/haxe/io/Output.hx	/^	public function writeFullBytes( s : Bytes, pos : Int, len : Int ) {$/;"	f
writeFunction	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^	private function writeFunction (output:String, size:Int, nmemb:Int):Int {$/;"	f
writeFunction	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^	private function writeFunction (output:String, size:Int, nmemb:Int):Int {$/;"	f
writeIndexes	/usr/lib/haxe/std/neko/net/Poll.hx	/^	public var writeIndexes : ArrayAccess<Int>;$/;"	v
writeInput	/usr/lib/haxe/std/haxe/io/Output.hx	/^	public function writeInput( i : Input, ?bufsize : Int ) {$/;"	f
writeInt	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function writeInt (value:Int):Void {$/;"	f
writeInt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function writeInt (value:Int):Void {$/;"	f
writeInt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IDataOutput.hx	/^	public function writeInt (value:Int):Void;$/;"	f
writeInt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^	public function writeInt( value:Int ):Void { $/;"	f
writeInt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public function writeInt (value:Int):Void {$/;"	f
writeInt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataOutput.hx	/^	function writeInt (value:Int):Void;$/;"	f
writeInt16	/usr/lib/haxe/std/haxe/io/BytesOutput.hx	/^	override function writeInt16( x : Int ) {$/;"	f
writeInt16	/usr/lib/haxe/std/haxe/io/Output.hx	/^	public function writeInt16( x : Int ) {$/;"	f
writeInt24	/usr/lib/haxe/std/haxe/io/Output.hx	/^	public function writeInt24( x : Int ) {$/;"	f
writeInt32	/usr/lib/haxe/std/haxe/io/BytesOutput.hx	/^	override function writeInt32( x : Int ) {$/;"	f
writeInt32	/usr/lib/haxe/std/haxe/io/Output.hx	/^	public function writeInt32( x : Int ) {$/;"	f
writeInt8	/usr/lib/haxe/std/haxe/io/BytesOutput.hx	/^	override function writeInt8( x : Int ) {$/;"	f
writeInt8	/usr/lib/haxe/std/haxe/io/Output.hx	/^	public function writeInt8( x : Int ) {$/;"	f
writeMultiByte	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public inline function writeMultiByte(value: String, charSet: String): Void {$/;"	f
writeMultiByte	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^	public function writeMultiByte( value:String, charSet:String ):Void { $/;"	f
writeMultiByte	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataOutput.hx	/^	function writeMultiByte (value:String, charSet:String):Void;$/;"	f
writeNode	/usr/lib/haxe/std/haxe/xml/Printer.hx	/^	function writeNode(value:Xml, tabs:String) {$/;"	f
writeObject	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^        public function writeObject(object: Dynamic): Void {$/;"	f
writeObject	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataOutput.hx	/^	function writeObject (object:Dynamic):Void;$/;"	f
writeShort	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function writeShort (value:Int):Void {$/;"	f
writeShort	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function writeShort (value:Int):Void {$/;"	f
writeShort	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IDataOutput.hx	/^	public function writeShort (value:Int):Void;$/;"	f
writeShort	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^	public function writeShort( value:Int ):Void { $/;"	f
writeShort	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public function writeShort (value:Int):Void {$/;"	f
writeShort	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataOutput.hx	/^	function writeShort (value:Int):Void;$/;"	f
writeString	/usr/lib/haxe/std/haxe/io/BytesOutput.hx	/^	override function writeString( s : String ) {$/;"	f
writeString	/usr/lib/haxe/std/haxe/io/Output.hx	/^	public function writeString( s : String ) {$/;"	f
writeUInt16	/usr/lib/haxe/std/haxe/io/BytesOutput.hx	/^	override function writeUInt16( x : Int ) {$/;"	f
writeUInt16	/usr/lib/haxe/std/haxe/io/Output.hx	/^	public function writeUInt16( x : Int ) {$/;"	f
writeUInt24	/usr/lib/haxe/std/haxe/io/Output.hx	/^	public function writeUInt24( x : Int ) {$/;"	f
writeUTF	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function writeUTF (value:String):Void {$/;"	f
writeUTF	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function writeUTF (s:String):Void {$/;"	f
writeUTF	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IDataOutput.hx	/^	public function writeUTF (value:String):Void;$/;"	f
writeUTF	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^	public function writeUTF( value:String ):Void { $/;"	f
writeUTF	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public function writeUTF (value:String):Void {$/;"	f
writeUTF	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataOutput.hx	/^	function writeUTF (value:String):Void;$/;"	f
writeUTFBytes	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function writeUTFBytes (value:String):Void {$/;"	f
writeUTFBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function writeUTFBytes(s:String):Void {$/;"	f
writeUTFBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IDataOutput.hx	/^	public function writeUTFBytes (value:String):Void;$/;"	f
writeUTFBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^	public function writeUTFBytes( value:String ):Void { $/;"	f
writeUTFBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public function writeUTFBytes (value:String):Void {$/;"	f
writeUTFBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataOutput.hx	/^	function writeUTFBytes (value:String):Void;$/;"	f
writeUnsignedInt	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function writeUnsignedInt (value:Int):Void {$/;"	f
writeUnsignedInt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	public function writeUnsignedInt (value:Int):Void {$/;"	f
writeUnsignedInt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/IDataOutput.hx	/^	public function writeUnsignedInt (value:Int):Void;$/;"	f
writeUnsignedInt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/Socket.hx	/^	public function writeUnsignedInt( value:Int ):Void { $/;"	f
writeUnsignedInt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public function writeUnsignedInt (value:Int):Void {$/;"	f
writeUnsignedInt	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/IDataOutput.hx	/^	function writeUnsignedInt (value:Int):Void;$/;"	f
writeUnsignedShort	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	public function writeUnsignedShort (value:Int):Void {$/;"	f
writeUnsignedShort	/usr/lib/haxe/lib/openfl/3,0,8/openfl/utils/ByteArray.hx	/^	public function writeUnsignedShort (value:Int):Void {$/;"	f
writeZipDate	/usr/lib/haxe/std/haxe/zip/Writer.hx	/^	function writeZipDate( date : Date ) {$/;"	f
write_uncheck	/usr/lib/haxe/lib/lime/2,4,3/lime/utils/ByteArray.hx	/^	private inline function write_uncheck (byte:Int) {$/;"	f
write_uncheck	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/utils/ByteArray.hx	/^	private inline function write_uncheck (byte:Int):Void {$/;"	f
writedepth	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/Description.hx	/^	public var writedepth:Bool;$/;"	v
writer	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^					var writer = new Writer (output);$/;"	v
writer	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FlashHelper.hx	/^			var writer = new Writer (output);$/;"	v
writer	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/ZipHelper.hx	/^			var writer = new Writer (output);$/;"	v
writtenVertexBytes	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^	var writtenVertexBytes:Int = 0;$/;"	v
wrong value	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display3D/Context3DCompareMode.hx	/^	inline static public var LESS_EQUAL = GL.LEQUAL; \/\/ TODO : wrong value$/;"	i
wrong, should be |=	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/aglsl/AGALTokenizer.hx	/^				\/\/TODO wrong, should be |=  $/;"	i
x	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^					var x:Float;$/;"	v
x	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec2.hx	/^	public var x:Float;$/;"	v
x	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec3.hx	/^	public var x:Float;$/;"	v
x	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCompound.hx	/^			var x:Float;$/;"	v
x	/usr/lib/haxe/lib/lime/2,4,3/haxe/CallStack.hx	/^				var x = s[i++];$/;"	v
x	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashApplication.hx	/^			var x = event.stageX;$/;"	v
x	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^		var x = 0.0;$/;"	v
x	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public var x:Float;$/;"	v
x	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public var x:Int;$/;"	v
x	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var x:Float;$/;"	v
x	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public var x:Float;$/;"	v
x	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^				var x = components[1].x;$/;"	v
x	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^			var x:Float = ain[i], y:Float = ain[i + 1], z:Float = ain[i + 2];$/;"	v
x	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^		var x:Float = v.x, y:Float = v.y, z:Float = v.z;$/;"	v
x	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	public var x:Float;$/;"	v
x	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector2.hx	/^	public var x:Float;$/;"	v
x	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^		var x:Float = pt2.x - pt1.x;$/;"	v
x	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	public var x:Float;$/;"	v
x	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^			var x = bytes.readUnsignedInt ();$/;"	v
x	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	var x:Int;$/;"	v
x	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var x (get, set):Int;$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^			var x:Float = offsetX;$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^				var x = matrix.tx + graphics.__bounds.x;$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^			var x = offsetX;$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^		var x = filterArea.x - offsetX;$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var x = points[0];$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var x = rectData[0];$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx	/^		var x = 0.0, y = 0.0;$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public var x (get, set):Float;$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^				var x = 0;$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var x = mouse.x + __dragOffsetX;$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Point.hx	/^	public var x:Float;$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	public var x:Float;$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	var x:Int;$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/TextLineMetrics.hx	/^	public var x:Float;$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	public var x (get, set):Float;$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^				var x = tileData[index++];$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^				var x = tileData[index];$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^		var x = __mouseX;$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^		var x = mouse.x + __dragOffsetX;$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage3D.hx	/^	public var x:Float; \/\/ TODO$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/JoystickEvent.hx	/^	public var x:Float;$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^				var x = components[1].x;$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^			var x:Float = vin[i], y:Float = vin[i + 1], z:Float = vin[i + 2];$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^		var x:Float = v.x, y:Float = v.y, z:Float = v.z;$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Point.hx	/^	public var x:Float;$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^	public var x:Float;$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^		var x:Float = pt2.x - pt1.x;$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^	public var x:Float;$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/TextLineMetrics.hx	/^	public var x:Float;$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/NMEPreloader.hx	/^		var x = 30;$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^			var x = flash.Lib.current.x + (forceWidth * flash.Lib.current.scaleX);$/;"	v
x	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/NMEPreloader.hx	/^		var x = 30;$/;"	v
x	/usr/lib/haxe/std/List.hx	/^					var x = __this__.h[0];$/;"	v
x	/usr/lib/haxe/std/List.hx	/^					var x = h[0];$/;"	v
x	/usr/lib/haxe/std/List.hx	/^		var x : Array<Dynamic> = #if neko$/;"	v
x	/usr/lib/haxe/std/List.hx	/^		var x = h[0];$/;"	v
x	/usr/lib/haxe/std/List.hx	/^		var x:Array<Dynamic> = #if neko untyped __dollar__array(item,null) #else [item] #end;$/;"	v
x	/usr/lib/haxe/std/haxe/CallStack.hx	/^				var x = s[i++];$/;"	v
x	/usr/lib/haxe/std/haxe/Serializer.hx	/^		var x = shash.get(s);$/;"	v
x	/usr/lib/haxe/std/haxe/Template.hx	/^				var x : Dynamic = v.iterator();$/;"	v
x	/usr/lib/haxe/std/haxe/macro/Context.hx	/^		var x:haxe.ds.StringMap<neko.NativeString> = load("get_resources",0)();$/;"	v
x	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^				var x = it.next();$/;"	v
x	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^		var x = __x.elementsNamed(name).next();$/;"	v
x	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^	public var x(default,null) : Xml;$/;"	v
x	/usr/lib/haxe/std/neko/Boot.hx	/^				var x = __dollar__amake(n.length);$/;"	v
x	/usr/lib/haxe/std/neko/Boot.hx	/^		var x = __dollar__amake(n.length + 1);$/;"	v
x	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var x : Dynamic = getFromCacheKey(Std.string(id) + table_name);$/;"	v
x	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var x : Dynamic = getFromCacheKey(makeCacheKey(cast keys));$/;"	v
x0	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^		var x0 = x < toIntersect.x ? toIntersect.x : x;$/;"	v
x0	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^		var x0 = x > toUnion.x ? toUnion.x : x;$/;"	v
x0	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var x0 = 0.0; var y0 = 0.0;$/;"	v
x0	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^		var x0 = x < toIntersect.x ? toIntersect.x : x;$/;"	v
x0	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^		var x0 = x > toUnion.x ? toUnion.x : x;$/;"	v
x0	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public var x0:Float = 0;$/;"	v
x0	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^		var x0 = x < toIntersect.x ? toIntersect.x : x;$/;"	v
x0	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^		var x0 = x > toUnion.x ? toUnion.x : x;$/;"	v
x1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^				var x1:Float = alpha;$/;"	v
x1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var x1:B2Vec2 = new B2Vec2 ();$/;"	v
x1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var x1:B2Vec2 = xf1.position;$/;"	v
x1	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^					var x1:B2Vec2 = B2Math.MulFV(0.5, B2Math.AddVV(b1.minVertex, b1.maxVertex) );$/;"	v
x1	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^			var x1:B2Vec2 = b1.m_position;$/;"	v
x1	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^		var x1 = right < toUnion.right ? toUnion.right : right;$/;"	v
x1	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^		var x1 = right > toIntersect.right ? toIntersect.right : right;$/;"	v
x1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^					var x1:Float, y1:Float, x2:Float, y2:Float, x3:Float, y3:Float;$/;"	v
x1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^							var x1:Float, y1:Float, x2:Float, y2:Float, x3:Float, y3:Float;$/;"	v
x1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var x1 = 0.0; var y1 = 0.0;$/;"	v
x1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^		var x1 = right < toUnion.right ? toUnion.right : right;$/;"	v
x1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^		var x1 = right > toIntersect.right ? toIntersect.right : right;$/;"	v
x1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public var x1:Float = 0;$/;"	v
x1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^		var x1 = right < toUnion.right ? toUnion.right : right;$/;"	v
x1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^		var x1 = right > toIntersect.right ? toIntersect.right : right;$/;"	v
x2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2TimeOfImpact.hx	/^				var x2:Float = 1.0;$/;"	v
x2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var x2:B2Vec2 = new B2Vec2 ();$/;"	v
x2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var x2:B2Vec2 = xf2.position;$/;"	v
x2	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^					var x2:B2Vec2 = B2Math.MulFV(0.5, B2Math.AddVV(B2.minVertex, B2.maxVertex) );$/;"	v
x2	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx	/^			var x2:B2Vec2 = B2.m_position;$/;"	v
x2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var x2 = 0.0; var y2 = 0.0;$/;"	v
x2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public var x2:Float = 0;$/;"	v
x3	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public var x3:Float = 0;$/;"	v
x86	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/AndroidPlatform.hx	/^		var x86 = (command == "rebuild" || ArrayHelper.containsValue (project.architectures, Architecture.X86));$/;"	v
x86_64	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/platforms/IOSPlatform.hx	/^		var x86_64 = (command == "rebuild" || project.targetFlags.exists ("simulator"));$/;"	v
xMax	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	var xMax:Float;$/;"	v
xMin	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	var xMin:Float;$/;"	v
xPos	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^						var xPos = getTextWidth (textField, text.substring (0, lowPos)) + 2;$/;"	v
xScale	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^		var xScale:Float = scaledStage.__stageWidth \/ forceWidth;$/;"	v
xX	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^					var xX:Float = - (tMat.col1.x * bX + tMat.col2.x * bY);$/;"	v
xY	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2ContactSolver.hx	/^					var xY:Float = - (tMat.col1.y * bX + tMat.col2.y * bY);$/;"	v
x_advance	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^   var x_advance:Int;$/;"	v
xa	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^		var xa:Float = 0;$/;"	v
xa	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var xa, ya, xb, yb, x, y;$/;"	v
xa	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var xa:Float = 0;$/;"	v
xabstract	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	function xabstract( x : Fast ) : Abstractdef {$/;"	f
xclass	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	function xclass( x : Fast ) : Classdef {$/;"	f
xclassfield	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	function xclassfield( x : Fast, ?defPublic ) : ClassField {$/;"	f
xcodeVersion	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/IOSHelper.hx	/^			var xcodeVersion = getXcodeVersion ();$/;"	v
xdoc	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^		var xdoc = x.x.elementsNamed("haxe_doc").next();$/;"	v
xe	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^		var xe = x + width,$/;"	v
xe	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasGraphics.hx	/^		var xe = x + width,$/;"	v
xe	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var xe = x + width,$/;"	v
xenum	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	function xenum( x : Fast ) : Enumdef {$/;"	f
xenumfield	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	function xenumfield( x : Fast ) : EnumField {$/;"	f
xerror	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	function xerror( c : Fast ) : Dynamic {$/;"	f
xf	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/shapes/B2PolygonShape.hx	/^		var xf:B2Transform = new B2Transform();$/;"	v
xf	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var xf:B2Transform;$/;"	v
xf1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var xf1:B2Transform;$/;"	v
xf1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2Body.hx	/^		var xf1:B2Transform = s_xf1;$/;"	v
xf1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var xf1:B2Transform = b1.m_xf;$/;"	v
xf1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var xf1:B2Transform = bA.getTransform();$/;"	v
xf1	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var xf1:B2Transform = bA.getTransform();$/;"	v
xf1	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCompound.hx	/^				var xf1:B2Transform = new B2Transform();$/;"	v
xf2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/collision/B2Collision.hx	/^		var xf2:B2Transform;$/;"	v
xf2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/B2World.hx	/^		var xf2:B2Transform = b2.m_xf;$/;"	v
xf2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2LineJoint.hx	/^		var xf2:B2Transform = bB.getTransform();$/;"	v
xf2	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/joints/B2PrismaticJoint.hx	/^		var xf2:B2Transform = bB.getTransform();$/;"	v
xf2	/usr/lib/haxe/lib/box2d/1,2,3/samples/TestBed/Source/TestCompound.hx	/^				var xf2:B2Transform = new B2Transform();$/;"	v
xfA	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^				var xfA:B2Transform = bodyA.getTransform();$/;"	v
xfB	/usr/lib/haxe/lib/box2d/1,2,3/box2D/dynamics/contacts/B2Contact.hx	/^				var xfB:B2Transform = bodyB.getTransform();$/;"	v
xingTagSignature	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    static var xingTagSignature = Bytes.ofString("Xing");$/;"	v
xmeta	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	function xmeta( x : Fast ) : MetaData {$/;"	f
xml	/usr/lib/haxe/lib/lime/2,4,3/lime/project/ProjectXMLParser.hx	/^		var xml = null;$/;"	v
xml	/usr/lib/haxe/std/haxe/Serializer.hx	/^		var xml : flash.xml.XML = untyped __global__["flash.utils.describeType"](c);$/;"	v
xml	/usr/lib/haxe/std/haxe/xml/Parser.hx	/^		var xml:Xml = null;$/;"	v
xml	/usr/lib/haxe/std/neko/net/ProxyDetect.hx	/^		var xml = Xml.parse(prefs).firstElement().firstElement(); \/\/ plist\/dict$/;"	v
xmlHttpRequest	/usr/lib/haxe/lib/lime/2,4,3/lime/net/URLLoader.hx	/^		var xmlHttpRequest:XMLHttpRequest = untyped __new__("XMLHttpRequest");$/;"	v
xmlHttpRequest	/usr/lib/haxe/lib/openfl/3,0,8/openfl/net/URLLoader.hx	/^		var xmlHttpRequest:XMLHttpRequest = untyped __new__("XMLHttpRequest");$/;"	v
xname	/usr/lib/haxe/std/haxe/xml/Fast.hx	/^			var xname = if( __x.nodeType == Xml.Document ) "Document" else __x.nodeName;$/;"	v
xor	/usr/lib/haxe/std/haxe/Int64.hx	/^	public static inline function xor( a : Int64, b : Int64 ) : Int64 {$/;"	f
xoverloads	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	function xoverloads( x : Fast ) : List<ClassField> {$/;"	f
xpath	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	function xpath( x : Fast ) : PathParams {$/;"	f
xroot	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	function xroot( x : Fast ) {$/;"	f
xtype	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	function xtype( x : Fast ) : CType {$/;"	f
xtypedef	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	function xtypedef( x : Fast ) : Typedef {$/;"	f
xtypeparams	/usr/lib/haxe/std/haxe/rtti/XmlParser.hx	/^	function xtypeparams( x : Fast ) : List<CType> {$/;"	f
y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec2.hx	/^	public var y:Float;$/;"	v
y	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec3.hx	/^	public var y:Float;$/;"	v
y	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/flash/FlashApplication.hx	/^			var y = event.stageY;$/;"	v
y	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/html5/HTML5Window.hx	/^		var y = 0.0;$/;"	v
y	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public var y:Float;$/;"	v
y	/usr/lib/haxe/lib/lime/2,4,3/lime/_backend/native/NativeApplication.hx	/^	public var y:Int;$/;"	v
y	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var y:Float;$/;"	v
y	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/Image.hx	/^	public var y:Float;$/;"	v
y	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^				var y = components[1].y;$/;"	v
y	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^	public var y:Float;$/;"	v
y	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector2.hx	/^	public var y:Float;$/;"	v
y	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^		var y:Float = pt2.y - pt1.y;$/;"	v
y	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	public var y:Float;$/;"	v
y	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^			var y = bytes.readUnsignedInt ();$/;"	v
y	/usr/lib/haxe/lib/lime/2,4,3/lime/text/Font.hx	/^	var y:Int;$/;"	v
y	/usr/lib/haxe/lib/lime/2,4,3/lime/ui/Window.hx	/^	public var y (get, set):Int;$/;"	v
y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/TextFieldGraphics.hx	/^			var y:Float = 2 + tlm.ascent;$/;"	v
y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoGraphics.hx	/^				var y = matrix.ty + graphics.__bounds.y;$/;"	v
y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/cairo/CairoTextField.hx	/^			var y = 2 + tlm.ascent;$/;"	v
y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/FilterManager.hx	/^		var y = filterArea.y - offsetY;$/;"	v
y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var y = points[1];$/;"	v
y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var y = rectData[1];$/;"	v
y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public var y (get, set):Float;$/;"	v
y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^				var y = 0;$/;"	v
y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/Stage.hx	/^		var y = mouse.y + __dragOffsetY;$/;"	v
y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Point.hx	/^	public var y:Float;$/;"	v
y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^	public var y:Float;$/;"	v
y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/text/Font.hx	/^	var y:Int;$/;"	v
y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/DisplayObject.hx	/^	public var y (get, set):Float;$/;"	v
y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^				var y = tileData[index + 1];$/;"	v
y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Graphics.hx	/^				var y = tileData[index++];$/;"	v
y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^		var y = __mouseY;$/;"	v
y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage.hx	/^		var y = mouse.y + __dragOffsetY;$/;"	v
y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/Stage3D.hx	/^	public var y:Float; \/\/ TODO$/;"	v
y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/JoystickEvent.hx	/^	public var y:Float;$/;"	v
y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^				var y = components[1].y;$/;"	v
y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Point.hx	/^	public var y:Float;$/;"	v
y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^	public var y:Float;$/;"	v
y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^		var y:Float = pt2.y - pt1.y;$/;"	v
y	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^	public var y:Float;$/;"	v
y	/usr/lib/haxe/lib/openfl/3,0,8/templates/haxe/NMEPreloader.hx	/^		var y = getHeight () \/ 2 - height \/ 2;$/;"	v
y	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^			var y = flash.Lib.current.y + (forceHeight * flash.Lib.current.scaleY);$/;"	v
y	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/NMEPreloader.hx	/^		var y = getHeight () \/ 2 - height \/ 2;$/;"	v
y	/usr/lib/haxe/std/Date.hx	/^				var y = k[0].split("-");$/;"	v
y	/usr/lib/haxe/std/sys/db/Manager.hx	/^		var y = unsafeGet(Reflect.field(x, key), lock);$/;"	v
y0	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^		var y0 = y < toIntersect.y ? toIntersect.y : y;$/;"	v
y0	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^		var y0 = y > toUnion.y ? toUnion.y : y;$/;"	v
y0	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^		var y0 = y < toIntersect.y ? toIntersect.y : y;$/;"	v
y0	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^		var y0 = y > toUnion.y ? toUnion.y : y;$/;"	v
y0	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public var y0:Float = 0;$/;"	v
y0	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^		var y0 = y < toIntersect.y ? toIntersect.y : y;$/;"	v
y0	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^		var y0 = y > toUnion.y ? toUnion.y : y;$/;"	v
y1	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^		var y1 = bottom < toUnion.bottom ? toUnion.bottom : bottom;$/;"	v
y1	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Rectangle.hx	/^		var y1 = bottom > toIntersect.bottom ? toIntersect.bottom : bottom;$/;"	v
y1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^		var y1 = bottom < toUnion.bottom ? toUnion.bottom : bottom;$/;"	v
y1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/geom/Rectangle.hx	/^		var y1 = bottom > toIntersect.bottom ? toIntersect.bottom : bottom;$/;"	v
y1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public var y1:Float = 0;$/;"	v
y1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^		var y1 = bottom < toUnion.bottom ? toUnion.bottom : bottom;$/;"	v
y1	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Rectangle.hx	/^		var y1 = bottom > toIntersect.bottom ? toIntersect.bottom : bottom;$/;"	v
y2	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public var y2:Float = 0;$/;"	v
y3	/usr/lib/haxe/lib/openfl/3,0,8/openfl/display/BitmapData.hx	/^	public var y3:Float = 0;$/;"	v
yMax	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	var yMax:Float;$/;"	v
yMin	/usr/lib/haxe/lib/openfl/3,0,8/openfl/text/Font.hx	/^	var yMin:Float;$/;"	v
yOffset	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/canvas/CanvasTextField.hx	/^		var yOffset = 0.0;$/;"	v
yScale	/usr/lib/haxe/lib/openfl/3,0,8/templates/legacy/haxe/ApplicationMain.hx	/^		var yScale:Float = scaledStage.__stageHeight \/ forceHeight;$/;"	v
ya	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/DrawPath.hx	/^		var ya:Float = 0;$/;"	v
ya	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx	/^		var ya:Float = 0;$/;"	v
year	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^		var year = d >> 9;$/;"	v
year	/usr/lib/haxe/lib/openfl/3,0,8/openfl/media/ID3Info.hx	/^	public var year:String;$/;"	v
year	/usr/lib/haxe/std/DateTools.hx	/^		var year = d.getFullYear();$/;"	v
year	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^		var year = d >> 9;$/;"	v
year	/usr/lib/haxe/std/haxe/zip/Writer.hx	/^		var year = date.getFullYear() - 1980;$/;"	v
yieldBytes	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    function yieldBytes(length = -1) {$/;"	f
yieldUnknown	/usr/lib/haxe/lib/lime/2,4,3/tools/mpeg/audio/MpegAudioReader.hx	/^    function yieldUnknown(length = -1) {$/;"	f
z	/usr/lib/haxe/lib/box2d/1,2,3/box2D/common/math/B2Vec3.hx	/^	public var z:Float;$/;"	v
z	/usr/lib/haxe/lib/lime/2,4,3/lime/graphics/FlashRenderContext.hx	/^	public var z:Float;$/;"	v
z	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Matrix4.hx	/^				var z = components[1].z;$/;"	v
z	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^		var z:Float = pt2.z - pt1.z;$/;"	v
z	/usr/lib/haxe/lib/lime/2,4,3/lime/math/Vector4.hx	/^	public var z:Float;$/;"	v
z	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^				var z = new InflateImpl(i, false, false);$/;"	v
z	/usr/lib/haxe/lib/lime/2,4,3/tools/haxe/zip/Reader.hx	/^				var z = new neko.zip.Uncompress(-15);$/;"	v
z	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_internal/renderer/RenderSession.hx	/^	public var z:Int;$/;"	v
z	/usr/lib/haxe/lib/openfl/3,0,8/openfl/_legacy/display/DisplayObject.hx	/^	public var z (get, set):Float;$/;"	v
z	/usr/lib/haxe/lib/openfl/3,0,8/openfl/events/JoystickEvent.hx	/^	public var z:Float;$/;"	v
z	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Matrix3D.hx	/^				var z = components[1].z;$/;"	v
z	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^		var z:Float = pt2.z - pt1.z;$/;"	v
z	/usr/lib/haxe/lib/openfl/3,0,8/openfl/geom/Vector3D.hx	/^	public var z:Float;$/;"	v
z	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^					var z = new InflateImpl(i, false, false);$/;"	v
z	/usr/lib/haxe/std/haxe/zip/Reader.hx	/^					var z = new neko.zip.Uncompress(-15);$/;"	v
zeroBytes	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/FileHelper.hx	/^		var zeroBytes = 0;$/;"	v
zipPath	/usr/lib/haxe/lib/lime/2,4,3/lime/tools/helpers/BlackBerryHelper.hx	/^		var zipPath = PathHelper.combine (targetPath, PathHelper.safeFileName (project.app.file) + ".zip");$/;"	v
